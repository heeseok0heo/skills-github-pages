{"version":3,"file":"vtk.js-460198e0.js","sources":["../../node_modules/@kitware/vtk.js/vtk.js","../../node_modules/@kitware/vtk.js/Common/Core/ClassHierarchy.js","../../node_modules/@kitware/vtk.js/macros2.js","../../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js","../../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Camera.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Renderer.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Actor.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Actor2D.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject/Constants.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Property/Constants.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/CellArrayBufferObject.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Shader.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderProgram.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/VertexArrayObject.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Helper.js","../../node_modules/@kitware/vtk.js/Rendering/Core/AbstractMapper.js","../../node_modules/@kitware/vtk.js/Common/Core/Math/Constants.js","../../node_modules/@kitware/vtk.js/Common/Core/Math/index.js","../../node_modules/@kitware/vtk.js/Common/DataModel/ImplicitFunction.js","../../node_modules/@kitware/vtk.js/Common/DataModel/Plane.js","../../node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js","../../node_modules/@kitware/vtk.js/Rendering/Core/AbstractMapper3D.js","../../node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js","../../node_modules/@kitware/vtk.js/Common/Core/DataArray.js","../../node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes/FieldData.js","../../node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes/Constants.js","../../node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes.js","../../node_modules/@kitware/vtk.js/Common/DataModel/DataSet/Constants.js","../../node_modules/@kitware/vtk.js/Common/DataModel/DataSet.js","../../node_modules/@kitware/vtk.js/Common/DataModel/StructuredData/Constants.js","../../node_modules/@kitware/vtk.js/Common/DataModel/StructuredData.js","../../node_modules/@kitware/vtk.js/Common/DataModel/ImageData.js","../../node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors/Constants.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Mapper/Constants.js","../../node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors.js","../../node_modules/@kitware/vtk.js/Common/Core/LookupTable.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Mapper/Static.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Mapper/CoincidentTopologyHelper.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/HardwareSelector/Constants.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Mapper.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture/Constants.js","../../node_modules/@kitware/vtk.js/Common/Core/HalfFloat.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture/supportsNorm16Linear.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Prop/Constants.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Prop.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Property.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyDataVS.glsl.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyDataFS.glsl.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/ReplacementShaderMapper.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Mapper2D.js","../../node_modules/@kitware/vtk.js/Common/Core/Points.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyData2DFS.glsl.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyData2DVS.glsl.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Property2D/Constants.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper2D.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Skybox.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper.js","../../node_modules/@kitware/vtk.js/Common/Core/CellArray.js","../../node_modules/@kitware/vtk.js/Common/DataModel/Cell.js","../../node_modules/@kitware/vtk.js/Common/DataModel/CellLinks.js","../../node_modules/@kitware/vtk.js/Common/DataModel/CellTypes/Constants.js","../../node_modules/@kitware/vtk.js/Common/DataModel/CellTypes.js","../../node_modules/@kitware/vtk.js/Common/DataModel/Line/Constants.js","../../node_modules/@kitware/vtk.js/Common/DataModel/Line.js","../../node_modules/@kitware/vtk.js/Common/DataModel/PointSet.js","../../node_modules/@kitware/vtk.js/Common/DataModel/Triangle.js","../../node_modules/@kitware/vtk.js/Common/DataModel/PolyData/Constants.js","../../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js","../../node_modules/@kitware/vtk.js/Filters/General/ClosedPolyLineToSurfaceFilter.js","../../node_modules/@kitware/vtk.js/Filters/Core/Cutter.js","../../node_modules/@kitware/vtk.js/Common/Core/MatrixBuilder.js","../../node_modules/@kitware/vtk.js/Filters/Sources/CubeSource.js","../../node_modules/@kitware/vtk.js/Filters/General/ImageDataOutlineFilter.js","../../node_modules/@kitware/vtk.js/Common/Transform/Transform.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/RenderWindow/resourceSharingHelper.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkImageResliceMapperVS.glsl.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkImageResliceMapperFS.glsl.js","../../node_modules/@kitware/vtk.js/Rendering/Core/ImageProperty/Constants.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/ImageResliceMapper.js","../../node_modules/@kitware/vtk.js/Rendering/Core/ImageMapper/Constants.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/ImageMapper.js","../../node_modules/@kitware/vtk.js/Rendering/Core/ImageCPRMapper/Constants.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/ImageCPRMapper.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/ImageSlice.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Volume.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Framebuffer.js","../../node_modules/@kitware/vtk.js/Rendering/Core/VolumeProperty/Constants.js","../../node_modules/@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkVolumeVS.glsl.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkVolumeFS.glsl.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/VolumeMapper.js","../../node_modules/@kitware/vtk.js/Rendering/Core/HardwareSelector.js","../../node_modules/@kitware/vtk.js/Common/DataModel/SelectionNode/Constants.js","../../node_modules/@kitware/vtk.js/Common/DataModel/SelectionNode.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/HardwareSelector.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Glyph3DMapper.js","../../node_modules/@kitware/vtk.js/Common/Core/URLExtract.js","../../node_modules/@kitware/vtk.js/Widgets/Core/WidgetManager/Constants.js","../../node_modules/@kitware/vtk.js/Common/DataModel/PiecewiseFunction.js","../../node_modules/@kitware/vtk.js/_virtual/rollup-plugin-web-worker-loader__helper__funcToSource.js","../../node_modules/@kitware/vtk.js/_virtual/rollup-plugin-web-worker-loader__helper__browser__createInlineWorkerFactory.js","../../node_modules/@kitware/vtk.js/_virtual/rollup-plugin-worker-loader__module_Sources/Interaction/Widgets/PiecewiseGaussianWidget/ComputeHistogram.worker.js","../../node_modules/@kitware/vtk.js/Interaction/Widgets/PiecewiseGaussianWidget.js","../../node_modules/@kitware/vtk.js/Proxy/Core/PiecewiseFunctionProxy/Constants.js","../../node_modules/@kitware/vtk.js/Proxy/Core/PiecewiseFunctionProxy.js","../../node_modules/@kitware/vtk.js/Common/DataModel/ITKHelper.js","../../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps.json.js","../../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps.js","../../node_modules/@kitware/vtk.js/Widgets/Manipulators/AbstractManipulator.js","../../node_modules/@kitware/vtk.js/Widgets/Manipulators/PlaneManipulator.js","../../node_modules/@kitware/vtk.js/Rendering/Core/RenderWindowInteractor/Constants.js","../../node_modules/@kitware/vtk.js/Rendering/Core/RenderWindowInteractor.js","../../node_modules/@kitware/vtk.js/Rendering/Core/InteractorObserver.js","../../node_modules/@kitware/vtk.js/Widgets/Core/AbstractWidget/Constants.js","../../node_modules/@kitware/vtk.js/Widgets/Core/AbstractWidget.js","../../node_modules/@kitware/vtk.js/Widgets/Core/WidgetManager.js","../../node_modules/@kitware/vtk.js/Widgets/Core/AbstractWidgetFactory.js","../../node_modules/@kitware/vtk.js/Widgets/Core/WidgetState.js","../../node_modules/@kitware/vtk.js/Widgets/Core/StateBuilder/boundsMixin.js","../../node_modules/@kitware/vtk.js/Widgets/Core/StateBuilder/colorMixin.js","../../node_modules/@kitware/vtk.js/Widgets/Core/StateBuilder/color3Mixin.js","../../node_modules/@kitware/vtk.js/Widgets/Core/StateBuilder/cornerMixin.js","../../node_modules/@kitware/vtk.js/Widgets/Core/StateBuilder/directionMixin.js","../../node_modules/@kitware/vtk.js/Widgets/Core/StateBuilder/manipulatorMixin.js","../../node_modules/@kitware/vtk.js/Widgets/Core/StateBuilder/nameMixin.js","../../node_modules/@kitware/vtk.js/Widgets/Core/StateBuilder/orientationMixin.js","../../node_modules/@kitware/vtk.js/Widgets/Core/StateBuilder/originMixin.js","../../node_modules/@kitware/vtk.js/Widgets/Core/StateBuilder/scale1Mixin.js","../../node_modules/@kitware/vtk.js/Widgets/Core/StateBuilder/scale3Mixin.js","../../node_modules/@kitware/vtk.js/Widgets/Core/StateBuilder/textMixin.js","../../node_modules/@kitware/vtk.js/Widgets/Core/StateBuilder/visibleMixin.js","../../node_modules/@kitware/vtk.js/Widgets/Core/StateBuilder/shapeMixin.js","../../node_modules/@kitware/vtk.js/Widgets/Core/StateBuilder.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Coordinate/Constants.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Coordinate.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Property2D.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Actor2D.js","../../node_modules/@kitware/vtk.js/Widgets/Representations/WidgetRepresentation/Constants.js","../../node_modules/@kitware/vtk.js/Widgets/Representations/WidgetRepresentation.js","../../node_modules/@kitware/vtk.js/Widgets/Representations/ContextRepresentation.js","../../node_modules/@kitware/vtk.js/Rendering/Core/InteractorStyle/Constants.js","../../node_modules/@kitware/vtk.js/Rendering/Core/InteractorStyle.js","../../node_modules/@kitware/vtk.js/Interaction/Style/InteractorStyleManipulator.js","../../node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeCameraManipulator.js","../../node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeMouseManipulator.js","../../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballPanManipulator.js","../../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballZoomManipulator.js","../../node_modules/@kitware/vtk.js/Rendering/Core/RenderWindow.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Camera.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Light.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Viewport.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Renderer.js","../../node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderPass.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/OrderIndependentTranslucentPass.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/ForwardPass.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderCache.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/TextureUnitManager.js","../../node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderWindowViewNode.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/RenderWindow/ContextProxy.js","../../node_modules/@kitware/vtk.js/Rendering/OpenGL/RenderWindow.js","../../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballRotateManipulator.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Prop3D.js","../../node_modules/@kitware/vtk.js/Rendering/Core/ImageProperty.js","../../node_modules/@kitware/vtk.js/Rendering/Core/ImageSlice.js","../../node_modules/@kitware/vtk.js/Rendering/Core/ImageResliceMapper/Constants.js","../../node_modules/@kitware/vtk.js/Rendering/Core/AbstractImageMapper.js","../../node_modules/@kitware/vtk.js/Rendering/Core/ImageResliceMapper.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Actor.js","../../node_modules/@kitware/vtk.js/Common/DataModel/Box.js","../../node_modules/@kitware/vtk.js/Filters/Sources/PlaneSource.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Glyph3DMapper/Constants.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Glyph3DMapper.js","../../node_modules/@kitware/vtk.js/Widgets/Representations/HandleRepresentation.js","../../node_modules/@kitware/vtk.js/Filters/Sources/SphereSource.js","../../node_modules/@kitware/vtk.js/Widgets/Representations/GlyphRepresentation.js","../../node_modules/@kitware/vtk.js/Rendering/Core/PixelSpaceCallbackMapper.js","../../node_modules/@kitware/vtk.js/Filters/Sources/CylinderSource.js","../../node_modules/@kitware/vtk.js/Widgets/Representations/LineHandleRepresentation.js","../../node_modules/@kitware/vtk.js/Widgets/Representations/SphereHandleRepresentation.js","../../node_modules/@kitware/vtk.js/Widgets/Widgets3D/ResliceCursorWidget/Constants.js","../../node_modules/@kitware/vtk.js/Widgets/Widgets3D/ResliceCursorWidget/helpers.js","../../node_modules/@kitware/vtk.js/Widgets/Widgets3D/ResliceCursorWidget/behavior.js","../../node_modules/@kitware/vtk.js/Widgets/Widgets3D/ResliceCursorWidget/state.js","../../node_modules/@kitware/vtk.js/Widgets/Widgets3D/ResliceCursorWidget.js","../../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseRangeManipulator.js","../../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballZoomToMouseManipulator.js","../../node_modules/@kitware/vtk.js/Rendering/Core/AbstractImageMapper/helper.js","../../node_modules/@kitware/vtk.js/Rendering/Core/ImageMapper.js","../../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/Constants.js","../../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction.js","../../node_modules/@kitware/vtk.js/Widgets/Manipulators/LineManipulator.js","../../node_modules/@kitware/vtk.js/Widgets/Representations/CroppingOutlineRepresentation.js","../../node_modules/@kitware/vtk.js/Widgets/Widgets3D/ImageCroppingWidget/helpers.js","../../node_modules/@kitware/vtk.js/Widgets/Widgets3D/ImageCroppingWidget/behavior.js","../../node_modules/@kitware/vtk.js/Widgets/Widgets3D/ImageCroppingWidget/state.js","../../node_modules/@kitware/vtk.js/Widgets/Widgets3D/ImageCroppingWidget.js","../../node_modules/@kitware/vtk.js/Rendering/Core/VolumeProperty.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Volume.js","../../node_modules/@kitware/vtk.js/Rendering/Core/VolumeMapper.js","../../node_modules/@kitware/vtk.js/Interaction/Widgets/OrientationMarkerWidget/Constants.js","../../node_modules/@kitware/vtk.js/Interaction/Widgets/OrientationMarkerWidget.js","../../node_modules/@kitware/vtk.js/Rendering/Core/Texture.js","../../node_modules/@kitware/vtk.js/Common/Core/ImageHelper.js","../../node_modules/@kitware/vtk.js/Rendering/Core/AnnotatedCubeActor/Presets.js","../../node_modules/@kitware/vtk.js/Rendering/Core/AnnotatedCubeActor.js","../../node_modules/@kitware/vtk.js/Proxy/Core/LookupTableProxy/Constants.js","../../node_modules/@kitware/vtk.js/Proxy/Core/LookupTableProxy.js","../../node_modules/@kitware/vtk.js/Interaction/Style/InteractorStyleTrackballCamera.js","../../node_modules/@kitware/vtk.js/Rendering/Misc/GenericRenderWindow.js"],"sourcesContent":["import globalThisShim from 'globalthis';\n\nconst vtkGlobal = globalThisShim(); // returns native globalThis if compliant\n\nconst factoryMapping = {\n  vtkObject: () => null\n};\nfunction vtk(obj) {\n  if (obj === null || obj === undefined) {\n    return obj;\n  }\n  if (obj.isA) {\n    return obj;\n  }\n  if (!obj.vtkClass) {\n    if (vtkGlobal.console && vtkGlobal.console.error) {\n      vtkGlobal.console.error('Invalid VTK object');\n    }\n    return null;\n  }\n  const constructor = factoryMapping[obj.vtkClass];\n  if (!constructor) {\n    if (vtkGlobal.console && vtkGlobal.console.error) {\n      vtkGlobal.console.error(`No vtk class found for Object of type ${obj.vtkClass}`);\n    }\n    return null;\n  }\n\n  // Shallow copy object\n  const model = {\n    ...obj\n  };\n\n  // Convert into vtkObject any nested key\n  Object.keys(model).forEach(keyName => {\n    if (model[keyName] && typeof model[keyName] === 'object' && model[keyName].vtkClass) {\n      model[keyName] = vtk(model[keyName]);\n    }\n  });\n\n  // Return the root\n  const newInst = constructor(model);\n  if (newInst && newInst.modified) {\n    newInst.modified();\n  }\n  return newInst;\n}\nfunction register(vtkClassName, constructor) {\n  factoryMapping[vtkClassName] = constructor;\n}\n\n// Nest register method under the vtk function\nvtk.register = register;\n\nexport { vtk as default, vtkGlobal };\n","/* eslint-disable prefer-rest-params */\nclass ClassHierarchy extends Array {\n  push() {\n    for (let i = 0; i < arguments.length; i++) {\n      if (!this.includes(arguments[i])) {\n        super.push(arguments[i]);\n      }\n    }\n    return this.length;\n  }\n}\n\nexport { ClassHierarchy as default };\n","import DeepEqual from 'fast-deep-equal';\nimport vtk, { vtkGlobal } from './vtk.js';\nimport ClassHierarchy from './Common/Core/ClassHierarchy.js';\n\n/**\n * macros.js is the old macro.js.\n * The name change is so we do not get eaten by babel-plugin-macros.\n */\nlet globalMTime = 0;\nconst VOID = Symbol('void');\nfunction getCurrentGlobalMTime() {\n  return globalMTime;\n}\n\n// ----------------------------------------------------------------------------\n// Logging function calls\n// ----------------------------------------------------------------------------\n/* eslint-disable no-prototype-builtins                                      */\n\nconst fakeConsole = {};\nfunction noOp() {}\nconst consoleMethods = ['log', 'debug', 'info', 'warn', 'error', 'time', 'timeEnd', 'group', 'groupEnd'];\nconsoleMethods.forEach(methodName => {\n  fakeConsole[methodName] = noOp;\n});\nvtkGlobal.console = console.hasOwnProperty('log') ? console : fakeConsole;\nconst loggerFunctions = {\n  debug: noOp,\n  // Don't print debug by default\n  error: vtkGlobal.console.error || noOp,\n  info: vtkGlobal.console.info || noOp,\n  log: vtkGlobal.console.log || noOp,\n  warn: vtkGlobal.console.warn || noOp\n};\nfunction setLoggerFunction(name, fn) {\n  if (loggerFunctions[name]) {\n    loggerFunctions[name] = fn || noOp;\n  }\n}\nfunction vtkLogMacro() {\n  loggerFunctions.log(...arguments);\n}\nfunction vtkInfoMacro() {\n  loggerFunctions.info(...arguments);\n}\nfunction vtkDebugMacro() {\n  loggerFunctions.debug(...arguments);\n}\nfunction vtkErrorMacro() {\n  loggerFunctions.error(...arguments);\n}\nfunction vtkWarningMacro() {\n  loggerFunctions.warn(...arguments);\n}\nconst ERROR_ONCE_MAP = {};\nfunction vtkOnceErrorMacro(str) {\n  if (!ERROR_ONCE_MAP[str]) {\n    loggerFunctions.error(str);\n    ERROR_ONCE_MAP[str] = true;\n  }\n}\n\n// ----------------------------------------------------------------------------\n// TypedArray\n// ----------------------------------------------------------------------------\n\nconst TYPED_ARRAYS = Object.create(null);\nTYPED_ARRAYS.Float32Array = Float32Array;\nTYPED_ARRAYS.Float64Array = Float64Array;\nTYPED_ARRAYS.Uint8Array = Uint8Array;\nTYPED_ARRAYS.Int8Array = Int8Array;\nTYPED_ARRAYS.Uint16Array = Uint16Array;\nTYPED_ARRAYS.Int16Array = Int16Array;\nTYPED_ARRAYS.Uint32Array = Uint32Array;\nTYPED_ARRAYS.Int32Array = Int32Array;\nTYPED_ARRAYS.Uint8ClampedArray = Uint8ClampedArray;\ntry {\n  TYPED_ARRAYS.BigInt64Array = BigInt64Array;\n  TYPED_ARRAYS.BigUint64Array = BigUint64Array;\n} catch {\n  // ignore\n}\nfunction newTypedArray(type) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  return new (TYPED_ARRAYS[type] || Float64Array)(...args);\n}\nfunction newTypedArrayFrom(type) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n  return (TYPED_ARRAYS[type] || Float64Array).from(...args);\n}\n\n// ----------------------------------------------------------------------------\n// capitilize provided string\n// ----------------------------------------------------------------------------\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nfunction _capitalize(str) {\n  return capitalize(str[0] === '_' ? str.slice(1) : str);\n}\nfunction uncapitalize(str) {\n  return str.charAt(0).toLowerCase() + str.slice(1);\n}\n\n// ----------------------------------------------------------------------------\n// Convert byte size into a well formatted string\n// ----------------------------------------------------------------------------\n\nfunction formatBytesToProperUnit(size) {\n  let precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  let chunkSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1000;\n  const units = ['TB', 'GB', 'MB', 'KB'];\n  let value = Number(size);\n  let currentUnit = 'B';\n  while (value > chunkSize) {\n    value /= chunkSize;\n    currentUnit = units.pop();\n  }\n  return `${value.toFixed(precision)} ${currentUnit}`;\n}\n\n// ----------------------------------------------------------------------------\n// Convert thousand number with proper separator\n// ----------------------------------------------------------------------------\n\nfunction formatNumbersWithThousandSeparator(n) {\n  let separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ' ';\n  const sections = [];\n  let size = n;\n  while (size > 1000) {\n    sections.push(`000${size % 1000}`.slice(-3));\n    size = Math.floor(size / 1000);\n  }\n  if (size > 0) {\n    sections.push(size);\n  }\n  sections.reverse();\n  return sections.join(separator);\n}\n\n// ----------------------------------------------------------------------------\n// Array helper\n// ----------------------------------------------------------------------------\n\nfunction safeArrays(model) {\n  Object.keys(model).forEach(key => {\n    if (Array.isArray(model[key])) {\n      model[key] = [].concat(model[key]);\n    }\n  });\n}\nfunction isTypedArray(value) {\n  return Object.values(TYPED_ARRAYS).some(ctor => value instanceof ctor);\n}\n\n// ----------------------------------------------------------------------------\n// shallow equals\n// ----------------------------------------------------------------------------\n\nfunction shallowEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\n// ----------------------------------------------------------------------------\n\nfunction enumToString(e, value) {\n  return Object.keys(e).find(key => e[key] === value);\n}\nfunction getStateArrayMapFunc(item) {\n  if (item && item.isA) {\n    return item.getState();\n  }\n  return item;\n}\n\n// ----------------------------------------------------------------------------\n// setImmediate\n// ----------------------------------------------------------------------------\n\nfunction setImmediateVTK(fn) {\n  setTimeout(fn, 0);\n}\n\n// ----------------------------------------------------------------------------\n// measurePromiseExecution\n//\n// Measures the time it takes for a promise to finish from\n//   the time this function is invoked.\n// The callback receives the time it took for the promise to resolve or reject.\n// ----------------------------------------------------------------------------\n\nfunction measurePromiseExecution(promise, callback) {\n  const start = performance.now();\n  promise.finally(() => {\n    const delta = performance.now() - start;\n    callback(delta);\n  });\n}\n\n// ----------------------------------------------------------------------------\n// vtkObject: modified(), onModified(callback), delete()\n// ----------------------------------------------------------------------------\n\nfunction obj() {\n  let publicAPI = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let model = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Ensure each instance as a unique ref of array\n  safeArrays(model);\n  const callbacks = [];\n  if (!Number.isInteger(model.mtime)) {\n    model.mtime = ++globalMTime;\n  }\n  if (!('classHierarchy' in model)) {\n    model.classHierarchy = new ClassHierarchy('vtkObject');\n  } else if (!(model.classHierarchy instanceof ClassHierarchy)) {\n    const hierarchy = new ClassHierarchy();\n    for (let i = 0; i < model.classHierarchy.length; i++) {\n      hierarchy.push(model.classHierarchy[i]);\n    }\n    model.classHierarchy = hierarchy;\n  }\n  function off(index) {\n    callbacks[index] = null;\n  }\n  function on(index) {\n    function unsubscribe() {\n      off(index);\n    }\n    return Object.freeze({\n      unsubscribe\n    });\n  }\n  publicAPI.isDeleted = () => !!model.deleted;\n  publicAPI.modified = otherMTime => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (otherMTime && otherMTime < publicAPI.getMTime()) {\n      return;\n    }\n    model.mtime = ++globalMTime;\n    callbacks.forEach(callback => callback && callback(publicAPI));\n  };\n  publicAPI.onModified = callback => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n    const index = callbacks.length;\n    callbacks.push(callback);\n    return on(index);\n  };\n  publicAPI.getMTime = () => model.mtime;\n  publicAPI.isA = className => {\n    let count = model.classHierarchy.length;\n    // we go backwards as that is more likely for\n    // early termination\n    while (count--) {\n      if (model.classHierarchy[count] === className) {\n        return true;\n      }\n    }\n    return false;\n  };\n  publicAPI.getClassName = function () {\n    let depth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return model.classHierarchy[model.classHierarchy.length - 1 - depth];\n  };\n  publicAPI.set = function () {\n    let map = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let noWarning = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let noFunction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let ret = false;\n    Object.keys(map).forEach(name => {\n      const fn = noFunction ? null : publicAPI[`set${capitalize(name)}`];\n      if (fn && Array.isArray(map[name]) && fn.length > 1) {\n        ret = fn(...map[name]) || ret;\n      } else if (fn) {\n        ret = fn(map[name]) || ret;\n      } else {\n        // Set data on model directly\n        if (['mtime'].indexOf(name) === -1 && !noWarning) {\n          vtkWarningMacro(`Warning: Set value to model directly ${name}, ${map[name]}`);\n        }\n        ret = model[name] !== map[name] || ret;\n        model[name] = map[name];\n      }\n    });\n    return ret;\n  };\n  publicAPI.get = function () {\n    for (var _len3 = arguments.length, list = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      list[_key3] = arguments[_key3];\n    }\n    if (!list.length) {\n      return model;\n    }\n    const subset = {};\n    list.forEach(name => {\n      subset[name] = model[name];\n    });\n    return subset;\n  };\n  publicAPI.getReferenceByName = val => model[val];\n  publicAPI.delete = () => {\n    Object.keys(model).forEach(field => delete model[field]);\n    callbacks.forEach((el, index) => off(index));\n\n    // Flag the instance being deleted\n    model.deleted = true;\n  };\n\n  // Add serialization support\n  publicAPI.getState = () => {\n    if (model.deleted) {\n      return null;\n    }\n    const jsonArchive = {\n      ...model,\n      vtkClass: publicAPI.getClassName()\n    };\n\n    // Convert every vtkObject to its serializable form\n    Object.keys(jsonArchive).forEach(keyName => {\n      if (jsonArchive[keyName] === null || jsonArchive[keyName] === undefined || keyName[0] === '_' // protected members start with _\n      ) {\n        delete jsonArchive[keyName];\n      } else if (jsonArchive[keyName].isA) {\n        jsonArchive[keyName] = jsonArchive[keyName].getState();\n      } else if (Array.isArray(jsonArchive[keyName])) {\n        jsonArchive[keyName] = jsonArchive[keyName].map(getStateArrayMapFunc);\n      } else if (isTypedArray(jsonArchive[keyName])) {\n        jsonArchive[keyName] = Array.from(jsonArchive[keyName]);\n      }\n    });\n\n    // Sort resulting object by key name\n    const sortedObj = {};\n    Object.keys(jsonArchive).sort().forEach(name => {\n      sortedObj[name] = jsonArchive[name];\n    });\n\n    // Remove mtime\n    if (sortedObj.mtime) {\n      delete sortedObj.mtime;\n    }\n    return sortedObj;\n  };\n\n  // Add shallowCopy(otherInstance) support\n  publicAPI.shallowCopy = function (other) {\n    let debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (other.getClassName() !== publicAPI.getClassName()) {\n      throw new Error(`Cannot ShallowCopy ${other.getClassName()} into ${publicAPI.getClassName()}`);\n    }\n    const otherModel = other.get();\n    const keyList = Object.keys(model).sort();\n    const otherKeyList = Object.keys(otherModel).sort();\n    otherKeyList.forEach(key => {\n      const keyIdx = keyList.indexOf(key);\n      if (keyIdx === -1) {\n        if (debug) {\n          vtkDebugMacro(`add ${key} in shallowCopy`);\n        }\n      } else {\n        keyList.splice(keyIdx, 1);\n      }\n      model[key] = otherModel[key];\n    });\n    if (keyList.length && debug) {\n      vtkDebugMacro(`Untouched keys: ${keyList.join(', ')}`);\n    }\n    publicAPI.modified();\n  };\n\n  // This function will get called when one invoke JSON.stringify(vtkObject)\n  // JSON.stringify will only stringify the return value of this function\n  publicAPI.toJSON = function vtkObjToJSON() {\n    return publicAPI.getState();\n  };\n\n  // Allow usage as decorator\n  return publicAPI;\n}\n\n// ----------------------------------------------------------------------------\n// getXXX: add getters\n// ----------------------------------------------------------------------------\n\nconst objectGetterMap = {\n  object(publicAPI, model, field) {\n    return function getter() {\n      return {\n        ...model[field.name]\n      };\n    };\n  }\n};\nfunction get(publicAPI, model, fieldNames) {\n  fieldNames.forEach(field => {\n    if (typeof field === 'object') {\n      const getter = objectGetterMap[field.type];\n      if (getter) {\n        publicAPI[`get${_capitalize(field.name)}`] = getter(publicAPI, model, field);\n      } else {\n        publicAPI[`get${_capitalize(field.name)}`] = () => model[field.name];\n      }\n    } else {\n      publicAPI[`get${_capitalize(field)}`] = () => model[field];\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// setXXX: add setters\n// ----------------------------------------------------------------------------\n\nconst objectSetterMap = {\n  enum(publicAPI, model, field) {\n    const onChanged = `_on${_capitalize(field.name)}Changed`;\n    return value => {\n      if (typeof value === 'string') {\n        if (field.enum[value] !== undefined) {\n          if (model[field.name] !== field.enum[value]) {\n            model[field.name] = field.enum[value];\n            publicAPI.modified();\n            return true;\n          }\n          return false;\n        }\n        vtkErrorMacro(`Set Enum with invalid argument ${field}, ${value}`);\n        throw new RangeError('Set Enum with invalid string argument');\n      }\n      if (typeof value === 'number') {\n        if (model[field.name] !== value) {\n          if (Object.keys(field.enum).map(key => field.enum[key]).indexOf(value) !== -1) {\n            const previousValue = model[field.name];\n            model[field.name] = value;\n            model[onChanged]?.(publicAPI, model, value, previousValue);\n            publicAPI.modified();\n            return true;\n          }\n          vtkErrorMacro(`Set Enum outside numeric range ${field}, ${value}`);\n          throw new RangeError('Set Enum outside numeric range');\n        }\n        return false;\n      }\n      vtkErrorMacro(`Set Enum with invalid argument (String/Number) ${field}, ${value}`);\n      throw new TypeError('Set Enum with invalid argument (String/Number)');\n    };\n  },\n  object(publicAPI, model, field) {\n    if (field.params?.length === 1) {\n      vtkWarningMacro('Setter of type \"object\" with a single \"param\" field is not supported');\n    }\n    const onChanged = `_on${_capitalize(field.name)}Changed`;\n    return function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      let value;\n      if (args.length > 1 && field.params?.length) {\n        value = field.params.reduce((acc, prop, idx) => Object.assign(acc, {\n          [prop]: args[idx]\n        }), {});\n      } else {\n        value = args[0];\n      }\n      if (!DeepEqual(model[field.name], value)) {\n        const previousValue = model[field.name];\n        model[field.name] = value;\n        model[onChanged]?.(publicAPI, model, value, previousValue);\n        publicAPI.modified();\n        return true;\n      }\n      return false;\n    };\n  }\n};\nfunction findSetter(field) {\n  if (typeof field === 'object') {\n    const fn = objectSetterMap[field.type];\n    if (fn) {\n      return (publicAPI, model) => fn(publicAPI, model, field);\n    }\n    vtkErrorMacro(`No setter for field ${field}`);\n    throw new TypeError('No setter for field');\n  }\n  return function getSetter(publicAPI, model) {\n    const onChanged = `_on${_capitalize(field)}Changed`;\n    return function setter(value) {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n      if (model[field] !== value) {\n        const previousValue = model[field.name];\n        model[field] = value;\n        model[onChanged]?.(publicAPI, model, value, previousValue);\n        publicAPI.modified();\n        return true;\n      }\n      return false;\n    };\n  };\n}\nfunction set(publicAPI, model, fields) {\n  fields.forEach(field => {\n    if (typeof field === 'object') {\n      publicAPI[`set${_capitalize(field.name)}`] = findSetter(field)(publicAPI, model);\n    } else {\n      publicAPI[`set${_capitalize(field)}`] = findSetter(field)(publicAPI, model);\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// set/get XXX: add both setters and getters\n// ----------------------------------------------------------------------------\n\nfunction setGet(publicAPI, model, fieldNames) {\n  get(publicAPI, model, fieldNames);\n  set(publicAPI, model, fieldNames);\n}\n\n// ----------------------------------------------------------------------------\n// getXXX: add getters for object of type array with copy to be safe\n// getXXXByReference: add getters for object of type array without copy\n// ----------------------------------------------------------------------------\n\nfunction getArray(publicAPI, model, fieldNames) {\n  fieldNames.forEach(field => {\n    publicAPI[`get${_capitalize(field)}`] = () => model[field] ? Array.from(model[field]) : model[field];\n    publicAPI[`get${_capitalize(field)}ByReference`] = () => model[field];\n  });\n}\n\n// ----------------------------------------------------------------------------\n// setXXX: add setter for object of type array\n// if 'defaultVal' is supplied, shorter arrays will be padded to 'size' with 'defaultVal'\n// set...From: fast path to copy the content of an array to the current one without call to modified.\n// ----------------------------------------------------------------------------\n\nfunction setArray(publicAPI, model, fieldNames, size) {\n  let defaultVal = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\n  fieldNames.forEach(field => {\n    if (model[field] && size && model[field].length !== size) {\n      throw new RangeError(`Invalid initial number of values for array (${field})`);\n    }\n    const onChanged = `_on${_capitalize(field)}Changed`;\n    publicAPI[`set${_capitalize(field)}`] = function () {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      let array = args;\n      let changeDetected;\n      let needCopy = false;\n      // allow null or an array to be passed as a single arg.\n      if (array.length === 1 && (array[0] == null || array[0].length >= 0)) {\n        /* eslint-disable prefer-destructuring */\n        array = array[0];\n        /* eslint-enable prefer-destructuring */\n        needCopy = true;\n      }\n      if (array == null) {\n        changeDetected = model[field] !== array;\n      } else {\n        if (size && array.length !== size) {\n          if (array.length < size && defaultVal !== undefined) {\n            array = Array.from(array);\n            needCopy = false;\n            while (array.length < size) array.push(defaultVal);\n          } else {\n            throw new RangeError(`Invalid number of values for array setter (${field})`);\n          }\n        }\n        changeDetected = model[field] == null || model[field].length !== array.length;\n        for (let i = 0; !changeDetected && i < array.length; ++i) {\n          changeDetected = model[field][i] !== array[i];\n        }\n        if (changeDetected && needCopy) {\n          array = Array.from(array);\n        }\n      }\n      if (changeDetected) {\n        const previousValue = model[field.name];\n        model[field] = array;\n        model[onChanged]?.(publicAPI, model, array, previousValue);\n        publicAPI.modified();\n      }\n      return changeDetected;\n    };\n    publicAPI[`set${_capitalize(field)}From`] = otherArray => {\n      const target = model[field];\n      otherArray.forEach((v, i) => {\n        target[i] = v;\n      });\n    };\n  });\n}\n\n// ----------------------------------------------------------------------------\n// set/get XXX: add setter and getter for object of type array\n// ----------------------------------------------------------------------------\n\nfunction setGetArray(publicAPI, model, fieldNames, size) {\n  let defaultVal = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\n  getArray(publicAPI, model, fieldNames);\n  setArray(publicAPI, model, fieldNames, size, defaultVal);\n}\nfunction moveToProtected(publicAPI, model, fieldNames) {\n  for (let i = 0; i < fieldNames.length; i++) {\n    const fieldName = fieldNames[i];\n    if (model[fieldName] !== undefined) {\n      model[`_${fieldName}`] = model[fieldName];\n      delete model[fieldName];\n    }\n  }\n}\n// ----------------------------------------------------------------------------\n// vtkAlgorithm: setInputData(), setInputConnection(), getOutputData(), getOutputPort()\n// ----------------------------------------------------------------------------\n\nfunction algo(publicAPI, model, numberOfInputs, numberOfOutputs) {\n  if (model.inputData) {\n    model.inputData = model.inputData.map(vtk);\n  } else {\n    model.inputData = [];\n  }\n  if (model.inputConnection) {\n    model.inputConnection = model.inputConnection.map(vtk);\n  } else {\n    model.inputConnection = [];\n  }\n  if (model.output) {\n    model.output = model.output.map(vtk);\n  } else {\n    model.output = [];\n  }\n  if (model.inputArrayToProcess) {\n    model.inputArrayToProcess = model.inputArrayToProcess.map(vtk);\n  } else {\n    model.inputArrayToProcess = [];\n  }\n\n  // Cache the argument for later manipulation\n  model.numberOfInputs = numberOfInputs;\n\n  // Methods\n  function setInputData(dataset) {\n    let port = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (port >= model.numberOfInputs) {\n      vtkErrorMacro(`algorithm ${publicAPI.getClassName()} only has ${model.numberOfInputs} input ports. To add more input ports, use addInputData()`);\n      return;\n    }\n    if (model.inputData[port] !== dataset || model.inputConnection[port]) {\n      model.inputData[port] = dataset;\n      model.inputConnection[port] = null;\n      if (publicAPI.modified) {\n        publicAPI.modified();\n      }\n    }\n  }\n  function getInputData() {\n    let port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (model.inputConnection[port]) {\n      model.inputData[port] = model.inputConnection[port]();\n    }\n    return model.inputData[port];\n  }\n  function setInputConnection(outputPort) {\n    let port = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (port >= model.numberOfInputs) {\n      let msg = `algorithm ${publicAPI.getClassName()} only has `;\n      msg += `${model.numberOfInputs}`;\n      msg += ' input ports. To add more input ports, use addInputConnection()';\n      vtkErrorMacro(msg);\n      return;\n    }\n    model.inputData[port] = null;\n    model.inputConnection[port] = outputPort;\n  }\n  function getInputConnection() {\n    let port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return model.inputConnection[port];\n  }\n  function getPortToFill() {\n    let portToFill = model.numberOfInputs;\n    while (portToFill && !model.inputData[portToFill - 1] && !model.inputConnection[portToFill - 1]) {\n      portToFill--;\n    }\n    if (portToFill === model.numberOfInputs) {\n      model.numberOfInputs++;\n    }\n    return portToFill;\n  }\n  function addInputConnection(outputPort) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    setInputConnection(outputPort, getPortToFill());\n  }\n  function addInputData(dataset) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    setInputData(dataset, getPortToFill());\n  }\n  function getOutputData() {\n    let port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n    if (publicAPI.shouldUpdate()) {\n      publicAPI.update();\n    }\n    return model.output[port];\n  }\n  publicAPI.shouldUpdate = () => {\n    const localMTime = publicAPI.getMTime();\n    let minOutputMTime = Infinity;\n    let count = numberOfOutputs;\n    while (count--) {\n      if (!model.output[count] || model.output[count].isDeleted()) {\n        return true;\n      }\n      const mt = model.output[count].getMTime();\n      if (mt < localMTime) {\n        return true;\n      }\n      if (mt < minOutputMTime) {\n        minOutputMTime = mt;\n      }\n    }\n    count = model.numberOfInputs;\n    while (count--) {\n      if (model.inputConnection[count]?.filter.shouldUpdate() || publicAPI.getInputData(count)?.getMTime() > minOutputMTime) {\n        return true;\n      }\n    }\n    return false;\n  };\n  function getOutputPort() {\n    let port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    const outputPortAccess = () => getOutputData(port);\n    // Add reference to filter\n    outputPortAccess.filter = publicAPI;\n    return outputPortAccess;\n  }\n\n  // Handle input if needed\n  if (model.numberOfInputs) {\n    // Reserve inputs\n    let count = model.numberOfInputs;\n    while (count--) {\n      model.inputData.push(null);\n      model.inputConnection.push(null);\n    }\n\n    // Expose public methods\n    publicAPI.setInputData = setInputData;\n    publicAPI.setInputConnection = setInputConnection;\n    publicAPI.addInputData = addInputData;\n    publicAPI.addInputConnection = addInputConnection;\n    publicAPI.getInputData = getInputData;\n    publicAPI.getInputConnection = getInputConnection;\n  }\n  if (numberOfOutputs) {\n    publicAPI.getOutputData = getOutputData;\n    publicAPI.getOutputPort = getOutputPort;\n  }\n  publicAPI.update = () => {\n    const ins = [];\n    if (model.numberOfInputs) {\n      let count = 0;\n      while (count < model.numberOfInputs) {\n        ins[count] = publicAPI.getInputData(count);\n        count++;\n      }\n    }\n    if (publicAPI.shouldUpdate() && publicAPI.requestData) {\n      publicAPI.requestData(ins, model.output);\n    }\n  };\n  publicAPI.getNumberOfInputPorts = () => model.numberOfInputs;\n  publicAPI.getNumberOfOutputPorts = () => numberOfOutputs || model.output.length;\n  publicAPI.getInputArrayToProcess = inputPort => {\n    const arrayDesc = model.inputArrayToProcess[inputPort];\n    const ds = model.inputData[inputPort];\n    if (arrayDesc && ds) {\n      return ds[`get${arrayDesc.fieldAssociation}`]().getArray(arrayDesc.arrayName);\n    }\n    return null;\n  };\n  publicAPI.setInputArrayToProcess = function (inputPort, arrayName, fieldAssociation) {\n    let attributeType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'Scalars';\n    while (model.inputArrayToProcess.length < inputPort) {\n      model.inputArrayToProcess.push(null);\n    }\n    model.inputArrayToProcess[inputPort] = {\n      arrayName,\n      fieldAssociation,\n      attributeType\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Event handling: onXXX(callback), invokeXXX(args...)\n// ----------------------------------------------------------------------------\n\nconst EVENT_ABORT = Symbol('Event abort');\nfunction event(publicAPI, model, eventName) {\n  const callbacks = [];\n  const previousDelete = publicAPI.delete;\n  let curCallbackID = 1;\n  function off(callbackID) {\n    for (let i = 0; i < callbacks.length; ++i) {\n      const [cbID] = callbacks[i];\n      if (cbID === callbackID) {\n        callbacks.splice(i, 1);\n        return;\n      }\n    }\n  }\n  function on(callbackID) {\n    function unsubscribe() {\n      off(callbackID);\n    }\n    return Object.freeze({\n      unsubscribe\n    });\n  }\n  function invoke() {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    /* eslint-disable prefer-rest-params */\n    // Go through a copy of the callbacks array in case new callbacks\n    // get prepended within previous callbacks\n    const currentCallbacks = callbacks.slice();\n    for (let index = 0; index < currentCallbacks.length; ++index) {\n      const [, cb, priority] = currentCallbacks[index];\n      if (!cb) {\n        continue; // eslint-disable-line\n      }\n\n      if (priority < 0) {\n        setTimeout(() => cb.apply(publicAPI, arguments), 1 - priority);\n      } else {\n        // Abort only if the callback explicitly returns false\n        const continueNext = cb.apply(publicAPI, arguments);\n        if (continueNext === EVENT_ABORT) {\n          break;\n        }\n      }\n    }\n    /* eslint-enable prefer-rest-params */\n  }\n\n  publicAPI[`invoke${_capitalize(eventName)}`] = invoke;\n  publicAPI[`on${_capitalize(eventName)}`] = function (callback) {\n    let priority = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.0;\n    if (!callback.apply) {\n      console.error(`Invalid callback for event ${eventName}`);\n      return null;\n    }\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n    const callbackID = curCallbackID++;\n    callbacks.push([callbackID, callback, priority]);\n    callbacks.sort((cb1, cb2) => cb2[2] - cb1[2]);\n    return on(callbackID);\n  };\n  publicAPI.delete = () => {\n    previousDelete();\n    callbacks.forEach(_ref => {\n      let [cbID] = _ref;\n      return off(cbID);\n    });\n  };\n}\n\n// ----------------------------------------------------------------------------\n// newInstance\n// ----------------------------------------------------------------------------\n\nfunction newInstance(extend, className) {\n  const constructor = function () {\n    let initialValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const model = {};\n    const publicAPI = {};\n    extend(publicAPI, model, initialValues);\n    return Object.freeze(publicAPI);\n  };\n\n  // Register constructor to factory\n  if (className) {\n    vtk.register(className, constructor);\n  }\n  return constructor;\n}\n\n// ----------------------------------------------------------------------------\n// Chain function calls\n// ----------------------------------------------------------------------------\n\nfunction chain() {\n  for (var _len6 = arguments.length, fn = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    fn[_key6] = arguments[_key6];\n  }\n  return function () {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n    return fn.filter(i => !!i).map(i => i(...args));\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Some utility methods for vtk objects\n// ----------------------------------------------------------------------------\n\nfunction isVtkObject(instance) {\n  return instance && instance.isA && instance.isA('vtkObject');\n}\nfunction traverseInstanceTree(instance, extractFunction) {\n  let accumulator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let visitedInstances = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  if (isVtkObject(instance)) {\n    if (visitedInstances.indexOf(instance) >= 0) {\n      // avoid cycles\n      return accumulator;\n    }\n    visitedInstances.push(instance);\n    const result = extractFunction(instance);\n    if (result !== undefined) {\n      accumulator.push(result);\n    }\n\n    // Now go through this instance's model\n    const model = instance.get();\n    Object.keys(model).forEach(key => {\n      const modelObj = model[key];\n      if (Array.isArray(modelObj)) {\n        modelObj.forEach(subObj => {\n          traverseInstanceTree(subObj, extractFunction, accumulator, visitedInstances);\n        });\n      } else {\n        traverseInstanceTree(modelObj, extractFunction, accumulator, visitedInstances);\n      }\n    });\n  }\n  return accumulator;\n}\n\n// ----------------------------------------------------------------------------\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n\nfunction debounce(func, wait, immediate) {\n  var _this = this;\n  let timeout;\n  const debounced = function () {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n    const context = _this;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n  debounced.cancel = () => clearTimeout(timeout);\n  return debounced;\n}\n\n// ----------------------------------------------------------------------------\n// Creates a throttled function that only invokes `func` at most once per\n// every `wait` milliseconds.\n\nfunction throttle(callback, delay) {\n  let isThrottled = false;\n  let argsToUse = null;\n  function next() {\n    isThrottled = false;\n    if (argsToUse !== null) {\n      wrapper(...argsToUse); // eslint-disable-line\n      argsToUse = null;\n    }\n  }\n  function wrapper() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n    if (isThrottled) {\n      argsToUse = args;\n      return;\n    }\n    isThrottled = true;\n    callback(...args);\n    setTimeout(next, delay);\n  }\n  return wrapper;\n}\n\n// ----------------------------------------------------------------------------\n// keystore(publicAPI, model, initialKeystore)\n//\n//    - initialKeystore: Initial keystore. This can be either a Map or an\n//      object.\n//\n// Generated API\n//  setKey(key, value) : mixed (returns value)\n//  getKey(key) : mixed\n//  getAllKeys() : [mixed]\n//  deleteKey(key) : Boolean\n// ----------------------------------------------------------------------------\n\nfunction keystore(publicAPI, model) {\n  let initialKeystore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  model.keystore = Object.assign(model.keystore || {}, initialKeystore);\n  publicAPI.setKey = (key, value) => {\n    model.keystore[key] = value;\n  };\n  publicAPI.getKey = key => model.keystore[key];\n  publicAPI.getAllKeys = () => Object.keys(model.keystore);\n  publicAPI.deleteKey = key => delete model.keystore[key];\n  publicAPI.clearKeystore = () => publicAPI.getAllKeys().forEach(key => delete model.keystore[key]);\n}\n\n// ----------------------------------------------------------------------------\n// proxy(publicAPI, model, sectionName, propertyUI)\n//\n//    - sectionName: Name of the section for UI\n//    - propertyUI: List of props with their UI description\n//\n// Generated API\n//  getProxyId() : String\n//  listProxyProperties() : [string]\n//  updateProxyProperty(name, prop)\n//  getProxySection() => List of properties for UI generation\n// ----------------------------------------------------------------------------\nlet nextProxyId = 1;\nconst ROOT_GROUP_NAME = '__root__';\nfunction proxy(publicAPI, model) {\n  // Proxies are keystores\n  keystore(publicAPI, model);\n  const parentDelete = publicAPI.delete;\n\n  // getProxyId\n  model.proxyId = `${nextProxyId++}`;\n\n  // ui handling\n  model.ui = JSON.parse(JSON.stringify(model.ui || [])); // deep copy\n  get(publicAPI, model, ['proxyId', 'proxyGroup', 'proxyName']);\n  setGet(publicAPI, model, ['proxyManager']);\n\n  // group properties\n  const propertyMap = {};\n  const groupChildrenNames = {};\n  function registerProperties(descriptionList, currentGroupName) {\n    if (!groupChildrenNames[currentGroupName]) {\n      groupChildrenNames[currentGroupName] = [];\n    }\n    const childrenNames = groupChildrenNames[currentGroupName];\n    for (let i = 0; i < descriptionList.length; i++) {\n      childrenNames.push(descriptionList[i].name);\n      propertyMap[descriptionList[i].name] = descriptionList[i];\n      if (descriptionList[i].children && descriptionList[i].children.length) {\n        registerProperties(descriptionList[i].children, descriptionList[i].name);\n      }\n    }\n  }\n  registerProperties(model.ui, ROOT_GROUP_NAME);\n  publicAPI.updateUI = ui => {\n    model.ui = JSON.parse(JSON.stringify(ui || [])); // deep copy\n    Object.keys(propertyMap).forEach(k => delete propertyMap[k]);\n    Object.keys(groupChildrenNames).forEach(k => delete groupChildrenNames[k]);\n    registerProperties(model.ui, ROOT_GROUP_NAME);\n    publicAPI.modified();\n  };\n  function listProxyProperties() {\n    let gName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ROOT_GROUP_NAME;\n    return groupChildrenNames[gName];\n  }\n  publicAPI.updateProxyProperty = (propertyName, propUI) => {\n    const prop = propertyMap[propertyName];\n    if (prop) {\n      Object.assign(prop, propUI);\n    } else {\n      propertyMap[propertyName] = {\n        ...propUI\n      };\n    }\n  };\n  publicAPI.activate = () => {\n    if (model.proxyManager) {\n      const setActiveMethod = `setActive${_capitalize(publicAPI.getProxyGroup().slice(0, -1))}`;\n      if (model.proxyManager[setActiveMethod]) {\n        model.proxyManager[setActiveMethod](publicAPI);\n      }\n    }\n  };\n\n  // property link\n  model.propertyLinkSubscribers = {};\n  publicAPI.registerPropertyLinkForGC = (otherLink, type) => {\n    if (!(type in model.propertyLinkSubscribers)) {\n      model.propertyLinkSubscribers[type] = [];\n    }\n    model.propertyLinkSubscribers[type].push(otherLink);\n  };\n  publicAPI.gcPropertyLinks = type => {\n    const subscribers = model.propertyLinkSubscribers[type] || [];\n    while (subscribers.length) {\n      subscribers.pop().unbind(publicAPI);\n    }\n  };\n  model.propertyLinkMap = {};\n  publicAPI.getPropertyLink = function (id) {\n    let persistent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (model.propertyLinkMap[id]) {\n      return model.propertyLinkMap[id];\n    }\n    let value = null;\n    const links = [];\n    let count = 0;\n    let updateInProgress = false;\n    function update(source) {\n      let force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (updateInProgress) {\n        return null;\n      }\n      const needUpdate = [];\n      let sourceLink = null;\n      count = links.length;\n      while (count--) {\n        const link = links[count];\n        if (link.instance === source) {\n          sourceLink = link;\n        } else {\n          needUpdate.push(link);\n        }\n      }\n      if (!sourceLink) {\n        return null;\n      }\n      const newValue = sourceLink.instance[`get${_capitalize(sourceLink.propertyName)}`]();\n      if (!shallowEquals(newValue, value) || force) {\n        value = newValue;\n        updateInProgress = true;\n        while (needUpdate.length) {\n          const linkToUpdate = needUpdate.pop();\n          linkToUpdate.instance.set({\n            [linkToUpdate.propertyName]: value\n          });\n        }\n        updateInProgress = false;\n      }\n      if (model.propertyLinkMap[id].persistent) {\n        model.propertyLinkMap[id].value = newValue;\n      }\n      return newValue;\n    }\n    function unbind(instance, propertyName) {\n      const indexToDelete = [];\n      count = links.length;\n      while (count--) {\n        const link = links[count];\n        if (link.instance === instance && (link.propertyName === propertyName || propertyName === undefined)) {\n          link.subscription.unsubscribe();\n          indexToDelete.push(count);\n        }\n      }\n      while (indexToDelete.length) {\n        links.splice(indexToDelete.pop(), 1);\n      }\n    }\n    function bind(instance, propertyName) {\n      let updateMe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      const subscription = instance.onModified(update);\n      const other = links[0];\n      links.push({\n        instance,\n        propertyName,\n        subscription\n      });\n      if (updateMe) {\n        if (model.propertyLinkMap[id].persistent && model.propertyLinkMap[id].value !== undefined) {\n          instance.set({\n            [propertyName]: model.propertyLinkMap[id].value\n          });\n        } else if (other) {\n          update(other.instance, true);\n        }\n      }\n      return {\n        unsubscribe: () => unbind(instance, propertyName)\n      };\n    }\n    function unsubscribe() {\n      while (links.length) {\n        links.pop().subscription.unsubscribe();\n      }\n    }\n    const linkHandler = {\n      bind,\n      unbind,\n      unsubscribe,\n      persistent\n    };\n    model.propertyLinkMap[id] = linkHandler;\n    return linkHandler;\n  };\n\n  // extract values\n  function getProperties() {\n    let groupName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ROOT_GROUP_NAME;\n    const values = [];\n    const id = model.proxyId;\n    const propertyNames = listProxyProperties(groupName) || [];\n    for (let i = 0; i < propertyNames.length; i++) {\n      const name = propertyNames[i];\n      const method = publicAPI[`get${_capitalize(name)}`];\n      const value = method ? method() : undefined;\n      const prop = {\n        id,\n        name,\n        value\n      };\n      const children = getProperties(name);\n      if (children.length) {\n        prop.children = children;\n      }\n      values.push(prop);\n    }\n    return values;\n  }\n  publicAPI.listPropertyNames = () => getProperties().map(p => p.name);\n  publicAPI.getPropertyByName = name => getProperties().find(p => p.name === name);\n  publicAPI.getPropertyDomainByName = name => (propertyMap[name] || {}).domain;\n\n  // ui section\n  publicAPI.getProxySection = () => ({\n    id: model.proxyId,\n    name: model.proxyGroup,\n    ui: model.ui,\n    properties: getProperties()\n  });\n\n  // free resources\n  publicAPI.delete = () => {\n    const list = Object.keys(model.propertyLinkMap);\n    let count = list.length;\n    while (count--) {\n      model.propertyLinkMap[list[count]].unsubscribe();\n    }\n    Object.keys(model.propertyLinkSubscribers).forEach(publicAPI.gcPropertyLinks);\n    parentDelete();\n  };\n\n  // @todo fix infinite recursion due to active source\n  publicAPI.getState = () => null;\n  function registerLinks() {\n    // Allow dynamic registration of links at the application level\n    if (model.links) {\n      for (let i = 0; i < model.links.length; i++) {\n        const {\n          link,\n          property,\n          persistent,\n          updateOnBind,\n          type\n        } = model.links[i];\n        if (type === 'application') {\n          const sLink = model.proxyManager.getPropertyLink(link, persistent);\n          publicAPI.registerPropertyLinkForGC(sLink, 'application');\n          sLink.bind(publicAPI, property, updateOnBind);\n        }\n      }\n    }\n  }\n  setImmediateVTK(registerLinks);\n}\n\n// ----------------------------------------------------------------------------\n// proxyPropertyMapping(publicAPI, model, map)\n//\n//   map = {\n//      opacity: { modelKey: 'property', property: 'opacity' },\n//   }\n//\n// Generated API:\n//  Elevate set/get methods from internal object stored in the model to current one\n// ----------------------------------------------------------------------------\n\nfunction proxyPropertyMapping(publicAPI, model, map) {\n  const parentDelete = publicAPI.delete;\n  const subscriptions = [];\n  const propertyNames = Object.keys(map);\n  let count = propertyNames.length;\n  while (count--) {\n    const propertyName = propertyNames[count];\n    const {\n      modelKey,\n      property,\n      modified = true\n    } = map[propertyName];\n    const methodSrc = _capitalize(property);\n    const methodDst = _capitalize(propertyName);\n    publicAPI[`get${methodDst}`] = model[modelKey][`get${methodSrc}`];\n    publicAPI[`set${methodDst}`] = model[modelKey][`set${methodSrc}`];\n    if (modified) {\n      subscriptions.push(model[modelKey].onModified(publicAPI.modified));\n    }\n  }\n  publicAPI.delete = () => {\n    while (subscriptions.length) {\n      subscriptions.pop().unsubscribe();\n    }\n    parentDelete();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// proxyPropertyState(publicAPI, model, state, defaults)\n//\n//   state = {\n//     representation: {\n//       'Surface with edges': { property: { edgeVisibility: true, representation: 2 } },\n//       Surface: { property: { edgeVisibility: false, representation: 2 } },\n//       Wireframe: { property: { edgeVisibility: false, representation: 1 } },\n//       Points: { property: { edgeVisibility: false, representation: 0 } },\n//     },\n//   }\n//\n//   defaults = {\n//      representation: 'Surface',\n//   }\n//\n// Generated API\n//   get / set Representation ( string ) => push state to various internal objects\n// ----------------------------------------------------------------------------\n\nfunction proxyPropertyState(publicAPI, model) {\n  let state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let defaults = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  model.this = publicAPI;\n  function applyState(map) {\n    const modelKeys = Object.keys(map);\n    let count = modelKeys.length;\n    while (count--) {\n      const modelKey = modelKeys[count];\n      model[modelKey].set(map[modelKey]);\n    }\n  }\n  const modelKeys = Object.keys(defaults);\n  let count = modelKeys.length;\n  while (count--) {\n    // Add default\n    const key = modelKeys[count];\n    model[key] = defaults[key];\n\n    // Add set method\n    const mapping = state[key];\n    publicAPI[`set${_capitalize(key)}`] = value => {\n      if (value !== model[key]) {\n        model[key] = value;\n        const propValues = mapping[value];\n        applyState(propValues);\n        publicAPI.modified();\n      }\n    };\n  }\n\n  // Add getter\n  if (modelKeys.length) {\n    get(publicAPI, model, modelKeys);\n  }\n}\n\n// ----------------------------------------------------------------------------\n// From : https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n//\n//\n// Copyright (c) 2015, Facebook, Inc.\n// All rights reserved.\n//\n// This source code is licensed under the BSD-style license found in the\n// LICENSE file in the root directory of this source tree. An additional grant\n// of patent rights can be found in the PATENTS file in the same directory.\n//\n//\n// Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n// complicated, thus this doc is long and (hopefully) detailed enough to answer\n// your questions.\n//\n// If you need to react to the mouse wheel in a predictable way, this code is\n// like your bestest friend.// hugs//\n//\n// As of today, there are 4 DOM event types you can listen to:\n//\n//   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n//   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n//   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n//   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n//\n// So what to do?  The is the best:\n//\n//   normalizeWheel.getEventType();\n//\n// In your event callback, use this code to get sane interpretation of the\n// deltas.  This code will return an object with properties:\n//\n//   spinX   -- normalized spin speed (use for zoom) - x plane\n//   spinY   -- \" - y plane\n//   pixelX  -- normalized distance (to pixels) - x plane\n//   pixelY  -- \" - y plane\n//\n// Wheel values are provided by the browser assuming you are using the wheel to\n// scroll a web page by a number of lines or pixels (or pages).  Values can vary\n// significantly on different platforms and browsers, forgetting that you can\n// scroll at different speeds.  Some devices (like trackpads) emit more events\n// at smaller increments with fine granularity, and some emit massive jumps with\n// linear speed or acceleration.\n//\n// This code does its best to normalize the deltas for you:\n//\n//   - spin is trying to normalize how far the wheel was spun (or trackpad\n//     dragged).  This is super useful for zoom support where you want to\n//     throw away the chunky scroll steps on the PC and make those equal to\n//     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n//     resolve a single slow step on a wheel to 1.\n//\n//   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n//     get the crazy differences between browsers, but at least it'll be in\n//     pixels!\n//\n//   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n//     should translate to positive value zooming IN, negative zooming OUT.\n//     This matches the newer 'wheel' event.\n//\n// Why are there spinX, spinY (or pixels)?\n//\n//   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n//     with a mouse.  It results in side-scrolling in the browser by default.\n//\n//   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n//\n//   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n//     probably is by browsers in conjunction with fancy 3D controllers .. but\n//     you know.\n//\n// Implementation info:\n//\n// Examples of 'wheel' event if you scroll slowly (down) by one step with an\n// average mouse:\n//\n//   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n//   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n//   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n//   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n//   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n//\n// On the trackpad:\n//\n//   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n//   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n//\n// On other/older browsers.. it's more complicated as there can be multiple and\n// also missing delta values.\n//\n// The 'wheel' event is more standard:\n//\n// http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n//\n// The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n// deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n// backward compatibility with older events.  Those other values help us\n// better normalize spin speed.  Example of what the browsers provide:\n//\n//                          | event.wheelDelta | event.detail\n//        ------------------+------------------+--------------\n//          Safari v5/OS X  |       -120       |       0\n//          Safari v5/Win7  |       -120       |       0\n//         Chrome v17/OS X  |       -120       |       0\n//         Chrome v17/Win7  |       -120       |       0\n//                IE9/Win7  |       -120       |   undefined\n//         Firefox v4/OS X  |     undefined    |       1\n//         Firefox v4/Win7  |     undefined    |       3\n//\n// ----------------------------------------------------------------------------\n\n// Reasonable defaults\nconst PIXEL_STEP = 10;\nconst LINE_HEIGHT = 40;\nconst PAGE_HEIGHT = 800;\nfunction normalizeWheel(wheelEvent) {\n  let sX = 0; // spinX\n  let sY = 0; // spinY\n  let pX = 0; // pixelX\n  let pY = 0; // pixelY\n\n  // Legacy\n  if ('detail' in wheelEvent) {\n    sY = wheelEvent.detail;\n  }\n  if ('wheelDelta' in wheelEvent) {\n    sY = -wheelEvent.wheelDelta / 120;\n  }\n  if ('wheelDeltaY' in wheelEvent) {\n    sY = -wheelEvent.wheelDeltaY / 120;\n  }\n  if ('wheelDeltaX' in wheelEvent) {\n    sX = -wheelEvent.wheelDeltaX / 120;\n  }\n\n  // side scrolling on FF with DOMMouseScroll\n  if ('axis' in wheelEvent && wheelEvent.axis === wheelEvent.HORIZONTAL_AXIS) {\n    sX = sY;\n    sY = 0;\n  }\n  pX = sX * PIXEL_STEP;\n  pY = sY * PIXEL_STEP;\n  if ('deltaY' in wheelEvent) {\n    pY = wheelEvent.deltaY;\n  }\n  if ('deltaX' in wheelEvent) {\n    pX = wheelEvent.deltaX;\n  }\n  if ((pX || pY) && wheelEvent.deltaMode) {\n    if (wheelEvent.deltaMode === 1) {\n      // delta in LINE units\n      pX *= LINE_HEIGHT;\n      pY *= LINE_HEIGHT;\n    } else {\n      // delta in PAGE units\n      pX *= PAGE_HEIGHT;\n      pY *= PAGE_HEIGHT;\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pX && !sX) {\n    sX = pX < 1 ? -1 : 1;\n  }\n  if (pY && !sY) {\n    sY = pY < 1 ? -1 : 1;\n  }\n  return {\n    spinX: sX,\n    spinY: sY || sX,\n    pixelX: pX,\n    pixelY: pY || pX\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Default export\n// ----------------------------------------------------------------------------\n\nvar macro = {\n  algo,\n  capitalize,\n  chain,\n  debounce,\n  enumToString,\n  event,\n  EVENT_ABORT,\n  formatBytesToProperUnit,\n  formatNumbersWithThousandSeparator,\n  get,\n  getArray,\n  getCurrentGlobalMTime,\n  getStateArrayMapFunc,\n  isVtkObject,\n  keystore,\n  measurePromiseExecution,\n  moveToProtected,\n  newInstance,\n  newTypedArray,\n  newTypedArrayFrom,\n  normalizeWheel,\n  obj,\n  proxy,\n  proxyPropertyMapping,\n  proxyPropertyState,\n  safeArrays,\n  set,\n  setArray,\n  setGet,\n  setGetArray,\n  setImmediate: setImmediateVTK,\n  setLoggerFunction,\n  throttle,\n  traverseInstanceTree,\n  TYPED_ARRAYS,\n  // deprecated todo remove on breaking API revision\n  uncapitalize,\n  VOID,\n  vtkDebugMacro,\n  vtkErrorMacro,\n  vtkInfoMacro,\n  vtkLogMacro,\n  vtkOnceErrorMacro,\n  vtkWarningMacro,\n  // vtk.js internal use\n  objectSetterMap\n};\n\nvar macro$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  VOID: VOID,\n  setLoggerFunction: setLoggerFunction,\n  vtkLogMacro: vtkLogMacro,\n  vtkInfoMacro: vtkInfoMacro,\n  vtkDebugMacro: vtkDebugMacro,\n  vtkErrorMacro: vtkErrorMacro,\n  vtkWarningMacro: vtkWarningMacro,\n  vtkOnceErrorMacro: vtkOnceErrorMacro,\n  TYPED_ARRAYS: TYPED_ARRAYS,\n  newTypedArray: newTypedArray,\n  newTypedArrayFrom: newTypedArrayFrom,\n  capitalize: capitalize,\n  _capitalize: _capitalize,\n  uncapitalize: uncapitalize,\n  formatBytesToProperUnit: formatBytesToProperUnit,\n  formatNumbersWithThousandSeparator: formatNumbersWithThousandSeparator,\n  setImmediateVTK: setImmediateVTK,\n  measurePromiseExecution: measurePromiseExecution,\n  obj: obj,\n  get: get,\n  set: set,\n  setGet: setGet,\n  getArray: getArray,\n  setArray: setArray,\n  setGetArray: setGetArray,\n  moveToProtected: moveToProtected,\n  algo: algo,\n  EVENT_ABORT: EVENT_ABORT,\n  event: event,\n  newInstance: newInstance,\n  chain: chain,\n  isVtkObject: isVtkObject,\n  traverseInstanceTree: traverseInstanceTree,\n  debounce: debounce,\n  throttle: throttle,\n  keystore: keystore,\n  proxy: proxy,\n  proxyPropertyMapping: proxyPropertyMapping,\n  proxyPropertyState: proxyPropertyState,\n  normalizeWheel: normalizeWheel,\n  'default': macro\n});\n\nexport { uncapitalize as A, formatBytesToProperUnit as B, formatNumbersWithThousandSeparator as C, setImmediateVTK as D, measurePromiseExecution as E, setArray as F, EVENT_ABORT as G, isVtkObject as H, debounce as I, throttle as J, keystore as K, proxyPropertyState as L, normalizeWheel as M, TYPED_ARRAYS as T, VOID as V, _capitalize as _, newTypedArray as a, newTypedArrayFrom as b, macro$1 as c, algo as d, setGet as e, event as f, get as g, chain as h, moveToProtected as i, proxyPropertyMapping as j, getArray as k, setGetArray as l, macro as m, newInstance as n, obj as o, proxy as p, capitalize as q, vtkErrorMacro as r, set as s, traverseInstanceTree as t, setLoggerFunction as u, vtkWarningMacro as v, vtkLogMacro as w, vtkInfoMacro as x, vtkDebugMacro as y, vtkOnceErrorMacro as z };\n","import { m as macro } from '../../macros2.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\nconst PASS_TYPES = ['Build', 'Render'];\n\n// ----------------------------------------------------------------------------\n// vtkViewNode methods\n// ----------------------------------------------------------------------------\n\nfunction vtkViewNode(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkViewNode');\n\n  // Builds myself.\n  publicAPI.build = prepass => {};\n\n  // Renders myself\n  publicAPI.render = prepass => {};\n  publicAPI.traverse = renderPass => {\n    // we can choose to do special\n    // traversal here based on pass\n    const passTraversal = renderPass.getTraverseOperation();\n    const fn = publicAPI[passTraversal];\n    if (fn) {\n      fn(renderPass);\n      return;\n    }\n\n    // default traversal\n    publicAPI.apply(renderPass, true);\n    for (let index = 0; index < model.children.length; index++) {\n      model.children[index].traverse(renderPass);\n    }\n    publicAPI.apply(renderPass, false);\n  };\n  publicAPI.apply = (renderPass, prepass) => {\n    const customRenderPass = publicAPI[renderPass.getOperation()];\n    if (customRenderPass) {\n      customRenderPass(prepass, renderPass);\n    }\n  };\n  publicAPI.getViewNodeFor = dataObject => {\n    if (model.renderable === dataObject) {\n      return publicAPI;\n    }\n    for (let index = 0; index < model.children.length; ++index) {\n      const child = model.children[index];\n      const vn = child.getViewNodeFor(dataObject);\n      if (vn) {\n        return vn;\n      }\n    }\n    return undefined;\n  };\n  publicAPI.getFirstAncestorOfType = type => {\n    if (!model._parent) {\n      return null;\n    }\n    if (model._parent.isA(type)) {\n      return model._parent;\n    }\n    return model._parent.getFirstAncestorOfType(type);\n  };\n  publicAPI.getLastAncestorOfType = type => {\n    if (!model._parent) {\n      return null;\n    }\n    const lastAncestor = model._parent.getLastAncestorOfType(type);\n    if (lastAncestor) {\n      return lastAncestor;\n    }\n    if (model._parent.isA(type)) {\n      return model._parent;\n    }\n    return null;\n  };\n\n  // add a missing node/child for the passed in renderables. This should\n  // be called only in between prepareNodes and removeUnusedNodes\n  publicAPI.addMissingNode = dobj => {\n    if (!dobj) {\n      return undefined;\n    }\n\n    // if found just mark as visited\n    const result = model._renderableChildMap.get(dobj);\n    if (result !== undefined) {\n      result.setVisited(true);\n      return result;\n    }\n\n    // otherwise create a node\n    const newNode = publicAPI.createViewNode(dobj);\n    if (newNode) {\n      newNode.setParent(publicAPI);\n      newNode.setVisited(true);\n      model._renderableChildMap.set(dobj, newNode);\n      model.children.push(newNode);\n      return newNode;\n    }\n    return undefined;\n  };\n\n  // add missing nodes/children for the passed in renderables. This should\n  // be called only in between prepareNodes and removeUnusedNodes\n  publicAPI.addMissingNodes = dataObjs => {\n    if (!dataObjs || !dataObjs.length) {\n      return;\n    }\n    for (let index = 0; index < dataObjs.length; ++index) {\n      const dobj = dataObjs[index];\n      publicAPI.addMissingNode(dobj);\n    }\n  };\n\n  // ability to add children that have no renderable use in the same manner\n  // as addMissingNodes This case is when a normal viewnode wants to\n  // delegate passes to a helper or child that doeasn't map to a clear\n  // renderable or any renderable\n  publicAPI.addMissingChildren = children => {\n    if (!children || !children.length) {\n      return;\n    }\n    for (let index = 0; index < children.length; ++index) {\n      const child = children[index];\n      const cindex = model.children.indexOf(child);\n      if (cindex === -1) {\n        child.setParent(publicAPI);\n        model.children.push(child);\n        const childRenderable = child.getRenderable();\n        if (childRenderable) {\n          model._renderableChildMap.set(childRenderable, child);\n        }\n      }\n      child.setVisited(true);\n    }\n  };\n  publicAPI.removeNode = child => {\n    const childIdx = model.children.findIndex(x => x === child);\n    if (childIdx < 0) {\n      return false;\n    }\n    const renderable = child.getRenderable();\n    if (renderable) {\n      model._renderableChildMap.delete(renderable);\n    }\n    child.delete();\n    model.children.splice(childIdx, 1);\n    return true;\n  };\n  publicAPI.prepareNodes = () => {\n    for (let index = 0; index < model.children.length; ++index) {\n      model.children[index].setVisited(false);\n    }\n  };\n  publicAPI.setVisited = val => {\n    model.visited = val;\n  };\n  publicAPI.removeUnusedNodes = () => {\n    let visitedCount = 0;\n    for (let index = 0; index < model.children.length; ++index) {\n      const child = model.children[index];\n      const visited = child.getVisited();\n      if (visited) {\n        model.children[visitedCount++] = child;\n        child.setVisited(false);\n      } else {\n        const renderable = child.getRenderable();\n        if (renderable) {\n          model._renderableChildMap.delete(renderable);\n        }\n        child.delete();\n      }\n    }\n    model.children.length = visitedCount;\n  };\n  publicAPI.createViewNode = dataObj => {\n    if (!model.myFactory) {\n      vtkErrorMacro('Cannot create view nodes without my own factory');\n      return null;\n    }\n    const ret = model.myFactory.createNode(dataObj);\n    if (ret) {\n      ret.setRenderable(dataObj);\n    }\n    return ret;\n  };\n  const parentDelete = publicAPI.delete;\n  publicAPI.delete = () => {\n    for (let i = 0; i < model.children.length; i++) {\n      model.children[i].delete();\n    }\n    parentDelete();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // _parent: null,\n  renderable: null,\n  myFactory: null,\n  children: [],\n  visited: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.event(publicAPI, model, 'event');\n  model._renderableChildMap = new Map();\n  macro.get(publicAPI, model, ['visited']);\n  macro.setGet(publicAPI, model, ['_parent', 'renderable', 'myFactory']);\n  macro.getArray(publicAPI, model, ['children']);\n  macro.moveToProtected(publicAPI, model, ['parent']);\n\n  // Object methods\n  vtkViewNode(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkViewNode');\n\n// ----------------------------------------------------------------------------\n\nvar vtkViewNode$1 = {\n  newInstance,\n  extend,\n  PASS_TYPES\n};\n\nexport { vtkViewNode$1 as default };\n","import { m as macro } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n// vtkViewNodeFactory methods\n// ----------------------------------------------------------------------------\n\nfunction vtkViewNodeFactory(publicAPI, model) {\n  // Make sure our overrides is just for our instance not shared with everyone...\n  if (!model.overrides) {\n    model.overrides = {};\n  }\n\n  // Set our className\n  model.classHierarchy.push('vtkViewNodeFactory');\n  publicAPI.createNode = dataObject => {\n    if (dataObject.isDeleted()) {\n      return null;\n    }\n    let cpt = 0;\n    let className = dataObject.getClassName(cpt++);\n    let isObject = false;\n    const keys = Object.keys(model.overrides);\n    while (className && !isObject) {\n      if (keys.indexOf(className) !== -1) {\n        isObject = true;\n      } else {\n        className = dataObject.getClassName(cpt++);\n      }\n    }\n    if (!isObject) {\n      return null;\n    }\n    const vn = model.overrides[className]();\n    vn.setMyFactory(publicAPI);\n    return vn;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // overrides: {},\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n\n  // Object methods\n  vtkViewNodeFactory(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkViewNodeFactory');\n\n// ----------------------------------------------------------------------------\n\nvar vtkViewNodeFactory$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkViewNodeFactory$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkViewNodeFactory$1 from '../SceneGraph/ViewNodeFactory.js';\n\nconst CLASS_MAPPING = Object.create(null);\nfunction registerOverride(className, fn) {\n  CLASS_MAPPING[className] = fn;\n}\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLViewNodeFactory methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLViewNodeFactory(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLViewNodeFactory');\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Static class mapping shared across instances\n  model.overrides = CLASS_MAPPING;\n\n  // Inheritance\n  vtkViewNodeFactory$1.extend(publicAPI, model, initialValues);\n\n  // Object methods\n  vtkOpenGLViewNodeFactory(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkOpenGLViewNodeFactory');\n\n// ----------------------------------------------------------------------------\n\nvar vtkViewNodeFactory = {\n  newInstance,\n  extend\n};\n\nexport { vtkViewNodeFactory as default, extend, newInstance, registerOverride };\n","import { mat4, mat3 } from 'gl-matrix';\nimport { n as newInstance$1, o as obj, e as setGet } from '../../macros2.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLCamera');\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model._openGLRenderWindow = model._openGLRenderer.getParent();\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n\n  // Renders myself\n  publicAPI.opaquePass = prepass => {\n    if (prepass) {\n      const tsize = model._openGLRenderer.getTiledSizeAndOrigin();\n      model.context.viewport(tsize.lowerLeftU, tsize.lowerLeftV, tsize.usize, tsize.vsize);\n      model.context.scissor(tsize.lowerLeftU, tsize.lowerLeftV, tsize.usize, tsize.vsize);\n    }\n  };\n  publicAPI.translucentPass = publicAPI.opaquePass;\n  publicAPI.zBufferPass = publicAPI.opaquePass;\n  publicAPI.opaqueZBufferPass = publicAPI.opaquePass;\n  publicAPI.volumePass = publicAPI.opaquePass;\n  publicAPI.getKeyMatrices = ren => {\n    // has the camera changed?\n    if (ren !== model.lastRenderer || model._openGLRenderWindow.getMTime() > model.keyMatrixTime.getMTime() || publicAPI.getMTime() > model.keyMatrixTime.getMTime() || ren.getMTime() > model.keyMatrixTime.getMTime() || model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {\n      mat4.copy(model.keyMatrices.wcvc, model.renderable.getViewMatrix());\n      mat3.fromMat4(model.keyMatrices.normalMatrix, model.keyMatrices.wcvc);\n      mat3.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n      mat4.transpose(model.keyMatrices.wcvc, model.keyMatrices.wcvc);\n      const aspectRatio = model._openGLRenderer.getAspectRatio();\n      mat4.copy(model.keyMatrices.vcpc, model.renderable.getProjectionMatrix(aspectRatio, -1, 1));\n      mat4.transpose(model.keyMatrices.vcpc, model.keyMatrices.vcpc);\n      mat4.multiply(model.keyMatrices.wcpc, model.keyMatrices.vcpc, model.keyMatrices.wcvc);\n      model.keyMatrixTime.modified();\n      model.lastRenderer = ren;\n    }\n    return model.keyMatrices;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  lastRenderer: null,\n  keyMatrixTime: null,\n  keyMatrices: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatrixTime = {};\n  obj(model.keyMatrixTime);\n\n  // values always get set by the get method\n  model.keyMatrices = {\n    normalMatrix: new Float64Array(9),\n    vcpc: new Float64Array(16),\n    wcvc: new Float64Array(16),\n    wcpc: new Float64Array(16)\n  };\n\n  // Build VTK API\n  setGet(publicAPI, model, ['context', 'keyMatrixTime']);\n\n  // Object methods\n  vtkOpenGLCamera(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkCamera = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkCamera', newInstance);\n\nexport { vtkCamera as default, extend, newInstance };\n","import { n as newInstance$1, g as get, e as setGet, i as moveToProtected, c as macro } from '../../macros2.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nconst {\n  vtkDebugMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLRenderer methods\n// ----------------------------------------------------------------------------\n/* eslint-disable no-bitwise */\n\nfunction vtkOpenGLRenderer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLRenderer');\n\n  // Builds myself.\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n      publicAPI.updateLights();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getActiveCamera());\n      publicAPI.addMissingNodes(model.renderable.getViewPropsWithNestedProps());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n  publicAPI.updateLights = () => {\n    let count = 0;\n    const lights = model.renderable.getLightsByReference();\n    for (let index = 0; index < lights.length; ++index) {\n      if (lights[index].getSwitch() > 0.0) {\n        count++;\n      }\n    }\n    if (!count) {\n      vtkDebugMacro('No lights are on, creating one.');\n      model.renderable.createLight();\n    }\n    return count;\n  };\n  publicAPI.zBufferPass = prepass => {\n    if (prepass) {\n      let clearMask = 0;\n      const gl = model.context;\n      if (!model.renderable.getTransparent()) {\n        model.context.clearColor(1.0, 0.0, 0.0, 1.0);\n        clearMask |= gl.COLOR_BUFFER_BIT;\n      }\n      if (!model.renderable.getPreserveDepthBuffer()) {\n        gl.clearDepth(1.0);\n        clearMask |= gl.DEPTH_BUFFER_BIT;\n        model.context.depthMask(true);\n      }\n      const ts = publicAPI.getTiledSizeAndOrigin();\n      gl.enable(gl.SCISSOR_TEST);\n      gl.scissor(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n      gl.viewport(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n      gl.colorMask(true, true, true, true);\n      if (clearMask) {\n        gl.clear(clearMask);\n      }\n      gl.enable(gl.DEPTH_TEST);\n    }\n  };\n  publicAPI.opaqueZBufferPass = prepass => publicAPI.zBufferPass(prepass);\n\n  // Renders myself\n  publicAPI.cameraPass = prepass => {\n    if (prepass) {\n      publicAPI.clear();\n    }\n  };\n  publicAPI.getAspectRatio = () => {\n    const size = model._parent.getSizeByReference();\n    const viewport = model.renderable.getViewportByReference();\n    return size[0] * (viewport[2] - viewport[0]) / ((viewport[3] - viewport[1]) * size[1]);\n  };\n  publicAPI.getTiledSizeAndOrigin = () => {\n    const vport = model.renderable.getViewportByReference();\n\n    // if there is no window assume 0 1\n    const tileViewPort = [0.0, 0.0, 1.0, 1.0];\n\n    // find the lower left corner of the viewport, taking into account the\n    // lower left boundary of this tile\n    const vpu = vport[0] - tileViewPort[0];\n    const vpv = vport[1] - tileViewPort[1];\n\n    // store the result as a pixel value\n    const ndvp = model._parent.normalizedDisplayToDisplay(vpu, vpv);\n    const lowerLeftU = Math.round(ndvp[0]);\n    const lowerLeftV = Math.round(ndvp[1]);\n\n    // find the upper right corner of the viewport, taking into account the\n    // lower left boundary of this tile\n    const vpu2 = vport[2] - tileViewPort[0];\n    const vpv2 = vport[3] - tileViewPort[1];\n    const ndvp2 = model._parent.normalizedDisplayToDisplay(vpu2, vpv2);\n\n    // now compute the size of the intersection of the viewport with the\n    // current tile\n    let usize = Math.round(ndvp2[0]) - lowerLeftU;\n    let vsize = Math.round(ndvp2[1]) - lowerLeftV;\n    if (usize < 0) {\n      usize = 0;\n    }\n    if (vsize < 0) {\n      vsize = 0;\n    }\n    return {\n      usize,\n      vsize,\n      lowerLeftU,\n      lowerLeftV\n    };\n  };\n  publicAPI.clear = () => {\n    let clearMask = 0;\n    const gl = model.context;\n    if (!model.renderable.getTransparent()) {\n      const background = model.renderable.getBackgroundByReference();\n      // renderable ensures that background has 4 entries.\n      gl.clearColor(background[0], background[1], background[2], background[3]);\n      clearMask |= gl.COLOR_BUFFER_BIT;\n    }\n    if (!model.renderable.getPreserveDepthBuffer()) {\n      gl.clearDepth(1.0);\n      clearMask |= gl.DEPTH_BUFFER_BIT;\n      gl.depthMask(true);\n    }\n    gl.colorMask(true, true, true, true);\n    const ts = publicAPI.getTiledSizeAndOrigin();\n    gl.enable(gl.SCISSOR_TEST);\n    gl.scissor(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n    gl.viewport(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n    if (clearMask) {\n      gl.clear(clearMask);\n    }\n    gl.enable(gl.DEPTH_TEST);\n    /* eslint-enable no-bitwise */\n  };\n\n  publicAPI.releaseGraphicsResources = () => {\n    if (model.selector !== null) {\n      model.selector.releaseGraphicsResources();\n    }\n    // Releasing resources means that the next render should re-create resources\n    if (model.renderable) {\n      model.renderable.getViewProps().forEach(prop => {\n        prop.modified();\n      });\n    }\n  };\n  publicAPI.setOpenGLRenderWindow = rw => {\n    if (model._openGLRenderWindow === rw) {\n      return;\n    }\n    publicAPI.releaseGraphicsResources();\n    model._openGLRenderWindow = rw;\n    model.context = null;\n    if (rw) {\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  _openGLRenderWindow: null,\n  selector: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  // Build VTK API\n  get(publicAPI, model, ['shaderCache']);\n  setGet(publicAPI, model, ['selector']);\n  moveToProtected(publicAPI, model, ['openGLRenderWindow']);\n\n  // Object methods\n  vtkOpenGLRenderer(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkOpenGLRenderer');\n\n// ----------------------------------------------------------------------------\n\nvar vtkRenderer = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkRenderer', newInstance);\n\nexport { vtkRenderer as default, extend, newInstance };\n","import { mat3, mat4 } from 'gl-matrix';\nimport { n as newInstance$1, o as obj, e as setGet, g as get } from '../../macros2.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLActor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLActor');\n\n  // Builds myself.\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model._openGLRenderWindow = publicAPI.getLastAncestorOfType('vtkOpenGLRenderWindow');\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model.context = model._openGLRenderWindow.getContext();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNodes(model.renderable.getTextures());\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n\n      // we store textures and mapper\n      model.ogltextures = null;\n      model.activeTextures = null;\n      for (let index = 0; index < model.children.length; index++) {\n        const child = model.children[index];\n        if (child.isA('vtkOpenGLTexture')) {\n          if (!model.ogltextures) {\n            model.ogltextures = [];\n          }\n          model.ogltextures.push(child);\n        } else {\n          model.oglmapper = child;\n        }\n      }\n    }\n  };\n\n  // render both opaque and translucent actors\n  publicAPI.traverseZBufferPass = renderPass => {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    model.oglmapper.traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  };\n\n  // only render opaque actors\n  publicAPI.traverseOpaqueZBufferPass = renderPass => publicAPI.traverseOpaquePass(renderPass);\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseOpaquePass = renderPass => {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    model.oglmapper.traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  };\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseTranslucentPass = renderPass => {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    model.oglmapper.traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  };\n  publicAPI.activateTextures = () => {\n    // always traverse textures first, then mapper\n    if (!model.ogltextures) {\n      return;\n    }\n    model.activeTextures = [];\n    for (let index = 0; index < model.ogltextures.length; index++) {\n      const child = model.ogltextures[index];\n      child.render();\n      if (child.getHandle()) {\n        model.activeTextures.push(child);\n      }\n    }\n  };\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n      if (model.renderable.getIsOpaque()) {\n        renderPass.incrementOpaqueActorCount();\n      } else {\n        renderPass.incrementTranslucentActorCount();\n      }\n    }\n  };\n  publicAPI.zBufferPass = (prepass, renderPass) => publicAPI.opaquePass(prepass, renderPass);\n  publicAPI.opaqueZBufferPass = (prepass, renderPass) => publicAPI.opaquePass(prepass, renderPass);\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    if (prepass) {\n      model.context.depthMask(true);\n      publicAPI.activateTextures();\n    } else if (model.activeTextures) {\n      for (let index = 0; index < model.activeTextures.length; index++) {\n        model.activeTextures[index].deactivate();\n      }\n    }\n  };\n\n  // Renders myself\n  publicAPI.translucentPass = (prepass, renderPass) => {\n    if (prepass) {\n      model.context.depthMask(model._openGLRenderer.getSelector() && model.renderable.getNestedPickable());\n      publicAPI.activateTextures();\n    } else if (model.activeTextures) {\n      for (let index = 0; index < model.activeTextures.length; index++) {\n        model.activeTextures[index].deactivate();\n      }\n    }\n  };\n  publicAPI.getKeyMatrices = () => {\n    // has the actor changed?\n    if (model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {\n      model.renderable.computeMatrix();\n      mat4.copy(model.keyMatrices.mcwc, model.renderable.getMatrix());\n      mat4.transpose(model.keyMatrices.mcwc, model.keyMatrices.mcwc);\n      if (model.renderable.getIsIdentity()) {\n        mat3.identity(model.keyMatrices.normalMatrix);\n      } else {\n        mat3.fromMat4(model.keyMatrices.normalMatrix, model.keyMatrices.mcwc);\n        mat3.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n        mat3.transpose(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n      }\n      model.keyMatrixTime.modified();\n    }\n    return model.keyMatrices;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  keyMatrixTime: null,\n  keyMatrices: null,\n  activeTextures: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatrixTime = {};\n  obj(model.keyMatrixTime, {\n    mtime: 0\n  });\n  model.keyMatrices = {\n    normalMatrix: mat3.identity(new Float64Array(9)),\n    mcwc: mat4.identity(new Float64Array(16))\n  };\n\n  // Build VTK API\n  setGet(publicAPI, model, ['context']);\n  get(publicAPI, model, ['activeTextures']);\n\n  // Object methods\n  vtkOpenGLActor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkActor = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkActor', newInstance);\n\nexport { vtkActor as default, extend, newInstance };\n","import { n as newInstance$1, e as setGet, g as get } from '../../macros2.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLActor2D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLActor2D');\n\n  // Builds myself.\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n      model._openGLRenderWindow = publicAPI.getLastAncestorOfType('vtkOpenGLRenderWindow');\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model.context = model._openGLRenderWindow.getContext();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNodes(model.renderable.getTextures());\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n\n      // we store textures and mapper\n      model.ogltextures = null;\n      model.activeTextures = null;\n      for (let index = 0; index < model.children.length; index++) {\n        const child = model.children[index];\n        if (child.isA('vtkOpenGLTexture')) {\n          if (!model.ogltextures) {\n            model.ogltextures = [];\n          }\n          model.ogltextures.push(child);\n        } else {\n          model.oglmapper = child;\n        }\n      }\n    }\n  };\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n      renderPass.incrementOverlayActorCount();\n    }\n  };\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseOpaquePass = renderPass => {\n    if (!model.oglmapper || !model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    model.oglmapper.traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  };\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseTranslucentPass = renderPass => {\n    if (!model.oglmapper || !model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    model.oglmapper.traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  };\n  publicAPI.traverseOverlayPass = renderPass => {\n    if (!model.oglmapper || !model.renderable || !model.renderable.getNestedVisibility() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    model.oglmapper.traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  };\n  publicAPI.activateTextures = () => {\n    // always traverse textures first, then mapper\n    if (!model.ogltextures) {\n      return;\n    }\n    model.activeTextures = [];\n    for (let index = 0; index < model.ogltextures.length; index++) {\n      const child = model.ogltextures[index];\n      child.render();\n      if (child.getHandle()) {\n        model.activeTextures.push(child);\n      }\n    }\n  };\n\n  // Renders myself\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    if (prepass) {\n      model.context.depthMask(true);\n      publicAPI.activateTextures();\n    } else if (model.activeTextures) {\n      // deactivate textures\n      for (let index = 0; index < model.activeTextures.length; index++) {\n        model.activeTextures[index].deactivate();\n      }\n    }\n  };\n\n  // Renders myself\n  publicAPI.translucentPass = (prepass, renderPass) => {\n    if (prepass) {\n      model.context.depthMask(false);\n      publicAPI.activateTextures();\n    } else if (model.activeTextures) {\n      for (let index = 0; index < model.activeTextures.length; index++) {\n        model.activeTextures[index].deactivate();\n      }\n    }\n  };\n\n  // Renders myself\n  publicAPI.overlayPass = (prepass, renderPass) => {\n    if (prepass) {\n      model.context.depthMask(true);\n      publicAPI.activateTextures();\n    } else if (model.activeTextures) {\n      // deactivate textures\n      for (let index = 0; index < model.activeTextures.length; index++) {\n        model.activeTextures[index].deactivate();\n      }\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  activeTextures: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  // Build VTK API\n  setGet(publicAPI, model, ['context']);\n  get(publicAPI, model, ['activeTextures']);\n\n  // Object methods\n  vtkOpenGLActor2D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkActor2D = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkActor2D', newInstance);\n\nexport { vtkActor2D as default, extend, newInstance };\n","const ObjectType = {\n  ARRAY_BUFFER: 0,\n  ELEMENT_ARRAY_BUFFER: 1,\n  TEXTURE_BUFFER: 2\n};\nvar Constants = {\n  ObjectType\n};\n\nexport { ObjectType, Constants as default };\n","import { m as macro } from '../../macros2.js';\nimport Constants from './BufferObject/Constants.js';\n\nconst {\n  ObjectType\n} = Constants;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst STATIC = {};\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLBufferObject methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLBufferObject(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLBufferObject');\n\n  // Class-specific private functions\n  function convertType(type) {\n    switch (type) {\n      case ObjectType.ELEMENT_ARRAY_BUFFER:\n        return model.context.ELEMENT_ARRAY_BUFFER;\n      case ObjectType.TEXTURE_BUFFER:\n        if ('TEXTURE_BUFFER' in model.context) {\n          return model.context.TEXTURE_BUFFER;\n        }\n      /* eslint-disable no-fallthrough */\n      // Intentional fallthrough in case there is no TEXTURE_BUFFER in WebGL\n      case ObjectType.ARRAY_BUFFER:\n      default:\n        return model.context.ARRAY_BUFFER;\n      /* eslint-enable no-fallthrough */\n    }\n  }\n\n  let internalType = null;\n  let internalHandle = null;\n  let dirty = true;\n  let error = '';\n\n  // Public API methods\n  publicAPI.getType = () => internalType;\n  publicAPI.setType = value => {\n    internalType = value;\n  };\n  publicAPI.getHandle = () => internalHandle;\n  publicAPI.isReady = () => dirty === false;\n  publicAPI.generateBuffer = type => {\n    const objectTypeGL = convertType(type);\n    if (internalHandle === null) {\n      internalHandle = model.context.createBuffer();\n      internalType = type;\n    }\n    return convertType(internalType) === objectTypeGL;\n  };\n  publicAPI.upload = (data, type) => {\n    // buffer, size, type\n    const alreadyGenerated = publicAPI.generateBuffer(type);\n    if (!alreadyGenerated) {\n      error = 'Trying to upload array buffer to incompatible buffer.';\n      return false;\n    }\n    model.context.bindBuffer(convertType(internalType), internalHandle);\n    model.context.bufferData(convertType(internalType), data, model.context.STATIC_DRAW);\n    model.allocatedGPUMemoryInBytes = data.length * data.BYTES_PER_ELEMENT;\n    dirty = false;\n    return true;\n  };\n  publicAPI.bind = () => {\n    if (!internalHandle) {\n      return false;\n    }\n    model.context.bindBuffer(convertType(internalType), internalHandle);\n    return true;\n  };\n  publicAPI.release = () => {\n    if (!internalHandle) {\n      return false;\n    }\n    model.context.bindBuffer(convertType(internalType), null);\n    return true;\n  };\n  publicAPI.releaseGraphicsResources = () => {\n    if (internalHandle !== null) {\n      model.context.bindBuffer(convertType(internalType), null);\n      model.context.deleteBuffer(internalHandle);\n      internalHandle = null;\n      model.allocatedGPUMemoryInBytes = 0;\n    }\n  };\n  publicAPI.setOpenGLRenderWindow = rw => {\n    if (model._openGLRenderWindow === rw) {\n      return;\n    }\n    publicAPI.releaseGraphicsResources();\n    model._openGLRenderWindow = rw;\n    model.context = null;\n    if (rw) {\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n  publicAPI.getError = () => error;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  objectType: ObjectType.ARRAY_BUFFER,\n  // _openGLRenderWindow: null,\n  context: null,\n  allocatedGPUMemoryInBytes: 0\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['_openGLRenderWindow', 'allocatedGPUMemoryInBytes']);\n  macro.moveToProtected(publicAPI, model, ['openGLRenderWindow']);\n  vtkOpenGLBufferObject(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkBufferObject = {\n  newInstance,\n  extend,\n  ...STATIC,\n  ...Constants\n};\n\nexport { STATIC, vtkBufferObject as default, extend, newInstance };\n","const Shading = {\n  FLAT: 0,\n  GOURAUD: 1,\n  PHONG: 2\n};\nconst Representation = {\n  POINTS: 0,\n  WIREFRAME: 1,\n  SURFACE: 2\n};\nconst Interpolation = Shading;\nvar PropertyConst = {\n  Shading,\n  Representation,\n  Interpolation\n};\n\nexport { Interpolation, Representation, Shading, PropertyConst as default };\n","import { vec3, mat4, quat } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkBufferObject from './BufferObject.js';\nimport { ObjectType } from './BufferObject/Constants.js';\nimport { Representation } from '../Core/Property/Constants.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Static functions\n// ----------------------------------------------------------------------------\n\nfunction computeInverseShiftAndScaleMatrix(coordShift, coordScale) {\n  const inverseScale = new Float64Array(3);\n  vec3.inverse(inverseScale, coordScale);\n  const matrix = new Float64Array(16);\n  mat4.fromRotationTranslationScale(matrix, quat.create(), coordShift, inverseScale);\n  return matrix;\n}\nfunction shouldApplyCoordShiftAndScale(coordShift, coordScale) {\n  if (coordShift === null || coordScale === null) {\n    return false;\n  }\n  return !(vec3.exactEquals(coordShift, [0, 0, 0]) && vec3.exactEquals(coordScale, [1, 1, 1]));\n}\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLCellArrayBufferObject methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLCellArrayBufferObject(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLCellArrayBufferObject');\n  publicAPI.setType(ObjectType.ARRAY_BUFFER);\n  publicAPI.createVBO = function (cellArray, inRep, outRep, options) {\n    let selectionMaps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    if (!cellArray.getData() || !cellArray.getData().length) {\n      model.elementCount = 0;\n      return 0;\n    }\n\n    // Figure out how big each block will be, currently 6 or 7 floats.\n    model.blockSize = 3;\n    model.vertexOffset = 0;\n    model.normalOffset = 0;\n    model.tCoordOffset = 0;\n    model.tCoordComponents = 0;\n    model.colorComponents = 0;\n    model.colorOffset = 0;\n    model.customData = [];\n    const pointData = options.points.getData();\n    let normalData = null;\n    let tcoordData = null;\n    let colorData = null;\n    const colorComponents = options.colors ? options.colors.getNumberOfComponents() : 0;\n    const textureComponents = options.tcoords ? options.tcoords.getNumberOfComponents() : 0;\n\n    // the values of 4 below are because floats are 4 bytes\n\n    if (options.normals) {\n      model.normalOffset = 4 * model.blockSize;\n      model.blockSize += 3;\n      normalData = options.normals.getData();\n    }\n    if (options.customAttributes) {\n      options.customAttributes.forEach(a => {\n        if (a) {\n          model.customData.push({\n            data: a.getData(),\n            offset: 4 * model.blockSize,\n            components: a.getNumberOfComponents(),\n            name: a.getName()\n          });\n          model.blockSize += a.getNumberOfComponents();\n        }\n      });\n    }\n    if (options.tcoords) {\n      model.tCoordOffset = 4 * model.blockSize;\n      model.tCoordComponents = textureComponents;\n      model.blockSize += textureComponents;\n      tcoordData = options.tcoords.getData();\n    }\n    if (options.colors) {\n      model.colorComponents = options.colors.getNumberOfComponents();\n      model.colorOffset = 0;\n      colorData = options.colors.getData();\n      if (!model.colorBO) {\n        model.colorBO = vtkBufferObject.newInstance();\n      }\n      model.colorBO.setOpenGLRenderWindow(model._openGLRenderWindow);\n    } else {\n      model.colorBO = null;\n    }\n    model.stride = 4 * model.blockSize;\n    let pointIdx = 0;\n    let normalIdx = 0;\n    let tcoordIdx = 0;\n    let colorIdx = 0;\n    let custIdx = 0;\n    let cellCount = 0;\n    let addAPoint;\n    const cellBuilders = {\n      // easy, every input point becomes an output point\n      anythingToPoints(numPoints, cellPts, offset, cellId) {\n        for (let i = 0; i < numPoints; ++i) {\n          addAPoint(cellPts[offset + i], cellId);\n        }\n      },\n      linesToWireframe(numPoints, cellPts, offset, cellIdx) {\n        // for lines we add a bunch of segments\n        for (let i = 0; i < numPoints - 1; ++i) {\n          addAPoint(cellPts[offset + i], cellIdx);\n          addAPoint(cellPts[offset + i + 1], cellIdx);\n        }\n      },\n      polysToWireframe(numPoints, cellPts, offset, cellIdx) {\n        // for polys we add a bunch of segments and close it\n        if (numPoints > 2) {\n          for (let i = 0; i < numPoints; ++i) {\n            addAPoint(cellPts[offset + i], cellIdx);\n            addAPoint(cellPts[offset + (i + 1) % numPoints], cellIdx);\n          }\n        }\n      },\n      stripsToWireframe(numPoints, cellPts, offset, cellIdx) {\n        if (numPoints > 2) {\n          // for strips we add a bunch of segments and close it\n          for (let i = 0; i < numPoints - 1; ++i) {\n            addAPoint(cellPts[offset + i], cellIdx);\n            addAPoint(cellPts[offset + i + 1], cellIdx);\n          }\n          for (let i = 0; i < numPoints - 2; i++) {\n            addAPoint(cellPts[offset + i], cellIdx);\n            addAPoint(cellPts[offset + i + 2], cellIdx);\n          }\n        }\n      },\n      polysToSurface(npts, cellPts, offset, cellIdx) {\n        for (let i = 0; i < npts - 2; i++) {\n          addAPoint(cellPts[offset + 0], cellIdx);\n          addAPoint(cellPts[offset + i + 1], cellIdx);\n          addAPoint(cellPts[offset + i + 2], cellIdx);\n        }\n      },\n      stripsToSurface(npts, cellPts, offset, cellIdx) {\n        for (let i = 0; i < npts - 2; i++) {\n          addAPoint(cellPts[offset + i], cellIdx);\n          addAPoint(cellPts[offset + i + 1 + i % 2], cellIdx);\n          addAPoint(cellPts[offset + i + 1 + (i + 1) % 2], cellIdx);\n        }\n      }\n    };\n    const cellCounters = {\n      // easy, every input point becomes an output point\n      anythingToPoints(numPoints, cellPts) {\n        return numPoints;\n      },\n      linesToWireframe(numPoints, cellPts) {\n        if (numPoints > 1) {\n          return (numPoints - 1) * 2;\n        }\n        return 0;\n      },\n      polysToWireframe(numPoints, cellPts) {\n        if (numPoints > 2) {\n          return numPoints * 2;\n        }\n        return 0;\n      },\n      stripsToWireframe(numPoints, cellPts) {\n        if (numPoints > 2) {\n          return numPoints * 4 - 6;\n        }\n        return 0;\n      },\n      polysToSurface(npts, cellPts) {\n        if (npts > 2) {\n          return (npts - 2) * 3;\n        }\n        return 0;\n      },\n      stripsToSurface(npts, cellPts, offset) {\n        if (npts > 2) {\n          return (npts - 2) * 3;\n        }\n        return 0;\n      }\n    };\n    let func = null;\n    let countFunc = null;\n    if (outRep === Representation.POINTS || inRep === 'verts') {\n      func = cellBuilders.anythingToPoints;\n      countFunc = cellCounters.anythingToPoints;\n    } else if (outRep === Representation.WIREFRAME || inRep === 'lines') {\n      func = cellBuilders[`${inRep}ToWireframe`];\n      countFunc = cellCounters[`${inRep}ToWireframe`];\n    } else {\n      func = cellBuilders[`${inRep}ToSurface`];\n      countFunc = cellCounters[`${inRep}ToSurface`];\n    }\n    const array = cellArray.getData();\n    const size = array.length;\n    let caboCount = 0;\n    for (let index = 0; index < size;) {\n      caboCount += countFunc(array[index], array);\n      index += array[index] + 1;\n    }\n    let packedUCVBO = null;\n    const packedVBO = new Float32Array(caboCount * model.blockSize);\n    if (colorData) {\n      packedUCVBO = new Uint8Array(caboCount * 4);\n    }\n    let vboidx = 0;\n    let ucidx = 0;\n\n    // Find out if shift scale should be used\n    // Compute squares of diagonal size and distance from the origin\n    let diagSq = 0.0;\n    let distSq = 0.0;\n    for (let i = 0; i < 3; ++i) {\n      const range = options.points.getRange(i);\n      const delta = range[1] - range[0];\n      diagSq += delta * delta;\n      const distShift = 0.5 * (range[1] + range[0]);\n      distSq += distShift * distShift;\n    }\n    const useShiftAndScale = diagSq > 0 && (Math.abs(distSq) / diagSq > 1.0e6 ||\n    // If data is far from the origin relative to its size\n    Math.abs(Math.log10(diagSq)) > 3.0 ||\n    // If the size is huge when not far from the origin\n    diagSq === 0 && distSq > 1.0e6); // If data is a point, but far from the origin\n\n    if (useShiftAndScale) {\n      // Compute shift and scale vectors\n      const coordShift = new Float64Array(3);\n      const coordScale = new Float64Array(3);\n      for (let i = 0; i < 3; ++i) {\n        const range = options.points.getRange(i);\n        const delta = range[1] - range[0];\n        coordShift[i] = 0.5 * (range[1] + range[0]);\n        coordScale[i] = delta > 0 ? 1.0 / delta : 1.0;\n      }\n      publicAPI.setCoordShiftAndScale(coordShift, coordScale);\n    } else if (model.coordShiftAndScaleEnabled === true) {\n      // Make sure to reset\n      publicAPI.setCoordShiftAndScale(null, null);\n    }\n\n    // Initialize the structures used to keep track of point ids and cell ids for selectors\n    if (selectionMaps) {\n      if (!selectionMaps.points && !selectionMaps.cells) {\n        selectionMaps.points = new Int32Array(caboCount);\n        selectionMaps.cells = new Int32Array(caboCount);\n      } else {\n        const newPoints = new Int32Array(caboCount + selectionMaps.points.length);\n        newPoints.set(selectionMaps.points);\n        selectionMaps.points = newPoints;\n        const newCells = new Int32Array(caboCount + selectionMaps.cells.length);\n        newCells.set(selectionMaps.cells);\n        selectionMaps.cells = newCells;\n      }\n    }\n    let pointCount = options.vertexOffset;\n    addAPoint = function addAPointFunc(pointId, cellId) {\n      // Keep track of original point and cell ids, for selection\n      if (selectionMaps) {\n        selectionMaps.points[pointCount] = pointId;\n        selectionMaps.cells[pointCount] = cellCount + options.cellOffset;\n      }\n      ++pointCount;\n\n      // Vertices\n      pointIdx = pointId * 3;\n      if (!model.coordShiftAndScaleEnabled) {\n        packedVBO[vboidx++] = pointData[pointIdx++];\n        packedVBO[vboidx++] = pointData[pointIdx++];\n        packedVBO[vboidx++] = pointData[pointIdx++];\n      } else {\n        // Apply shift and scale\n        packedVBO[vboidx++] = (pointData[pointIdx++] - model.coordShift[0]) * model.coordScale[0];\n        packedVBO[vboidx++] = (pointData[pointIdx++] - model.coordShift[1]) * model.coordScale[1];\n        packedVBO[vboidx++] = (pointData[pointIdx++] - model.coordShift[2]) * model.coordScale[2];\n      }\n      if (normalData !== null) {\n        if (options.haveCellNormals) {\n          normalIdx = (cellCount + options.cellOffset) * 3;\n        } else {\n          normalIdx = pointId * 3;\n        }\n        packedVBO[vboidx++] = normalData[normalIdx++];\n        packedVBO[vboidx++] = normalData[normalIdx++];\n        packedVBO[vboidx++] = normalData[normalIdx++];\n      }\n      model.customData.forEach(attr => {\n        custIdx = pointId * attr.components;\n        for (let j = 0; j < attr.components; ++j) {\n          packedVBO[vboidx++] = attr.data[custIdx++];\n        }\n      });\n      if (tcoordData !== null) {\n        if (options.useTCoordsPerCell) {\n          tcoordIdx = cellId * textureComponents;\n        } else {\n          tcoordIdx = pointId * textureComponents;\n        }\n        for (let j = 0; j < textureComponents; ++j) {\n          packedVBO[vboidx++] = tcoordData[tcoordIdx++];\n        }\n      }\n      if (colorData !== null) {\n        if (options.haveCellScalars) {\n          colorIdx = (cellCount + options.cellOffset) * colorComponents;\n        } else {\n          colorIdx = pointId * colorComponents;\n        }\n        packedUCVBO[ucidx++] = colorData[colorIdx++];\n        packedUCVBO[ucidx++] = colorData[colorIdx++];\n        packedUCVBO[ucidx++] = colorData[colorIdx++];\n        packedUCVBO[ucidx++] = colorComponents === 4 ? colorData[colorIdx++] : 255;\n      }\n    };\n\n    // Browse the cell array: the index is at the beginning of a cell\n    // The value of 'array' at the position 'index' is the number of points in the cell\n    for (let index = 0; index < size; index += array[index] + 1, cellCount++) {\n      func(array[index], array, index + 1, cellCount + options.cellOffset);\n    }\n    model.elementCount = caboCount;\n    publicAPI.upload(packedVBO, ObjectType.ARRAY_BUFFER);\n    if (model.colorBO) {\n      model.colorBOStride = 4;\n      model.colorBO.upload(packedUCVBO, ObjectType.ARRAY_BUFFER);\n    }\n    return cellCount;\n  };\n  publicAPI.setCoordShiftAndScale = (coordShift, coordScale) => {\n    if (coordShift !== null && (coordShift.constructor !== Float64Array || coordShift.length !== 3)) {\n      vtkErrorMacro('Wrong type for coordShift, expected vec3 or null');\n      return;\n    }\n    if (coordScale !== null && (coordScale.constructor !== Float64Array || coordScale.length !== 3)) {\n      vtkErrorMacro('Wrong type for coordScale, expected vec3 or null');\n      return;\n    }\n    if (model.coordShift === null || coordShift === null || !vec3.equals(coordShift, model.coordShift)) {\n      model.coordShift = coordShift;\n    }\n    if (model.coordScale === null || coordScale === null || !vec3.equals(coordScale, model.coordScale)) {\n      model.coordScale = coordScale;\n    }\n    model.coordShiftAndScaleEnabled = shouldApplyCoordShiftAndScale(model.coordShift, model.coordScale);\n    if (model.coordShiftAndScaleEnabled) {\n      model.inverseShiftAndScaleMatrix = computeInverseShiftAndScaleMatrix(model.coordShift, model.coordScale);\n    } else {\n      model.inverseShiftAndScaleMatrix = null;\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  elementCount: 0,\n  stride: 0,\n  colorBOStride: 0,\n  vertexOffset: 0,\n  normalOffset: 0,\n  tCoordOffset: 0,\n  tCoordComponents: 0,\n  colorOffset: 0,\n  colorComponents: 0,\n  tcoordBO: null,\n  customData: [],\n  coordShift: null,\n  coordScale: null,\n  coordShiftAndScaleEnabled: false,\n  inverseShiftAndScaleMatrix: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkBufferObject.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['colorBO', 'elementCount', 'stride', 'colorBOStride', 'vertexOffset', 'normalOffset', 'tCoordOffset', 'tCoordComponents', 'colorOffset', 'colorComponents', 'customData']);\n  macro.get(publicAPI, model, ['coordShift', 'coordScale', 'coordShiftAndScaleEnabled', 'inverseShiftAndScaleMatrix']);\n\n  // Object specific methods\n  vtkOpenGLCellArrayBufferObject(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkCellArrayBufferObject = {\n  newInstance,\n  extend\n};\n\nexport { vtkCellArrayBufferObject as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// export const SHADER_TYPES = ['Vertex', 'Fragment', 'Geometry', 'Unknown'];\n\n// ----------------------------------------------------------------------------\n// vtkShader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkShader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkShader');\n  publicAPI.compile = () => {\n    let stype = model.context.VERTEX_SHADER;\n    if (!model.source || !model.source.length || model.shaderType === 'Unknown') {\n      return false;\n    }\n\n    // Ensure we delete the previous shader if necessary.\n    if (model.handle !== 0) {\n      model.context.deleteShader(model.handle);\n      model.handle = 0;\n    }\n    switch (model.shaderType) {\n      // case vtkShader::Geometry:\n      //   type = GL_GEOMETRY_SHADER;\n      //   break;\n      case 'Fragment':\n        stype = model.context.FRAGMENT_SHADER;\n        break;\n      case 'Vertex':\n      default:\n        stype = model.context.VERTEX_SHADER;\n        break;\n    }\n    model.handle = model.context.createShader(stype);\n    model.context.shaderSource(model.handle, model.source);\n    model.context.compileShader(model.handle);\n    const isCompiled = model.context.getShaderParameter(model.handle, model.context.COMPILE_STATUS);\n    if (!isCompiled) {\n      const lastError = model.context.getShaderInfoLog(model.handle);\n      vtkErrorMacro(`Error compiling shader '${model.source}': ${lastError}`);\n      model.context.deleteShader(model.handle);\n      model.handle = 0;\n      return false;\n    }\n\n    // The shader compiled, store its handle and return success.\n    return true;\n  };\n  publicAPI.cleanup = () => {\n    if (model.shaderType === 'Unknown' || model.handle === 0) {\n      return;\n    }\n    model.context.deleteShader(model.handle);\n    model.handle = 0;\n    model.dirty = true;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  shaderType: 'Unknown',\n  source: '',\n  error: '',\n  handle: 0,\n  dirty: false,\n  context: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['shaderType', 'source', 'error', 'handle', 'context']);\n\n  // Object methods\n  vtkShader(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkShader');\n\n// ----------------------------------------------------------------------------\n\nvar vtkShader$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkShader$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkShader from './Shader.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// perform in place string substitutions, indicate if a substitution was done\n// this is useful for building up shader strings which typically involve\n// lots of string substitutions. Return true if a substitution was done.\nfunction substitute(source, search, replace, all) {\n  // We only accept strings or array of strings, typeof is faster than Array.isArray\n  const replaceStr = typeof replace === 'string' ? replace : replace.join('\\n');\n\n  // We don't need to instantiate a RegExp if we don't want a global substitution.\n  // In all other cases, we need to take the provided string or RegExp and\n  // instantiate a new one to add the `g` flag.\n  // Argument defaults are transpiled to slow `arguments`-based operations\n  // better assume undefined as flag to know if the value is set or not\n  const replaceSearch = all === false ? search : new RegExp(search, 'g');\n  const resultstr = source.replace(replaceSearch, replaceStr);\n  return {\n    // If the result is different than the input, we did perform a replacement\n    replace: resultstr !== replaceStr,\n    result: resultstr\n  };\n}\n\n// ----------------------------------------------------------------------------\n// vtkShaderProgram methods\n// ----------------------------------------------------------------------------\n\nfunction vtkShaderProgram(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkShaderProgram');\n  publicAPI.compileShader = () => {\n    if (!model.vertexShader.compile()) {\n      vtkErrorMacro(model.vertexShader.getSource().split('\\n').map((line, index) => `${index}: ${line}`).join('\\n'));\n      vtkErrorMacro(model.vertexShader.getError());\n      return 0;\n    }\n    if (!model.fragmentShader.compile()) {\n      vtkErrorMacro(model.fragmentShader.getSource().split('\\n').map((line, index) => `${index}: ${line}`).join('\\n'));\n      vtkErrorMacro(model.fragmentShader.getError());\n      return 0;\n    }\n    // skip geometry for now\n    if (!publicAPI.attachShader(model.vertexShader)) {\n      vtkErrorMacro(model.error);\n      return 0;\n    }\n    if (!publicAPI.attachShader(model.fragmentShader)) {\n      vtkErrorMacro(model.error);\n      return 0;\n    }\n    if (!publicAPI.link()) {\n      vtkErrorMacro(`Links failed: ${model.error}`);\n      return 0;\n    }\n    publicAPI.setCompiled(true);\n    return 1;\n  };\n  publicAPI.cleanup = () => {\n    if (model.shaderType === 'Unknown' || model.handle === 0) {\n      return;\n    }\n    publicAPI.release();\n    if (model.vertexShaderHandle !== 0) {\n      model.context.detachShader(model.handle, model.vertexShaderHandle);\n      model.vertexShaderHandle = 0;\n    }\n    if (model.fragmentShaderHandle !== 0) {\n      model.context.detachShader(model.handle, model.fragmentShaderHandle);\n      model.fragmentShaderHandle = 0;\n    }\n    model.context.deleteProgram(model.handle);\n    model.handle = 0;\n    publicAPI.setCompiled(false);\n  };\n  publicAPI.bind = () => {\n    if (!model.linked && !publicAPI.link()) {\n      return false;\n    }\n    model.context.useProgram(model.handle);\n    publicAPI.setBound(true);\n    return true;\n  };\n  publicAPI.isBound = () => !!model.bound;\n  publicAPI.release = () => {\n    model.context.useProgram(null);\n    publicAPI.setBound(false);\n  };\n  publicAPI.setContext = ctx => {\n    model.vertexShader.setContext(ctx);\n    model.fragmentShader.setContext(ctx);\n    model.geometryShader.setContext(ctx);\n  };\n  publicAPI.link = () => {\n    if (model.linked) {\n      return true;\n    }\n    if (model.handle === 0) {\n      model.error = 'Program has not been initialized, and/or does not have shaders.';\n      return false;\n    }\n\n    // clear out the list of uniforms used\n    model.uniformLocs = {};\n    model.context.linkProgram(model.handle);\n    const isCompiled = model.context.getProgramParameter(model.handle, model.context.LINK_STATUS);\n    if (!isCompiled) {\n      const lastError = model.context.getProgramInfoLog(model.handle);\n      vtkErrorMacro(`Error linking shader ${lastError}`);\n      model.handle = 0;\n      return false;\n    }\n    publicAPI.setLinked(true);\n    model.attributeLocs = {};\n    return true;\n  };\n  publicAPI.setUniformMatrix = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    const f32 = new Float32Array(v);\n    model.context.uniformMatrix4fv(location, false, f32);\n    return true;\n  };\n  publicAPI.setUniformMatrix3x3 = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    const f32 = new Float32Array(v);\n    model.context.uniformMatrix3fv(location, false, f32);\n    return true;\n  };\n  publicAPI.setUniformf = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniform1f(location, v);\n    return true;\n  };\n  publicAPI.setUniformfv = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniform1fv(location, v);\n    return true;\n  };\n  publicAPI.setUniformi = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniform1i(location, v);\n    return true;\n  };\n  publicAPI.setUniformiv = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniform1iv(location, v);\n    return true;\n  };\n  publicAPI.setUniform2f = (name, v1, v2) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    if (v2 === undefined) {\n      throw new RangeError('Invalid number of values for array');\n    }\n    model.context.uniform2f(location, v1, v2);\n    return true;\n  };\n  publicAPI.setUniform2fv = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniform2fv(location, v);\n    return true;\n  };\n  publicAPI.setUniform2i = (name, v1, v2) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    if (v2 === undefined) {\n      throw new RangeError('Invalid number of values for array');\n    }\n    model.context.uniform2i(location, v1, v2);\n    return true;\n  };\n  publicAPI.setUniform2iv = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniform2iv(location, v);\n    return true;\n  };\n  publicAPI.setUniform3f = (name, a1, a2, a3) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    if (a3 === undefined) {\n      throw new RangeError('Invalid number of values for array');\n    }\n    model.context.uniform3f(location, a1, a2, a3);\n    return true;\n  };\n  publicAPI.setUniform3fArray = (name, a) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    if (!Array.isArray(a) || a.length !== 3) {\n      throw new RangeError('Invalid number of values for array');\n    }\n    model.context.uniform3f(location, a[0], a[1], a[2]);\n    return true;\n  };\n  publicAPI.setUniform3fv = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniform3fv(location, v);\n    return true;\n  };\n  publicAPI.setUniform3i = function (name) {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    let array = args;\n    // allow an array passed as a single argument\n    if (array.length === 1 && Array.isArray(array[0])) {\n      array = array[0];\n    }\n    if (array.length !== 3) {\n      throw new RangeError('Invalid number of values for array');\n    }\n    model.context.uniform3i(location, array[0], array[1], array[2]);\n    return true;\n  };\n  publicAPI.setUniform3iv = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniform3iv(location, v);\n    return true;\n  };\n  publicAPI.setUniform4f = function (name) {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n    let array = args;\n    // allow an array passed as a single argument\n    if (array.length === 1 && Array.isArray(array[0])) {\n      array = array[0];\n    }\n    if (array.length !== 4) {\n      throw new RangeError('Invalid number of values for array');\n    }\n    model.context.uniform4f(location, array[0], array[1], array[2], array[3]);\n    return true;\n  };\n  publicAPI.setUniform4fv = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniform4fv(location, v);\n    return true;\n  };\n  publicAPI.setUniform4i = function (name) {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n    let array = args;\n    // allow an array passed as a single argument\n    if (array.length === 1 && Array.isArray(array[0])) {\n      array = array[0];\n    }\n    if (array.length !== 4) {\n      throw new RangeError('Invalid number of values for array');\n    }\n    model.context.uniform4i(location, array[0], array[1], array[2], array[3]);\n    return true;\n  };\n  publicAPI.setUniform4iv = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniform4iv(location, v);\n    return true;\n  };\n  publicAPI.findUniform = name => {\n    if (!name || !model.linked) {\n      return -1;\n    }\n\n    // see if we have cached the result\n    let loc = model.uniformLocs[name];\n    if (loc !== undefined) {\n      return loc;\n    }\n    loc = model.context.getUniformLocation(model.handle, name);\n    if (loc === null) {\n      model.error = `Uniform ${name} not found in current shader program.`;\n      model.uniformLocs[name] = -1;\n      return -1;\n    }\n    model.uniformLocs[name] = loc;\n    return loc;\n  };\n  publicAPI.isUniformUsed = name => {\n    if (!name) {\n      return false;\n    }\n\n    // see if we have cached the result\n    let loc = model.uniformLocs[name];\n    if (loc !== undefined) {\n      return loc !== null;\n    }\n    if (!model.linked) {\n      vtkErrorMacro('attempt to find uniform when the shader program is not linked');\n      return false;\n    }\n    loc = model.context.getUniformLocation(model.handle, name);\n    model.uniformLocs[name] = loc;\n    if (loc === null) {\n      return false;\n    }\n    return true;\n  };\n  publicAPI.isAttributeUsed = name => {\n    if (!name) {\n      return false;\n    }\n\n    // see if we have cached the result\n    if (name in model.attributeLocs) {\n      return true;\n    }\n    if (!model.linked) {\n      vtkErrorMacro('attempt to find uniform when the shader program is not linked');\n      return false;\n    }\n    const loc = model.context.getAttribLocation(model.handle, name);\n    if (loc === -1) {\n      return false;\n    }\n    model.attributeLocs[name] = loc;\n    return true;\n  };\n  publicAPI.attachShader = shader => {\n    if (shader.getHandle() === 0) {\n      model.error = 'Shader object was not initialized, cannot attach it.';\n      return false;\n    }\n    if (shader.getShaderType() === 'Unknown') {\n      model.error = 'Shader object is of type Unknown and cannot be used.';\n      return false;\n    }\n    if (model.handle === 0) {\n      const thandle = model.context.createProgram();\n      if (thandle === 0) {\n        model.error = 'Could not create shader program.';\n        return false;\n      }\n      model.handle = thandle;\n      model.linked = false;\n    }\n    if (shader.getShaderType() === 'Vertex') {\n      if (model.vertexShaderHandle !== 0) {\n        model.context.detachShader(model.handle, model.vertexShaderHandle);\n      }\n      model.vertexShaderHandle = shader.getHandle();\n    }\n    if (shader.getShaderType() === 'Fragment') {\n      if (model.fragmentShaderHandle !== 0) {\n        model.context.detachShader(model.handle, model.fragmentShaderHandle);\n      }\n      model.fragmentShaderHandle = shader.getHandle();\n    }\n    model.context.attachShader(model.handle, shader.getHandle());\n    publicAPI.setLinked(false);\n    return true;\n  };\n  publicAPI.detachShader = shader => {\n    if (shader.getHandle() === 0) {\n      model.error = 'shader object was not initialized, cannot attach it.';\n      return false;\n    }\n    if (shader.getShaderType() === 'Unknown') {\n      model.error = 'Shader object is of type Unknown and cannot be used.';\n      return false;\n    }\n    if (model.handle === 0) {\n      model.error = 'This shader program has not been initialized yet.';\n    }\n    switch (shader.getShaderType()) {\n      case 'Vertex':\n        if (model.vertexShaderHandle !== shader.getHandle()) {\n          model.error = 'The supplied shader was not attached to this program.';\n          return false;\n        }\n        model.context.detachShader(model.handle, shader.getHandle());\n        model.vertexShaderHandle = 0;\n        model.linked = false;\n        return true;\n      case 'Fragment':\n        if (model.fragmentShaderHandle !== shader.getHandle()) {\n          model.error = 'The supplied shader was not attached to this program.';\n          return false;\n        }\n        model.context.detachShader(model.handle, shader.getHandle());\n        model.fragmentShaderHandle = 0;\n        model.linked = false;\n        return true;\n      default:\n        return false;\n    }\n  };\n  publicAPI.setContext = ctx => {\n    model.context = ctx;\n    model.vertexShader.setContext(ctx);\n    model.fragmentShader.setContext(ctx);\n    model.geometryShader.setContext(ctx);\n  };\n  publicAPI.setLastCameraMTime = mtime => {\n    model.lastCameraMTime = mtime;\n  };\n\n  // publicAPI.enableAttributeArray = (name) => {\n  //   const location = publicAPI.findAttributeArray(name);\n  //   if (location === -1) {\n  //     model.error = `Could not enable attribute ${name} No such attribute.`;\n  //     return false;\n  //   }\n  //   model.context.enableVertexAttribArray(location);\n  //   return true;\n  // };\n\n  // publicAPI.disableAttributeArray = (name) => {\n  //   const location = publicAPI.findAttributeArray(name);\n  //   if (location === -1) {\n  //     model.error = `Could not enable attribute ${name} No such attribute.`;\n  //     return false;\n  //   }\n  //   model.context.disableVertexAttribArray(location);\n  //   return true;\n  // };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  vertexShaderHandle: 0,\n  fragmentShaderHandle: 0,\n  geometryShaderHandle: 0,\n  vertexShader: null,\n  fragmentShader: null,\n  geometryShader: null,\n  linked: false,\n  bound: false,\n  compiled: false,\n  error: '',\n  handle: 0,\n  numberOfOutputs: 0,\n  attributesLocs: null,\n  uniformLocs: null,\n  md5Hash: 0,\n  context: null,\n  lastCameraMTime: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Instantiate internal objects\n  model.attributesLocs = {};\n  model.uniformLocs = {};\n  model.vertexShader = vtkShader.newInstance();\n  model.vertexShader.setShaderType('Vertex');\n  model.fragmentShader = vtkShader.newInstance();\n  model.fragmentShader.setShaderType('Fragment');\n  model.geometryShader = vtkShader.newInstance();\n  model.geometryShader.setShaderType('Geometry');\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['lastCameraMTime']);\n  macro.setGet(publicAPI, model, ['error', 'handle', 'compiled', 'bound', 'md5Hash', 'vertexShader', 'fragmentShader', 'geometryShader', 'linked']);\n\n  // Object methods\n  vtkShaderProgram(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkShaderProgram');\n\n// ----------------------------------------------------------------------------\n\nvar vtkShaderProgram$1 = {\n  newInstance,\n  extend,\n  substitute\n};\n\nexport { vtkShaderProgram$1 as default, substitute };\n","import { m as macro } from '../../macros2.js';\nimport { ObjectType } from './BufferObject/Constants.js';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLVertexArrayObject methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLVertexArrayObject(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLVertexArrayObject');\n\n  // Public API methods\n  publicAPI.exposedMethod = () => {\n    // This is a publicly exposed method of this object\n  };\n  publicAPI.initialize = () => {\n    model.instancingExtension = null;\n    if (!model._openGLRenderWindow.getWebgl2()) {\n      model.instancingExtension = model.context.getExtension('ANGLE_instanced_arrays');\n    }\n    if (!model.forceEmulation && model._openGLRenderWindow && model._openGLRenderWindow.getWebgl2()) {\n      model.extension = null;\n      model.supported = true;\n      model.handleVAO = model.context.createVertexArray();\n    } else {\n      model.extension = model.context.getExtension('OES_vertex_array_object');\n      // Start setting up VAO\n      if (!model.forceEmulation && model.extension) {\n        model.supported = true;\n        model.handleVAO = model.extension.createVertexArrayOES();\n      } else {\n        model.supported = false;\n      }\n    }\n  };\n  publicAPI.isReady = () =>\n  // We either probed and allocated a VAO, or are falling back as the current\n  // hardware does not support VAOs.\n  model.handleVAO !== 0 || model.supported === false;\n  publicAPI.bind = () => {\n    // Either simply bind the VAO, or emulate behavior by binding all attributes.\n    if (!publicAPI.isReady()) {\n      publicAPI.initialize();\n    }\n    if (publicAPI.isReady() && model.supported) {\n      if (model.extension) {\n        model.extension.bindVertexArrayOES(model.handleVAO);\n      } else {\n        model.context.bindVertexArray(model.handleVAO);\n      }\n    } else if (publicAPI.isReady()) {\n      const gl = model.context;\n      for (let ibuff = 0; ibuff < model.buffers.length; ++ibuff) {\n        const buff = model.buffers[ibuff];\n        model.context.bindBuffer(gl.ARRAY_BUFFER, buff.buffer);\n        for (let iatt = 0; iatt < buff.attributes.length; ++iatt) {\n          const attrIt = buff.attributes[iatt];\n          const matrixCount = attrIt.isMatrix ? attrIt.size : 1;\n          for (let i = 0; i < matrixCount; ++i) {\n            gl.enableVertexAttribArray(attrIt.index + i);\n            gl.vertexAttribPointer(attrIt.index + i, attrIt.size, attrIt.type, attrIt.normalize, attrIt.stride, attrIt.offset + attrIt.stride * i / attrIt.size);\n            if (attrIt.divisor > 0) {\n              if (model.instancingExtension) {\n                model.instancingExtension.vertexAttribDivisorANGLE(attrIt.index + i, 1);\n              } else {\n                gl.vertexAttribDivisor(attrIt.index + i, 1);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  publicAPI.release = () => {\n    // Either simply release the VAO, or emulate behavior by releasing all attributes.\n    if (publicAPI.isReady() && model.supported) {\n      if (model.extension) {\n        model.extension.bindVertexArrayOES(null);\n      } else {\n        model.context.bindVertexArray(null);\n      }\n    } else if (publicAPI.isReady()) {\n      const gl = model.context;\n      for (let ibuff = 0; ibuff < model.buffers.length; ++ibuff) {\n        const buff = model.buffers[ibuff];\n        model.context.bindBuffer(gl.ARRAY_BUFFER, buff.buffer);\n        for (let iatt = 0; iatt < buff.attributes.length; ++iatt) {\n          const attrIt = buff.attributes[iatt];\n          const matrixCount = attrIt.isMatrix ? attrIt.size : 1;\n          for (let i = 0; i < matrixCount; ++i) {\n            gl.enableVertexAttribArray(attrIt.index + i);\n            gl.vertexAttribPointer(attrIt.index + i, attrIt.size, attrIt.type, attrIt.normalize, attrIt.stride, attrIt.offset + attrIt.stride * i / attrIt.size);\n            if (attrIt.divisor > 0) {\n              if (model.instancingExtension) {\n                model.instancingExtension.vertexAttribDivisorANGLE(attrIt.index + i, 0);\n              } else {\n                gl.vertexAttribDivisor(attrIt.index + i, 0);\n              }\n            }\n            gl.disableVertexAttribArray(attrIt.index + i);\n          }\n        }\n      }\n    }\n  };\n  publicAPI.shaderProgramChanged = () => {\n    publicAPI.release();\n    if (model.handleVAO) {\n      if (model.extension) {\n        model.extension.deleteVertexArrayOES(model.handleVAO);\n      } else {\n        model.context.deleteVertexArray(model.handleVAO);\n      }\n    }\n    model.handleVAO = 0;\n    model.handleProgram = 0;\n  };\n  publicAPI.releaseGraphicsResources = () => {\n    publicAPI.shaderProgramChanged();\n    if (model.handleVAO) {\n      if (model.extension) {\n        model.extension.deleteVertexArrayOES(model.handleVAO);\n      } else {\n        model.context.deleteVertexArray(model.handleVAO);\n      }\n    }\n    model.handleVAO = 0;\n    model.supported = true;\n    model.handleProgram = 0;\n  };\n  publicAPI.addAttributeArray = (program, buffer, name, offset, stride, elementType, elementTupleSize, normalize) => publicAPI.addAttributeArrayWithDivisor(program, buffer, name, offset, stride, elementType, elementTupleSize, normalize, 0, false);\n  publicAPI.addAttributeArrayWithDivisor = (program, buffer, name, offset, stride, elementType, elementTupleSize, normalize, divisor, isMatrix) => {\n    if (!program) {\n      return false;\n    }\n\n    // Check the program is bound, and the buffer is valid.\n    if (!program.isBound() || buffer.getHandle() === 0 || buffer.getType() !== ObjectType.ARRAY_BUFFER) {\n      return false;\n    }\n\n    // Perform initialization if necessary, ensure program matches VAOs.\n    if (model.handleProgram === 0) {\n      model.handleProgram = program.getHandle();\n    }\n    if (!publicAPI.isReady()) {\n      publicAPI.initialize();\n    }\n    if (!publicAPI.isReady() || model.handleProgram !== program.getHandle()) {\n      return false;\n    }\n    const gl = model.context;\n    const attribs = {};\n    attribs.name = name;\n    attribs.index = gl.getAttribLocation(model.handleProgram, name);\n    attribs.offset = offset;\n    attribs.stride = stride;\n    attribs.type = elementType;\n    attribs.size = elementTupleSize;\n    attribs.normalize = normalize;\n    attribs.isMatrix = isMatrix;\n    attribs.divisor = divisor;\n    if (attribs.Index === -1) {\n      return false;\n    }\n\n    // Always make the call as even the first use wants the attrib pointer setting\n    // up when we are emulating.\n    buffer.bind();\n    gl.enableVertexAttribArray(attribs.index);\n    gl.vertexAttribPointer(attribs.index, attribs.size, attribs.type, attribs.normalize, attribs.stride, attribs.offset);\n    if (divisor > 0) {\n      if (model.instancingExtension) {\n        model.instancingExtension.vertexAttribDivisorANGLE(attribs.index, 1);\n      } else {\n        gl.vertexAttribDivisor(attribs.index, 1);\n      }\n    }\n    attribs.buffer = buffer.getHandle();\n\n    // If vertex array objects are not supported then build up our list.\n    if (!model.supported) {\n      // find the buffer\n      let buffFound = false;\n      for (let ibuff = 0; ibuff < model.buffers.length; ++ibuff) {\n        const buff = model.buffers[ibuff];\n        if (buff.buffer === attribs.buffer) {\n          buffFound = true;\n          let found = false;\n          for (let iatt = 0; iatt < buff.attributes.length; ++iatt) {\n            const attrIt = buff.attributes[iatt];\n            if (attrIt.name === name) {\n              found = true;\n              buff.attributes[iatt] = attribs;\n            }\n          }\n          if (!found) {\n            buff.attributes.push(attribs);\n          }\n        }\n      }\n      if (!buffFound) {\n        model.buffers.push({\n          buffer: attribs.buffer,\n          attributes: [attribs]\n        });\n      }\n    }\n    return true;\n  };\n  publicAPI.addAttributeMatrixWithDivisor = (program, buffer, name, offset, stride, elementType, elementTupleSize, normalize, divisor) => {\n    // bind the first row of values\n    const result = publicAPI.addAttributeArrayWithDivisor(program, buffer, name, offset, stride, elementType, elementTupleSize, normalize, divisor, true);\n    if (!result) {\n      return result;\n    }\n    const gl = model.context;\n    const index = gl.getAttribLocation(model.handleProgram, name);\n    for (let i = 1; i < elementTupleSize; i++) {\n      gl.enableVertexAttribArray(index + i);\n      gl.vertexAttribPointer(index + i, elementTupleSize, elementType, normalize, stride, offset + stride * i / elementTupleSize);\n      if (divisor > 0) {\n        if (model.instancingExtension) {\n          model.instancingExtension.vertexAttribDivisorANGLE(index + i, 1);\n        } else {\n          gl.vertexAttribDivisor(index + i, 1);\n        }\n      }\n    }\n    return true;\n  };\n  publicAPI.removeAttributeArray = name => {\n    if (!publicAPI.isReady() || model.handleProgram === 0) {\n      return false;\n    }\n\n    // If we don't have real VAOs find the entry and remove it too.\n    if (!model.supported) {\n      for (let ibuff = 0; ibuff < model.buffers.length; ++ibuff) {\n        const buff = model.buffers[ibuff];\n        for (let iatt = 0; iatt < buff.attributes.length; ++iatt) {\n          const attrIt = buff.attributes[iatt];\n          if (attrIt.name === name) {\n            buff.attributes.splice(iatt, 1);\n            if (!buff.attributes.length) {\n              model.buffers.splice(ibuff, 1);\n            }\n            return true;\n          }\n        }\n      }\n    }\n    return true;\n  };\n  publicAPI.setOpenGLRenderWindow = rw => {\n    if (model._openGLRenderWindow === rw) {\n      return;\n    }\n    publicAPI.releaseGraphicsResources();\n    model._openGLRenderWindow = rw;\n    model.context = null;\n    if (rw) {\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  forceEmulation: false,\n  handleVAO: 0,\n  handleProgram: 0,\n  supported: true,\n  buffers: null,\n  context: null\n  // _openGLRenderWindow: null,\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Internal objects initialization\n  model.buffers = [];\n\n  // Object methods\n  macro.obj(publicAPI, model);\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['supported']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['forceEmulation']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkOpenGLVertexArrayObject(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkOpenGLVertexArrayObject');\n\n// ----------------------------------------------------------------------------\n\nvar vtkVertexArrayObject = {\n  newInstance,\n  extend\n};\n\nexport { vtkVertexArrayObject as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkCellArrayBufferObject from './CellArrayBufferObject.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport vtkVertexArrayObject from './VertexArrayObject.js';\nimport { Representation } from '../Core/Property/Constants.js';\n\nconst primTypes = {\n  Start: 0,\n  Points: 0,\n  Lines: 1,\n  Tris: 2,\n  TriStrips: 3,\n  TrisEdges: 4,\n  TriStripsEdges: 5,\n  End: 6\n};\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLHelper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLHelper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLHelper');\n  publicAPI.setOpenGLRenderWindow = win => {\n    model.context = win.getContext();\n    model.program.setContext(model.context);\n    model.VAO.setOpenGLRenderWindow(win);\n    model.CABO.setOpenGLRenderWindow(win);\n  };\n  publicAPI.releaseGraphicsResources = oglwin => {\n    model.VAO.releaseGraphicsResources();\n    model.CABO.releaseGraphicsResources();\n    model.CABO.setElementCount(0);\n  };\n  publicAPI.drawArrays = (ren, actor, rep, oglMapper) => {\n    // Are there any entries\n    if (model.CABO.getElementCount()) {\n      // are we drawing edges\n      const mode = publicAPI.getOpenGLMode(rep);\n      const wideLines = publicAPI.haveWideLines(ren, actor);\n      const gl = model.context;\n      const depthMask = gl.getParameter(gl.DEPTH_WRITEMASK);\n      if (model.pointPicking) {\n        gl.depthMask(false);\n      }\n      const drawingLines = mode === gl.LINES;\n      if (drawingLines && wideLines) {\n        publicAPI.updateShaders(ren, actor, oglMapper);\n        gl.drawArraysInstanced(mode, 0, model.CABO.getElementCount(), 2 * Math.ceil(actor.getProperty().getLineWidth()));\n      } else {\n        gl.lineWidth(actor.getProperty().getLineWidth());\n        publicAPI.updateShaders(ren, actor, oglMapper);\n        gl.drawArrays(mode, 0, model.CABO.getElementCount());\n        // reset the line width\n        gl.lineWidth(1);\n      }\n      const stride = (mode === gl.POINTS ? 1 : 0) || (mode === gl.LINES ? 2 : 3);\n      if (model.pointPicking) {\n        gl.depthMask(depthMask);\n      }\n      return model.CABO.getElementCount() / stride;\n    }\n    return 0;\n  };\n  publicAPI.getOpenGLMode = rep => {\n    if (model.pointPicking) {\n      return model.context.POINTS;\n    }\n    const type = model.primitiveType;\n    if (rep === Representation.POINTS || type === primTypes.Points) {\n      return model.context.POINTS;\n    }\n    if (rep === Representation.WIREFRAME || type === primTypes.Lines || type === primTypes.TrisEdges || type === primTypes.TriStripsEdges) {\n      return model.context.LINES;\n    }\n    return model.context.TRIANGLES;\n  };\n  publicAPI.haveWideLines = (ren, actor) => {\n    if (actor.getProperty().getLineWidth() > 1.0) {\n      // we have wide lines, but the OpenGL implementation may\n      // actually support them, check the range to see if we\n      // really need have to implement our own wide lines\n      if (model.CABO.getOpenGLRenderWindow()) {\n        if (model.CABO.getOpenGLRenderWindow().getHardwareMaximumLineWidth() >= actor.getProperty().getLineWidth()) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  };\n  publicAPI.getNeedToRebuildShaders = (ren, actor, oglMapper) => {\n    // has something changed that would require us to recreate the shader?\n    // candidates are\n    // property modified (representation interpolation and lighting)\n    // input modified\n    // mapper modified (lighting complexity)\n    if (oglMapper.getNeedToRebuildShaders(publicAPI, ren, actor) || publicAPI.getProgram() === 0 || publicAPI.getShaderSourceTime().getMTime() < oglMapper.getMTime() || publicAPI.getShaderSourceTime().getMTime() < actor.getMTime()) {\n      return true;\n    }\n    return false;\n  };\n  publicAPI.updateShaders = (ren, actor, oglMapper) => {\n    // has something changed that would require us to recreate the shader?\n    if (publicAPI.getNeedToRebuildShaders(ren, actor, oglMapper)) {\n      const shaders = {\n        Vertex: null,\n        Fragment: null,\n        Geometry: null\n      };\n      oglMapper.buildShaders(shaders, ren, actor);\n\n      // compile and bind the program if needed\n      const newShader = model.CABO.getOpenGLRenderWindow().getShaderCache().readyShaderProgramArray(shaders.Vertex, shaders.Fragment, shaders.Geometry);\n\n      // if the shader changed reinitialize the VAO\n      if (newShader !== publicAPI.getProgram()) {\n        publicAPI.setProgram(newShader);\n        // reset the VAO as the shader has changed\n        publicAPI.getVAO().releaseGraphicsResources();\n      }\n      publicAPI.getShaderSourceTime().modified();\n    } else {\n      model.CABO.getOpenGLRenderWindow().getShaderCache().readyShaderProgram(publicAPI.getProgram());\n    }\n    publicAPI.getVAO().bind();\n    oglMapper.setMapperShaderParameters(publicAPI, ren, actor);\n    oglMapper.setPropertyShaderParameters(publicAPI, ren, actor);\n    oglMapper.setCameraShaderParameters(publicAPI, ren, actor);\n    oglMapper.setLightingShaderParameters(publicAPI, ren, actor);\n    oglMapper.invokeShaderCallbacks(publicAPI, ren, actor);\n  };\n  publicAPI.setMapperShaderParameters = (ren, actor, size) => {\n    if (publicAPI.haveWideLines(ren, actor)) {\n      publicAPI.getProgram().setUniform2f('viewportSize', size.usize, size.vsize);\n      const lineWidth = parseFloat(actor.getProperty().getLineWidth());\n      const halfLineWidth = lineWidth / 2.0;\n      publicAPI.getProgram().setUniformf('lineWidthStepSize', lineWidth / Math.ceil(lineWidth));\n      publicAPI.getProgram().setUniformf('halfLineWidth', halfLineWidth);\n    }\n    if (model.primitiveType === primTypes.Points || actor.getProperty().getRepresentation() === Representation.POINTS) {\n      publicAPI.getProgram().setUniformf('pointSize', actor.getProperty().getPointSize());\n    } else if (model.pointPicking) {\n      publicAPI.getProgram().setUniformf('pointSize', publicAPI.getPointPickingPrimitiveSize());\n    }\n  };\n  publicAPI.replaceShaderPositionVC = (shaders, ren, actor) => {\n    let VSSource = shaders.Vertex;\n\n    // Always set point size in case we need picking\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Dec', ['//VTK::PositionVC::Dec', 'uniform float pointSize;']).result;\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Impl', ['//VTK::PositionVC::Impl', '  gl_PointSize = pointSize;'], false).result;\n\n    // for lines, make sure we add the width code\n    if (publicAPI.getOpenGLMode(actor.getProperty().getRepresentation()) === model.context.LINES && publicAPI.haveWideLines(ren, actor)) {\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Dec', ['//VTK::PositionVC::Dec', 'uniform vec2 viewportSize;', 'uniform float lineWidthStepSize;', 'uniform float halfLineWidth;']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Impl', ['//VTK::PositionVC::Impl', ' if (halfLineWidth > 0.0)', '   {', '   float offset = float(gl_InstanceID / 2) * lineWidthStepSize - halfLineWidth;', '   vec4 tmpPos = gl_Position;', '   vec3 tmpPos2 = tmpPos.xyz / tmpPos.w;', '   tmpPos2.x = tmpPos2.x + 2.0 * mod(float(gl_InstanceID), 2.0) * offset / viewportSize[0];', '   tmpPos2.y = tmpPos2.y + 2.0 * mod(float(gl_InstanceID + 1), 2.0) * offset / viewportSize[1];', '   gl_Position = vec4(tmpPos2.xyz * tmpPos.w, tmpPos.w);', '   }']).result;\n    }\n    shaders.Vertex = VSSource;\n  };\n  publicAPI.getPointPickingPrimitiveSize = () => {\n    if (model.primitiveType === primTypes.Points) {\n      return 2;\n    }\n    if (model.primitiveType === primTypes.Lines) {\n      return 4;\n    }\n    return 6;\n  };\n  publicAPI.getAllocatedGPUMemoryInBytes = () => publicAPI.getCABO().getAllocatedGPUMemoryInBytes();\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  program: null,\n  shaderSourceTime: null,\n  VAO: null,\n  attributeUpdateTime: null,\n  CABO: null,\n  primitiveType: 0,\n  pointPicking: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  model.shaderSourceTime = {};\n  macro.obj(model.shaderSourceTime);\n  model.attributeUpdateTime = {};\n  macro.obj(model.attributeUpdateTime);\n  macro.setGet(publicAPI, model, ['program', 'shaderSourceTime', 'VAO', 'attributeUpdateTime', 'CABO', 'primitiveType', 'pointPicking']);\n  model.program = vtkShaderProgram.newInstance();\n  model.VAO = vtkVertexArrayObject.newInstance();\n  model.CABO = vtkCellArrayBufferObject.newInstance();\n\n  // Object methods\n  vtkOpenGLHelper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkHelper = {\n  newInstance,\n  extend,\n  primTypes\n};\n\nexport { vtkHelper as default, extend, newInstance, primTypes };\n","import { m as macro } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n// vtkAbstractMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkAbstractMapper(publicAPI, model) {\n  model.classHierarchy.push('vtkAbstractMapper');\n  publicAPI.update = () => {\n    publicAPI.getInputData();\n  };\n  publicAPI.addClippingPlane = plane => {\n    if (!plane.isA('vtkPlane')) {\n      return false;\n    }\n    if (!model.clippingPlanes.includes(plane)) {\n      model.clippingPlanes.push(plane);\n      publicAPI.modified();\n      return true;\n    }\n    return false;\n  };\n  publicAPI.getNumberOfClippingPlanes = () => model.clippingPlanes.length;\n  publicAPI.removeAllClippingPlanes = () => {\n    if (model.clippingPlanes.length === 0) {\n      return false;\n    }\n    model.clippingPlanes.length = 0;\n    publicAPI.modified();\n    return true;\n  };\n  publicAPI.removeClippingPlane = clippingPlane => {\n    const i = model.clippingPlanes.indexOf(clippingPlane);\n    if (i === -1) {\n      return false;\n    }\n    model.clippingPlanes.splice(i, 1);\n    publicAPI.modified();\n    return true;\n  };\n  publicAPI.getClippingPlanes = () => model.clippingPlanes;\n  publicAPI.setClippingPlanes = planes => {\n    if (!planes) {\n      return;\n    }\n    if (!Array.isArray(planes)) {\n      publicAPI.addClippingPlane(planes);\n    } else {\n      const nbPlanes = planes.length;\n      for (let i = 0; i < nbPlanes && i < 6; i++) {\n        publicAPI.addClippingPlane(planes[i]);\n      }\n    }\n  };\n  publicAPI.getClippingPlaneInDataCoords = (propMatrix, i, hnormal) => {\n    const clipPlanes = model.clippingPlanes;\n    const mat = propMatrix;\n    if (clipPlanes) {\n      const n = clipPlanes.length;\n      if (i >= 0 && i < n) {\n        // Get the plane\n        const plane = clipPlanes[i];\n        const normal = plane.getNormal();\n        const origin = plane.getOrigin();\n\n        // Compute the plane equation\n        const v1 = normal[0];\n        const v2 = normal[1];\n        const v3 = normal[2];\n        const v4 = -(v1 * origin[0] + v2 * origin[1] + v3 * origin[2]);\n\n        // Transform normal from world to data coords\n        hnormal[0] = v1 * mat[0] + v2 * mat[4] + v3 * mat[8] + v4 * mat[12];\n        hnormal[1] = v1 * mat[1] + v2 * mat[5] + v3 * mat[9] + v4 * mat[13];\n        hnormal[2] = v1 * mat[2] + v2 * mat[6] + v3 * mat[10] + v4 * mat[14];\n        hnormal[3] = v1 * mat[3] + v2 * mat[7] + v3 * mat[11] + v4 * mat[15];\n        return;\n      }\n    }\n    macro.vtkErrorMacro(`Clipping plane index ${i} is out of range.`);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  clippingPlanes: []\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.algo(publicAPI, model, 1, 0);\n  if (!model.clippingPlanes) {\n    model.clippingPlanes = [];\n  }\n  vtkAbstractMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\nvar vtkAbstractMapper$1 = {\n  extend\n};\n\nexport { vtkAbstractMapper$1 as default, extend };\n","const IDENTITY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\nconst IDENTITY_3X3 = [1, 0, 0, 0, 1, 0, 0, 0, 1];\nconst EPSILON = 1e-6;\nconst VTK_SMALL_NUMBER = 1.0e-12;\nvar Constants = {\n  IDENTITY,\n  IDENTITY_3X3,\n  EPSILON,\n  VTK_SMALL_NUMBER\n};\n\nexport { EPSILON, IDENTITY, IDENTITY_3X3, VTK_SMALL_NUMBER, Constants as default };\n","import seedrandom from 'seedrandom';\nimport { m as macro } from '../../../macros2.js';\nimport { IDENTITY, IDENTITY_3X3, VTK_SMALL_NUMBER, EPSILON } from './Constants.js';\n\nconst {\n  vtkErrorMacro,\n  vtkWarningMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n/* eslint-disable camelcase                                                  */\n/* eslint-disable no-cond-assign                                             */\n/* eslint-disable no-bitwise                                                 */\n/* eslint-disable no-multi-assign                                            */\n// ----------------------------------------------------------------------------\nlet randomSeedValue = 0;\nconst VTK_MAX_ROTATIONS = 20;\nfunction notImplemented(method) {\n  return () => vtkErrorMacro(`vtkMath::${method} - NOT IMPLEMENTED`);\n}\n\n// Swap rows for n by n matrix\nfunction swapRowsMatrix_nxn(matrix, n, row1, row2) {\n  let tmp;\n  for (let i = 0; i < n; i++) {\n    tmp = matrix[row1 * n + i];\n    matrix[row1 * n + i] = matrix[row2 * n + i];\n    matrix[row2 * n + i] = tmp;\n  }\n}\n\n// Swap columns for n by n matrix\nfunction swapColumnsMatrix_nxn(matrix, n, column1, column2) {\n  let tmp;\n  for (let i = 0; i < n; i++) {\n    tmp = matrix[i * n + column1];\n    matrix[i * n + column1] = matrix[i * n + column2];\n    matrix[i * n + column2] = tmp;\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction createArray() {\n  let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;\n  // faster than Array.from and/or while loop\n  const res = Array(size);\n  for (let i = 0; i < size; ++i) {\n    res[i] = 0;\n  }\n  return res;\n}\nconst Pi = () => Math.PI;\nfunction ldexp(x, exponent) {\n  if (exponent > 1023) {\n    return x * 2 ** 1023 * 2 ** (exponent - 1023);\n  }\n  if (exponent < -1074) {\n    return x * 2 ** -1074 * 2 ** (exponent + 1074);\n  }\n  return x * 2 ** exponent;\n}\nfunction radiansFromDegrees(deg) {\n  return deg / 180 * Math.PI;\n}\nfunction degreesFromRadians(rad) {\n  return rad * 180 / Math.PI;\n}\nconst {\n  round,\n  floor,\n  ceil,\n  min,\n  max\n} = Math;\nfunction arrayMin(arr) {\n  let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let stride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let minValue = Infinity;\n  for (let i = offset, len = arr.length; i < len; i += stride) {\n    if (arr[i] < minValue) {\n      minValue = arr[i];\n    }\n  }\n  return minValue;\n}\nfunction arrayMax(arr) {\n  let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let stride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let maxValue = -Infinity;\n  for (let i = offset, len = arr.length; i < len; i += stride) {\n    if (maxValue < arr[i]) {\n      maxValue = arr[i];\n    }\n  }\n  return maxValue;\n}\nfunction arrayRange(arr) {\n  let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let stride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let minValue = Infinity;\n  let maxValue = -Infinity;\n  for (let i = offset, len = arr.length; i < len; i += stride) {\n    if (arr[i] < minValue) {\n      minValue = arr[i];\n    }\n    if (maxValue < arr[i]) {\n      maxValue = arr[i];\n    }\n  }\n  return [minValue, maxValue];\n}\nconst ceilLog2 = notImplemented('ceilLog2');\nconst factorial = notImplemented('factorial');\nfunction nearestPowerOfTwo(xi) {\n  let v = 1;\n  while (v < xi) {\n    v *= 2;\n  }\n  return v;\n}\nfunction isPowerOfTwo(x) {\n  return x === nearestPowerOfTwo(x);\n}\nfunction binomial(m, n) {\n  let r = 1;\n  for (let i = 1; i <= n; ++i) {\n    r *= (m - i + 1) / i;\n  }\n  return Math.floor(r);\n}\nfunction beginCombination(m, n) {\n  if (m < n) {\n    return 0;\n  }\n  const r = createArray(n);\n  for (let i = 0; i < n; ++i) {\n    r[i] = i;\n  }\n  return r;\n}\nfunction nextCombination(m, n, r) {\n  let status = 0;\n  for (let i = n - 1; i >= 0; --i) {\n    if (r[i] < m - n + i) {\n      let j = r[i] + 1;\n      while (i < n) {\n        r[i++] = j++;\n      }\n      status = 1;\n      break;\n    }\n  }\n  return status;\n}\nfunction randomSeed(seed) {\n  seedrandom(`${seed}`, {\n    global: true\n  });\n  randomSeedValue = seed;\n}\nfunction getSeed() {\n  return randomSeedValue;\n}\nfunction random() {\n  let minValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let maxValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  const delta = maxValue - minValue;\n  return minValue + delta * Math.random();\n}\nconst gaussian = notImplemented('gaussian');\n\n// Vect3 operations\nfunction add(a, b, out) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\nfunction subtract(a, b, out) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\nfunction multiplyScalar(vec, scalar) {\n  vec[0] *= scalar;\n  vec[1] *= scalar;\n  vec[2] *= scalar;\n  return vec;\n}\nfunction multiplyScalar2D(vec, scalar) {\n  vec[0] *= scalar;\n  vec[1] *= scalar;\n  return vec;\n}\nfunction multiplyAccumulate(a, b, scalar, out) {\n  out[0] = a[0] + b[0] * scalar;\n  out[1] = a[1] + b[1] * scalar;\n  out[2] = a[2] + b[2] * scalar;\n  return out;\n}\nfunction multiplyAccumulate2D(a, b, scalar, out) {\n  out[0] = a[0] + b[0] * scalar;\n  out[1] = a[1] + b[1] * scalar;\n  return out;\n}\nfunction dot(x, y) {\n  return x[0] * y[0] + x[1] * y[1] + x[2] * y[2];\n}\nfunction outer(x, y, out_3x3) {\n  out_3x3[0] = x[0] * y[0];\n  out_3x3[1] = x[0] * y[1];\n  out_3x3[2] = x[0] * y[2];\n  out_3x3[3] = x[1] * y[0];\n  out_3x3[4] = x[1] * y[1];\n  out_3x3[5] = x[1] * y[2];\n  out_3x3[6] = x[2] * y[0];\n  out_3x3[7] = x[2] * y[1];\n  out_3x3[8] = x[2] * y[2];\n}\nfunction cross(x, y, out) {\n  const Zx = x[1] * y[2] - x[2] * y[1];\n  const Zy = x[2] * y[0] - x[0] * y[2];\n  const Zz = x[0] * y[1] - x[1] * y[0];\n  out[0] = Zx;\n  out[1] = Zy;\n  out[2] = Zz;\n  return out;\n}\nfunction norm(x) {\n  let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n  switch (n) {\n    case 1:\n      return Math.abs(x);\n    case 2:\n      return Math.sqrt(x[0] * x[0] + x[1] * x[1]);\n    case 3:\n      return Math.sqrt(x[0] * x[0] + x[1] * x[1] + x[2] * x[2]);\n    default:\n      {\n        let sum = 0;\n        for (let i = 0; i < n; i++) {\n          sum += x[i] * x[i];\n        }\n        return Math.sqrt(sum);\n      }\n  }\n}\nfunction normalize(x) {\n  const den = norm(x);\n  if (den !== 0.0) {\n    x[0] /= den;\n    x[1] /= den;\n    x[2] /= den;\n  }\n  return den;\n}\nfunction perpendiculars(x, y, z, theta) {\n  const x2 = x[0] * x[0];\n  const y2 = x[1] * x[1];\n  const z2 = x[2] * x[2];\n  const r = Math.sqrt(x2 + y2 + z2);\n  let dx;\n  let dy;\n  let dz;\n\n  // transpose the vector to avoid divide-by-zero error\n  if (x2 > y2 && x2 > z2) {\n    dx = 0;\n    dy = 1;\n    dz = 2;\n  } else if (y2 > z2) {\n    dx = 1;\n    dy = 2;\n    dz = 0;\n  } else {\n    dx = 2;\n    dy = 0;\n    dz = 1;\n  }\n  const a = x[dx] / r;\n  const b = x[dy] / r;\n  const c = x[dz] / r;\n  const tmp = Math.sqrt(a * a + c * c);\n  if (theta !== 0) {\n    const sintheta = Math.sin(theta);\n    const costheta = Math.cos(theta);\n    if (y) {\n      y[dx] = (c * costheta - a * b * sintheta) / tmp;\n      y[dy] = sintheta * tmp;\n      y[dz] = (-(a * costheta) - b * c * sintheta) / tmp;\n    }\n    if (z) {\n      z[dx] = (-(c * sintheta) - a * b * costheta) / tmp;\n      z[dy] = costheta * tmp;\n      z[dz] = (a * sintheta - b * c * costheta) / tmp;\n    }\n  } else {\n    if (y) {\n      y[dx] = c / tmp;\n      y[dy] = 0;\n      y[dz] = -a / tmp;\n    }\n    if (z) {\n      z[dx] = -a * b / tmp;\n      z[dy] = tmp;\n      z[dz] = -b * c / tmp;\n    }\n  }\n}\nfunction projectVector(a, b, projection) {\n  const bSquared = dot(b, b);\n  if (bSquared === 0) {\n    projection[0] = 0;\n    projection[1] = 0;\n    projection[2] = 0;\n    return false;\n  }\n  const scale = dot(a, b) / bSquared;\n  for (let i = 0; i < 3; i++) {\n    projection[i] = b[i];\n  }\n  multiplyScalar(projection, scale);\n  return true;\n}\nfunction dot2D(x, y) {\n  return x[0] * y[0] + x[1] * y[1];\n}\nfunction projectVector2D(a, b, projection) {\n  const bSquared = dot2D(b, b);\n  if (bSquared === 0) {\n    projection[0] = 0;\n    projection[1] = 0;\n    return false;\n  }\n  const scale = dot2D(a, b) / bSquared;\n  for (let i = 0; i < 2; i++) {\n    projection[i] = b[i];\n  }\n  multiplyScalar2D(projection, scale);\n  return true;\n}\nfunction distance2BetweenPoints(x, y) {\n  return (x[0] - y[0]) * (x[0] - y[0]) + (x[1] - y[1]) * (x[1] - y[1]) + (x[2] - y[2]) * (x[2] - y[2]);\n}\nfunction angleBetweenVectors(v1, v2) {\n  const crossVect = [0, 0, 0];\n  cross(v1, v2, crossVect);\n  return Math.atan2(norm(crossVect), dot(v1, v2));\n}\nfunction signedAngleBetweenVectors(v1, v2, vN) {\n  const crossVect = [0, 0, 0];\n  cross(v1, v2, crossVect);\n  const angle = Math.atan2(norm(crossVect), dot(v1, v2));\n  return dot(crossVect, vN) >= 0 ? angle : -angle;\n}\nfunction gaussianAmplitude(mean, variance, position) {\n  const distanceFromMean = Math.abs(mean - position);\n  return 1 / Math.sqrt(2 * Math.PI * variance) * Math.exp(-(distanceFromMean ** 2) / (2 * variance));\n}\nfunction gaussianWeight(mean, variance, position) {\n  const distanceFromMean = Math.abs(mean - position);\n  return Math.exp(-(distanceFromMean ** 2) / (2 * variance));\n}\nfunction outer2D(x, y, out_2x2) {\n  out_2x2[0] = x[0] * y[0];\n  out_2x2[1] = x[0] * y[1];\n  out_2x2[2] = x[1] * y[0];\n  out_2x2[3] = x[1] * y[1];\n}\nfunction norm2D(x2D) {\n  return Math.sqrt(x2D[0] * x2D[0] + x2D[1] * x2D[1]);\n}\nfunction normalize2D(x) {\n  const den = norm2D(x);\n  if (den !== 0.0) {\n    x[0] /= den;\n    x[1] /= den;\n  }\n  return den;\n}\nfunction rowsToMat4(row0, row1, row2, row3, mat) {\n  for (let i = 0; i < 4; i++) {\n    mat[i] = row0[i];\n    mat[4 + i] = row1[i];\n    mat[8 + i] = row2[i];\n    mat[12 + i] = row3[i];\n  }\n  return mat;\n}\nfunction columnsToMat4(column0, column1, column2, column3, mat) {\n  for (let i = 0; i < 4; i++) {\n    mat[4 * i] = column0[i];\n    mat[4 * i + 1] = column1[i];\n    mat[4 * i + 2] = column2[i];\n    mat[4 * i + 3] = column3[i];\n  }\n  return mat;\n}\nfunction rowsToMat3(row0, row1, row2, mat) {\n  for (let i = 0; i < 3; i++) {\n    mat[i] = row0[i];\n    mat[3 + i] = row1[i];\n    mat[6 + i] = row2[i];\n  }\n  return mat;\n}\nfunction columnsToMat3(column0, column1, column2, mat) {\n  for (let i = 0; i < 3; i++) {\n    mat[3 * i] = column0[i];\n    mat[3 * i + 1] = column1[i];\n    mat[3 * i + 2] = column2[i];\n  }\n  return mat;\n}\nfunction determinant2x2() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (args.length === 2) {\n    return args[0][0] * args[1][1] - args[1][0] * args[0][1];\n  }\n  if (args.length === 4) {\n    return args[0] * args[3] - args[1] * args[2];\n  }\n  return Number.NaN;\n}\nfunction LUFactor3x3(mat_3x3, index_3) {\n  let maxI;\n  let tmp;\n  let largest;\n  const scale = [0, 0, 0];\n\n  // Loop over rows to get implicit scaling information\n  for (let i = 0; i < 3; i++) {\n    largest = Math.abs(mat_3x3[i * 3]);\n    if ((tmp = Math.abs(mat_3x3[i * 3 + 1])) > largest) {\n      largest = tmp;\n    }\n    if ((tmp = Math.abs(mat_3x3[i * 3 + 2])) > largest) {\n      largest = tmp;\n    }\n    scale[i] = 1 / largest;\n  }\n\n  // Loop over all columns using Crout's method\n\n  // first column\n  largest = scale[0] * Math.abs(mat_3x3[0]);\n  maxI = 0;\n  if ((tmp = scale[1] * Math.abs(mat_3x3[3])) >= largest) {\n    largest = tmp;\n    maxI = 1;\n  }\n  if ((tmp = scale[2] * Math.abs(mat_3x3[6])) >= largest) {\n    maxI = 2;\n  }\n  if (maxI !== 0) {\n    swapRowsMatrix_nxn(mat_3x3, 3, maxI, 0);\n    scale[maxI] = scale[0];\n  }\n  index_3[0] = maxI;\n  mat_3x3[3] /= mat_3x3[0];\n  mat_3x3[6] /= mat_3x3[0];\n\n  // second column\n  mat_3x3[4] -= mat_3x3[3] * mat_3x3[1];\n  mat_3x3[7] -= mat_3x3[6] * mat_3x3[1];\n  largest = scale[1] * Math.abs(mat_3x3[4]);\n  maxI = 1;\n  if ((tmp = scale[2] * Math.abs(mat_3x3[7])) >= largest) {\n    maxI = 2;\n    swapRowsMatrix_nxn(mat_3x3, 3, 1, 2);\n    scale[2] = scale[1];\n  }\n  index_3[1] = maxI;\n  mat_3x3[7] /= mat_3x3[4];\n\n  // third column\n  mat_3x3[5] -= mat_3x3[3] * mat_3x3[2];\n  mat_3x3[8] -= mat_3x3[6] * mat_3x3[2] + mat_3x3[7] * mat_3x3[5];\n  index_3[2] = 2;\n}\nfunction LUSolve3x3(mat_3x3, index_3, x_3) {\n  // forward substitution\n  let sum = x_3[index_3[0]];\n  x_3[index_3[0]] = x_3[0];\n  x_3[0] = sum;\n  sum = x_3[index_3[1]];\n  x_3[index_3[1]] = x_3[1];\n  x_3[1] = sum - mat_3x3[3] * x_3[0];\n  sum = x_3[index_3[2]];\n  x_3[index_3[2]] = x_3[2];\n  x_3[2] = sum - mat_3x3[6] * x_3[0] - mat_3x3[7] * x_3[1];\n\n  // back substitution\n  x_3[2] /= mat_3x3[8];\n  x_3[1] = (x_3[1] - mat_3x3[5] * x_3[2]) / mat_3x3[4];\n  x_3[0] = (x_3[0] - mat_3x3[1] * x_3[1] - mat_3x3[2] * x_3[2]) / mat_3x3[0];\n}\nfunction linearSolve3x3(mat_3x3, x_3, y_3) {\n  const a1 = mat_3x3[0];\n  const b1 = mat_3x3[1];\n  const c1 = mat_3x3[2];\n  const a2 = mat_3x3[3];\n  const b2 = mat_3x3[4];\n  const c2 = mat_3x3[5];\n  const a3 = mat_3x3[6];\n  const b3 = mat_3x3[7];\n  const c3 = mat_3x3[8];\n\n  // Compute the adjoint\n  const d1 = +determinant2x2(b2, b3, c2, c3);\n  const d2 = -determinant2x2(a2, a3, c2, c3);\n  const d3 = +determinant2x2(a2, a3, b2, b3);\n  const e1 = -determinant2x2(b1, b3, c1, c3);\n  const e2 = +determinant2x2(a1, a3, c1, c3);\n  const e3 = -determinant2x2(a1, a3, b1, b3);\n  const f1 = +determinant2x2(b1, b2, c1, c2);\n  const f2 = -determinant2x2(a1, a2, c1, c2);\n  const f3 = +determinant2x2(a1, a2, b1, b2);\n\n  // Compute the determinant\n  const det = a1 * d1 + b1 * d2 + c1 * d3;\n\n  // Multiply by the adjoint\n  const v1 = d1 * x_3[0] + e1 * x_3[1] + f1 * x_3[2];\n  const v2 = d2 * x_3[0] + e2 * x_3[1] + f2 * x_3[2];\n  const v3 = d3 * x_3[0] + e3 * x_3[1] + f3 * x_3[2];\n\n  // Divide by the determinant\n  y_3[0] = v1 / det;\n  y_3[1] = v2 / det;\n  y_3[2] = v3 / det;\n}\nfunction multiply3x3_vect3(mat_3x3, in_3, out_3) {\n  const x = mat_3x3[0] * in_3[0] + mat_3x3[1] * in_3[1] + mat_3x3[2] * in_3[2];\n  const y = mat_3x3[3] * in_3[0] + mat_3x3[4] * in_3[1] + mat_3x3[5] * in_3[2];\n  const z = mat_3x3[6] * in_3[0] + mat_3x3[7] * in_3[1] + mat_3x3[8] * in_3[2];\n  out_3[0] = x;\n  out_3[1] = y;\n  out_3[2] = z;\n}\nfunction multiply3x3_mat3(a_3x3, b_3x3, out_3x3) {\n  const copyA = [...a_3x3];\n  const copyB = [...b_3x3];\n  for (let i = 0; i < 3; i++) {\n    out_3x3[i] = copyA[0] * copyB[i] + copyA[1] * copyB[i + 3] + copyA[2] * copyB[i + 6];\n    out_3x3[i + 3] = copyA[3] * copyB[i] + copyA[4] * copyB[i + 3] + copyA[5] * copyB[i + 6];\n    out_3x3[i + 6] = copyA[6] * copyB[i] + copyA[7] * copyB[i + 3] + copyA[8] * copyB[i + 6];\n  }\n}\nfunction multiplyMatrix(a, b, rowA, colA, rowB, colB, outRowAColB) {\n  // we need colA == rowB\n  if (colA !== rowB) {\n    vtkErrorMacro('Number of columns of A must match number of rows of B.');\n  }\n\n  // If a or b is used to store the result, copying them is required\n  const copyA = [...a];\n  const copyB = [...b];\n  // output matrix is rowA*colB\n  // output row\n  for (let i = 0; i < rowA; i++) {\n    // output col\n    for (let j = 0; j < colB; j++) {\n      outRowAColB[i * colB + j] = 0;\n      // sum for this point\n      for (let k = 0; k < colA; k++) {\n        outRowAColB[i * colB + j] += copyA[i * colA + k] * copyB[j + colB * k];\n      }\n    }\n  }\n}\nfunction transpose3x3(in_3x3, outT_3x3) {\n  let tmp;\n\n  // off-diagonal elements\n  tmp = in_3x3[3];\n  outT_3x3[3] = in_3x3[1];\n  outT_3x3[1] = tmp;\n  tmp = in_3x3[6];\n  outT_3x3[6] = in_3x3[2];\n  outT_3x3[2] = tmp;\n  tmp = in_3x3[7];\n  outT_3x3[7] = in_3x3[5];\n  outT_3x3[5] = tmp;\n\n  // on-diagonal elements\n  outT_3x3[0] = in_3x3[0];\n  outT_3x3[4] = in_3x3[4];\n  outT_3x3[8] = in_3x3[8];\n}\nfunction invert3x3(in_3x3, outI_3x3) {\n  const a1 = in_3x3[0];\n  const b1 = in_3x3[1];\n  const c1 = in_3x3[2];\n  const a2 = in_3x3[3];\n  const b2 = in_3x3[4];\n  const c2 = in_3x3[5];\n  const a3 = in_3x3[6];\n  const b3 = in_3x3[7];\n  const c3 = in_3x3[8];\n\n  // Compute the adjoint\n  const d1 = +determinant2x2(b2, b3, c2, c3);\n  const d2 = -determinant2x2(a2, a3, c2, c3);\n  const d3 = +determinant2x2(a2, a3, b2, b3);\n  const e1 = -determinant2x2(b1, b3, c1, c3);\n  const e2 = +determinant2x2(a1, a3, c1, c3);\n  const e3 = -determinant2x2(a1, a3, b1, b3);\n  const f1 = +determinant2x2(b1, b2, c1, c2);\n  const f2 = -determinant2x2(a1, a2, c1, c2);\n  const f3 = +determinant2x2(a1, a2, b1, b2);\n\n  // Divide by the determinant\n  const det = a1 * d1 + b1 * d2 + c1 * d3;\n  if (det === 0) {\n    vtkWarningMacro('Matrix has 0 determinant');\n  }\n  outI_3x3[0] = d1 / det;\n  outI_3x3[3] = d2 / det;\n  outI_3x3[6] = d3 / det;\n  outI_3x3[1] = e1 / det;\n  outI_3x3[4] = e2 / det;\n  outI_3x3[7] = e3 / det;\n  outI_3x3[2] = f1 / det;\n  outI_3x3[5] = f2 / det;\n  outI_3x3[8] = f3 / det;\n}\nfunction determinant3x3(mat_3x3) {\n  return mat_3x3[0] * mat_3x3[4] * mat_3x3[8] + mat_3x3[3] * mat_3x3[7] * mat_3x3[2] + mat_3x3[6] * mat_3x3[1] * mat_3x3[5] - mat_3x3[0] * mat_3x3[7] * mat_3x3[5] - mat_3x3[3] * mat_3x3[1] * mat_3x3[8] - mat_3x3[6] * mat_3x3[4] * mat_3x3[2];\n}\n\n/**\n * Returns true if elements of both arrays are equals.\n * @param {Array} a an array of numbers (vector, point, matrix...)\n * @param {Array} b an array of numbers (vector, point, matrix...)\n * @param {Number} eps tolerance\n */\nfunction areEquals(a, b) {\n  let eps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EPSILON;\n  if (a.length !== b.length) {\n    return false;\n  }\n  function isEqual(element, index) {\n    return Math.abs(element - b[index]) <= eps;\n  }\n  return a.every(isEqual);\n}\nconst areMatricesEqual = areEquals;\nfunction identity3x3(mat_3x3) {\n  for (let i = 0; i < 3; i++) {\n    /* eslint-disable-next-line no-multi-assign */\n    mat_3x3[i * 3] = mat_3x3[i * 3 + 1] = mat_3x3[i * 3 + 2] = 0;\n    mat_3x3[i * 3 + i] = 1;\n  }\n}\nfunction identity(n, mat) {\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < n; j++) {\n      mat[i * n + j] = 0;\n    }\n    mat[i * n + i] = 1;\n  }\n  return mat;\n}\nfunction isIdentity(mat) {\n  let eps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EPSILON;\n  return areMatricesEqual(mat, IDENTITY, eps);\n}\nfunction isIdentity3x3(mat) {\n  let eps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EPSILON;\n  return areMatricesEqual(mat, IDENTITY_3X3, eps);\n}\nfunction quaternionToMatrix3x3(quat_4, mat_3x3) {\n  const ww = quat_4[0] * quat_4[0];\n  const wx = quat_4[0] * quat_4[1];\n  const wy = quat_4[0] * quat_4[2];\n  const wz = quat_4[0] * quat_4[3];\n  const xx = quat_4[1] * quat_4[1];\n  const yy = quat_4[2] * quat_4[2];\n  const zz = quat_4[3] * quat_4[3];\n  const xy = quat_4[1] * quat_4[2];\n  const xz = quat_4[1] * quat_4[3];\n  const yz = quat_4[2] * quat_4[3];\n  const rr = xx + yy + zz;\n  // normalization factor, just in case quaternion was not normalized\n  let f = 1 / (ww + rr);\n  const s = (ww - rr) * f;\n  f *= 2;\n  mat_3x3[0] = xx * f + s;\n  mat_3x3[3] = (xy + wz) * f;\n  mat_3x3[6] = (xz - wy) * f;\n  mat_3x3[1] = (xy - wz) * f;\n  mat_3x3[4] = yy * f + s;\n  mat_3x3[7] = (yz + wx) * f;\n  mat_3x3[2] = (xz + wy) * f;\n  mat_3x3[5] = (yz - wx) * f;\n  mat_3x3[8] = zz * f + s;\n}\nfunction roundNumber(num) {\n  let digits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  if (!`${num}`.includes('e')) {\n    return +`${Math.round(`${num}e+${digits}`)}e-${digits}`;\n  }\n  const arr = `${num}`.split('e');\n  let sig = '';\n  if (+arr[1] + digits > 0) {\n    sig = '+';\n  }\n  return +`${Math.round(`${+arr[0]}e${sig}${+arr[1] + digits}`)}e-${digits}`;\n}\nfunction roundVector(vector) {\n  let out = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 0];\n  let digits = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  out[0] = roundNumber(vector[0], digits);\n  out[1] = roundNumber(vector[1], digits);\n  out[2] = roundNumber(vector[2], digits);\n  return out;\n}\nfunction jacobiN(a, n, w, v) {\n  let i;\n  let j;\n  let k;\n  let iq;\n  let ip;\n  let numPos;\n  let tresh;\n  let theta;\n  let t;\n  let tau;\n  let sm;\n  let s;\n  let h;\n  let g;\n  let c;\n  let tmp;\n  const b = createArray(n);\n  const z = createArray(n);\n  const vtkROTATE = (aa, ii, jj) => {\n    g = aa[ii];\n    h = aa[jj];\n    aa[ii] = g - s * (h + g * tau);\n    aa[jj] = h + s * (g - h * tau);\n  };\n\n  // initialize\n  identity(n, v);\n  for (ip = 0; ip < n; ip++) {\n    b[ip] = w[ip] = a[ip + ip * n];\n    z[ip] = 0.0;\n  }\n\n  // begin rotation sequence\n  for (i = 0; i < VTK_MAX_ROTATIONS; i++) {\n    sm = 0.0;\n    for (ip = 0; ip < n - 1; ip++) {\n      for (iq = ip + 1; iq < n; iq++) {\n        sm += Math.abs(a[ip * n + iq]);\n      }\n    }\n    if (sm === 0.0) {\n      break;\n    }\n\n    // first 3 sweeps\n    if (i < 3) {\n      tresh = 0.2 * sm / (n * n);\n    } else {\n      tresh = 0.0;\n    }\n    for (ip = 0; ip < n - 1; ip++) {\n      for (iq = ip + 1; iq < n; iq++) {\n        g = 100.0 * Math.abs(a[ip * n + iq]);\n\n        // after 4 sweeps\n        if (i > 3 && Math.abs(w[ip]) + g === Math.abs(w[ip]) && Math.abs(w[iq]) + g === Math.abs(w[iq])) {\n          a[ip * n + iq] = 0.0;\n        } else if (Math.abs(a[ip * n + iq]) > tresh) {\n          h = w[iq] - w[ip];\n          if (Math.abs(h) + g === Math.abs(h)) {\n            t = a[ip * n + iq] / h;\n          } else {\n            theta = 0.5 * h / a[ip * n + iq];\n            t = 1.0 / (Math.abs(theta) + Math.sqrt(1.0 + theta * theta));\n            if (theta < 0.0) {\n              t = -t;\n            }\n          }\n          c = 1.0 / Math.sqrt(1 + t * t);\n          s = t * c;\n          tau = s / (1.0 + c);\n          h = t * a[ip * n + iq];\n          z[ip] -= h;\n          z[iq] += h;\n          w[ip] -= h;\n          w[iq] += h;\n          a[ip * n + iq] = 0.0;\n\n          // ip already shifted left by 1 unit\n          for (j = 0; j <= ip - 1; j++) {\n            vtkROTATE(a, j * n + ip, j * n + iq);\n          }\n          // ip and iq already shifted left by 1 unit\n          for (j = ip + 1; j <= iq - 1; j++) {\n            vtkROTATE(a, ip * n + j, j * n + iq);\n          }\n          // iq already shifted left by 1 unit\n          for (j = iq + 1; j < n; j++) {\n            vtkROTATE(a, ip * n + j, iq * n + j);\n          }\n          for (j = 0; j < n; j++) {\n            vtkROTATE(v, j * n + ip, j * n + iq);\n          }\n        }\n      }\n    }\n    for (ip = 0; ip < n; ip++) {\n      b[ip] += z[ip];\n      w[ip] = b[ip];\n      z[ip] = 0.0;\n    }\n  }\n\n  // this is NEVER called\n  if (i >= VTK_MAX_ROTATIONS) {\n    vtkWarningMacro('vtkMath::Jacobi: Error extracting eigenfunctions');\n    return 0;\n  }\n\n  // sort eigenfunctions: these changes do not affect accuracy\n  for (j = 0; j < n - 1; j++) {\n    // boundary incorrect\n    k = j;\n    tmp = w[k];\n    for (i = j + 1; i < n; i++) {\n      // boundary incorrect, shifted already\n      if (w[i] >= tmp || Math.abs(w[i] - tmp) < VTK_SMALL_NUMBER) {\n        // why exchange if same?\n        k = i;\n        tmp = w[k];\n      }\n    }\n    if (k !== j) {\n      w[k] = w[j];\n      w[j] = tmp;\n      swapColumnsMatrix_nxn(v, n, j, k);\n    }\n  }\n  // ensure eigenvector consistency (i.e., Jacobi can compute vectors that\n  // are negative of one another (.707,.707,0) and (-.707,-.707,0). This can\n  // reek havoc in hyperstreamline/other stuff. We will select the most\n  // positive eigenvector.\n  const ceil_half_n = (n >> 1) + (n & 1);\n  for (numPos = 0, i = 0; i < n * n; i++) {\n    if (v[i] >= 0.0) {\n      numPos++;\n    }\n  }\n  //    if ( numPos < ceil(double(n)/double(2.0)) )\n  if (numPos < ceil_half_n) {\n    for (i = 0; i < n; i++) {\n      v[i * n + j] *= -1.0;\n    }\n  }\n  return 1;\n}\nfunction matrix3x3ToQuaternion(mat_3x3, quat_4) {\n  const tmp = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n  // on-diagonal elements\n  tmp[0] = mat_3x3[0] + mat_3x3[4] + mat_3x3[8];\n  tmp[5] = mat_3x3[0] - mat_3x3[4] - mat_3x3[8];\n  tmp[10] = -mat_3x3[0] + mat_3x3[4] - mat_3x3[8];\n  tmp[15] = -mat_3x3[0] - mat_3x3[4] + mat_3x3[8];\n\n  // off-diagonal elements\n  tmp[1] = tmp[4] = mat_3x3[7] - mat_3x3[5];\n  tmp[2] = tmp[8] = mat_3x3[2] - mat_3x3[6];\n  tmp[3] = tmp[12] = mat_3x3[3] - mat_3x3[1];\n  tmp[6] = tmp[9] = mat_3x3[3] + mat_3x3[1];\n  tmp[7] = tmp[13] = mat_3x3[2] + mat_3x3[6];\n  tmp[11] = tmp[14] = mat_3x3[7] + mat_3x3[5];\n  const eigenvectors = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  const eigenvalues = [0, 0, 0, 0];\n\n  // convert into format that JacobiN can use,\n  // then use Jacobi to find eigenvalues and eigenvectors\n  // tmp is copied because jacobiN may modify it\n  const NTemp = [...tmp];\n  jacobiN(NTemp, 4, eigenvalues, eigenvectors);\n\n  // the first eigenvector is the one we want\n  quat_4[0] = eigenvectors[0];\n  quat_4[1] = eigenvectors[4];\n  quat_4[2] = eigenvectors[8];\n  quat_4[3] = eigenvectors[12];\n}\nfunction multiplyQuaternion(quat_1, quat_2, quat_out) {\n  const ww = quat_1[0] * quat_2[0];\n  const wx = quat_1[0] * quat_2[1];\n  const wy = quat_1[0] * quat_2[2];\n  const wz = quat_1[0] * quat_2[3];\n  const xw = quat_1[1] * quat_2[0];\n  const xx = quat_1[1] * quat_2[1];\n  const xy = quat_1[1] * quat_2[2];\n  const xz = quat_1[1] * quat_2[3];\n  const yw = quat_1[2] * quat_2[0];\n  const yx = quat_1[2] * quat_2[1];\n  const yy = quat_1[2] * quat_2[2];\n  const yz = quat_1[2] * quat_2[3];\n  const zw = quat_1[3] * quat_2[0];\n  const zx = quat_1[3] * quat_2[1];\n  const zy = quat_1[3] * quat_2[2];\n  const zz = quat_1[3] * quat_2[3];\n  quat_out[0] = ww - xx - yy - zz;\n  quat_out[1] = wx + xw + yz - zy;\n  quat_out[2] = wy - xz + yw + zx;\n  quat_out[3] = wz + xy - yx + zw;\n}\nfunction orthogonalize3x3(a_3x3, out_3x3) {\n  // copy the matrix\n  for (let i = 0; i < 9; i++) {\n    out_3x3[i] = a_3x3[i];\n  }\n\n  // Pivot the matrix to improve accuracy\n  const scale = createArray(3);\n  const index = createArray(3);\n  let largest;\n\n  // Loop over rows to get implicit scaling information\n  for (let i = 0; i < 3; i++) {\n    const x1 = Math.abs(out_3x3[i * 3]);\n    const x2 = Math.abs(out_3x3[i * 3 + 1]);\n    const x3 = Math.abs(out_3x3[i * 3 + 2]);\n    largest = x2 > x1 ? x2 : x1;\n    largest = x3 > largest ? x3 : largest;\n    scale[i] = 1;\n    if (largest !== 0) {\n      scale[i] /= largest;\n    }\n  }\n\n  // first column\n  const x1 = Math.abs(out_3x3[0]) * scale[0];\n  const x2 = Math.abs(out_3x3[3]) * scale[1];\n  const x3 = Math.abs(out_3x3[6]) * scale[2];\n  index[0] = 0;\n  largest = x1;\n  if (x2 >= largest) {\n    largest = x2;\n    index[0] = 1;\n  }\n  if (x3 >= largest) {\n    index[0] = 2;\n  }\n  if (index[0] !== 0) {\n    // swap vectors\n    swapColumnsMatrix_nxn(out_3x3, 3, index[0], 0);\n    scale[index[0]] = scale[0];\n  }\n\n  // second column\n  const y2 = Math.abs(out_3x3[4]) * scale[1];\n  const y3 = Math.abs(out_3x3[7]) * scale[2];\n  index[1] = 1;\n  largest = y2;\n  if (y3 >= largest) {\n    index[1] = 2;\n    // swap vectors\n    swapColumnsMatrix_nxn(out_3x3, 3, 1, 2);\n  }\n\n  // third column\n  index[2] = 2;\n\n  // A quaternion can only describe a pure rotation, not\n  // a rotation with a flip, therefore the flip must be\n  // removed before the matrix is converted to a quaternion.\n  let flip = 0;\n  if (determinant3x3(out_3x3) < 0) {\n    flip = 1;\n    for (let i = 0; i < 9; i++) {\n      out_3x3[i] = -out_3x3[i];\n    }\n  }\n\n  // Do orthogonalization using a quaternion intermediate\n  // (this, essentially, does the orthogonalization via\n  // diagonalization of an appropriately constructed symmetric\n  // 4x4 matrix rather than by doing SVD of the 3x3 matrix)\n  const quat = createArray(4);\n  matrix3x3ToQuaternion(out_3x3, quat);\n  quaternionToMatrix3x3(quat, out_3x3);\n\n  // Put the flip back into the orthogonalized matrix.\n  if (flip) {\n    for (let i = 0; i < 9; i++) {\n      out_3x3[i] = -out_3x3[i];\n    }\n  }\n\n  // Undo the pivoting\n  if (index[1] !== 1) {\n    swapColumnsMatrix_nxn(out_3x3, 3, index[1], 1);\n  }\n  if (index[0] !== 0) {\n    swapColumnsMatrix_nxn(out_3x3, 3, index[0], 0);\n  }\n}\nfunction diagonalize3x3(a_3x3, w_3, v_3x3) {\n  let i;\n  let j;\n  let k;\n  let maxI;\n  let tmp;\n  let maxVal;\n\n  // a is copied because jacobiN may modify it\n  const copyA = [...a_3x3];\n\n  // diagonalize using Jacobi\n  jacobiN(copyA, 3, w_3, v_3x3);\n\n  // if all the eigenvalues are the same, return identity matrix\n  if (w_3[0] === w_3[1] && w_3[0] === w_3[2]) {\n    identity3x3(v_3x3);\n    return;\n  }\n\n  // transpose temporarily, it makes it easier to sort the eigenvectors\n  transpose3x3(v_3x3, v_3x3);\n\n  // if two eigenvalues are the same, re-orthogonalize to optimally line\n  // up the eigenvectors with the x, y, and z axes\n  for (i = 0; i < 3; i++) {\n    // two eigenvalues are the same\n    if (w_3[(i + 1) % 3] === w_3[(i + 2) % 3]) {\n      // find maximum element of the independent eigenvector\n      maxVal = Math.abs(v_3x3[i * 3]);\n      maxI = 0;\n      for (j = 1; j < 3; j++) {\n        if (maxVal < (tmp = Math.abs(v_3x3[i * 3 + j]))) {\n          maxVal = tmp;\n          maxI = j;\n        }\n      }\n      // swap the eigenvector into its proper position\n      if (maxI !== i) {\n        tmp = w_3[maxI];\n        w_3[maxI] = w_3[i];\n        w_3[i] = tmp;\n        swapRowsMatrix_nxn(v_3x3, 3, i, maxI);\n      }\n      // maximum element of eigenvector should be positive\n      if (v_3x3[maxI * 3 + maxI] < 0) {\n        v_3x3[maxI * 3] = -v_3x3[maxI * 3];\n        v_3x3[maxI * 3 + 1] = -v_3x3[maxI * 3 + 1];\n        v_3x3[maxI * 3 + 2] = -v_3x3[maxI * 3 + 2];\n      }\n\n      // re-orthogonalize the other two eigenvectors\n      j = (maxI + 1) % 3;\n      k = (maxI + 2) % 3;\n      v_3x3[j * 3] = 0.0;\n      v_3x3[j * 3 + 1] = 0.0;\n      v_3x3[j * 3 + 2] = 0.0;\n      v_3x3[j * 3 + j] = 1.0;\n      const vectTmp1 = cross([v_3x3[maxI * 3], v_3x3[maxI * 3 + 1], v_3x3[maxI * 3 + 2]], [v_3x3[j * 3], v_3x3[j * 3 + 1], v_3x3[j * 3 + 2]], []);\n      normalize(vectTmp1);\n      const vectTmp2 = cross(vectTmp1, [v_3x3[maxI * 3], v_3x3[maxI * 3 + 1], v_3x3[maxI * 3 + 2]], []);\n      for (let t = 0; t < 3; t++) {\n        v_3x3[k * 3 + t] = vectTmp1[t];\n        v_3x3[j * 3 + t] = vectTmp2[t];\n      }\n\n      // transpose vectors back to columns\n      transpose3x3(v_3x3, v_3x3);\n      return;\n    }\n  }\n\n  // the three eigenvalues are different, just sort the eigenvectors\n  // to align them with the x, y, and z axes\n\n  // find the vector with the largest x element, make that vector\n  // the first vector\n  maxVal = Math.abs(v_3x3[0]);\n  maxI = 0;\n  for (i = 1; i < 3; i++) {\n    if (maxVal < (tmp = Math.abs(v_3x3[i * 3]))) {\n      maxVal = tmp;\n      maxI = i;\n    }\n  }\n  // swap eigenvalue and eigenvector\n  if (maxI !== 0) {\n    const eigenValTmp = w_3[maxI];\n    w_3[maxI] = w_3[0];\n    w_3[0] = eigenValTmp;\n    swapRowsMatrix_nxn(v_3x3, 3, maxI, 0);\n  }\n  // do the same for the y element\n  if (Math.abs(v_3x3[4]) < Math.abs(v_3x3[7])) {\n    const eigenValTmp = w_3[2];\n    w_3[2] = w_3[1];\n    w_3[1] = eigenValTmp;\n    swapRowsMatrix_nxn(v_3x3, 3, 1, 2);\n  }\n\n  // ensure that the sign of the eigenvectors is correct\n  for (i = 0; i < 2; i++) {\n    if (v_3x3[i * 3 + i] < 0) {\n      v_3x3[i * 3] = -v_3x3[i * 3];\n      v_3x3[i * 3 + 1] = -v_3x3[i * 3 + 1];\n      v_3x3[i * 3 + 2] = -v_3x3[i * 3 + 2];\n    }\n  }\n  // set sign of final eigenvector to ensure that determinant is positive\n  if (determinant3x3(v_3x3) < 0) {\n    v_3x3[6] = -v_3x3[6];\n    v_3x3[7] = -v_3x3[7];\n    v_3x3[8] = -v_3x3[8];\n  }\n\n  // transpose the eigenvectors back again\n  transpose3x3(v_3x3, v_3x3);\n}\nfunction singularValueDecomposition3x3(a_3x3, u_3x3, w_3, vT_3x3) {\n  let i;\n  // copy so that A can be used for U or VT without risk\n  const B = [...a_3x3];\n\n  // temporarily flip if determinant is negative\n  const d = determinant3x3(B);\n  if (d < 0) {\n    for (i = 0; i < 9; i++) {\n      B[i] = -B[i];\n    }\n  }\n\n  // orthogonalize, diagonalize, etc.\n  orthogonalize3x3(B, u_3x3);\n  transpose3x3(B, B);\n  multiply3x3_mat3(B, u_3x3, vT_3x3);\n  diagonalize3x3(vT_3x3, w_3, vT_3x3);\n  multiply3x3_mat3(u_3x3, vT_3x3, u_3x3);\n  transpose3x3(vT_3x3, vT_3x3);\n\n  // re-create the flip\n  if (d < 0) {\n    w_3[0] = -w_3[0];\n    w_3[1] = -w_3[1];\n    w_3[2] = -w_3[2];\n  }\n}\n\n/**\n * Factor linear equations Ax = b using LU decomposition A = LU. Output factorization LU is in matrix A.\n * @param {Matrix} A square matrix\n * @param {Number} index integer array of pivot indices index[0->n-1]\n * @param {Number} size matrix size\n */\nfunction luFactorLinearSystem(A, index, size) {\n  let i;\n  let j;\n  let k;\n  let largest;\n  let maxI = 0;\n  let sum;\n  let temp1;\n  let temp2;\n  const scale = createArray(size);\n\n  //\n  // Loop over rows to get implicit scaling information\n  //\n  for (i = 0; i < size; i++) {\n    for (largest = 0.0, j = 0; j < size; j++) {\n      if ((temp2 = Math.abs(A[i * size + j])) > largest) {\n        largest = temp2;\n      }\n    }\n    if (largest === 0.0) {\n      vtkWarningMacro('Unable to factor linear system');\n      return 0;\n    }\n    scale[i] = 1.0 / largest;\n  }\n  //\n  // Loop over all columns using Crout's method\n  //\n  for (j = 0; j < size; j++) {\n    for (i = 0; i < j; i++) {\n      sum = A[i * size + j];\n      for (k = 0; k < i; k++) {\n        sum -= A[i * size + k] * A[k * size + j];\n      }\n      A[i * size + j] = sum;\n    }\n    //\n    // Begin search for largest pivot element\n    //\n    for (largest = 0.0, i = j; i < size; i++) {\n      sum = A[i * size + j];\n      for (k = 0; k < j; k++) {\n        sum -= A[i * size + k] * A[k * size + j];\n      }\n      A[i * size + j] = sum;\n      if ((temp1 = scale[i] * Math.abs(sum)) >= largest) {\n        largest = temp1;\n        maxI = i;\n      }\n    }\n    //\n    // Check for row interchange\n    //\n    if (j !== maxI) {\n      for (k = 0; k < size; k++) {\n        temp1 = A[maxI * size + k];\n        A[maxI * size + k] = A[j * size + k];\n        A[j * size + k] = temp1;\n      }\n      scale[maxI] = scale[j];\n    }\n    //\n    // Divide by pivot element and perform elimination\n    //\n    index[j] = maxI;\n    if (Math.abs(A[j * size + j]) <= VTK_SMALL_NUMBER) {\n      vtkWarningMacro('Unable to factor linear system');\n      return 0;\n    }\n    if (j !== size - 1) {\n      temp1 = 1.0 / A[j * size + j];\n      for (i = j + 1; i < size; i++) {\n        A[i * size + j] *= temp1;\n      }\n    }\n  }\n  return 1;\n}\nfunction luSolveLinearSystem(A, index, x, size) {\n  let i;\n  let j;\n  let ii;\n  let idx;\n  let sum;\n  //\n  // Proceed with forward and backsubstitution for L and U\n  // matrices.  First, forward substitution.\n  //\n  for (ii = -1, i = 0; i < size; i++) {\n    idx = index[i];\n    sum = x[idx];\n    x[idx] = x[i];\n    if (ii >= 0) {\n      for (j = ii; j <= i - 1; j++) {\n        sum -= A[i * size + j] * x[j];\n      }\n    } else if (sum !== 0.0) {\n      ii = i;\n    }\n    x[i] = sum;\n  }\n  //\n  // Now, back substitution\n  //\n  for (i = size - 1; i >= 0; i--) {\n    sum = x[i];\n    for (j = i + 1; j < size; j++) {\n      sum -= A[i * size + j] * x[j];\n    }\n    x[i] = sum / A[i * size + i];\n  }\n}\nfunction solveLinearSystem(A, x, size) {\n  // if we solving something simple, just solve it\n  if (size === 2) {\n    const y = createArray(2);\n    const det = determinant2x2(A[0], A[1], A[2], A[3]);\n    if (det === 0.0) {\n      // Unable to solve linear system\n      return 0;\n    }\n    y[0] = (A[3] * x[0] - A[1] * x[1]) / det;\n    y[1] = (-(A[2] * x[0]) + A[0] * x[1]) / det;\n    x[0] = y[0];\n    x[1] = y[1];\n    return 1;\n  }\n  if (size === 1) {\n    if (A[0] === 0.0) {\n      // Unable to solve linear system\n      return 0;\n    }\n    x[0] /= A[0];\n    return 1;\n  }\n\n  //\n  // System of equations is not trivial, use Crout's method\n  //\n\n  // Check on allocation of working vectors\n  const index = createArray(size);\n\n  // Factor and solve matrix\n  if (luFactorLinearSystem(A, index, size) === 0) {\n    return 0;\n  }\n  luSolveLinearSystem(A, index, x, size);\n  return 1;\n}\n\n// Note that A is modified during the inversion !\nfunction invertMatrix(A, AI, size) {\n  let index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  let column = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  const tmp1Size = index || createArray(size);\n  const tmp2Size = column || createArray(size);\n\n  // Factor matrix; then begin solving for inverse one column at a time.\n  // Note: tmp1Size returned value is used later, tmp2Size is just working\n  // memory whose values are not used in LUSolveLinearSystem\n  if (luFactorLinearSystem(A, tmp1Size, size) === 0) {\n    return null;\n  }\n  for (let j = 0; j < size; j++) {\n    for (let i = 0; i < size; i++) {\n      tmp2Size[i] = 0.0;\n    }\n    tmp2Size[j] = 1.0;\n    luSolveLinearSystem(A, tmp1Size, tmp2Size, size);\n    for (let i = 0; i < size; i++) {\n      AI[i * size + j] = tmp2Size[i];\n    }\n  }\n  return AI;\n}\nfunction estimateMatrixCondition(A, size) {\n  let minValue = +Number.MAX_VALUE;\n  let maxValue = -Number.MAX_VALUE;\n\n  // find the maximum value\n  for (let i = 0; i < size; i++) {\n    for (let j = i; j < size; j++) {\n      if (Math.abs(A[i * size + j]) > maxValue) {\n        maxValue = Math.abs(A[i * size + j]);\n      }\n    }\n  }\n\n  // find the minimum diagonal value\n  for (let i = 0; i < size; i++) {\n    if (Math.abs(A[i * size + i]) < minValue) {\n      minValue = Math.abs(A[i * size + i]);\n    }\n  }\n  if (minValue === 0.0) {\n    return Number.MAX_VALUE;\n  }\n  return maxValue / minValue;\n}\nfunction jacobi(a_3x3, w, v) {\n  return jacobiN(a_3x3, 3, w, v);\n}\nfunction solveHomogeneousLeastSquares(numberOfSamples, xt, xOrder, mt) {\n  // check dimensional consistency\n  if (numberOfSamples < xOrder) {\n    vtkWarningMacro('Insufficient number of samples. Underdetermined.');\n    return 0;\n  }\n  let i;\n  let j;\n  let k;\n\n  // set up intermediate variables\n  // Allocate matrix to hold X times transpose of X\n  const XXt = createArray(xOrder * xOrder); // size x by x\n  // Allocate the array of eigenvalues and eigenvectors\n  const eigenvals = createArray(xOrder);\n  const eigenvecs = createArray(xOrder * xOrder);\n\n  // Calculate XXt upper half only, due to symmetry\n  for (k = 0; k < numberOfSamples; k++) {\n    for (i = 0; i < xOrder; i++) {\n      for (j = i; j < xOrder; j++) {\n        XXt[i * xOrder + j] += xt[k * xOrder + i] * xt[k * xOrder + j];\n      }\n    }\n  }\n\n  // now fill in the lower half of the XXt matrix\n  for (i = 0; i < xOrder; i++) {\n    for (j = 0; j < i; j++) {\n      XXt[i * xOrder + j] = XXt[j * xOrder + i];\n    }\n  }\n\n  // Compute the eigenvectors and eigenvalues\n  jacobiN(XXt, xOrder, eigenvals, eigenvecs);\n\n  // Smallest eigenval is at the end of the list (xOrder-1), and solution is\n  // corresponding eigenvec.\n  for (i = 0; i < xOrder; i++) {\n    mt[i] = eigenvecs[i * xOrder + xOrder - 1];\n  }\n  return 1;\n}\nfunction solveLeastSquares(numberOfSamples, xt, xOrder, yt, yOrder, mt) {\n  let checkHomogeneous = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : true;\n  // check dimensional consistency\n  if (numberOfSamples < xOrder || numberOfSamples < yOrder) {\n    vtkWarningMacro('Insufficient number of samples. Underdetermined.');\n    return 0;\n  }\n  const homogenFlags = createArray(yOrder);\n  let allHomogeneous = 1;\n  let hmt;\n  let homogRC = 0;\n  let i;\n  let j;\n  let k;\n  let someHomogeneous = 0;\n\n  // Ok, first init some flags check and see if all the systems are homogeneous\n  if (checkHomogeneous) {\n    // If Y' is zero, it's a homogeneous system and can't be solved via\n    // the pseudoinverse method. Detect this case, warn the user, and\n    // invoke SolveHomogeneousLeastSquares instead. Note that it doesn't\n    // really make much sense for yOrder to be greater than one in this case,\n    // since that's just yOrder occurrences of a 0 vector on the RHS, but\n    // we allow it anyway. N\n\n    // Initialize homogeneous flags on a per-right-hand-side basis\n    for (j = 0; j < yOrder; j++) {\n      homogenFlags[j] = 1;\n    }\n    for (i = 0; i < numberOfSamples; i++) {\n      for (j = 0; j < yOrder; j++) {\n        if (Math.abs(yt[i * yOrder + j]) > VTK_SMALL_NUMBER) {\n          allHomogeneous = 0;\n          homogenFlags[j] = 0;\n        }\n      }\n    }\n\n    // If we've got one system, and it's homogeneous, do it and bail out quickly.\n    if (allHomogeneous && yOrder === 1) {\n      vtkWarningMacro('Detected homogeneous system (Y=0), calling SolveHomogeneousLeastSquares()');\n      return solveHomogeneousLeastSquares(numberOfSamples, xt, xOrder, mt);\n    }\n\n    // Ok, we've got more than one system of equations.\n    // Figure out if we need to calculate the homogeneous equation solution for\n    // any of them.\n    if (allHomogeneous) {\n      someHomogeneous = 1;\n    } else {\n      for (j = 0; j < yOrder; j++) {\n        if (homogenFlags[j]) {\n          someHomogeneous = 1;\n        }\n      }\n    }\n  }\n\n  // If necessary, solve the homogeneous problem\n  if (someHomogeneous) {\n    // hmt is the homogeneous equation version of mt, the general solution.\n    // hmt should be xOrder x yOrder, but since we are solving only the homogeneous part, here it is xOrder x 1\n    hmt = createArray(xOrder);\n\n    // Ok, solve the homogeneous problem\n    homogRC = solveHomogeneousLeastSquares(numberOfSamples, xt, xOrder, hmt);\n  }\n\n  // set up intermediate variables\n  const XXt = createArray(xOrder * xOrder); // size x by x\n  const XXtI = createArray(xOrder * xOrder); // size x by x\n  const XYt = createArray(xOrder * yOrder); // size x by y\n\n  // first find the pseudoinverse matrix\n  for (k = 0; k < numberOfSamples; k++) {\n    for (i = 0; i < xOrder; i++) {\n      // first calculate the XXt matrix, only do the upper half (symmetrical)\n      for (j = i; j < xOrder; j++) {\n        XXt[i * xOrder + j] += xt[k * xOrder + i] * xt[k * xOrder + j];\n      }\n\n      // now calculate the XYt matrix\n      for (j = 0; j < yOrder; j++) {\n        XYt[i * yOrder + j] += xt[k * xOrder + i] * yt[k * yOrder + j];\n      }\n    }\n  }\n\n  // now fill in the lower half of the XXt matrix\n  for (i = 0; i < xOrder; i++) {\n    for (j = 0; j < i; j++) {\n      XXt[i * xOrder + j] = XXt[j * xOrder + i];\n    }\n  }\n  const successFlag = invertMatrix(XXt, XXtI, xOrder);\n\n  // next get the inverse of XXt\n  if (successFlag) {\n    for (i = 0; i < xOrder; i++) {\n      for (j = 0; j < yOrder; j++) {\n        mt[i * yOrder + j] = 0.0;\n        for (k = 0; k < xOrder; k++) {\n          mt[i * yOrder + j] += XXtI[i * xOrder + k] * XYt[k * yOrder + j];\n        }\n      }\n    }\n  }\n\n  // Fix up any of the solutions that correspond to the homogeneous equation\n  // problem.\n  if (someHomogeneous) {\n    for (j = 0; j < yOrder; j++) {\n      if (homogenFlags[j]) {\n        // Fix this one\n        for (i = 0; i < xOrder; i++) {\n          mt[i * yOrder + j] = hmt[i * yOrder];\n        }\n      }\n    }\n  }\n  if (someHomogeneous) {\n    return homogRC && successFlag;\n  }\n  return successFlag;\n}\nfunction hex2float(hexStr) {\n  let outFloatArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0.5, 1];\n  switch (hexStr.length) {\n    case 3:\n      // abc => #aabbcc\n      outFloatArray[0] = parseInt(hexStr[0], 16) * 17 / 255;\n      outFloatArray[1] = parseInt(hexStr[1], 16) * 17 / 255;\n      outFloatArray[2] = parseInt(hexStr[2], 16) * 17 / 255;\n      return outFloatArray;\n    case 4:\n      // #abc => #aabbcc\n      outFloatArray[0] = parseInt(hexStr[1], 16) * 17 / 255;\n      outFloatArray[1] = parseInt(hexStr[2], 16) * 17 / 255;\n      outFloatArray[2] = parseInt(hexStr[3], 16) * 17 / 255;\n      return outFloatArray;\n    case 6:\n      // ab01df => #ab01df\n      outFloatArray[0] = parseInt(hexStr.substr(0, 2), 16) / 255;\n      outFloatArray[1] = parseInt(hexStr.substr(2, 2), 16) / 255;\n      outFloatArray[2] = parseInt(hexStr.substr(4, 2), 16) / 255;\n      return outFloatArray;\n    case 7:\n      // #ab01df\n      outFloatArray[0] = parseInt(hexStr.substr(1, 2), 16) / 255;\n      outFloatArray[1] = parseInt(hexStr.substr(3, 2), 16) / 255;\n      outFloatArray[2] = parseInt(hexStr.substr(5, 2), 16) / 255;\n      return outFloatArray;\n    case 9:\n      // #ab01df00\n      outFloatArray[0] = parseInt(hexStr.substr(1, 2), 16) / 255;\n      outFloatArray[1] = parseInt(hexStr.substr(3, 2), 16) / 255;\n      outFloatArray[2] = parseInt(hexStr.substr(5, 2), 16) / 255;\n      outFloatArray[3] = parseInt(hexStr.substr(7, 2), 16) / 255;\n      return outFloatArray;\n    default:\n      return outFloatArray;\n  }\n}\nfunction rgb2hsv(rgb, hsv) {\n  let h;\n  let s;\n  const [r, g, b] = rgb;\n  const onethird = 1.0 / 3.0;\n  const onesixth = 1.0 / 6.0;\n  const twothird = 2.0 / 3.0;\n  let cmax = r;\n  let cmin = r;\n  if (g > cmax) {\n    cmax = g;\n  } else if (g < cmin) {\n    cmin = g;\n  }\n  if (b > cmax) {\n    cmax = b;\n  } else if (b < cmin) {\n    cmin = b;\n  }\n  const v = cmax;\n  if (v > 0.0) {\n    s = (cmax - cmin) / cmax;\n  } else {\n    s = 0.0;\n  }\n  if (s > 0) {\n    if (r === cmax) {\n      h = onesixth * (g - b) / (cmax - cmin);\n    } else if (g === cmax) {\n      h = onethird + onesixth * (b - r) / (cmax - cmin);\n    } else {\n      h = twothird + onesixth * (r - g) / (cmax - cmin);\n    }\n    if (h < 0.0) {\n      h += 1.0;\n    }\n  } else {\n    h = 0.0;\n  }\n\n  // Set the values back to the array\n  hsv[0] = h;\n  hsv[1] = s;\n  hsv[2] = v;\n}\nfunction hsv2rgb(hsv, rgb) {\n  const [h, s, v] = hsv;\n  const onethird = 1.0 / 3.0;\n  const onesixth = 1.0 / 6.0;\n  const twothird = 2.0 / 3.0;\n  const fivesixth = 5.0 / 6.0;\n  let r;\n  let g;\n  let b;\n\n  // compute RGB from HSV\n  if (h > onesixth && h <= onethird) {\n    // green/red\n    g = 1.0;\n    r = (onethird - h) / onesixth;\n    b = 0.0;\n  } else if (h > onethird && h <= 0.5) {\n    // green/blue\n    g = 1.0;\n    b = (h - onethird) / onesixth;\n    r = 0.0;\n  } else if (h > 0.5 && h <= twothird) {\n    // blue/green\n    b = 1.0;\n    g = (twothird - h) / onesixth;\n    r = 0.0;\n  } else if (h > twothird && h <= fivesixth) {\n    // blue/red\n    b = 1.0;\n    r = (h - twothird) / onesixth;\n    g = 0.0;\n  } else if (h > fivesixth && h <= 1.0) {\n    // red/blue\n    r = 1.0;\n    b = (1.0 - h) / onesixth;\n    g = 0.0;\n  } else {\n    // red/green\n    r = 1.0;\n    g = h / onesixth;\n    b = 0.0;\n  }\n\n  // add Saturation to the equation.\n  r = s * r + (1.0 - s);\n  g = s * g + (1.0 - s);\n  b = s * b + (1.0 - s);\n  r *= v;\n  g *= v;\n  b *= v;\n\n  // Assign back to the array\n  rgb[0] = r;\n  rgb[1] = g;\n  rgb[2] = b;\n}\nfunction lab2xyz(lab, xyz) {\n  // LAB to XYZ\n  const [L, a, b] = lab;\n  let var_Y = (L + 16) / 116;\n  let var_X = a / 500 + var_Y;\n  let var_Z = var_Y - b / 200;\n  if (var_Y ** 3 > 0.008856) {\n    var_Y **= 3;\n  } else {\n    var_Y = (var_Y - 16.0 / 116.0) / 7.787;\n  }\n  if (var_X ** 3 > 0.008856) {\n    var_X **= 3;\n  } else {\n    var_X = (var_X - 16.0 / 116.0) / 7.787;\n  }\n  if (var_Z ** 3 > 0.008856) {\n    var_Z **= 3;\n  } else {\n    var_Z = (var_Z - 16.0 / 116.0) / 7.787;\n  }\n  const ref_X = 0.9505;\n  const ref_Y = 1.0;\n  const ref_Z = 1.089;\n  xyz[0] = ref_X * var_X; // ref_X = 0.9505  Observer= 2 deg Illuminant= D65\n  xyz[1] = ref_Y * var_Y; // ref_Y = 1.000\n  xyz[2] = ref_Z * var_Z; // ref_Z = 1.089\n}\n\nfunction xyz2lab(xyz, lab) {\n  const [x, y, z] = xyz;\n  const ref_X = 0.9505;\n  const ref_Y = 1.0;\n  const ref_Z = 1.089;\n  let var_X = x / ref_X; // ref_X = 0.9505  Observer= 2 deg, Illuminant= D65\n  let var_Y = y / ref_Y; // ref_Y = 1.000\n  let var_Z = z / ref_Z; // ref_Z = 1.089\n\n  if (var_X > 0.008856) var_X **= 1.0 / 3.0;else var_X = 7.787 * var_X + 16.0 / 116.0;\n  if (var_Y > 0.008856) var_Y **= 1.0 / 3.0;else var_Y = 7.787 * var_Y + 16.0 / 116.0;\n  if (var_Z > 0.008856) var_Z **= 1.0 / 3.0;else var_Z = 7.787 * var_Z + 16.0 / 116.0;\n  lab[0] = 116 * var_Y - 16;\n  lab[1] = 500 * (var_X - var_Y);\n  lab[2] = 200 * (var_Y - var_Z);\n}\nfunction xyz2rgb(xyz, rgb) {\n  const [x, y, z] = xyz;\n  let r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  let g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  let b = x * 0.0557 + y * -0.204 + z * 1.057;\n\n  // The following performs a \"gamma correction\" specified by the sRGB color\n  // space.  sRGB is defined by a canonical definition of a display monitor and\n  // has been standardized by the International Electrotechnical Commission (IEC\n  // 61966-2-1).  The nonlinearity of the correction is designed to make the\n  // colors more perceptually uniform.  This color space has been adopted by\n  // several applications including Adobe Photoshop and Microsoft Windows color\n  // management.  OpenGL is agnostic on its RGB color space, but it is reasonable\n  // to assume it is close to this one.\n  if (r > 0.0031308) r = 1.055 * r ** (1 / 2.4) - 0.055;else r *= 12.92;\n  if (g > 0.0031308) g = 1.055 * g ** (1 / 2.4) - 0.055;else g *= 12.92;\n  if (b > 0.0031308) b = 1.055 * b ** (1 / 2.4) - 0.055;else b *= 12.92;\n\n  // Clip colors. ideally we would do something that is perceptually closest\n  // (since we can see colors outside of the display gamut), but this seems to\n  // work well enough.\n  let maxVal = r;\n  if (maxVal < g) maxVal = g;\n  if (maxVal < b) maxVal = b;\n  if (maxVal > 1.0) {\n    r /= maxVal;\n    g /= maxVal;\n    b /= maxVal;\n  }\n  if (r < 0) r = 0;\n  if (g < 0) g = 0;\n  if (b < 0) b = 0;\n\n  // Push values back to array\n  rgb[0] = r;\n  rgb[1] = g;\n  rgb[2] = b;\n}\nfunction rgb2xyz(rgb, xyz) {\n  let [r, g, b] = rgb;\n  // The following performs a \"gamma correction\" specified by the sRGB color\n  // space.  sRGB is defined by a canonical definition of a display monitor and\n  // has been standardized by the International Electrotechnical Commission (IEC\n  // 61966-2-1).  The nonlinearity of the correction is designed to make the\n  // colors more perceptually uniform.  This color space has been adopted by\n  // several applications including Adobe Photoshop and Microsoft Windows color\n  // management.  OpenGL is agnostic on its RGB color space, but it is reasonable\n  // to assume it is close to this one.\n  if (r > 0.04045) r = ((r + 0.055) / 1.055) ** 2.4;else r /= 12.92;\n  if (g > 0.04045) g = ((g + 0.055) / 1.055) ** 2.4;else g /= 12.92;\n  if (b > 0.04045) b = ((b + 0.055) / 1.055) ** 2.4;else b /= 12.92;\n\n  // Observer. = 2 deg, Illuminant = D65\n  xyz[0] = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  xyz[1] = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  xyz[2] = r * 0.0193 + g * 0.1192 + b * 0.9505;\n}\nfunction rgb2lab(rgb, lab) {\n  const xyz = [0, 0, 0];\n  rgb2xyz(rgb, xyz);\n  xyz2lab(xyz, lab);\n}\nfunction lab2rgb(lab, rgb) {\n  const xyz = [0, 0, 0];\n  lab2xyz(lab, xyz);\n  xyz2rgb(xyz, rgb);\n}\nfunction uninitializeBounds(bounds) {\n  bounds[0] = 1.0;\n  bounds[1] = -1.0;\n  bounds[2] = 1.0;\n  bounds[3] = -1.0;\n  bounds[4] = 1.0;\n  bounds[5] = -1.0;\n  return bounds;\n}\nfunction areBoundsInitialized(bounds) {\n  return !(bounds[1] - bounds[0] < 0.0);\n}\n\n/**\n * @deprecated please use vtkBoundingBox.addPoints(vtkBoundingBox.reset([]), points)\n */\nfunction computeBoundsFromPoints(point1, point2, bounds) {\n  bounds[0] = Math.min(point1[0], point2[0]);\n  bounds[1] = Math.max(point1[0], point2[0]);\n  bounds[2] = Math.min(point1[1], point2[1]);\n  bounds[3] = Math.max(point1[1], point2[1]);\n  bounds[4] = Math.min(point1[2], point2[2]);\n  bounds[5] = Math.max(point1[2], point2[2]);\n  return bounds;\n}\nfunction clampValue(value, minValue, maxValue) {\n  if (value < minValue) {\n    return minValue;\n  }\n  if (value > maxValue) {\n    return maxValue;\n  }\n  return value;\n}\nfunction clampVector(vector, minVector, maxVector) {\n  let out = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [0, 0, 0];\n  out[0] = clampValue(vector[0], minVector[0], maxVector[0]);\n  out[1] = clampValue(vector[1], minVector[1], maxVector[1]);\n  out[2] = clampValue(vector[2], minVector[2], maxVector[2]);\n  return out;\n}\nfunction clampAndNormalizeValue(value, range) {\n  let result = 0;\n  if (range[0] !== range[1]) {\n    // clamp\n    if (value < range[0]) {\n      result = range[0];\n    } else if (value > range[1]) {\n      result = range[1];\n    } else {\n      result = value;\n    }\n    // normalize\n    result = (result - range[0]) / (range[1] - range[0]);\n  }\n  return result;\n}\nconst getScalarTypeFittingRange = notImplemented('GetScalarTypeFittingRange');\nconst getAdjustedScalarRange = notImplemented('GetAdjustedScalarRange');\nfunction extentIsWithinOtherExtent(extent1, extent2) {\n  if (!extent1 || !extent2) {\n    return 0;\n  }\n  for (let i = 0; i < 6; i += 2) {\n    if (extent1[i] < extent2[i] || extent1[i] > extent2[i + 1] || extent1[i + 1] < extent2[i] || extent1[i + 1] > extent2[i + 1]) {\n      return 0;\n    }\n  }\n  return 1;\n}\nfunction boundsIsWithinOtherBounds(bounds1_6, bounds2_6, delta_3) {\n  if (!bounds1_6 || !bounds2_6) {\n    return 0;\n  }\n  for (let i = 0; i < 6; i += 2) {\n    if (bounds1_6[i] + delta_3[i / 2] < bounds2_6[i] || bounds1_6[i] - delta_3[i / 2] > bounds2_6[i + 1] || bounds1_6[i + 1] + delta_3[i / 2] < bounds2_6[i] || bounds1_6[i + 1] - delta_3[i / 2] > bounds2_6[i + 1]) {\n      return 0;\n    }\n  }\n  return 1;\n}\nfunction pointIsWithinBounds(point_3, bounds_6, delta_3) {\n  if (!point_3 || !bounds_6 || !delta_3) {\n    return 0;\n  }\n  for (let i = 0; i < 3; i++) {\n    if (point_3[i] + delta_3[i] < bounds_6[2 * i] || point_3[i] - delta_3[i] > bounds_6[2 * i + 1]) {\n      return 0;\n    }\n  }\n  return 1;\n}\nfunction solve3PointCircle(p1, p2, p3, center) {\n  const v21 = createArray(3);\n  const v32 = createArray(3);\n  const v13 = createArray(3);\n  const v12 = createArray(3);\n  const v23 = createArray(3);\n  const v31 = createArray(3);\n  for (let i = 0; i < 3; ++i) {\n    v21[i] = p1[i] - p2[i];\n    v32[i] = p2[i] - p3[i];\n    v13[i] = p3[i] - p1[i];\n    v12[i] = -v21[i];\n    v23[i] = -v32[i];\n    v31[i] = -v13[i];\n  }\n  const norm12 = norm(v12);\n  const norm23 = norm(v23);\n  const norm13 = norm(v13);\n  const crossv21v32 = createArray(3);\n  cross(v21, v32, crossv21v32);\n  const normCross = norm(crossv21v32);\n  const radius = norm12 * norm23 * norm13 / (2 * normCross);\n  const normCross22 = 2 * normCross * normCross;\n  const alpha = norm23 * norm23 * dot(v21, v31) / normCross22;\n  const beta = norm13 * norm13 * dot(v12, v32) / normCross22;\n  const gamma = norm12 * norm12 * dot(v13, v23) / normCross22;\n  for (let i = 0; i < 3; ++i) {\n    center[i] = alpha * p1[i] + beta * p2[i] + gamma * p3[i];\n  }\n  return radius;\n}\nconst inf = Infinity;\nconst negInf = -Infinity;\nconst isInf = value => !Number.isFinite(value);\nconst {\n  isFinite,\n  isNaN\n} = Number;\nconst isNan = isNaN;\n\n// JavaScript - add-on ----------------------\n\nfunction createUninitializedBounds() {\n  return [].concat([Number.MAX_VALUE, -Number.MAX_VALUE,\n  // X\n  Number.MAX_VALUE, -Number.MAX_VALUE,\n  // Y\n  Number.MAX_VALUE, -Number.MAX_VALUE // Z\n  ]);\n}\n\nfunction getMajorAxisIndex(vector) {\n  let maxValue = -1;\n  let axisIndex = -1;\n  for (let i = 0; i < vector.length; i++) {\n    const value = Math.abs(vector[i]);\n    if (value > maxValue) {\n      axisIndex = i;\n      maxValue = value;\n    }\n  }\n  return axisIndex;\n}\n\n// Return the closest orthogonal matrix of 1, -1 and 0\n// It works for both column major and row major matrices\n// This function iteratively associate a column with a row by choosing\n// the greatest absolute value from the remaining row and columns\n// For each association, a -1 or a 1 is set in the output, depending on\n// the sign of the value in the original matrix\nfunction getSparseOrthogonalMatrix(matrix) {\n  let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n  // Initialize rows and columns to available indices\n  const rows = new Array(n);\n  const cols = new Array(n);\n  for (let i = 0; i < n; ++i) {\n    rows[i] = i;\n    cols[i] = i;\n  }\n  // No need for the last iteration: i = 0\n  for (let i = n - 1; i > 0; i--) {\n    // Loop invariant:\n    // rows[0:i] and cols[0:i] contain the remaining rows and columns\n    // rows]i:n[ and cols]i:n[ contain the associations found (rows[k] is associated with cols[k])\n    let bestValue = -Infinity;\n    let bestRowI = 0;\n    let bestColI = 0;\n    for (let rowI = 0; rowI <= i; ++rowI) {\n      const row = rows[rowI];\n      for (let colI = 0; colI <= i; ++colI) {\n        const col = cols[colI];\n        const absVal = Math.abs(matrix[row + n * col]);\n        if (absVal > bestValue) {\n          bestValue = absVal;\n          bestRowI = rowI;\n          bestColI = colI;\n        }\n      }\n    }\n    // Found an association between rows[bestRowI] and cols[bestColI]\n    // Put both at the end of their array by swapping with i\n    [rows[i], rows[bestRowI]] = [rows[bestRowI], rows[i]];\n    [cols[i], cols[bestColI]] = [cols[bestColI], cols[i]];\n  }\n\n  // Convert row/column association to a matrix\n  const output = new Array(n * n).fill(0);\n  for (let i = 0; i < n; ++i) {\n    const matIdx = rows[i] + n * cols[i];\n    output[matIdx] = matrix[matIdx] < 0 ? -1 : 1;\n  }\n  return output;\n}\nfunction floatToHex2(value) {\n  const integer = Math.floor(value * 255);\n  if (integer > 15) {\n    return integer.toString(16);\n  }\n  return `0${integer.toString(16)}`;\n}\nfunction floatRGB2HexCode(rgbArray) {\n  let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '#';\n  return `${prefix}${rgbArray.map(floatToHex2).join('')}`;\n}\nfunction floatToChar(f) {\n  return Math.round(f * 255);\n}\nfunction float2CssRGBA(rgbArray) {\n  if (rgbArray.length === 3) {\n    return `rgb(${rgbArray.map(floatToChar).join(', ')})`;\n  }\n  return `rgba(${floatToChar(rgbArray[0] || 0)}, ${floatToChar(rgbArray[1] || 0)}, ${floatToChar(rgbArray[2] || 0)}, ${rgbArray[3] || 0})`;\n}\n\n// ----------------------------------------------------------------------------\n// Only Static API\n// ----------------------------------------------------------------------------\n\nvar vtkMath = {\n  Pi,\n  ldexp,\n  radiansFromDegrees,\n  degreesFromRadians,\n  round,\n  floor,\n  ceil,\n  ceilLog2,\n  min,\n  max,\n  arrayMin,\n  arrayMax,\n  arrayRange,\n  isPowerOfTwo,\n  nearestPowerOfTwo,\n  factorial,\n  binomial,\n  beginCombination,\n  nextCombination,\n  randomSeed,\n  getSeed,\n  random,\n  gaussian,\n  add,\n  subtract,\n  multiplyScalar,\n  multiplyScalar2D,\n  multiplyAccumulate,\n  multiplyAccumulate2D,\n  dot,\n  outer,\n  cross,\n  norm,\n  normalize,\n  perpendiculars,\n  projectVector,\n  projectVector2D,\n  distance2BetweenPoints,\n  angleBetweenVectors,\n  gaussianAmplitude,\n  gaussianWeight,\n  dot2D,\n  outer2D,\n  norm2D,\n  normalize2D,\n  determinant2x2,\n  LUFactor3x3,\n  LUSolve3x3,\n  linearSolve3x3,\n  multiply3x3_vect3,\n  multiply3x3_mat3,\n  multiplyMatrix,\n  transpose3x3,\n  invert3x3,\n  identity3x3,\n  identity,\n  isIdentity,\n  isIdentity3x3,\n  determinant3x3,\n  quaternionToMatrix3x3,\n  areEquals,\n  areMatricesEqual,\n  roundNumber,\n  roundVector,\n  matrix3x3ToQuaternion,\n  multiplyQuaternion,\n  orthogonalize3x3,\n  diagonalize3x3,\n  singularValueDecomposition3x3,\n  solveLinearSystem,\n  invertMatrix,\n  luFactorLinearSystem,\n  luSolveLinearSystem,\n  estimateMatrixCondition,\n  jacobi,\n  jacobiN,\n  solveHomogeneousLeastSquares,\n  solveLeastSquares,\n  hex2float,\n  rgb2hsv,\n  hsv2rgb,\n  lab2xyz,\n  xyz2lab,\n  xyz2rgb,\n  rgb2xyz,\n  rgb2lab,\n  lab2rgb,\n  uninitializeBounds,\n  areBoundsInitialized,\n  computeBoundsFromPoints,\n  clampValue,\n  clampVector,\n  clampAndNormalizeValue,\n  getScalarTypeFittingRange,\n  getAdjustedScalarRange,\n  extentIsWithinOtherExtent,\n  boundsIsWithinOtherBounds,\n  pointIsWithinBounds,\n  solve3PointCircle,\n  inf,\n  negInf,\n  isInf,\n  isNan: isNaN,\n  isNaN,\n  isFinite,\n  // JS add-on\n  createUninitializedBounds,\n  getMajorAxisIndex,\n  getSparseOrthogonalMatrix,\n  floatToHex2,\n  floatRGB2HexCode,\n  float2CssRGBA\n};\n\nvar vtkMath$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createArray: createArray,\n  Pi: Pi,\n  ldexp: ldexp,\n  radiansFromDegrees: radiansFromDegrees,\n  degreesFromRadians: degreesFromRadians,\n  round: round,\n  floor: floor,\n  ceil: ceil,\n  min: min,\n  max: max,\n  arrayMin: arrayMin,\n  arrayMax: arrayMax,\n  arrayRange: arrayRange,\n  ceilLog2: ceilLog2,\n  factorial: factorial,\n  nearestPowerOfTwo: nearestPowerOfTwo,\n  isPowerOfTwo: isPowerOfTwo,\n  binomial: binomial,\n  beginCombination: beginCombination,\n  nextCombination: nextCombination,\n  randomSeed: randomSeed,\n  getSeed: getSeed,\n  random: random,\n  gaussian: gaussian,\n  add: add,\n  subtract: subtract,\n  multiplyScalar: multiplyScalar,\n  multiplyScalar2D: multiplyScalar2D,\n  multiplyAccumulate: multiplyAccumulate,\n  multiplyAccumulate2D: multiplyAccumulate2D,\n  dot: dot,\n  outer: outer,\n  cross: cross,\n  norm: norm,\n  normalize: normalize,\n  perpendiculars: perpendiculars,\n  projectVector: projectVector,\n  dot2D: dot2D,\n  projectVector2D: projectVector2D,\n  distance2BetweenPoints: distance2BetweenPoints,\n  angleBetweenVectors: angleBetweenVectors,\n  signedAngleBetweenVectors: signedAngleBetweenVectors,\n  gaussianAmplitude: gaussianAmplitude,\n  gaussianWeight: gaussianWeight,\n  outer2D: outer2D,\n  norm2D: norm2D,\n  normalize2D: normalize2D,\n  rowsToMat4: rowsToMat4,\n  columnsToMat4: columnsToMat4,\n  rowsToMat3: rowsToMat3,\n  columnsToMat3: columnsToMat3,\n  determinant2x2: determinant2x2,\n  LUFactor3x3: LUFactor3x3,\n  LUSolve3x3: LUSolve3x3,\n  linearSolve3x3: linearSolve3x3,\n  multiply3x3_vect3: multiply3x3_vect3,\n  multiply3x3_mat3: multiply3x3_mat3,\n  multiplyMatrix: multiplyMatrix,\n  transpose3x3: transpose3x3,\n  invert3x3: invert3x3,\n  determinant3x3: determinant3x3,\n  areEquals: areEquals,\n  areMatricesEqual: areMatricesEqual,\n  identity3x3: identity3x3,\n  identity: identity,\n  isIdentity: isIdentity,\n  isIdentity3x3: isIdentity3x3,\n  quaternionToMatrix3x3: quaternionToMatrix3x3,\n  roundNumber: roundNumber,\n  roundVector: roundVector,\n  jacobiN: jacobiN,\n  matrix3x3ToQuaternion: matrix3x3ToQuaternion,\n  multiplyQuaternion: multiplyQuaternion,\n  orthogonalize3x3: orthogonalize3x3,\n  diagonalize3x3: diagonalize3x3,\n  singularValueDecomposition3x3: singularValueDecomposition3x3,\n  luFactorLinearSystem: luFactorLinearSystem,\n  luSolveLinearSystem: luSolveLinearSystem,\n  solveLinearSystem: solveLinearSystem,\n  invertMatrix: invertMatrix,\n  estimateMatrixCondition: estimateMatrixCondition,\n  jacobi: jacobi,\n  solveHomogeneousLeastSquares: solveHomogeneousLeastSquares,\n  solveLeastSquares: solveLeastSquares,\n  hex2float: hex2float,\n  rgb2hsv: rgb2hsv,\n  hsv2rgb: hsv2rgb,\n  lab2xyz: lab2xyz,\n  xyz2lab: xyz2lab,\n  xyz2rgb: xyz2rgb,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  lab2rgb: lab2rgb,\n  uninitializeBounds: uninitializeBounds,\n  areBoundsInitialized: areBoundsInitialized,\n  computeBoundsFromPoints: computeBoundsFromPoints,\n  clampValue: clampValue,\n  clampVector: clampVector,\n  clampAndNormalizeValue: clampAndNormalizeValue,\n  getScalarTypeFittingRange: getScalarTypeFittingRange,\n  getAdjustedScalarRange: getAdjustedScalarRange,\n  extentIsWithinOtherExtent: extentIsWithinOtherExtent,\n  boundsIsWithinOtherBounds: boundsIsWithinOtherBounds,\n  pointIsWithinBounds: pointIsWithinBounds,\n  solve3PointCircle: solve3PointCircle,\n  inf: inf,\n  negInf: negInf,\n  isInf: isInf,\n  isFinite: isFinite,\n  isNaN: isNaN,\n  isNan: isNan,\n  createUninitializedBounds: createUninitializedBounds,\n  getMajorAxisIndex: getMajorAxisIndex,\n  getSparseOrthogonalMatrix: getSparseOrthogonalMatrix,\n  floatToHex2: floatToHex2,\n  floatRGB2HexCode: floatRGB2HexCode,\n  float2CssRGBA: float2CssRGBA,\n  'default': vtkMath\n});\n\nexport { min as $, degreesFromRadians as A, ldexp as B, xyz2rgb as C, areEquals as D, clampValue as E, arrayRange as F, getMajorAxisIndex as G, createUninitializedBounds as H, identity as I, multiplyMatrix as J, floor as K, isInf as L, rgb2hsv as M, rgb2lab as N, lab2rgb as O, round as P, normalize2D as Q, nearestPowerOfTwo as R, multiply3x3_vect3 as S, getSparseOrthogonalMatrix as T, areBoundsInitialized as U, isPowerOfTwo as V, angleBetweenVectors as W, signedAngleBetweenVectors as X, createArray as Y, Pi as Z, ceil as _, areMatricesEqual as a, floatRGB2HexCode as a$, max as a0, arrayMin as a1, arrayMax as a2, ceilLog2 as a3, factorial as a4, binomial as a5, beginCombination as a6, nextCombination as a7, randomSeed as a8, getSeed as a9, multiplyQuaternion as aA, orthogonalize3x3 as aB, diagonalize3x3 as aC, singularValueDecomposition3x3 as aD, luFactorLinearSystem as aE, luSolveLinearSystem as aF, invertMatrix as aG, estimateMatrixCondition as aH, solveHomogeneousLeastSquares as aI, solveLeastSquares as aJ, hex2float as aK, lab2xyz as aL, xyz2lab as aM, rgb2xyz as aN, computeBoundsFromPoints as aO, clampAndNormalizeValue as aP, getScalarTypeFittingRange as aQ, getAdjustedScalarRange as aR, extentIsWithinOtherExtent as aS, boundsIsWithinOtherBounds as aT, pointIsWithinBounds as aU, solve3PointCircle as aV, inf as aW, negInf as aX, isFinite as aY, isNaN as aZ, floatToHex2 as a_, gaussian as aa, multiplyScalar2D as ab, multiplyAccumulate2D as ac, outer as ad, projectVector as ae, dot2D as af, projectVector2D as ag, gaussianAmplitude as ah, gaussianWeight as ai, outer2D as aj, norm2D as ak, rowsToMat4 as al, columnsToMat4 as am, columnsToMat3 as an, LUFactor3x3 as ao, LUSolve3x3 as ap, linearSolve3x3 as aq, multiply3x3_mat3 as ar, transpose3x3 as as, invert3x3 as at, identity3x3 as au, isIdentity as av, isIdentity3x3 as aw, quaternionToMatrix3x3 as ax, roundNumber as ay, matrix3x3ToQuaternion as az, roundVector as b, float2CssRGBA as b0, clampVector as c, dot as d, distance2BetweenPoints as e, vtkMath as f, solveLinearSystem as g, hsv2rgb as h, isNan as i, cross as j, add as k, normalize as l, multiplyAccumulate as m, norm as n, determinant2x2 as o, jacobiN as p, perpendiculars as q, radiansFromDegrees as r, subtract as s, jacobi as t, uninitializeBounds as u, vtkMath$1 as v, multiplyScalar as w, random as x, determinant3x3 as y, rowsToMat3 as z };\n","import { m as macro } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// vtkImplicitFunction methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImplicitFunction(publicAPI, model) {\n  model.classHierarchy.push('vtkImplicitFunction');\n  publicAPI.functionValue = xyz => {\n    if (!model.transform) {\n      return publicAPI.evaluateFunction(xyz);\n    }\n    const transformedXYZ = [];\n    model.transform.transformPoint(xyz, transformedXYZ);\n    return publicAPI.evaluateFunction(transformedXYZ);\n  };\n  publicAPI.evaluateFunction = _xyz => {\n    macro.vtkErrorMacro('not implemented');\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\nconst DEFAULT_VALUES = {\n  // transform : null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['transform']);\n  vtkImplicitFunction(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImplicitFunction');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImplicitFunction$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkImplicitFunction$1 as default, extend, newInstance };\n","import { s as subtract, d as dot, j as cross, k as add } from '../Core/Math/index.js';\nimport { m as macro } from '../../macros2.js';\nimport vtkImplicitFunction from './ImplicitFunction.js';\n\nconst PLANE_TOLERANCE = 1.0e-6;\nconst COINCIDE = 'coincide';\nconst DISJOINT = 'disjoint';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction evaluate(normal, origin, x) {\n  return normal[0] * (x[0] - origin[0]) + normal[1] * (x[1] - origin[1]) + normal[2] * (x[2] - origin[2]);\n}\nfunction distanceToPlane(x, origin, normal) {\n  const distance = normal[0] * (x[0] - origin[0]) + normal[1] * (x[1] - origin[1]) + normal[2] * (x[2] - origin[2]);\n  return Math.abs(distance);\n}\nfunction projectPoint(x, origin, normal, xproj) {\n  const xo = [];\n  subtract(x, origin, xo);\n  const t = dot(normal, xo);\n  xproj[0] = x[0] - t * normal[0];\n  xproj[1] = x[1] - t * normal[1];\n  xproj[2] = x[2] - t * normal[2];\n}\nfunction projectVector(v, normal, vproj) {\n  const t = dot(v, normal);\n  let n2 = dot(normal, normal);\n  if (n2 === 0) {\n    n2 = 1.0;\n  }\n  vproj[0] = v[0] - t * normal[0] / n2;\n  vproj[1] = v[1] - t * normal[1] / n2;\n  vproj[2] = v[2] - t * normal[2] / n2;\n  return vproj;\n}\nfunction generalizedProjectPoint(x, origin, normal, xproj) {\n  const xo = [];\n  subtract(x, origin, xo);\n  const t = dot(normal, xo);\n  const n2 = dot(normal, normal);\n  if (n2 !== 0) {\n    xproj[0] = x[0] - t * normal[0] / n2;\n    xproj[1] = x[1] - t * normal[1] / n2;\n    xproj[2] = x[2] - t * normal[2] / n2;\n  } else {\n    xproj[0] = x[0];\n    xproj[1] = x[1];\n    xproj[2] = x[2];\n  }\n}\nfunction intersectWithLine(p1, p2, origin, normal) {\n  const outObj = {\n    intersection: false,\n    betweenPoints: false,\n    t: Number.MAX_VALUE,\n    x: []\n  };\n  const p21 = [];\n  const p1Origin = [];\n  // Compute line vector\n  subtract(p2, p1, p21);\n  subtract(origin, p1, p1Origin);\n\n  // Compute denominator.  If ~0, line and plane are parallel.\n  // const num = vtkMath.dot(normal, origin) - vtkMath.dot(normal, p1);\n  const num = dot(normal, p1Origin);\n  const den = dot(normal, p21);\n\n  // If denominator with respect to numerator is \"zero\", then the line and\n  // plane are considered parallel.\n  let fabsden;\n  let fabstolerance;\n\n  // Trying to avoid an expensive call to fabs()\n  if (den < 0.0) {\n    fabsden = -den;\n  } else {\n    fabsden = den;\n  }\n  if (num < 0.0) {\n    fabstolerance = -num * PLANE_TOLERANCE;\n  } else {\n    fabstolerance = num * PLANE_TOLERANCE;\n  }\n  if (fabsden <= fabstolerance) {\n    return outObj;\n  }\n\n  // Where on the line between p1 and p2 is the intersection\n  // If between 0 and 1, it is between the two points. If < 0 it's before p1, if > 1 it's after p2\n  outObj.t = num / den;\n  outObj.x[0] = p1[0] + outObj.t * p21[0];\n  outObj.x[1] = p1[1] + outObj.t * p21[1];\n  outObj.x[2] = p1[2] + outObj.t * p21[2];\n  outObj.intersection = true;\n  outObj.betweenPoints = outObj.t >= 0.0 && outObj.t <= 1.0;\n  return outObj;\n}\nfunction intersectWithPlane(plane1Origin, plane1Normal, plane2Origin, plane2Normal) {\n  const outObj = {\n    intersection: false,\n    l0: [],\n    l1: [],\n    error: null\n  };\n  const cross$1 = [];\n  cross(plane1Normal, plane2Normal, cross$1);\n  const absCross = cross$1.map(n => Math.abs(n));\n\n  // test if the two planes are parallel\n  if (absCross[0] + absCross[1] + absCross[2] < PLANE_TOLERANCE) {\n    // test if disjoint or coincide\n    const v = [];\n    subtract(plane1Origin, plane2Origin, v);\n    if (dot(plane1Normal, v) === 0) {\n      outObj.error = COINCIDE;\n    } else {\n      outObj.error = DISJOINT;\n    }\n    return outObj;\n  }\n\n  // Plane1 and Plane2 intersect in a line\n  // first determine max abs coordinate of the cross product\n  let maxc;\n  if (absCross[0] > absCross[1] && absCross[0] > absCross[2]) {\n    maxc = 'x';\n  } else if (absCross[1] > absCross[2]) {\n    maxc = 'y';\n  } else {\n    maxc = 'z';\n  }\n\n  // To get a point on the intersect line, zero the max coord, and solve for the other two\n  const iP = []; // intersectionPoint\n  // the constants in the 2 plane equations\n  const d1 = -dot(plane1Normal, plane1Origin);\n  const d2 = -dot(plane2Normal, plane2Origin);\n\n  // eslint-disable-next-line default-case\n  switch (maxc) {\n    case 'x':\n      // intersect with x=0\n      iP[0] = 0;\n      iP[1] = (d2 * plane1Normal[2] - d1 * plane2Normal[2]) / cross$1[0];\n      iP[2] = (d1 * plane2Normal[1] - d2 * plane1Normal[1]) / cross$1[0];\n      break;\n    case 'y':\n      // intersect with y=0\n      iP[0] = (d1 * plane2Normal[2] - d2 * plane1Normal[2]) / cross$1[1];\n      iP[1] = 0;\n      iP[2] = (d2 * plane1Normal[0] - d1 * plane2Normal[0]) / cross$1[1];\n      break;\n    case 'z':\n      // intersect with z=0\n      iP[0] = (d2 * plane1Normal[1] - d1 * plane2Normal[1]) / cross$1[2];\n      iP[1] = (d1 * plane2Normal[0] - d2 * plane1Normal[0]) / cross$1[2];\n      iP[2] = 0;\n      break;\n  }\n  outObj.l0 = iP;\n  add(iP, cross$1, outObj.l1);\n  outObj.intersection = true;\n  return outObj;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst STATIC = {\n  evaluate,\n  distanceToPlane,\n  projectPoint,\n  projectVector,\n  generalizedProjectPoint,\n  intersectWithLine,\n  intersectWithPlane,\n  DISJOINT,\n  COINCIDE\n};\n\n// ----------------------------------------------------------------------------\n// vtkPlane methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPlane(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPlane');\n  publicAPI.distanceToPlane = x => distanceToPlane(x, model.origin, model.normal);\n  publicAPI.projectPoint = (x, xproj) => {\n    projectPoint(x, model.origin, model.normal, xproj);\n  };\n  publicAPI.projectVector = (v, vproj) => projectVector(v, model.normal, vproj);\n  publicAPI.push = distance => {\n    if (distance === 0.0) {\n      return;\n    }\n    for (let i = 0; i < 3; i++) {\n      model.origin[i] += distance * model.normal[i];\n    }\n  };\n  publicAPI.generalizedProjectPoint = (x, xproj) => {\n    generalizedProjectPoint(x, model.origin, model.normal, xproj);\n  };\n  publicAPI.evaluateFunction = (x, y, z) => {\n    if (!Array.isArray(x)) {\n      return model.normal[0] * (x - model.origin[0]) + model.normal[1] * (y - model.origin[1]) + model.normal[2] * (z - model.origin[2]);\n    }\n    return model.normal[0] * (x[0] - model.origin[0]) + model.normal[1] * (x[1] - model.origin[1]) + model.normal[2] * (x[2] - model.origin[2]);\n  };\n  publicAPI.evaluateGradient = xyz => {\n    const retVal = [model.normal[0], model.normal[1], model.normal[2]];\n    return retVal;\n  };\n  publicAPI.intersectWithLine = (p1, p2) => intersectWithLine(p1, p2, model.origin, model.normal);\n  publicAPI.intersectWithPlane = (planeOrigin, planeNormal) => intersectWithPlane(planeOrigin, planeNormal, model.origin, model.normal);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  normal: [0.0, 0.0, 1.0],\n  origin: [0.0, 0.0, 0.0]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  vtkImplicitFunction.extend(publicAPI, model, initialValues);\n  macro.setGetArray(publicAPI, model, ['normal', 'origin'], 3);\n  vtkPlane(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkPlane');\n\n// ----------------------------------------------------------------------------\n\nvar vtkPlane$1 = {\n  newInstance,\n  extend,\n  ...STATIC\n};\n\nexport { STATIC, vtkPlane$1 as default, extend, newInstance, vtkPlane };\n","import { d as dot } from '../Core/Math/index.js';\nimport { vec3 } from 'gl-matrix';\nimport vtkPlane from './Plane.js';\n\nconst INIT_BOUNDS = [Number.MAX_VALUE, -Number.MAX_VALUE,\n// X\nNumber.MAX_VALUE, -Number.MAX_VALUE,\n// Y\nNumber.MAX_VALUE, -Number.MAX_VALUE // Z\n];\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction equals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\nfunction isValid(bounds) {\n  return bounds?.length >= 6 && bounds[0] <= bounds[1] && bounds[2] <= bounds[3] && bounds[4] <= bounds[5];\n}\nfunction setBounds(bounds, otherBounds) {\n  bounds[0] = otherBounds[0];\n  bounds[1] = otherBounds[1];\n  bounds[2] = otherBounds[2];\n  bounds[3] = otherBounds[3];\n  bounds[4] = otherBounds[4];\n  bounds[5] = otherBounds[5];\n  return bounds;\n}\nfunction reset(bounds) {\n  return setBounds(bounds, INIT_BOUNDS);\n}\nfunction addPoint(bounds, x, y, z) {\n  const [xMin, xMax, yMin, yMax, zMin, zMax] = bounds;\n  bounds[0] = xMin < x ? xMin : x;\n  bounds[1] = xMax > x ? xMax : x;\n  bounds[2] = yMin < y ? yMin : y;\n  bounds[3] = yMax > y ? yMax : y;\n  bounds[4] = zMin < z ? zMin : z;\n  bounds[5] = zMax > z ? zMax : z;\n  return bounds;\n}\nfunction addPoints(bounds, points) {\n  if (points.length === 0) {\n    return bounds;\n  }\n  if (Array.isArray(points[0])) {\n    for (let i = 0; i < points.length; ++i) {\n      addPoint(bounds, ...points[i]);\n    }\n  } else {\n    for (let i = 0; i < points.length; i += 3) {\n      addPoint(bounds, ...points.slice(i, i + 3));\n    }\n  }\n  return bounds;\n}\nfunction addBounds(bounds, xMin, xMax, yMin, yMax, zMin, zMax) {\n  const [_xMin, _xMax, _yMin, _yMax, _zMin, _zMax] = bounds;\n  if (zMax === undefined) {\n    bounds[0] = Math.min(xMin[0], _xMin);\n    bounds[1] = Math.max(xMin[1], _xMax);\n    bounds[2] = Math.min(xMin[2], _yMin);\n    bounds[3] = Math.max(xMin[3], _yMax);\n    bounds[4] = Math.min(xMin[4], _zMin);\n    bounds[5] = Math.max(xMin[5], _zMax);\n  } else {\n    bounds[0] = Math.min(xMin, _xMin);\n    bounds[1] = Math.max(xMax, _xMax);\n    bounds[2] = Math.min(yMin, _yMin);\n    bounds[3] = Math.max(yMax, _yMax);\n    bounds[4] = Math.min(zMin, _zMin);\n    bounds[5] = Math.max(zMax, _zMax);\n  }\n  return bounds;\n}\nfunction setMinPoint(bounds, x, y, z) {\n  const [xMin, xMax, yMin, yMax, zMin, zMax] = bounds;\n  bounds[0] = x;\n  bounds[1] = x > xMax ? x : xMax;\n  bounds[2] = y;\n  bounds[3] = y > yMax ? y : yMax;\n  bounds[4] = z;\n  bounds[5] = z > zMax ? z : zMax;\n  return xMin !== x || yMin !== y || zMin !== z;\n}\nfunction setMaxPoint(bounds, x, y, z) {\n  const [xMin, xMax, yMin, yMax, zMin, zMax] = bounds;\n  bounds[0] = x < xMin ? x : xMin;\n  bounds[1] = x;\n  bounds[2] = y < yMin ? y : yMin;\n  bounds[3] = y;\n  bounds[4] = z < zMin ? z : zMin;\n  bounds[5] = z;\n  return xMax !== x || yMax !== y || zMax !== z;\n}\nfunction inflate(bounds, delta) {\n  bounds[0] -= delta;\n  bounds[1] += delta;\n  bounds[2] -= delta;\n  bounds[3] += delta;\n  bounds[4] -= delta;\n  bounds[5] += delta;\n  return bounds;\n}\nfunction scale(bounds, sx, sy, sz) {\n  if (!isValid(bounds)) {\n    return false;\n  }\n  if (sx >= 0.0) {\n    bounds[0] *= sx;\n    bounds[1] *= sx;\n  } else {\n    bounds[0] = sx * bounds[1];\n    bounds[1] = sx * bounds[0];\n  }\n  if (sy >= 0.0) {\n    bounds[2] *= sy;\n    bounds[3] *= sy;\n  } else {\n    bounds[2] = sy * bounds[3];\n    bounds[3] = sy * bounds[2];\n  }\n  if (sz >= 0.0) {\n    bounds[4] *= sz;\n    bounds[5] *= sz;\n  } else {\n    bounds[4] = sz * bounds[5];\n    bounds[5] = sz * bounds[4];\n  }\n  return true;\n}\nfunction getCenter(bounds) {\n  return [0.5 * (bounds[0] + bounds[1]), 0.5 * (bounds[2] + bounds[3]), 0.5 * (bounds[4] + bounds[5])];\n}\nfunction scaleAboutCenter(bounds, sx, sy, sz) {\n  if (!isValid(bounds)) {\n    return false;\n  }\n  const center = getCenter(bounds);\n  bounds[0] -= center[0];\n  bounds[1] -= center[0];\n  bounds[2] -= center[1];\n  bounds[3] -= center[1];\n  bounds[4] -= center[2];\n  bounds[5] -= center[2];\n  scale(bounds, sx, sy, sz);\n  bounds[0] += center[0];\n  bounds[1] += center[0];\n  bounds[2] += center[1];\n  bounds[3] += center[1];\n  bounds[4] += center[2];\n  bounds[5] += center[2];\n  return true;\n}\nfunction getLength(bounds, index) {\n  return bounds[index * 2 + 1] - bounds[index * 2];\n}\nfunction getLengths(bounds) {\n  return [getLength(bounds, 0), getLength(bounds, 1), getLength(bounds, 2)];\n}\nfunction getXRange(bounds) {\n  return bounds.slice(0, 2);\n}\nfunction getYRange(bounds) {\n  return bounds.slice(2, 4);\n}\nfunction getZRange(bounds) {\n  return bounds.slice(4, 6);\n}\nfunction getMaxLength(bounds) {\n  const l = getLengths(bounds);\n  if (l[0] > l[1]) {\n    if (l[0] > l[2]) {\n      return l[0];\n    }\n    return l[2];\n  }\n  if (l[1] > l[2]) {\n    return l[1];\n  }\n  return l[2];\n}\nfunction getDiagonalLength(bounds) {\n  if (isValid(bounds)) {\n    const l = getLengths(bounds);\n    return Math.sqrt(l[0] * l[0] + l[1] * l[1] + l[2] * l[2]);\n  }\n  return null;\n}\nfunction getMinPoint(bounds) {\n  return [bounds[0], bounds[2], bounds[4]];\n}\nfunction getMaxPoint(bounds) {\n  return [bounds[1], bounds[3], bounds[5]];\n}\nfunction oppositeSign(a, b) {\n  return a <= 0 && b >= 0 || a >= 0 && b <= 0;\n}\nfunction getCorners(bounds, corners) {\n  let count = 0;\n  for (let ix = 0; ix < 2; ix++) {\n    for (let iy = 2; iy < 4; iy++) {\n      for (let iz = 4; iz < 6; iz++) {\n        corners[count++] = [bounds[ix], bounds[iy], bounds[iz]];\n      }\n    }\n  }\n  return corners;\n}\n\n// Computes the two corners with minimal and maximal coordinates\nfunction computeCornerPoints(bounds, point1, point2) {\n  point1[0] = bounds[0];\n  point1[1] = bounds[2];\n  point1[2] = bounds[4];\n  point2[0] = bounds[1];\n  point2[1] = bounds[3];\n  point2[2] = bounds[5];\n  return point1;\n}\nfunction transformBounds(bounds, transform) {\n  let out = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  const corners = getCorners(bounds, []);\n  for (let i = 0; i < corners.length; ++i) {\n    vec3.transformMat4(corners[i], corners[i], transform);\n  }\n  reset(out);\n  return addPoints(out, corners);\n}\nfunction computeScale3(bounds) {\n  let scale3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  scale3[0] = 0.5 * (bounds[1] - bounds[0]);\n  scale3[1] = 0.5 * (bounds[3] - bounds[2]);\n  scale3[2] = 0.5 * (bounds[5] - bounds[4]);\n  return scale3;\n}\n\n/**\n * Compute local bounds.\n * Not as fast as vtkPoints.getBounds() if u, v, w form a natural basis.\n * @param {vtkPoints} points\n * @param {array} u first vector\n * @param {array} v second vector\n * @param {array} w third vector\n */\nfunction computeLocalBounds(points, u, v, w) {\n  const bounds = [].concat(INIT_BOUNDS);\n  const pointsData = points.getData();\n  for (let i = 0; i < pointsData.length; i += 3) {\n    const point = [pointsData[i], pointsData[i + 1], pointsData[i + 2]];\n    const du = dot(point, u);\n    bounds[0] = Math.min(du, bounds[0]);\n    bounds[1] = Math.max(du, bounds[1]);\n    const dv = dot(point, v);\n    bounds[2] = Math.min(dv, bounds[2]);\n    bounds[3] = Math.max(dv, bounds[3]);\n    const dw = dot(point, w);\n    bounds[4] = Math.min(dw, bounds[4]);\n    bounds[5] = Math.max(dw, bounds[5]);\n  }\n  return bounds;\n}\n\n// The method returns a non-zero value if the bounding box is hit.\n// Origin[3] starts the ray, dir[3] is the vector components of the ray in the x-y-z\n// directions, coord[3] is the location of hit, and t is the parametric\n// coordinate along line. (Notes: the intersection ray dir[3] is NOT\n// normalized.  Valid intersections will only occur between 0<=t<=1.)\nfunction intersectBox(bounds, origin, dir, coord, tolerance) {\n  let inside = true;\n  const quadrant = [];\n  let whichPlane = 0;\n  const maxT = [];\n  const candidatePlane = [0.0, 0.0, 0.0];\n  const RIGHT = 0;\n  const LEFT = 1;\n  const MIDDLE = 2;\n\n  // First find closest planes\n  for (let i = 0; i < 3; i++) {\n    if (origin[i] < bounds[2 * i]) {\n      quadrant[i] = LEFT;\n      candidatePlane[i] = bounds[2 * i];\n      inside = false;\n    } else if (origin[i] > bounds[2 * i + 1]) {\n      quadrant[i] = RIGHT;\n      candidatePlane[i] = bounds[2 * i + 1];\n      inside = false;\n    } else {\n      quadrant[i] = MIDDLE;\n    }\n  }\n\n  // Check whether origin of ray is inside bbox\n  if (inside) {\n    coord[0] = origin[0];\n    coord[1] = origin[1];\n    coord[2] = origin[2];\n    tolerance[0] = 0;\n    return 1;\n  }\n\n  // Calculate parametric distance to plane\n  for (let i = 0; i < 3; i++) {\n    if (quadrant[i] !== MIDDLE && dir[i] !== 0.0) {\n      maxT[i] = (candidatePlane[i] - origin[i]) / dir[i];\n    } else {\n      maxT[i] = -1.0;\n    }\n  }\n\n  // Find the largest parametric value of intersection\n  for (let i = 0; i < 3; i++) {\n    if (maxT[whichPlane] < maxT[i]) {\n      whichPlane = i;\n    }\n  }\n\n  // Check for value intersection along line\n  if (maxT[whichPlane] > 1.0 || maxT[whichPlane] < 0.0) {\n    return 0;\n  }\n  tolerance[0] = maxT[whichPlane];\n\n  // Intersection point along line is okay. Check bbox.\n  for (let i = 0; i < 3; i++) {\n    if (whichPlane !== i) {\n      coord[i] = origin[i] + maxT[whichPlane] * dir[i];\n      if (coord[i] < bounds[2 * i] || coord[i] > bounds[2 * i + 1]) {\n        return 0;\n      }\n    } else {\n      coord[i] = candidatePlane[i];\n    }\n  }\n  return 1;\n}\n\n// Plane intersection with box\n// The plane is infinite in extent and defined by an origin and normal.The function indicates\n// whether the plane intersects, not the particulars of intersection points and such\n// The function returns non-zero if the plane and box intersect; zero otherwise.\nfunction intersectPlane(bounds, origin, normal) {\n  const p = [];\n  let d = 0;\n  let sign = 1;\n  let firstOne = 1;\n\n  // Evaluate the eight points. If there is a sign change, there is an intersection\n  for (let z = 4; z <= 5; ++z) {\n    p[2] = bounds[z];\n    for (let y = 2; y <= 3; ++y) {\n      p[1] = bounds[y];\n      for (let x = 0; x <= 1; ++x) {\n        p[0] = bounds[x];\n        d = vtkPlane.evaluate(normal, origin, p);\n        if (firstOne) {\n          sign = d >= 0 ? 1 : -1;\n          firstOne = 0;\n        }\n        if (d === 0.0 || sign > 0 && d < 0.0 || sign < 0 && d > 0.0) {\n          return 1;\n        }\n      }\n    }\n  }\n  return 0; // no intersection\n}\n\nfunction intersect(bounds, bBounds) {\n  if (!(isValid(bounds) && isValid(bBounds))) {\n    return false;\n  }\n  const newBounds = [0, 0, 0, 0, 0, 0];\n  let intersection;\n  for (let i = 0; i < 3; i++) {\n    intersection = false;\n    if (bBounds[i * 2] >= bounds[i * 2] && bBounds[i * 2] <= bounds[i * 2 + 1]) {\n      intersection = true;\n      newBounds[i * 2] = bBounds[i * 2];\n    } else if (bounds[i * 2] >= bBounds[i * 2] && bounds[i * 2] <= bBounds[i * 2 + 1]) {\n      intersection = true;\n      newBounds[i * 2] = bounds[i * 2];\n    }\n    if (bBounds[i * 2 + 1] >= bounds[i * 2] && bBounds[i * 2 + 1] <= bounds[i * 2 + 1]) {\n      intersection = true;\n      newBounds[i * 2 + 1] = bBounds[2 * i + 1];\n    } else if (bounds[i * 2 + 1] >= bBounds[i * 2] && bounds[i * 2 + 1] <= bBounds[i * 2 + 1]) {\n      intersection = true;\n      newBounds[i * 2 + 1] = bounds[i * 2 + 1];\n    }\n    if (!intersection) {\n      return false;\n    }\n  }\n\n  // OK they did intersect - set the box to be the result\n  bounds[0] = newBounds[0];\n  bounds[1] = newBounds[1];\n  bounds[2] = newBounds[2];\n  bounds[3] = newBounds[3];\n  bounds[4] = newBounds[4];\n  bounds[5] = newBounds[5];\n  return true;\n}\nfunction intersects(bounds, bBounds) {\n  if (!(isValid(bounds) && isValid(bBounds))) {\n    return false;\n  }\n  /* eslint-disable no-continue */\n  for (let i = 0; i < 3; i++) {\n    if (bBounds[i * 2] >= bounds[i * 2] && bBounds[i * 2] <= bounds[i * 2 + 1]) {\n      continue;\n    } else if (bounds[i * 2] >= bBounds[i * 2] && bounds[i * 2] <= bBounds[i * 2 + 1]) {\n      continue;\n    }\n    if (bBounds[i * 2 + 1] >= bounds[i * 2] && bBounds[i * 2 + 1] <= bounds[i * 2 + 1]) {\n      continue;\n    } else if (bounds[i * 2 + 1] >= bBounds[i * 2] && bounds[i * 2 + 1] <= bBounds[i * 2 + 1]) {\n      continue;\n    }\n    return false;\n  }\n  /* eslint-enable no-continue */\n\n  return true;\n}\nfunction containsPoint(bounds, x, y, z) {\n  if (x < bounds[0] || x > bounds[1]) {\n    return false;\n  }\n  if (y < bounds[2] || y > bounds[3]) {\n    return false;\n  }\n  if (z < bounds[4] || z > bounds[5]) {\n    return false;\n  }\n  return true;\n}\nfunction contains(bounds, otherBounds) {\n  // if either box is not valid or they don't intersect\n  if (!intersects(bounds, otherBounds)) {\n    return false;\n  }\n  if (!containsPoint(bounds, ...getMinPoint(otherBounds))) {\n    return false;\n  }\n  if (!containsPoint(bounds, ...getMaxPoint(otherBounds))) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Returns true if plane intersects bounding box.\n * If so, the box is cut by the plane\n * @param {array} origin\n * @param {array} normal\n */\nfunction cutWithPlane(bounds, origin, normal) {\n  // Index[0..2] represents the order of traversing the corners of a cube\n  // in (x,y,z), (y,x,z) and (z,x,y) ordering, respectively\n  const index = [[0, 1, 2, 3, 4, 5, 6, 7], [0, 1, 4, 5, 2, 3, 6, 7], [0, 2, 4, 6, 1, 3, 5, 7]];\n\n  // stores the signed distance to a plane\n  const d = [0, 0, 0, 0, 0, 0, 0, 0];\n  let idx = 0;\n  for (let ix = 0; ix < 2; ix++) {\n    for (let iy = 2; iy < 4; iy++) {\n      for (let iz = 4; iz < 6; iz++) {\n        const x = [bounds[ix], bounds[iy], bounds[iz]];\n        d[idx++] = vtkPlane.evaluate(normal, origin, x);\n      }\n    }\n  }\n  let dir = 2;\n  while (dir--) {\n    // in each direction, we test if the vertices of two orthogonal faces\n    // are on either side of the plane\n    if (oppositeSign(d[index[dir][0]], d[index[dir][4]]) && oppositeSign(d[index[dir][1]], d[index[dir][5]]) && oppositeSign(d[index[dir][2]], d[index[dir][6]]) && oppositeSign(d[index[dir][3]], d[index[dir][7]])) {\n      break;\n    }\n  }\n  if (dir < 0) {\n    return false;\n  }\n  const sign = Math.sign(normal[dir]);\n  const size = Math.abs((bounds[dir * 2 + 1] - bounds[dir * 2]) * normal[dir]);\n  let t = sign > 0 ? 1 : 0;\n  /* eslint-disable no-continue */\n  for (let i = 0; i < 4; i++) {\n    if (size === 0) {\n      continue; // shouldn't happen\n    }\n\n    const ti = Math.abs(d[index[dir][i]]) / size;\n    if (sign > 0 && ti < t) {\n      t = ti;\n    }\n    if (sign < 0 && ti > t) {\n      t = ti;\n    }\n  }\n  /* eslint-enable no-continue */\n  const bound = (1.0 - t) * bounds[dir * 2] + t * bounds[dir * 2 + 1];\n  if (sign > 0) {\n    bounds[dir * 2] = bound;\n  } else {\n    bounds[dir * 2 + 1] = bound;\n  }\n  return true;\n}\n\n// ----------------------------------------------------------------------------\n// Light Weight class\n// ----------------------------------------------------------------------------\n\nclass BoundingBox {\n  constructor(refBounds) {\n    this.bounds = refBounds;\n    if (!this.bounds) {\n      this.bounds = new Float64Array(INIT_BOUNDS);\n    }\n  }\n  getBounds() {\n    return this.bounds;\n  }\n  equals(otherBounds) {\n    return equals(this.bounds, otherBounds);\n  }\n  isValid() {\n    return isValid(this.bounds);\n  }\n  setBounds(otherBounds) {\n    return setBounds(this.bounds, otherBounds);\n  }\n  reset() {\n    return reset(this.bounds);\n  }\n  addPoint() {\n    for (var _len = arguments.length, xyz = new Array(_len), _key = 0; _key < _len; _key++) {\n      xyz[_key] = arguments[_key];\n    }\n    return addPoint(this.bounds, ...xyz);\n  }\n  addPoints(points) {\n    return addPoints(this.bounds, points);\n  }\n  addBounds(xMin, xMax, yMin, yMax, zMin, zMax) {\n    return addBounds(this.bounds, xMin, xMax, yMin, yMax, zMin, zMax);\n  }\n  setMinPoint(x, y, z) {\n    return setMinPoint(this.bounds, x, y, z);\n  }\n  setMaxPoint(x, y, z) {\n    return setMaxPoint(this.bounds, x, y, z);\n  }\n  inflate(delta) {\n    return inflate(this.bounds, delta);\n  }\n  scale(sx, sy, sz) {\n    return scale(this.bounds, sx, sy, sz);\n  }\n  getCenter() {\n    return getCenter(this.bounds);\n  }\n  getLength(index) {\n    return getLength(this.bounds, index);\n  }\n  getLengths() {\n    return getLengths(this.bounds);\n  }\n  getMaxLength() {\n    return getMaxLength(this.bounds);\n  }\n  getDiagonalLength() {\n    return getDiagonalLength(this.bounds);\n  }\n  getMinPoint() {\n    return getMinPoint(this.bounds);\n  }\n  getMaxPoint() {\n    return getMaxPoint(this.bounds);\n  }\n  getXRange() {\n    return getXRange(this.bounds);\n  }\n  getYRange() {\n    return getYRange(this.bounds);\n  }\n  getZRange() {\n    return getZRange(this.bounds);\n  }\n  getCorners(corners) {\n    return getCorners(this.bounds, corners);\n  }\n  computeCornerPoints(point1, point2) {\n    return computeCornerPoints(this.bounds, point1, point2);\n  }\n  computeLocalBounds(u, v, w) {\n    return computeLocalBounds(this.bounds, u, v, w);\n  }\n  transformBounds(transform) {\n    let out = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    return transformBounds(this.bounds, transform, out);\n  }\n  computeScale3(scale3) {\n    return computeScale3(this.bounds, scale3);\n  }\n  cutWithPlane(origin, normal) {\n    return cutWithPlane(this.bounds, origin, normal);\n  }\n  intersectBox(origin, dir, coord, tolerance) {\n    return intersectBox(this.bounds, origin, dir, coord, tolerance);\n  }\n  intersectPlane(origin, normal) {\n    return intersectPlane(this.bounds, origin, normal);\n  }\n  intersect(otherBounds) {\n    return intersect(this.bounds, otherBounds);\n  }\n  intersects(otherBounds) {\n    return intersects(this.bounds, otherBounds);\n  }\n  containsPoint(x, y, z) {\n    return containsPoint(this.bounds, x, y, z);\n  }\n  contains(otherBounds) {\n    return intersects(this.bounds, otherBounds);\n  }\n}\nfunction newInstance(initialValues) {\n  const bounds = initialValues && initialValues.bounds;\n  return new BoundingBox(bounds);\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst STATIC = {\n  equals,\n  isValid,\n  setBounds,\n  reset,\n  addPoint,\n  addPoints,\n  addBounds,\n  setMinPoint,\n  setMaxPoint,\n  inflate,\n  scale,\n  scaleAboutCenter,\n  getCenter,\n  getLength,\n  getLengths,\n  getMaxLength,\n  getDiagonalLength,\n  getMinPoint,\n  getMaxPoint,\n  getXRange,\n  getYRange,\n  getZRange,\n  getCorners,\n  computeCornerPoints,\n  computeLocalBounds,\n  transformBounds,\n  computeScale3,\n  cutWithPlane,\n  intersectBox,\n  intersectPlane,\n  intersect,\n  intersects,\n  containsPoint,\n  contains,\n  INIT_BOUNDS\n};\nvar vtkBoundingBox = {\n  newInstance,\n  ...STATIC\n};\n\nexport { STATIC, addBounds, addPoint, addPoints, computeCornerPoints, computeLocalBounds, computeScale3, contains, containsPoint, cutWithPlane, vtkBoundingBox as default, equals, getCenter, getCorners, getDiagonalLength, getLength, getLengths, getMaxLength, getMaxPoint, getMinPoint, getXRange, getYRange, getZRange, inflate, intersect, intersectBox, intersectPlane, intersects, isValid, reset, scale, scaleAboutCenter, setBounds, setMaxPoint, setMinPoint, transformBounds };\n","import { m as macro } from '../../macros2.js';\nimport vtkAbstractMapper from './AbstractMapper.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport { H as createUninitializedBounds } from '../../Common/Core/Math/index.js';\n\n// ----------------------------------------------------------------------------\n// vtkAbstractMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkAbstractMapper3D(publicAPI, model) {\n  publicAPI.getBounds = () => {\n    macro.vtkErrorMacro(`vtkAbstractMapper3D.getBounds - NOT IMPLEMENTED`);\n    return createUninitializedBounds();\n  };\n  publicAPI.getCenter = () => {\n    const bounds = publicAPI.getBounds();\n    model.center = vtkBoundingBox.isValid(bounds) ? vtkBoundingBox.getCenter(bounds) : null;\n    return model.center?.slice();\n  };\n  publicAPI.getLength = () => {\n    const bounds = publicAPI.getBounds();\n    return vtkBoundingBox.getDiagonalLength(bounds);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst defaultValues = initialValues => ({\n  bounds: [...vtkBoundingBox.INIT_BOUNDS],\n  center: [0, 0, 0],\n  viewSpecificProperties: {},\n  ...initialValues\n});\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, defaultValues(initialValues));\n  // Inheritance\n  vtkAbstractMapper.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['viewSpecificProperties']);\n  vtkAbstractMapper3D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nvar vtkAbstractMapper3D$1 = {\n  extend\n};\n\nexport { vtkAbstractMapper3D$1 as default, extend };\n","const DataTypeByteSize = {\n  Int8Array: 1,\n  Uint8Array: 1,\n  Uint8ClampedArray: 1,\n  Int16Array: 2,\n  Uint16Array: 2,\n  Int32Array: 4,\n  Uint32Array: 4,\n  Float32Array: 4,\n  Float64Array: 8\n};\nconst VtkDataTypes = {\n  VOID: '',\n  // not sure to know what that should be\n  CHAR: 'Int8Array',\n  SIGNED_CHAR: 'Int8Array',\n  UNSIGNED_CHAR: 'Uint8Array',\n  UNSIGNED_CHAR_CLAMPED: 'Uint8ClampedArray',\n  // should be used for VTK.js internal purpose only\n  SHORT: 'Int16Array',\n  UNSIGNED_SHORT: 'Uint16Array',\n  INT: 'Int32Array',\n  UNSIGNED_INT: 'Uint32Array',\n  FLOAT: 'Float32Array',\n  DOUBLE: 'Float64Array'\n};\nconst DefaultDataType = VtkDataTypes.FLOAT;\nvar Constants = {\n  DefaultDataType,\n  DataTypeByteSize,\n  VtkDataTypes\n};\n\nexport { DataTypeByteSize, DefaultDataType, VtkDataTypes, Constants as default };\n","import Constants from './DataArray/Constants.js';\nimport { n as newInstance$1, a as newTypedArray, b as newTypedArrayFrom, o as obj, s as set, c as macro } from '../../macros2.js';\nimport { n as norm } from './Math/index.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\nconst {\n  DefaultDataType\n} = Constants;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\nconst EPSILON = 1e-6;\n\n// Original source from https://www.npmjs.com/package/compute-range\n// Modified to accept type arrays\nfunction fastComputeRange(arr, offset, numberOfComponents) {\n  const len = arr.length;\n  let min = Number.MAX_VALUE;\n  let max = -Number.MAX_VALUE;\n  let x;\n  let i;\n\n  // find first non-NaN value\n  for (i = offset; i < len; i += numberOfComponents) {\n    if (!Number.isNaN(arr[i])) {\n      min = arr[i];\n      max = min;\n      break;\n    }\n  }\n  for (; i < len; i += numberOfComponents) {\n    x = arr[i];\n    if (x < min) {\n      min = x;\n    } else if (x > max) {\n      max = x;\n    }\n  }\n  return {\n    min,\n    max\n  };\n}\n\n/**\n * @deprecated please use fastComputeRange instead\n */\nfunction createRangeHelper() {\n  let min = Number.MAX_VALUE;\n  let max = -Number.MAX_VALUE;\n  let count = 0;\n  let sum = 0;\n  return {\n    add(value) {\n      if (min > value) {\n        min = value;\n      }\n      if (max < value) {\n        max = value;\n      }\n      count++;\n      sum += value;\n    },\n    get() {\n      return {\n        min,\n        max,\n        count,\n        sum,\n        mean: sum / count\n      };\n    },\n    getRange() {\n      return {\n        min,\n        max\n      };\n    }\n  };\n}\nfunction computeRange(values) {\n  let component = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let numberOfComponents = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  if (component < 0 && numberOfComponents > 1) {\n    // Compute magnitude\n    const size = values.length;\n    const numberOfValues = size / numberOfComponents;\n    const data = new Float64Array(numberOfValues);\n    for (let i = 0, j = 0; i < numberOfValues; ++i) {\n      for (let nextJ = j + numberOfComponents; j < nextJ; ++j) {\n        data[i] += values[j] * values[j];\n      }\n      data[i] **= 0.5;\n    }\n    return fastComputeRange(data, 0, 1);\n  }\n  return fastComputeRange(values, component < 0 ? 0 : component, numberOfComponents);\n}\nfunction ensureRangeSize(rangeArray) {\n  let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  const ranges = rangeArray || [];\n  // Pad ranges with null value to get the\n  while (ranges.length <= size) {\n    ranges.push(null);\n  }\n  return ranges;\n}\nfunction getDataType(typedArray) {\n  // Expects toString() to return \"[object ...Array]\"\n  return Object.prototype.toString.call(typedArray).slice(8, -1);\n}\nfunction getMaxNorm(normArray) {\n  const numComps = normArray.getNumberOfComponents();\n  let maxNorm = 0.0;\n  const tuple = new Array(numComps);\n  for (let i = 0; i < normArray.getNumberOfTuples(); ++i) {\n    normArray.getTuple(i, tuple);\n    const norm$1 = norm(tuple, numComps);\n    if (norm$1 > maxNorm) {\n      maxNorm = norm$1;\n    }\n  }\n  return maxNorm;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst STATIC = {\n  computeRange,\n  createRangeHelper,\n  fastComputeRange,\n  getDataType,\n  getMaxNorm\n};\n\n// ----------------------------------------------------------------------------\n// vtkDataArray methods\n// ----------------------------------------------------------------------------\n\nfunction vtkDataArray(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkDataArray');\n\n  /**\n   * Resize model.values and copy the old values to the new array.\n   * @param {Number} requestedNumTuples Final expected number of tuples; must be >= 0\n   * @returns {Boolean} True if a resize occured, false otherwise\n   */\n  function resize(requestedNumTuples) {\n    if (requestedNumTuples < 0) {\n      return false;\n    }\n    const numComps = publicAPI.getNumberOfComponents();\n    const curNumTuples = model.values.length / (numComps > 0 ? numComps : 1);\n    if (requestedNumTuples === curNumTuples) {\n      return true;\n    }\n    if (requestedNumTuples > curNumTuples) {\n      // Requested size is bigger than current size.  Allocate enough\n      // memory to fit the requested size and be more than double the\n      // currently allocated memory.\n      const oldValues = model.values;\n      model.values = newTypedArray(model.dataType, (requestedNumTuples + curNumTuples) * numComps);\n      model.values.set(oldValues);\n      return true;\n    }\n\n    // Requested size is smaller than currently allocated size\n    if (model.size > requestedNumTuples * numComps) {\n      model.size = requestedNumTuples * numComps;\n      publicAPI.dataChange();\n    }\n    return true;\n  }\n  publicAPI.dataChange = () => {\n    model.ranges = null;\n    publicAPI.modified();\n  };\n  publicAPI.resize = requestedNumTuples => {\n    resize(requestedNumTuples);\n    const newSize = requestedNumTuples * publicAPI.getNumberOfComponents();\n    if (model.size !== newSize) {\n      model.size = newSize;\n      publicAPI.dataChange();\n      return true;\n    }\n    return false;\n  };\n\n  // FIXME, to rename into \"clear()\" or \"reset()\"\n  publicAPI.initialize = () => {\n    publicAPI.resize(0);\n  };\n  publicAPI.getElementComponentSize = () => model.values.BYTES_PER_ELEMENT;\n\n  // Description:\n  // Return the data component at the location specified by tupleIdx and\n  // compIdx.\n  publicAPI.getComponent = function (tupleIdx) {\n    let compIdx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return model.values[tupleIdx * model.numberOfComponents + compIdx];\n  };\n\n  // Description:\n  // Set the data component at the location specified by tupleIdx and compIdx\n  // to value.\n  // Note that i is less than NumberOfTuples and j is less than\n  //  NumberOfComponents. Make sure enough memory has been allocated\n  // (use SetNumberOfTuples() and SetNumberOfComponents()).\n  publicAPI.setComponent = (tupleIdx, compIdx, value) => {\n    if (value !== model.values[tupleIdx * model.numberOfComponents + compIdx]) {\n      model.values[tupleIdx * model.numberOfComponents + compIdx] = value;\n      publicAPI.dataChange();\n    }\n  };\n  publicAPI.getValue = valueIdx => {\n    const idx = valueIdx / model.numberOfComponents;\n    const comp = valueIdx % model.numberOfComponents;\n    return publicAPI.getComponent(idx, comp);\n  };\n  publicAPI.setValue = (valueIdx, value) => {\n    const idx = valueIdx / model.numberOfComponents;\n    const comp = valueIdx % model.numberOfComponents;\n    publicAPI.setComponent(idx, comp, value);\n  };\n  publicAPI.getData = () => model.size === model.values.length ? model.values : model.values.subarray(0, model.size);\n  publicAPI.getRange = function () {\n    let componentIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n    let rangeIdx = componentIndex;\n    if (rangeIdx < 0) {\n      // If scalar data, then store in slot 0 (same as componentIndex = 0).\n      // If vector data, then store in last slot.\n      rangeIdx = model.numberOfComponents === 1 ? 0 : model.numberOfComponents;\n    }\n    let range = null;\n    if (!model.ranges) {\n      model.ranges = ensureRangeSize(model.ranges, model.numberOfComponents);\n    }\n    range = model.ranges[rangeIdx];\n    if (range) {\n      model.rangeTuple[0] = range.min;\n      model.rangeTuple[1] = range.max;\n      return model.rangeTuple;\n    }\n\n    // Need to compute ranges...\n    range = computeRange(publicAPI.getData(), componentIndex, model.numberOfComponents);\n    model.ranges[rangeIdx] = range;\n    model.rangeTuple[0] = range.min;\n    model.rangeTuple[1] = range.max;\n    return model.rangeTuple;\n  };\n  publicAPI.setRange = (rangeValue, componentIndex) => {\n    if (!model.ranges) {\n      model.ranges = ensureRangeSize(model.ranges, model.numberOfComponents);\n    }\n    const range = {\n      min: rangeValue.min,\n      max: rangeValue.max\n    };\n    model.ranges[componentIndex] = range;\n    model.rangeTuple[0] = range.min;\n    model.rangeTuple[1] = range.max;\n    return model.rangeTuple;\n  };\n  publicAPI.setTuple = (idx, tuple) => {\n    const offset = idx * model.numberOfComponents;\n    for (let i = 0; i < model.numberOfComponents; i++) {\n      model.values[offset + i] = tuple[i];\n    }\n  };\n  publicAPI.setTuples = (idx, tuples) => {\n    let i = idx * model.numberOfComponents;\n    const last = Math.min(tuples.length, model.size - i);\n    for (let j = 0; j < last;) {\n      model.values[i++] = tuples[j++];\n    }\n  };\n  publicAPI.insertTuple = (idx, tuple) => {\n    if (model.size <= idx * model.numberOfComponents) {\n      model.size = (idx + 1) * model.numberOfComponents;\n      resize(idx + 1);\n    }\n    publicAPI.setTuple(idx, tuple);\n    return idx;\n  };\n  publicAPI.insertTuples = (idx, tuples) => {\n    const end = idx + tuples.length / model.numberOfComponents;\n    if (model.size < end * model.numberOfComponents) {\n      model.size = end * model.numberOfComponents;\n      resize(end);\n    }\n    publicAPI.setTuples(idx, tuples);\n    return end;\n  };\n  publicAPI.insertNextTuple = tuple => {\n    const idx = model.size / model.numberOfComponents;\n    return publicAPI.insertTuple(idx, tuple);\n  };\n  publicAPI.insertNextTuples = tuples => {\n    const idx = model.size / model.numberOfComponents;\n    return publicAPI.insertTuples(idx, tuples);\n  };\n  publicAPI.findTuple = function (tuple) {\n    let precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EPSILON;\n    for (let i = 0; i < model.size; i += model.numberOfComponents) {\n      if (Math.abs(tuple[0] - model.values[i]) <= precision) {\n        let match = true;\n        for (let j = 1; j < model.numberOfComponents; ++j) {\n          if (Math.abs(tuple[j] - model.values[i + j]) > precision) {\n            match = false;\n            break;\n          }\n        }\n        if (match) {\n          return i / model.numberOfComponents;\n        }\n      }\n    }\n    return -1;\n  };\n  publicAPI.getTuple = function (idx) {\n    let tupleToFill = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    const numberOfComponents = model.numberOfComponents || 1;\n    const offset = idx * numberOfComponents;\n    // Check most common component sizes first\n    // to avoid doing a for loop if possible\n    switch (numberOfComponents) {\n      case 4:\n        tupleToFill[3] = model.values[offset + 3];\n      // eslint-disable-next-line no-fallthrough\n      case 3:\n        tupleToFill[2] = model.values[offset + 2];\n      // eslint-disable-next-line no-fallthrough\n      case 2:\n        tupleToFill[1] = model.values[offset + 1];\n      // eslint-disable-next-line no-fallthrough\n      case 1:\n        tupleToFill[0] = model.values[offset];\n        break;\n      default:\n        for (let i = numberOfComponents - 1; i >= 0; --i) {\n          tupleToFill[i] = model.values[offset + i];\n        }\n    }\n    return tupleToFill;\n  };\n  publicAPI.getTuples = (fromId, toId) => {\n    const from = (fromId ?? 0) * model.numberOfComponents;\n    const to = (toId ?? publicAPI.getNumberOfTuples()) * model.numberOfComponents;\n    const arr = publicAPI.getData().subarray(from, to);\n    return arr.length > 0 ? arr : null;\n  };\n  publicAPI.getTupleLocation = function () {\n    let idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return idx * model.numberOfComponents;\n  };\n  publicAPI.getNumberOfComponents = () => model.numberOfComponents;\n  publicAPI.getNumberOfValues = () => model.size;\n  publicAPI.getNumberOfTuples = () => model.size / model.numberOfComponents;\n  publicAPI.getDataType = () => model.dataType;\n  /* eslint-disable no-use-before-define */\n  publicAPI.newClone = () => newInstance({\n    empty: true,\n    name: model.name,\n    dataType: model.dataType,\n    numberOfComponents: model.numberOfComponents\n  });\n  /* eslint-enable no-use-before-define */\n\n  publicAPI.getName = () => {\n    if (!model.name) {\n      publicAPI.modified();\n      model.name = `vtkDataArray${publicAPI.getMTime()}`;\n    }\n    return model.name;\n  };\n  publicAPI.setData = (typedArray, numberOfComponents) => {\n    model.values = typedArray;\n    model.size = typedArray.length;\n    model.dataType = getDataType(typedArray);\n    if (numberOfComponents) {\n      model.numberOfComponents = numberOfComponents;\n    }\n    if (model.size % model.numberOfComponents !== 0) {\n      model.numberOfComponents = 1;\n    }\n    publicAPI.dataChange();\n  };\n\n  // Override serialization support\n  publicAPI.getState = () => {\n    if (model.deleted) {\n      return null;\n    }\n    const jsonArchive = {\n      ...model,\n      vtkClass: publicAPI.getClassName()\n    };\n\n    // Convert typed array to regular array\n    jsonArchive.values = Array.from(jsonArchive.values);\n    delete jsonArchive.buffer;\n\n    // Clean any empty data\n    Object.keys(jsonArchive).forEach(keyName => {\n      if (!jsonArchive[keyName]) {\n        delete jsonArchive[keyName];\n      }\n    });\n\n    // Sort resulting object by key name\n    const sortedObj = {};\n    Object.keys(jsonArchive).sort().forEach(name => {\n      sortedObj[name] = jsonArchive[name];\n    });\n\n    // Remove mtime\n    if (sortedObj.mtime) {\n      delete sortedObj.mtime;\n    }\n    return sortedObj;\n  };\n  publicAPI.deepCopy = other => {\n    // Retain current dataType and array reference before shallowCopy call.\n    const currentType = publicAPI.getDataType();\n    const currentArray = model.values;\n    publicAPI.shallowCopy(other);\n\n    // Avoid array reallocation if size already sufficient\n    // and dataTypes match.\n    if (currentArray?.length >= other.getNumberOfValues() && currentType === other.getDataType()) {\n      currentArray.set(other.getData());\n      model.values = currentArray;\n      publicAPI.dataChange();\n    } else {\n      publicAPI.setData(other.getData().slice());\n    }\n  };\n  publicAPI.interpolateTuple = (idx, source1, source1Idx, source2, source2Idx, t) => {\n    const numberOfComponents = model.numberOfComponents || 1;\n    if (numberOfComponents !== source1.getNumberOfComponents() || numberOfComponents !== source2.getNumberOfComponents()) {\n      vtkErrorMacro('numberOfComponents must match');\n    }\n    const tuple1 = source1.getTuple(source1Idx);\n    const tuple2 = source2.getTuple(source2Idx);\n    const out = [];\n    out.length = numberOfComponents;\n\n    // Check most common component sizes first\n    // to avoid doing a for loop if possible\n    switch (numberOfComponents) {\n      case 4:\n        out[3] = tuple1[3] + (tuple2[3] - tuple1[3]) * t;\n      // eslint-disable-next-line no-fallthrough\n      case 3:\n        out[2] = tuple1[2] + (tuple2[2] - tuple1[2]) * t;\n      // eslint-disable-next-line no-fallthrough\n      case 2:\n        out[1] = tuple1[1] + (tuple2[1] - tuple1[1]) * t;\n      // eslint-disable-next-line no-fallthrough\n      case 1:\n        out[0] = tuple1[0] + (tuple2[0] - tuple1[0]) * t;\n        break;\n      default:\n        for (let i = 0; i < numberOfComponents; i++) {\n          out[i] = tuple1[i] + (tuple2[i] - tuple1[i]) * t;\n        }\n    }\n    return publicAPI.insertTuple(idx, out);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n// size: The current size of the dataArray.\n// NOTE: The underlying typed array may be larger than 'size'.\nconst DEFAULT_VALUES = {\n  name: '',\n  numberOfComponents: 1,\n  dataType: DefaultDataType,\n  rangeTuple: [0, 0]\n  // size: undefined,\n  // values: null,\n  // ranges: null,\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  if (Array.isArray(initialValues.values) && initialValues.dataType === undefined) {\n    console.warn('vtkDataArray.newInstance: no dataType provided, converting to Float32Array');\n  }\n  if (!model.empty && !model.values && !model.size) {\n    throw new TypeError('Cannot create vtkDataArray object without: size > 0, values');\n  }\n  if (!model.values) {\n    model.values = newTypedArray(model.dataType, model.size);\n  } else if (Array.isArray(model.values)) {\n    model.values = newTypedArrayFrom(model.dataType, model.values);\n  }\n  if (model.values) {\n    // Takes the size if provided (can be lower than `model.values`) otherwise the actual length of `values`.\n    model.size = model.size ?? model.values.length;\n    model.dataType = getDataType(model.values);\n  }\n\n  // Object methods\n  obj(publicAPI, model);\n  set(publicAPI, model, ['name', 'numberOfComponents']);\n  if (model.size % model.numberOfComponents !== 0) {\n    throw new RangeError('model.size is not a multiple of model.numberOfComponents');\n  }\n\n  // Object specific methods\n  vtkDataArray(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkDataArray');\n\n// ----------------------------------------------------------------------------\n\nvar vtkDataArray$1 = {\n  newInstance,\n  extend,\n  ...STATIC,\n  ...Constants\n};\n\nexport { STATIC, vtkDataArray$1 as default, extend, newInstance };\n","import vtk from '../../../vtk.js';\nimport { m as macro } from '../../../macros2.js';\nimport vtkDataArray from '../../Core/DataArray.js';\n\nconst {\n  vtkErrorMacro,\n  vtkWarningMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkFieldData methods\n// ----------------------------------------------------------------------------\n\nfunction vtkFieldData(publicAPI, model) {\n  model.classHierarchy.push('vtkFieldData');\n  const superGetState = publicAPI.getState;\n\n  // Decode serialized data if any\n  if (model.arrays) {\n    model.arrays = model.arrays.map(item => ({\n      data: vtk(item.data)\n    }));\n  }\n  publicAPI.initialize = () => {\n    publicAPI.initializeFields();\n    publicAPI.copyAllOn();\n    publicAPI.clearFieldFlags();\n  };\n  publicAPI.initializeFields = () => {\n    model.arrays = [];\n    model.copyFieldFlags = {};\n    publicAPI.modified();\n  };\n  publicAPI.copyStructure = other => {\n    publicAPI.initializeFields();\n    model.copyFieldFlags = other.getCopyFieldFlags().map(x => x); // Deep-copy\n    model.arrays = other.arrays().map(x => ({\n      array: x\n    })); // Deep-copy\n    // TODO: Copy array information objects (once we support information objects)\n  };\n\n  publicAPI.getNumberOfArrays = () => model.arrays.length;\n  publicAPI.getNumberOfActiveArrays = () => model.arrays.length;\n  publicAPI.addArray = arr => {\n    const name = arr.getName();\n    const {\n      array,\n      index\n    } = publicAPI.getArrayWithIndex(name);\n    if (array != null) {\n      model.arrays[index] = {\n        data: arr\n      };\n      return index;\n    }\n    model.arrays = [].concat(model.arrays, {\n      data: arr\n    });\n    return model.arrays.length - 1;\n  };\n  publicAPI.removeAllArrays = () => {\n    model.arrays = [];\n  };\n  publicAPI.removeArray = arrayName => {\n    const index = model.arrays.findIndex(array => array.data.getName() === arrayName);\n    return publicAPI.removeArrayByIndex(index);\n  };\n  publicAPI.removeArrayByIndex = arrayIdx => {\n    if (arrayIdx !== -1 && arrayIdx < model.arrays.length) {\n      model.arrays.splice(arrayIdx, 1);\n      // TBD modified() ?\n      return true;\n    }\n    return false;\n  };\n  publicAPI.getArrays = () => model.arrays.map(entry => entry.data);\n  publicAPI.getArray = arraySpec => typeof arraySpec === 'number' ? publicAPI.getArrayByIndex(arraySpec) : publicAPI.getArrayByName(arraySpec);\n  publicAPI.getArrayByName = arrayName => model.arrays.reduce((a, b, i) => b.data.getName() === arrayName ? b.data : a, null);\n  publicAPI.getArrayWithIndex = arrayName => {\n    const index = model.arrays.findIndex(array => array.data.getName() === arrayName);\n    return {\n      array: index !== -1 ? model.arrays[index].data : null,\n      index\n    };\n  };\n  publicAPI.getArrayByIndex = idx => idx >= 0 && idx < model.arrays.length ? model.arrays[idx].data : null;\n  publicAPI.hasArray = arrayName => publicAPI.getArrayWithIndex(arrayName).index >= 0;\n  publicAPI.getArrayName = idx => {\n    const arr = model.arrays[idx];\n    return arr ? arr.data.getName() : '';\n  };\n  publicAPI.getCopyFieldFlags = () => model.copyFieldFlags;\n  publicAPI.getFlag = arrayName => model.copyFieldFlags[arrayName];\n  publicAPI.passData = function (other) {\n    let fromId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n    let toId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    other.getArrays().forEach(arr => {\n      const copyFlag = publicAPI.getFlag(arr.getName());\n      if (copyFlag !== false && !(model.doCopyAllOff && copyFlag !== true) && arr) {\n        let destArr = publicAPI.getArrayByName(arr.getName());\n        if (!destArr) {\n          if (fromId < 0 || fromId > arr.getNumberOfTuples()) {\n            // TBD: should this be a deep or a shallow copy?\n            publicAPI.addArray(arr);\n            other.getAttributes(arr).forEach(attrType => {\n              publicAPI.setAttribute(arr, attrType);\n            });\n          } else {\n            const ncomps = arr.getNumberOfComponents();\n            let newSize = arr.getNumberOfValues();\n            const tId = toId > -1 ? toId : fromId;\n            if (newSize <= tId * ncomps) {\n              newSize = (tId + 1) * ncomps;\n            }\n            destArr = vtkDataArray.newInstance({\n              name: arr.getName(),\n              dataType: arr.getDataType(),\n              numberOfComponents: ncomps,\n              values: macro.newTypedArray(arr.getDataType(), newSize),\n              size: 0\n            });\n            destArr.insertTuple(tId, arr.getTuple(fromId));\n            publicAPI.addArray(destArr);\n            other.getAttributes(arr).forEach(attrType => {\n              publicAPI.setAttribute(destArr, attrType);\n            });\n          }\n        } else if (arr.getNumberOfComponents() === destArr.getNumberOfComponents()) {\n          if (fromId > -1 && fromId < arr.getNumberOfTuples()) {\n            const tId = toId > -1 ? toId : fromId;\n            destArr.insertTuple(tId, arr.getTuple(fromId));\n          } else {\n            // if `fromId` is not provided, just copy all (or as much possible)\n            // from `arr` to `destArr`.\n            destArr.insertTuples(0, arr.getTuples());\n          }\n        } else {\n          vtkErrorMacro('Unhandled case in passData');\n        }\n      }\n    });\n  };\n  publicAPI.interpolateData = function (other) {\n    let fromId1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n    let fromId2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    let toId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n    let t = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.5;\n    other.getArrays().forEach(arr => {\n      const copyFlag = publicAPI.getFlag(arr.getName());\n      if (copyFlag !== false && !(model.doCopyAllOff && copyFlag !== true) && arr) {\n        let destArr = publicAPI.getArrayByName(arr.getName());\n        if (!destArr) {\n          if (fromId1 < 0 || fromId2 < 0 || fromId1 > arr.getNumberOfTuples()) {\n            // TBD: should this be a deep or a shallow copy?\n            publicAPI.addArray(arr);\n            other.getAttributes(arr).forEach(attrType => {\n              publicAPI.setAttribute(arr, attrType);\n            });\n          } else {\n            const ncomps = arr.getNumberOfComponents();\n            let newSize = arr.getNumberOfValues();\n            // TODO: Is this supposed to happen?\n            const tId = toId > -1 ? toId : fromId1;\n            if (newSize <= tId * ncomps) {\n              newSize = (tId + 1) * ncomps;\n            }\n            destArr = vtkDataArray.newInstance({\n              name: arr.getName(),\n              dataType: arr.getDataType(),\n              numberOfComponents: ncomps,\n              values: macro.newTypedArray(arr.getDataType(), newSize),\n              size: 0\n            });\n            destArr.interpolateTuple(tId, arr, fromId1, arr, fromId2, t);\n            publicAPI.addArray(destArr);\n            other.getAttributes(arr).forEach(attrType => {\n              publicAPI.setAttribute(destArr, attrType);\n            });\n          }\n        } else if (arr.getNumberOfComponents() === destArr.getNumberOfComponents()) {\n          if (fromId1 > -1 && fromId1 < arr.getNumberOfTuples()) {\n            const tId = toId > -1 ? toId : fromId1;\n            destArr.interpolateTuple(tId, arr, fromId1, arr, fromId2, t);\n            vtkWarningMacro('Unexpected case in interpolateData');\n          } else {\n            // if `fromId` is not provided, just copy all (or as much possible)\n            // from `arr` to `destArr`.\n            destArr.insertTuples(arr.getTuples());\n          }\n        } else {\n          vtkErrorMacro('Unhandled case in interpolateData');\n        }\n      }\n    });\n  };\n  publicAPI.copyFieldOn = arrayName => {\n    model.copyFieldFlags[arrayName] = true;\n  };\n  publicAPI.copyFieldOff = arrayName => {\n    model.copyFieldFlags[arrayName] = false;\n  };\n  publicAPI.copyAllOn = () => {\n    if (!model.doCopyAllOn || model.doCopyAllOff) {\n      model.doCopyAllOn = true;\n      model.doCopyAllOff = false;\n      publicAPI.modified();\n    }\n  };\n  publicAPI.copyAllOff = () => {\n    if (model.doCopyAllOn || !model.doCopyAllOff) {\n      model.doCopyAllOn = false;\n      model.doCopyAllOff = true;\n      publicAPI.modified();\n    }\n  };\n  publicAPI.clearFieldFlags = () => {\n    model.copyFieldFlags = {};\n  };\n  publicAPI.deepCopy = other => {\n    model.arrays = other.getArrays().map(arr => {\n      const arrNew = arr.newClone();\n      arrNew.deepCopy(arr);\n      return {\n        data: arrNew\n      };\n    });\n  };\n  publicAPI.copyFlags = other => other.getCopyFieldFlags().map(x => x);\n  // TODO: publicAPI.squeeze = () => model.arrays.forEach(entry => entry.data.squeeze());\n  publicAPI.reset = () => model.arrays.forEach(entry => entry.data.reset());\n  // TODO: getActualMemorySize\n  publicAPI.getMTime = () => model.arrays.reduce((a, b) => b.data.getMTime() > a ? b.data.getMTime() : a, model.mtime);\n  // TODO: publicAPI.getField = (ids, other) => { copy ids from other into this model's arrays }\n  // TODO: publicAPI.getArrayContainingComponent = (component) => ...\n  publicAPI.getNumberOfComponents = () => model.arrays.reduce((a, b) => a + b.data.getNumberOfComponents(), 0);\n  publicAPI.getNumberOfTuples = () => model.arrays.length > 0 ? model.arrays[0].getNumberOfTuples() : 0;\n  publicAPI.getState = () => {\n    const result = superGetState();\n    if (result) {\n      result.arrays = model.arrays.map(item => ({\n        data: item.data.getState()\n      }));\n    }\n    return result;\n  };\n}\nconst DEFAULT_VALUES = {\n  arrays: [],\n  copyFieldFlags: [],\n  // fields not to copy\n  doCopyAllOn: true,\n  doCopyAllOff: false\n};\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  vtkFieldData(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkFieldData');\n\n// ----------------------------------------------------------------------------\n\nvar vtkFieldData$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkFieldData$1 as default, extend, newInstance };\n","const AttributeTypes = {\n  SCALARS: 0,\n  VECTORS: 1,\n  NORMALS: 2,\n  TCOORDS: 3,\n  TENSORS: 4,\n  GLOBALIDS: 5,\n  PEDIGREEIDS: 6,\n  EDGEFLAG: 7,\n  NUM_ATTRIBUTES: 8\n};\nconst AttributeLimitTypes = {\n  MAX: 0,\n  EXACT: 1,\n  NOLIMIT: 2\n};\nconst CellGhostTypes = {\n  DUPLICATECELL: 1,\n  // the cell is present on multiple processors\n  HIGHCONNECTIVITYCELL: 2,\n  // the cell has more neighbors than in a regular mesh\n  LOWCONNECTIVITYCELL: 4,\n  // the cell has less neighbors than in a regular mesh\n  REFINEDCELL: 8,\n  // other cells are present that refines it.\n  EXTERIORCELL: 16,\n  // the cell is on the exterior of the data set\n  HIDDENCELL: 32 // the cell is needed to maintain connectivity, but the data values should be ignored.\n};\n\nconst PointGhostTypes = {\n  DUPLICATEPOINT: 1,\n  // the cell is present on multiple processors\n  HIDDENPOINT: 2 // the point is needed to maintain connectivity, but the data values should be ignored.\n};\n\nconst AttributeCopyOperations = {\n  COPYTUPLE: 0,\n  INTERPOLATE: 1,\n  PASSDATA: 2,\n  ALLCOPY: 3 // all of the above\n};\n\nconst ghostArrayName = 'vtkGhostType';\nconst DesiredOutputPrecision = {\n  DEFAULT: 0,\n  // use the point type that does not truncate any data\n  SINGLE: 1,\n  // use Float32Array\n  DOUBLE: 2 // use Float64Array\n};\n\nvar Constants = {\n  AttributeCopyOperations,\n  AttributeLimitTypes,\n  AttributeTypes,\n  CellGhostTypes,\n  DesiredOutputPrecision,\n  PointGhostTypes,\n  ghostArrayName\n};\n\nexport { AttributeCopyOperations, AttributeLimitTypes, AttributeTypes, CellGhostTypes, DesiredOutputPrecision, PointGhostTypes, Constants as default, ghostArrayName };\n","import { m as macro } from '../../macros2.js';\nimport vtkFieldData from './DataSetAttributes/FieldData.js';\nimport Constants from './DataSetAttributes/Constants.js';\nimport vtkDataArray from '../Core/DataArray.js';\n\nconst {\n  AttributeTypes,\n  AttributeCopyOperations\n} = Constants;\nconst {\n  vtkWarningMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkDataSetAttributes methods\n// ----------------------------------------------------------------------------\n\nfunction vtkDataSetAttributes(publicAPI, model) {\n  const attrTypes = ['Scalars', 'Vectors', 'Normals', 'TCoords', 'Tensors', 'GlobalIds', 'PedigreeIds'];\n  function cleanAttributeType(attType) {\n    // Given an integer or string, convert the result to one of the\n    // strings in the \"attrTypes\" array above or null (if\n    // no match is found)\n    let cleanAttType = attrTypes.find(ee => AttributeTypes[ee.toUpperCase()] === attType || typeof attType !== 'number' && ee.toLowerCase() === attType.toLowerCase());\n    if (typeof cleanAttType === 'undefined') {\n      cleanAttType = null;\n    }\n    return cleanAttType;\n  }\n\n  // Set our className\n  model.classHierarchy.push('vtkDataSetAttributes');\n  const superClass = {\n    ...publicAPI\n  };\n  publicAPI.checkNumberOfComponents = x => true; // TODO\n\n  publicAPI.setAttribute = (arr, uncleanAttType) => {\n    const attType = cleanAttributeType(uncleanAttType);\n    if (arr && attType.toUpperCase() === 'PEDIGREEIDS' && !arr.isA('vtkDataArray')) {\n      vtkWarningMacro(`Cannot set attribute ${attType}. The attribute must be a vtkDataArray.`);\n      return -1;\n    }\n    if (arr && !publicAPI.checkNumberOfComponents(arr, attType)) {\n      vtkWarningMacro(`Cannot set attribute ${attType}. Incorrect number of components.`);\n      return -1;\n    }\n    let currentAttribute = model[`active${attType}`];\n    if (currentAttribute >= 0 && currentAttribute < model.arrays.length) {\n      if (model.arrays[currentAttribute] === arr) {\n        return currentAttribute;\n      }\n      // FIXME setting an array actually changes its index\n      publicAPI.removeArrayByIndex(currentAttribute);\n    }\n    if (arr) {\n      currentAttribute = publicAPI.addArray(arr);\n      model[`active${attType}`] = currentAttribute;\n    } else {\n      model[`active${attType}`] = -1;\n    }\n    publicAPI.modified();\n    return model[`active${attType}`];\n  };\n  publicAPI.getAttributes = arr => attrTypes.filter(attrType => publicAPI[`get${attrType}`]() === arr);\n  publicAPI.setActiveAttributeByName = (arrayName, attType) => publicAPI.setActiveAttributeByIndex(publicAPI.getArrayWithIndex(arrayName).index, attType);\n  publicAPI.setActiveAttributeByIndex = (arrayIdx, uncleanAttType) => {\n    const attType = cleanAttributeType(uncleanAttType);\n    if (arrayIdx >= 0 && arrayIdx < model.arrays.length) {\n      if (attType.toUpperCase() !== 'PEDIGREEIDS') {\n        const arr = publicAPI.getArrayByIndex(arrayIdx);\n        if (!arr.isA('vtkDataArray')) {\n          vtkWarningMacro(`Cannot set attribute ${attType}. Only vtkDataArray subclasses can be set as active attributes.`);\n          return -1;\n        }\n        if (!publicAPI.checkNumberOfComponents(arr, attType)) {\n          vtkWarningMacro(`Cannot set attribute ${attType}. Incorrect number of components.`);\n          return -1;\n        }\n      }\n      model[`active${attType}`] = arrayIdx;\n      publicAPI.modified();\n      return arrayIdx;\n    }\n    if (arrayIdx === -1) {\n      model[`active${attType}`] = arrayIdx;\n      publicAPI.modified();\n    }\n    return -1;\n  };\n  publicAPI.getActiveAttribute = attType => {\n    // Given an integer enum value or a string (with random capitalization),\n    // find the matching string in attrTypes.\n    const cleanAttType = cleanAttributeType(attType);\n    return publicAPI[`get${cleanAttType}`]();\n  };\n\n  // Override to allow proper handling of active attributes\n  publicAPI.removeAllArrays = () => {\n    attrTypes.forEach(attType => {\n      model[`active${attType}`] = -1;\n    });\n    superClass.removeAllArrays();\n  };\n\n  // Override to allow proper handling of active attributes\n  publicAPI.removeArrayByIndex = arrayIdx => {\n    if (arrayIdx !== -1) {\n      attrTypes.forEach(attType => {\n        if (arrayIdx === model[`active${attType}`]) {\n          model[`active${attType}`] = -1;\n        } else if (arrayIdx < model[`active${attType}`]) {\n          model[`active${attType}`] -= 1;\n        }\n      });\n    }\n    return superClass.removeArrayByIndex(arrayIdx);\n  };\n  attrTypes.forEach(value => {\n    const activeVal = `active${value}`;\n    publicAPI[`get${value}`] = () => publicAPI.getArrayByIndex(model[activeVal]);\n    publicAPI[`set${value}`] = da => publicAPI.setAttribute(da, value);\n    publicAPI[`setActive${value}`] = arrayName => publicAPI.setActiveAttributeByIndex(publicAPI.getArrayWithIndex(arrayName).index, value);\n    publicAPI[`copy${value}Off`] = () => {\n      const attType = value.toUpperCase();\n      model.copyAttributeFlags[AttributeCopyOperations.PASSDATA][AttributeTypes[attType]] = false;\n    };\n    publicAPI[`copy${value}On`] = () => {\n      const attType = value.toUpperCase();\n      model.copyAttributeFlags[AttributeCopyOperations.PASSDATA][AttributeTypes[attType]] = true;\n    };\n  });\n  publicAPI.initializeAttributeCopyFlags = () => {\n    // Default to copying all attributes in every circumstance:\n    model.copyAttributeFlags = [];\n    Object.keys(AttributeCopyOperations).filter(op => op !== 'ALLCOPY').forEach(attCopyOp => {\n      model.copyAttributeFlags[AttributeCopyOperations[attCopyOp]] = Object.keys(AttributeTypes).filter(ty => ty !== 'NUM_ATTRIBUTES').reduce((a, b) => {\n        a[AttributeTypes[b]] = true;\n        return a;\n      }, []);\n    });\n    // Override some operations where we don't want to copy:\n    model.copyAttributeFlags[AttributeCopyOperations.COPYTUPLE][AttributeTypes.GLOBALIDS] = false;\n    model.copyAttributeFlags[AttributeCopyOperations.INTERPOLATE][AttributeTypes.GLOBALIDS] = false;\n    model.copyAttributeFlags[AttributeCopyOperations.COPYTUPLE][AttributeTypes.PEDIGREEIDS] = false;\n  };\n  publicAPI.initialize = macro.chain(publicAPI.initialize, publicAPI.initializeAttributeCopyFlags);\n\n  // Process dataArrays if any\n  if (model.dataArrays && Object.keys(model.dataArrays).length) {\n    Object.keys(model.dataArrays).forEach(name => {\n      if (!model.dataArrays[name].ref && model.dataArrays[name].type === 'vtkDataArray') {\n        publicAPI.addArray(vtkDataArray.newInstance(model.dataArrays[name]));\n      }\n    });\n  }\n  const superShallowCopy = publicAPI.shallowCopy;\n  publicAPI.shallowCopy = (other, debug) => {\n    superShallowCopy(other, debug);\n    model.arrays = other.getArrays().map(arr => {\n      const arrNew = arr.newClone();\n      arrNew.shallowCopy(arr, debug);\n      return {\n        data: arrNew\n      };\n    });\n  };\n  publicAPI.initializeAttributeCopyFlags();\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  activeScalars: -1,\n  activeVectors: -1,\n  activeTensors: -1,\n  activeNormals: -1,\n  activeTCoords: -1,\n  activeGlobalIds: -1,\n  activePedigreeIds: -1\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  vtkFieldData.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['activeScalars', 'activeNormals', 'activeTCoords', 'activeVectors', 'activeTensors', 'activeGlobalIds', 'activePedigreeIds']);\n  if (!model.arrays) {\n    model.arrays = {};\n  }\n\n  // Object specific methods\n  vtkDataSetAttributes(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkDataSetAttributes');\n\n// ----------------------------------------------------------------------------\n\nvar vtkDataSetAttributes$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkDataSetAttributes$1 as default, extend, newInstance };\n","// Specify how data arrays can be used by data objects\nconst FieldDataTypes = {\n  UNIFORM: 0,\n  // data that does not vary over points/cells/etc.\n  DATA_OBJECT_FIELD: 0,\n  // to match VTK\n\n  COORDINATE: 1,\n  // data that specifies the location of each point\n  POINT_DATA: 1,\n  // to match VTK\n\n  POINT: 2,\n  // data defined at each point, but that does not specify the point location\n  POINT_FIELD_DATA: 2,\n  // to match VTK\n\n  CELL: 3,\n  // data defined at each cell, but that does not specify the cell\n  CELL_FIELD_DATA: 3,\n  // to match VTK\n\n  VERTEX: 4,\n  // data defined at each graph vertex, but that does not specify the graph vertex\n  VERTEX_FIELD_DATA: 4,\n  // to match VTK\n\n  EDGE: 5,\n  // data defined at each graph edge, but that does not specify the graph edge\n  EDGE_FIELD_DATA: 5,\n  // to match VTK\n\n  ROW: 6,\n  // data specifying a table row\n  ROW_DATA: 6 // to match VTK\n};\n\nconst FieldAssociations = {\n  FIELD_ASSOCIATION_POINTS: 0,\n  FIELD_ASSOCIATION_CELLS: 1,\n  FIELD_ASSOCIATION_NONE: 2,\n  FIELD_ASSOCIATION_POINTS_THEN_CELLS: 3,\n  FIELD_ASSOCIATION_VERTICES: 4,\n  FIELD_ASSOCIATION_EDGES: 5,\n  FIELD_ASSOCIATION_ROWS: 6,\n  NUMBER_OF_ASSOCIATIONS: 7\n};\nvar Constants = {\n  FieldDataTypes,\n  FieldAssociations\n};\n\nexport { FieldAssociations, FieldDataTypes, Constants as default };\n","import { m as macro } from '../../macros2.js';\nimport vtk from '../../vtk.js';\nimport vtkDataSetAttributes from './DataSetAttributes.js';\nimport Constants from './DataSet/Constants.js';\n\n// import vtkBoundingBox from '../BoundingBox';\n// import * as vtkMath from '../../Core/Math';\n//\n// function getBounds(dataset) {\n//   if (dataset.bounds) {\n//     return dataset.bounds;\n//   }\n//   if (dataset.type && dataset[dataset.type]) {\n//     const ds = dataset[dataset.type];\n//     if (ds.bounds) {\n//       return ds.bounds;\n//     }\n//     if (ds.Points && ds.Points.bounds) {\n//       return ds.Points.bounds;\n//     }\n\n//     if (ds.Points && ds.Points.values) {\n//       const array = ds.Points.values;\n//       const bbox = [...vtkBoundingBox.INIT_BOUNDS];\n//       const size = array.length;\n//       const delta = ds.Points.numberOfComponents ? ds.Points.numberOfComponents : 3;\n//       for (let idx = 0; idx < size; idx += delta) {\n//         vtkBoundingBox.addPoint(bbox, array[idx * delta], array[(idx * delta) + 1], array[(idx * delta) + 2]);\n//       }\n//       ds.Points.bounds = bbox;\n//       return ds.Points.bounds;\n//     }\n//   }\n//   return vtkMath.createUninitializedBounds();\n// }\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nconst DATASET_FIELDS = ['pointData', 'cellData', 'fieldData'];\n\n// ----------------------------------------------------------------------------\n// vtkDataSet methods\n// ----------------------------------------------------------------------------\n\nfunction vtkDataSet(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkDataSet');\n\n  // Add dataset attributes\n  DATASET_FIELDS.forEach(fieldName => {\n    if (!model[fieldName]) {\n      model[fieldName] = vtkDataSetAttributes.newInstance();\n    } else {\n      model[fieldName] = vtk(model[fieldName]);\n    }\n  });\n  const superShallowCopy = publicAPI.shallowCopy;\n  publicAPI.shallowCopy = function (other) {\n    let debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    superShallowCopy(other, debug);\n    DATASET_FIELDS.forEach(fieldName => {\n      model[fieldName] = vtkDataSetAttributes.newInstance();\n      model[fieldName].shallowCopy(other.getReferenceByName(fieldName));\n    });\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // pointData: null,\n  // cellData: null,\n  // fieldData: null,\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, DATASET_FIELDS);\n\n  // Object specific methods\n  vtkDataSet(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkDataSet');\n\n// ----------------------------------------------------------------------------\n\nvar vtkDataSet$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkDataSet$1 as default, extend, newInstance };\n","const StructuredType = {\n  UNCHANGED: 0,\n  SINGLE_POINT: 1,\n  X_LINE: 2,\n  Y_LINE: 3,\n  Z_LINE: 4,\n  XY_PLANE: 5,\n  YZ_PLANE: 6,\n  XZ_PLANE: 7,\n  XYZ_GRID: 8,\n  EMPTY: 9\n};\nvar Constants = {\n  StructuredType\n};\n\nexport { StructuredType, Constants as default };\n","import Constants from './StructuredData/Constants.js';\n\nconst {\n  StructuredType\n} = Constants;\nfunction getDataDescriptionFromExtent(inExt) {\n  let dataDim = 0;\n  for (let i = 0; i < 3; ++i) {\n    if (inExt[i * 2] < inExt[i * 2 + 1]) {\n      dataDim++;\n    }\n  }\n  if (inExt[0] > inExt[1] || inExt[2] > inExt[3] || inExt[4] > inExt[5]) {\n    return StructuredType.EMPTY;\n  }\n  if (dataDim === 3) {\n    return StructuredType.XYZ_GRID;\n  }\n  if (dataDim === 2) {\n    if (inExt[0] === inExt[1]) {\n      return StructuredType.YZ_PLANE;\n    }\n    if (inExt[2] === inExt[3]) {\n      return StructuredType.XZ_PLANE;\n    }\n    return StructuredType.XY_PLANE;\n  }\n  if (dataDim === 1) {\n    if (inExt[0] < inExt[1]) {\n      return StructuredType.X_LINE;\n    }\n    if (inExt[2] < inExt[3]) {\n      return StructuredType.Y_LINE;\n    }\n    return StructuredType.Z_LINE;\n  }\n  return StructuredType.SINGLE_POINT;\n}\nvar vtkStructuredData = {\n  getDataDescriptionFromExtent,\n  ...Constants\n};\n\nexport { vtkStructuredData as default, getDataDescriptionFromExtent };\n","import { m as macro } from '../../macros2.js';\nimport { b as roundVector, c as clampVector } from '../Core/Math/index.js';\nimport vtkBoundingBox from './BoundingBox.js';\nimport vtkDataSet from './DataSet.js';\nimport vtkStructuredData from './StructuredData.js';\nimport { StructuredType } from './StructuredData/Constants.js';\nimport { mat3, mat4, vec3 } from 'gl-matrix';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkImageData methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageData(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageData');\n  publicAPI.setExtent = function () {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return false;\n    }\n    for (var _len = arguments.length, inExtent = new Array(_len), _key = 0; _key < _len; _key++) {\n      inExtent[_key] = arguments[_key];\n    }\n    const extentArray = inExtent.length === 1 ? inExtent[0] : inExtent;\n    if (extentArray.length !== 6) {\n      return false;\n    }\n    const changeDetected = model.extent.some((item, index) => item !== extentArray[index]);\n    if (changeDetected) {\n      model.extent = extentArray.slice();\n      model.dataDescription = vtkStructuredData.getDataDescriptionFromExtent(model.extent);\n      publicAPI.modified();\n    }\n    return changeDetected;\n  };\n  publicAPI.setDimensions = function () {\n    let i;\n    let j;\n    let k;\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (arguments.length === 1) {\n      const array = arguments.length <= 0 ? undefined : arguments[0];\n      i = array[0];\n      j = array[1];\n      k = array[2];\n    } else if (arguments.length === 3) {\n      i = arguments.length <= 0 ? undefined : arguments[0];\n      j = arguments.length <= 1 ? undefined : arguments[1];\n      k = arguments.length <= 2 ? undefined : arguments[2];\n    } else {\n      vtkErrorMacro('Bad dimension specification');\n      return;\n    }\n    publicAPI.setExtent(0, i - 1, 0, j - 1, 0, k - 1);\n  };\n  publicAPI.getDimensions = () => [model.extent[1] - model.extent[0] + 1, model.extent[3] - model.extent[2] + 1, model.extent[5] - model.extent[4] + 1];\n  publicAPI.getNumberOfCells = () => {\n    const dims = publicAPI.getDimensions();\n    let nCells = 1;\n    for (let i = 0; i < 3; i++) {\n      if (dims[i] === 0) {\n        return 0;\n      }\n      if (dims[i] > 1) {\n        nCells *= dims[i] - 1;\n      }\n    }\n    return nCells;\n  };\n  publicAPI.getNumberOfPoints = () => {\n    const dims = publicAPI.getDimensions();\n    return dims[0] * dims[1] * dims[2];\n  };\n  publicAPI.getPoint = index => {\n    const dims = publicAPI.getDimensions();\n    if (dims[0] === 0 || dims[1] === 0 || dims[2] === 0) {\n      vtkErrorMacro('Requesting a point from an empty image.');\n      return null;\n    }\n    const ijk = new Float64Array(3);\n    switch (model.dataDescription) {\n      case StructuredType.EMPTY:\n        return null;\n      case StructuredType.SINGLE_POINT:\n        break;\n      case StructuredType.X_LINE:\n        ijk[0] = index;\n        break;\n      case StructuredType.Y_LINE:\n        ijk[1] = index;\n        break;\n      case StructuredType.Z_LINE:\n        ijk[2] = index;\n        break;\n      case StructuredType.XY_PLANE:\n        ijk[0] = index % dims[0];\n        ijk[1] = index / dims[0];\n        break;\n      case StructuredType.YZ_PLANE:\n        ijk[1] = index % dims[1];\n        ijk[2] = index / dims[1];\n        break;\n      case StructuredType.XZ_PLANE:\n        ijk[0] = index % dims[0];\n        ijk[2] = index / dims[0];\n        break;\n      case StructuredType.XYZ_GRID:\n        ijk[0] = index % dims[0];\n        ijk[1] = index / dims[0] % dims[1];\n        ijk[2] = index / (dims[0] * dims[1]);\n        break;\n      default:\n        vtkErrorMacro('Invalid dataDescription');\n        break;\n    }\n    const coords = [0, 0, 0];\n    publicAPI.indexToWorld(ijk, coords);\n    return coords;\n  };\n\n  // vtkCell *GetCell(vtkIdType cellId) VTK_OVERRIDE;\n  // void GetCell(vtkIdType cellId, vtkGenericCell *cell) VTK_OVERRIDE;\n  // void GetCellBounds(vtkIdType cellId, double bounds[6]) VTK_OVERRIDE;\n  // virtual vtkIdType FindPoint(double x, double y, double z)\n  // {\n  //   return this->vtkDataSet::FindPoint(x, y, z);\n  // }\n  // vtkIdType FindPoint(double x[3]) VTK_OVERRIDE;\n  // vtkIdType FindCell(\n  //   double x[3], vtkCell *cell, vtkIdType cellId, double tol2,\n  //   int& subId, double pcoords[3], double *weights) VTK_OVERRIDE;\n  // vtkIdType FindCell(\n  //   double x[3], vtkCell *cell, vtkGenericCell *gencell,\n  //   vtkIdType cellId, double tol2, int& subId,\n  //   double pcoords[3], double *weights) VTK_OVERRIDE;\n  // vtkCell *FindAndGetCell(double x[3], vtkCell *cell, vtkIdType cellId,\n  //                                 double tol2, int& subId, double pcoords[3],\n  //                                 double *weights) VTK_OVERRIDE;\n  // int GetCellType(vtkIdType cellId) VTK_OVERRIDE;\n  // void GetCellPoints(vtkIdType cellId, vtkIdList *ptIds) VTK_OVERRIDE\n  //   {vtkStructuredData::GetCellPoints(cellId,ptIds,this->DataDescription,\n  //                                     this->GetDimensions());}\n  // void GetPointCells(vtkIdType ptId, vtkIdList *cellIds) VTK_OVERRIDE\n  //   {vtkStructuredData::GetPointCells(ptId,cellIds,this->GetDimensions());}\n  // void ComputeBounds() VTK_OVERRIDE;\n  // int GetMaxCellSize() VTK_OVERRIDE {return 8;}; //voxel is the largest\n\n  publicAPI.getBounds = () => publicAPI.extentToBounds(publicAPI.getSpatialExtent());\n  publicAPI.extentToBounds = ex => vtkBoundingBox.transformBounds(ex, model.indexToWorld);\n  publicAPI.getSpatialExtent = () => vtkBoundingBox.inflate([...model.extent], 0.5);\n\n  // Internal, shouldn't need to call this manually.\n  publicAPI.computeTransforms = () => {\n    mat4.fromTranslation(model.indexToWorld, model.origin);\n    model.indexToWorld[0] = model.direction[0];\n    model.indexToWorld[1] = model.direction[1];\n    model.indexToWorld[2] = model.direction[2];\n    model.indexToWorld[4] = model.direction[3];\n    model.indexToWorld[5] = model.direction[4];\n    model.indexToWorld[6] = model.direction[5];\n    model.indexToWorld[8] = model.direction[6];\n    model.indexToWorld[9] = model.direction[7];\n    model.indexToWorld[10] = model.direction[8];\n    mat4.scale(model.indexToWorld, model.indexToWorld, model.spacing);\n    mat4.invert(model.worldToIndex, model.indexToWorld);\n  };\n  publicAPI.indexToWorld = function (ain) {\n    let aout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    vec3.transformMat4(aout, ain, model.indexToWorld);\n    return aout;\n  };\n  publicAPI.indexToWorldVec3 = publicAPI.indexToWorld;\n  publicAPI.worldToIndex = function (ain) {\n    let aout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    vec3.transformMat4(aout, ain, model.worldToIndex);\n    return aout;\n  };\n  publicAPI.worldToIndexVec3 = publicAPI.worldToIndex;\n  publicAPI.indexToWorldBounds = function (bin) {\n    let bout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    return vtkBoundingBox.transformBounds(bin, model.indexToWorld, bout);\n  };\n  publicAPI.worldToIndexBounds = function (bin) {\n    let bout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    return vtkBoundingBox.transformBounds(bin, model.worldToIndex, bout);\n  };\n\n  // Make sure the transform is correct\n  publicAPI.onModified(publicAPI.computeTransforms);\n  publicAPI.computeTransforms();\n  publicAPI.getCenter = () => vtkBoundingBox.getCenter(publicAPI.getBounds());\n  publicAPI.computeHistogram = function (worldBounds) {\n    let voxelFunction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const bounds = [0, 0, 0, 0, 0, 0];\n    publicAPI.worldToIndexBounds(worldBounds, bounds);\n    const point1 = [0, 0, 0];\n    const point2 = [0, 0, 0];\n    vtkBoundingBox.computeCornerPoints(bounds, point1, point2);\n    roundVector(point1, point1);\n    roundVector(point2, point2);\n    const dimensions = publicAPI.getDimensions();\n    clampVector(point1, [0, 0, 0], [dimensions[0] - 1, dimensions[1] - 1, dimensions[2] - 1], point1);\n    clampVector(point2, [0, 0, 0], [dimensions[0] - 1, dimensions[1] - 1, dimensions[2] - 1], point2);\n    const yStride = dimensions[0];\n    const zStride = dimensions[0] * dimensions[1];\n    const pixels = publicAPI.getPointData().getScalars().getData();\n    let maximum = -Infinity;\n    let minimum = Infinity;\n    let sumOfSquares = 0;\n    let isum = 0;\n    let inum = 0;\n    for (let z = point1[2]; z <= point2[2]; z++) {\n      for (let y = point1[1]; y <= point2[1]; y++) {\n        let index = point1[0] + y * yStride + z * zStride;\n        for (let x = point1[0]; x <= point2[0]; x++) {\n          if (!voxelFunction || voxelFunction([x, y, z], bounds)) {\n            const pixel = pixels[index];\n            if (pixel > maximum) maximum = pixel;\n            if (pixel < minimum) minimum = pixel;\n            sumOfSquares += pixel * pixel;\n            isum += pixel;\n            inum += 1;\n          }\n          ++index;\n        }\n      }\n    }\n    const average = inum > 0 ? isum / inum : 0;\n    const variance = inum ? Math.abs(sumOfSquares / inum - average * average) : 0;\n    const sigma = Math.sqrt(variance);\n    return {\n      minimum,\n      maximum,\n      average,\n      variance,\n      sigma,\n      count: inum\n    };\n  };\n\n  // TODO: use the unimplemented `vtkDataSetAttributes` for scalar length, that is currently also a TODO (GetNumberOfComponents).\n  // Scalar data could be tuples for color information?\n  publicAPI.computeIncrements = function (extent) {\n    let numberOfComponents = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    const increments = [];\n    let incr = numberOfComponents;\n\n    // Calculate array increment offsets\n    // similar to c++ vtkImageData::ComputeIncrements\n    for (let idx = 0; idx < 3; ++idx) {\n      increments[idx] = incr;\n      incr *= extent[idx * 2 + 1] - extent[idx * 2] + 1;\n    }\n    return increments;\n  };\n\n  /**\n   * @param {Number[]} index the localized `[i,j,k]` pixel array position. Float values will be rounded.\n   * @return {Number} the corresponding flattened index in the scalar array\n   */\n  publicAPI.computeOffsetIndex = _ref => {\n    let [i, j, k] = _ref;\n    const extent = publicAPI.getExtent();\n    const numberOfComponents = publicAPI.getPointData().getScalars().getNumberOfComponents();\n    const increments = publicAPI.computeIncrements(extent, numberOfComponents);\n    // Use the array increments to find the pixel index\n    // similar to c++ vtkImageData::GetArrayPointer\n    // Math.floor to catch \"practically 0\" e^-15 scenarios.\n    return Math.floor((Math.round(i) - extent[0]) * increments[0] + (Math.round(j) - extent[2]) * increments[1] + (Math.round(k) - extent[4]) * increments[2]);\n  };\n\n  /**\n   * @param {Number[]} xyz the [x,y,z] Array in world coordinates\n   * @return {Number|NaN} the corresponding pixel's index in the scalar array\n   */\n  publicAPI.getOffsetIndexFromWorld = xyz => {\n    const extent = publicAPI.getExtent();\n    const index = publicAPI.worldToIndex(xyz);\n\n    // Confirm indexed i,j,k coords are within the bounds of the volume\n    for (let idx = 0; idx < 3; ++idx) {\n      if (index[idx] < extent[idx * 2] || index[idx] > extent[idx * 2 + 1]) {\n        vtkErrorMacro(`GetScalarPointer: Pixel ${index} is not in memory. Current extent = ${extent}`);\n        return NaN;\n      }\n    }\n\n    // Assumed the index here is within 0 <-> scalarData.length, but doesn't hurt to check upstream\n    return publicAPI.computeOffsetIndex(index);\n  };\n  /**\n   * @param {Number[]} xyz the [x,y,z] Array in world coordinates\n   * @param {Number?} comp the scalar component index for multi-component scalars\n   * @return {Number|NaN} the corresponding pixel's scalar value\n   */\n  publicAPI.getScalarValueFromWorld = function (xyz) {\n    let comp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const numberOfComponents = publicAPI.getPointData().getScalars().getNumberOfComponents();\n    if (comp < 0 || comp >= numberOfComponents) {\n      vtkErrorMacro(`GetScalarPointer: Scalar Component ${comp} is not within bounds. Current Scalar numberOfComponents: ${numberOfComponents}`);\n      return NaN;\n    }\n    const offsetIndex = publicAPI.getOffsetIndexFromWorld(xyz);\n    if (Number.isNaN(offsetIndex)) {\n      // VTK Error Macro will have been tripped already, no need to do it again,\n      return offsetIndex;\n    }\n    return publicAPI.getPointData().getScalars().getComponent(offsetIndex, comp);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  direction: null,\n  // a mat3\n  indexToWorld: null,\n  // a mat4\n  worldToIndex: null,\n  // a mat4\n  spacing: [1.0, 1.0, 1.0],\n  origin: [0.0, 0.0, 0.0],\n  extent: [0, -1, 0, -1, 0, -1],\n  dataDescription: StructuredType.EMPTY\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkDataSet.extend(publicAPI, model, initialValues);\n  if (!model.direction) {\n    model.direction = mat3.identity(new Float64Array(9));\n  } else if (Array.isArray(model.direction)) {\n    model.direction = new Float64Array(model.direction.slice(0, 9));\n  }\n  model.indexToWorld = new Float64Array(16);\n  model.worldToIndex = new Float64Array(16);\n\n  // Set/Get methods\n  macro.get(publicAPI, model, ['indexToWorld', 'worldToIndex']);\n  macro.setGetArray(publicAPI, model, ['origin', 'spacing'], 3);\n  macro.setGetArray(publicAPI, model, ['direction'], 9);\n  macro.getArray(publicAPI, model, ['extent'], 6);\n\n  // Object specific methods\n  vtkImageData(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageData');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageData$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkImageData$1 as default, extend, newInstance };\n","const VectorMode = {\n  MAGNITUDE: 0,\n  COMPONENT: 1,\n  RGBCOLORS: 2\n};\nconst ScalarMappingTarget = {\n  LUMINANCE: 1,\n  LUMINANCE_ALPHA: 2,\n  RGB: 3,\n  RGBA: 4\n};\nvar vtkScalarsToColors = {\n  VectorMode,\n  ScalarMappingTarget\n};\n\nexport { ScalarMappingTarget, VectorMode, vtkScalarsToColors as default };\n","const ColorMode = {\n  DEFAULT: 0,\n  MAP_SCALARS: 1,\n  DIRECT_SCALARS: 2\n};\nconst ScalarMode = {\n  DEFAULT: 0,\n  USE_POINT_DATA: 1,\n  USE_CELL_DATA: 2,\n  USE_POINT_FIELD_DATA: 3,\n  USE_CELL_FIELD_DATA: 4,\n  USE_FIELD_DATA: 5\n};\nconst GetArray = {\n  BY_ID: 0,\n  BY_NAME: 1\n};\nvar Constants = {\n  ColorMode,\n  GetArray,\n  ScalarMode\n};\n\nexport { ColorMode, GetArray, ScalarMode, Constants as default };\n","import { m as macro } from '../../macros2.js';\nimport vtkDataArray from './DataArray.js';\nimport vtkScalarsToColors$2 from './ScalarsToColors/Constants.js';\nimport Constants from '../../Rendering/Core/Mapper/Constants.js';\n\nconst {\n  ScalarMappingTarget,\n  VectorMode\n} = vtkScalarsToColors$2;\nconst {\n  VtkDataTypes\n} = vtkDataArray;\nconst {\n  ColorMode\n} = Constants;\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// Add module-level functions or api that you want to expose statically via\n// the next section...\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nfunction intColorToUChar(c) {\n  return c;\n}\nfunction floatColorToUChar(c) {\n  return Math.floor(c * 255.0 + 0.5);\n}\n\n// ----------------------------------------------------------------------------\n// vtkScalarsToColors methods\n// ----------------------------------------------------------------------------\n\nfunction vtkScalarsToColors(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkScalarsToColors');\n  publicAPI.setVectorModeToMagnitude = () => publicAPI.setVectorMode(VectorMode.MAGNITUDE);\n  publicAPI.setVectorModeToComponent = () => publicAPI.setVectorMode(VectorMode.COMPONENT);\n  publicAPI.setVectorModeToRGBColors = () => publicAPI.setVectorMode(VectorMode.RGBCOLORS);\n  publicAPI.build = () => {};\n  publicAPI.isOpaque = () => true;\n\n  //----------------------------------------------------------------------------\n  publicAPI.setAnnotations = (values, annotations) => {\n    if (values && !annotations || !values && annotations) {\n      return;\n    }\n    if (values && annotations && values.length !== annotations.length) {\n      vtkErrorMacro('Values and annotations do not have the same number of tuples so ignoring');\n      return;\n    }\n    model.annotationArray = [];\n    if (annotations && values) {\n      const num = annotations.length;\n      for (let i = 0; i < num; i++) {\n        model.annotationArray.push({\n          value: values[i],\n          annotation: String(annotations[i])\n        });\n      }\n    }\n    publicAPI.updateAnnotatedValueMap();\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.setAnnotation = (value, annotation) => {\n    let i = publicAPI.checkForAnnotatedValue(value);\n    let modified = false;\n    if (i >= 0) {\n      if (model.annotationArray[i].annotation !== annotation) {\n        model.annotationArray[i].annotation = annotation;\n        modified = true;\n      }\n    } else {\n      model.annotationArray.push({\n        value,\n        annotation\n      });\n      i = model.annotationArray.length - 1;\n      modified = true;\n    }\n    if (modified) {\n      publicAPI.updateAnnotatedValueMap();\n      publicAPI.modified();\n    }\n    return i;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getNumberOfAnnotatedValues = () => model.annotationArray.length;\n\n  //----------------------------------------------------------------------------\n  publicAPI.getAnnotatedValue = idx => {\n    if (idx < 0 || idx >= model.annotationArray.length) {\n      return null;\n    }\n    return model.annotationArray[idx].value;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getAnnotation = idx => {\n    if (model.annotationArray[idx] === undefined) {\n      return null;\n    }\n    return model.annotationArray[idx].annotation;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getAnnotatedValueIndex = val => model.annotationArray.length ? publicAPI.checkForAnnotatedValue(val) : -1;\n\n  //----------------------------------------------------------------------------\n  publicAPI.removeAnnotation = value => {\n    const i = publicAPI.checkForAnnotatedValue(value);\n    const needToRemove = i >= 0;\n    if (needToRemove) {\n      model.annotationArray.splice(i, 1);\n      publicAPI.updateAnnotatedValueMap();\n      publicAPI.modified();\n    }\n    return needToRemove;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.resetAnnotations = () => {\n    model.annotationArray = [];\n    model.annotatedValueMap = [];\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getAnnotationColor = (val, rgba) => {\n    if (model.indexedLookup) {\n      const i = publicAPI.getAnnotatedValueIndex(val);\n      publicAPI.getIndexedColor(i, rgba);\n    } else {\n      publicAPI.getColor(parseFloat(val), rgba);\n      rgba[3] = 1.0;\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.checkForAnnotatedValue = value => publicAPI.getAnnotatedValueIndexInternal(value);\n\n  //----------------------------------------------------------------------------\n  // An unsafe version of vtkScalarsToColors::CheckForAnnotatedValue for\n  // internal use (no pointer checks performed)\n  publicAPI.getAnnotatedValueIndexInternal = value => {\n    if (model.annotatedValueMap[value] !== undefined) {\n      const na = model.annotationArray.length;\n      return model.annotatedValueMap[value] % na;\n    }\n    // Treat as a NaN\n    return -1;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getIndexedColor = (val, rgba) => {\n    rgba[0] = 0.0;\n    rgba[1] = 0.0;\n    rgba[2] = 0.0;\n    rgba[3] = 0.0;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.updateAnnotatedValueMap = () => {\n    model.annotatedValueMap = [];\n    const na = model.annotationArray.length;\n    for (let i = 0; i < na; i++) {\n      model.annotatedValueMap[model.annotationArray[i].value] = i;\n    }\n  };\n\n  // Description:\n  // Internal methods that map a data array into a 4-component,\n  // unsigned char RGBA array. The color mode determines the behavior\n  // of mapping. If ColorMode.DEFAULT is set, then unsigned char\n  // data arrays are treated as colors (and converted to RGBA if\n  // necessary); If ColorMode.DIRECT_SCALARS is set, then all arrays\n  // are treated as colors (integer types are clamped in the range 0-255,\n  // floating point arrays are clamped in the range 0.0-1.0. Note 'char' does\n  // not have enough values to represent a color so mapping this type is\n  // considered an error);\n  // otherwise, the data is mapped through this instance\n  // of ScalarsToColors. The component argument is used for data\n  // arrays with more than one component; it indicates which component\n  // to use to do the blending.  When the component argument is -1,\n  // then the this object uses its own selected technique to change a\n  // vector into a scalar to map.\n  publicAPI.mapScalars = (scalars, colorMode, componentIn) => {\n    const numberOfComponents = scalars.getNumberOfComponents();\n    let newColors = null;\n\n    // map scalars through lookup table only if needed\n    if (colorMode === ColorMode.DEFAULT && (scalars.getDataType() === VtkDataTypes.UNSIGNED_CHAR || scalars.getDataType() === VtkDataTypes.UNSIGNED_CHAR_CLAMPED) || colorMode === ColorMode.DIRECT_SCALARS && scalars) {\n      newColors = publicAPI.convertToRGBA(scalars, numberOfComponents, scalars.getNumberOfTuples());\n    } else {\n      const newscalars = {\n        type: 'vtkDataArray',\n        name: 'temp',\n        numberOfComponents: 4,\n        dataType: VtkDataTypes.UNSIGNED_CHAR\n      };\n      const s = macro.newTypedArray(newscalars.dataType, 4 * scalars.getNumberOfTuples());\n      newscalars.values = s;\n      newscalars.size = s.length;\n      newColors = vtkDataArray.newInstance(newscalars);\n      let component = componentIn;\n\n      // If mapper did not specify a component, use the VectorMode\n      if (component < 0 && numberOfComponents > 1) {\n        publicAPI.mapVectorsThroughTable(scalars, newColors, ScalarMappingTarget.RGBA, -1, -1);\n      } else {\n        if (component < 0) {\n          component = 0;\n        }\n        if (component >= numberOfComponents) {\n          component = numberOfComponents - 1;\n        }\n\n        // Map the scalars to colors\n        publicAPI.mapScalarsThroughTable(scalars, newColors, ScalarMappingTarget.RGBA, component);\n      }\n    }\n    return newColors;\n  };\n  publicAPI.mapVectorsToMagnitude = (input, output, compsToUse) => {\n    const length = input.getNumberOfTuples();\n    const inIncr = input.getNumberOfComponents();\n    const outputV = output.getData();\n    const inputV = input.getData();\n    for (let i = 0; i < length; i++) {\n      let sum = 0.0;\n      for (let j = 0; j < compsToUse; j++) {\n        sum += inputV[i * inIncr + j] * inputV[i * inIncr + j];\n      }\n      outputV[i] = Math.sqrt(sum);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  // Map a set of vector values through the table\n  publicAPI.mapVectorsThroughTable = (input, output, outputFormat, vectorComponentIn, vectorSizeIn) => {\n    let vectorMode = publicAPI.getVectorMode();\n    let vectorSize = vectorSizeIn;\n    let vectorComponent = vectorComponentIn;\n    const inComponents = input.getNumberOfComponents();\n    if (vectorMode === VectorMode.COMPONENT) {\n      // make sure vectorComponent is within allowed range\n      if (vectorComponent === -1) {\n        // if set to -1, use default value provided by table\n        vectorComponent = publicAPI.getVectorComponent();\n      }\n      if (vectorComponent < 0) {\n        vectorComponent = 0;\n      }\n      if (vectorComponent >= inComponents) {\n        vectorComponent = inComponents - 1;\n      }\n    } else {\n      // make sure vectorSize is within allowed range\n      if (vectorSize === -1) {\n        // if set to -1, use default value provided by table\n        vectorSize = publicAPI.getVectorSize();\n      }\n      if (vectorSize <= 0) {\n        vectorComponent = 0;\n        vectorSize = inComponents;\n      } else {\n        if (vectorComponent < 0) {\n          vectorComponent = 0;\n        }\n        if (vectorComponent >= inComponents) {\n          vectorComponent = inComponents - 1;\n        }\n        if (vectorComponent + vectorSize > inComponents) {\n          vectorSize = inComponents - vectorComponent;\n        }\n      }\n      if (vectorMode === VectorMode.MAGNITUDE && (inComponents === 1 || vectorSize === 1)) {\n        vectorMode = VectorMode.COMPONENT;\n      }\n    }\n\n    // increment input pointer to the first component to map\n    let inputOffset = 0;\n    if (vectorComponent > 0) {\n      inputOffset = vectorComponent;\n    }\n\n    // map according to the current vector mode\n    switch (vectorMode) {\n      case VectorMode.COMPONENT:\n        {\n          publicAPI.mapScalarsThroughTable(input, output, outputFormat, inputOffset);\n          break;\n        }\n      case VectorMode.RGBCOLORS:\n        {\n          // publicAPI.mapColorsToColors(\n          //   input, output, inComponents, vectorSize,\n          //   outputFormat);\n          break;\n        }\n\n      // MAGNITUDE is considered default\n      case VectorMode.MAGNITUDE:\n      default:\n        {\n          const magValues = vtkDataArray.newInstance({\n            numberOfComponents: 1,\n            values: new Float32Array(input.getNumberOfTuples())\n          });\n          publicAPI.mapVectorsToMagnitude(input, magValues, vectorSize);\n          publicAPI.mapScalarsThroughTable(magValues, output, outputFormat, 0);\n          break;\n        }\n    }\n  };\n  publicAPI.luminanceToRGBA = (newColors, colors, alpha, convtFun) => {\n    const a = convtFun(alpha);\n    const values = colors.getData();\n    const newValues = newColors.getData();\n    const size = values.length;\n    const component = 0;\n    const tuple = 1;\n    let count = 0;\n    for (let i = component; i < size; i += tuple) {\n      const l = convtFun(values[i]);\n      newValues[count * 4] = l;\n      newValues[count * 4 + 1] = l;\n      newValues[count * 4 + 2] = l;\n      newValues[count * 4 + 3] = a;\n      count++;\n    }\n  };\n  publicAPI.luminanceAlphaToRGBA = (newColors, colors, alpha, convtFun) => {\n    const values = colors.getData();\n    const newValues = newColors.getData();\n    const size = values.length;\n    const component = 0;\n    const tuple = 2;\n    let count = 0;\n    for (let i = component; i < size; i += tuple) {\n      const l = convtFun(values[i]);\n      newValues[count] = l;\n      newValues[count + 1] = l;\n      newValues[count + 2] = l;\n      newValues[count + 3] = convtFun(values[i + 1]) * alpha;\n      count += 4;\n    }\n  };\n  publicAPI.rGBToRGBA = (newColors, colors, alpha, convtFun) => {\n    const a = floatColorToUChar(alpha);\n    const values = colors.getData();\n    const newValues = newColors.getData();\n    const size = values.length;\n    const component = 0;\n    const tuple = 3;\n    let count = 0;\n    for (let i = component; i < size; i += tuple) {\n      newValues[count * 4] = convtFun(values[i]);\n      newValues[count * 4 + 1] = convtFun(values[i + 1]);\n      newValues[count * 4 + 2] = convtFun(values[i + 2]);\n      newValues[count * 4 + 3] = a;\n      count++;\n    }\n  };\n  publicAPI.rGBAToRGBA = (newColors, colors, alpha, convtFun) => {\n    const values = colors.getData();\n    const newValues = newColors.getData();\n    const size = values.length;\n    const component = 0;\n    const tuple = 4;\n    let count = 0;\n    for (let i = component; i < size; i += tuple) {\n      newValues[count * 4] = convtFun(values[i]);\n      newValues[count * 4 + 1] = convtFun(values[i + 1]);\n      newValues[count * 4 + 2] = convtFun(values[i + 2]);\n      newValues[count * 4 + 3] = convtFun(values[i + 3]) * alpha;\n      count++;\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.convertToRGBA = (colors, numComp, numTuples) => {\n    let {\n      alpha\n    } = model;\n    if (numComp === 4 && alpha >= 1.0 && colors.getDataType() === VtkDataTypes.UNSIGNED_CHAR) {\n      return colors;\n    }\n    const newColors = vtkDataArray.newInstance({\n      numberOfComponents: 4,\n      empty: true,\n      size: 4 * numTuples,\n      dataType: VtkDataTypes.UNSIGNED_CHAR\n    });\n    if (numTuples <= 0) {\n      return newColors;\n    }\n    alpha = alpha > 0 ? alpha : 0;\n    alpha = alpha < 1 ? alpha : 1;\n    let convtFun = intColorToUChar;\n    if (colors.getDataType() === VtkDataTypes.FLOAT || colors.getDataType() === VtkDataTypes.DOUBLE) {\n      convtFun = floatColorToUChar;\n    }\n    switch (numComp) {\n      case 1:\n        publicAPI.luminanceToRGBA(newColors, colors, alpha, convtFun);\n        break;\n      case 2:\n        publicAPI.luminanceAlphaToRGBA(newColors, colors, convtFun);\n        break;\n      case 3:\n        publicAPI.rGBToRGBA(newColors, colors, alpha, convtFun);\n        break;\n      case 4:\n        publicAPI.rGBAToRGBA(newColors, colors, alpha, convtFun);\n        break;\n      default:\n        vtkErrorMacro('Cannot convert colors');\n        return null;\n    }\n    return newColors;\n  };\n  publicAPI.usingLogScale = () => false;\n  publicAPI.getNumberOfAvailableColors = () => 256 * 256 * 256;\n  publicAPI.setRange = (min, max) => publicAPI.setMappingRange(min, max);\n  publicAPI.getRange = () => publicAPI.getMappingRange();\n  publicAPI.areScalarsOpaque = (scalars, colorMode, componentIn) => {\n    if (!scalars) {\n      return publicAPI.isOpaque();\n    }\n    const numberOfComponents = scalars.getNumberOfComponents();\n\n    // map scalars through lookup table only if needed\n    if (colorMode === ColorMode.DEFAULT && scalars.getDataType() === VtkDataTypes.UNSIGNED_CHAR || colorMode === ColorMode.DIRECT_SCALARS) {\n      // we will be using the scalars directly, so look at the number of\n      // components and the range\n      if (numberOfComponents === 3 || numberOfComponents === 1) {\n        return model.alpha >= 1.0;\n      }\n      // otherwise look at the range of the alpha channel\n      const range = scalars.getRange(numberOfComponents - 1);\n      return range[0] === 255;\n    }\n    return true;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  alpha: 1.0,\n  vectorComponent: 0,\n  vectorSize: -1,\n  vectorMode: VectorMode.COMPONENT,\n  mappingRange: null,\n  annotationArray: null,\n  annotatedValueMap: null,\n  indexedLookup: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  model.mappingRange = [0, 255];\n  model.annotationArray = [];\n  model.annotatedValueMap = [];\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['vectorSize', 'vectorComponent', 'vectorMode', 'alpha', 'indexedLookup']);\n\n  // Create set macros for array (needs to know size)\n  macro.setArray(publicAPI, model, ['mappingRange'], 2);\n\n  // Create get macros for array\n  macro.getArray(publicAPI, model, ['mappingRange']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkScalarsToColors(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkScalarsToColors');\n\n// ----------------------------------------------------------------------------\n\nvar vtkScalarsToColors$1 = {\n  newInstance,\n  extend,\n  ...vtkScalarsToColors$2\n};\n\nexport { vtkScalarsToColors$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport { i as isNan, h as hsv2rgb } from './Math/index.js';\nimport vtkScalarsToColors from './ScalarsToColors.js';\nimport { ScalarMappingTarget } from './ScalarsToColors/Constants.js';\nimport { VtkDataTypes } from './DataArray/Constants.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// Add module-level functions or api that you want to expose statically via\n// the next section...\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst BELOW_RANGE_COLOR_INDEX = 0;\nconst ABOVE_RANGE_COLOR_INDEX = 1;\nconst NAN_COLOR_INDEX = 2;\n\n// ----------------------------------------------------------------------------\n// vtkMyClass methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLookupTable(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLookupTable');\n\n  //----------------------------------------------------------------------------\n  // Description:\n  // Return true if all of the values defining the mapping have an opacity\n  // equal to 1. Default implementation return true.\n  publicAPI.isOpaque = () => {\n    if (model.opaqueFlagBuildTime.getMTime() < publicAPI.getMTime()) {\n      let opaque = true;\n      if (model.nanColor[3] < 1.0) {\n        opaque = 0;\n      }\n      if (model.useBelowRangeColor && model.belowRangeColor[3] < 1.0) {\n        opaque = 0;\n      }\n      if (model.useAboveRangeColor && model.aboveRangeColor[3] < 1.0) {\n        opaque = 0;\n      }\n      for (let i = 3; i < model.table.length && opaque; i += 4) {\n        if (model.table[i] < 255) {\n          opaque = false;\n        }\n      }\n      model.opaqueFlag = opaque;\n      model.opaqueFlagBuildTime.modified();\n    }\n    return model.opaqueFlag;\n  };\n  publicAPI.usingLogScale = () => false;\n\n  //----------------------------------------------------------------------------\n  // Don't count special colors (min, max, NaN) as available colors\n  publicAPI.getNumberOfAvailableColors = () => model.table.length / 4 - 3;\n\n  //----------------------------------------------------------------------------\n  // Apply shift/scale to the scalar value v and return the index.\n  publicAPI.linearIndexLookup = (v, p) => {\n    let dIndex = 0;\n    const nv = Number(v);\n    if (nv < p.range[0]) {\n      dIndex = p.maxIndex + BELOW_RANGE_COLOR_INDEX + 1.5;\n    } else if (nv > p.range[1]) {\n      dIndex = p.maxIndex + ABOVE_RANGE_COLOR_INDEX + 1.5;\n    } else {\n      dIndex = (nv + p.shift) * p.scale;\n\n      // This conditional is needed because when v is very close to\n      // p.Range[1], it may map above p.MaxIndex in the linear mapping\n      // above.\n      dIndex = dIndex < p.maxIndex ? dIndex : p.maxIndex;\n    }\n    return Math.floor(dIndex);\n  };\n  publicAPI.linearLookup = (v, table, p) => {\n    let index = 0;\n    if (isNan(v)) {\n      index = Math.floor(p.maxIndex + 1.5 + NAN_COLOR_INDEX);\n    } else {\n      index = publicAPI.linearIndexLookup(v, p);\n    }\n    const offset = 4 * index;\n    return table.slice(offset, offset + 4);\n  };\n  publicAPI.indexedLookupFunction = (v, table, p) => {\n    let index = publicAPI.getAnnotatedValueIndexInternal(v);\n    if (index === -1) {\n      index = model.numberOfColors + NAN_COLOR_INDEX;\n    }\n    const offset = 4 * index;\n    return [table[offset], table[offset + 1], table[offset + 2], table[offset + 3]];\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.lookupShiftAndScale = (range, p) => {\n    p.shift = -range[0];\n    p.scale = Number.MAX_VALUE;\n    if (range[1] > range[0]) {\n      p.scale = (p.maxIndex + 1) / (range[1] - range[0]);\n    }\n  };\n\n  // Public API methods\n  publicAPI.mapScalarsThroughTable = (input, output, outFormat, inputOffset) => {\n    let lookupFunc = publicAPI.linearLookup;\n    if (model.indexedLookup) {\n      lookupFunc = publicAPI.indexedLookupFunction;\n    }\n    const trange = publicAPI.getMappingRange();\n    const p = {\n      maxIndex: publicAPI.getNumberOfColors() - 1,\n      range: trange,\n      shift: 0.0,\n      scale: 0.0\n    };\n    publicAPI.lookupShiftAndScale(trange, p);\n    const alpha = publicAPI.getAlpha();\n    const length = input.getNumberOfTuples();\n    const inIncr = input.getNumberOfComponents();\n    const outputV = output.getData();\n    const inputV = input.getData();\n    if (alpha >= 1.0) {\n      if (outFormat === ScalarMappingTarget.RGBA) {\n        for (let i = 0; i < length; i++) {\n          const cptr = lookupFunc(inputV[i * inIncr + inputOffset], model.table, p);\n          outputV[i * 4] = cptr[0];\n          outputV[i * 4 + 1] = cptr[1];\n          outputV[i * 4 + 2] = cptr[2];\n          outputV[i * 4 + 3] = cptr[3];\n        }\n      }\n    } else {\n      /* eslint-disable no-lonely-if */\n      if (outFormat === ScalarMappingTarget.RGBA) {\n        for (let i = 0; i < length; i++) {\n          const cptr = lookupFunc(inputV[i * inIncr + inputOffset], model.table, p);\n          outputV[i * 4] = cptr[0];\n          outputV[i * 4 + 1] = cptr[1];\n          outputV[i * 4 + 2] = cptr[2];\n          outputV[i * 4 + 3] = Math.floor(cptr[3] * alpha + 0.5);\n        }\n      }\n    } // alpha blending\n  };\n\n  publicAPI.forceBuild = () => {\n    let hinc = 0.0;\n    let sinc = 0.0;\n    let vinc = 0.0;\n    let ainc = 0.0;\n    const maxIndex = model.numberOfColors - 1;\n    if (maxIndex) {\n      hinc = (model.hueRange[1] - model.hueRange[0]) / maxIndex;\n      sinc = (model.saturationRange[1] - model.saturationRange[0]) / maxIndex;\n      vinc = (model.valueRange[1] - model.valueRange[0]) / maxIndex;\n      ainc = (model.alphaRange[1] - model.alphaRange[0]) / maxIndex;\n    }\n    model.table.length = 4 * maxIndex + 16;\n    const hsv = [];\n    const rgba = [];\n    for (let i = 0; i <= maxIndex; i++) {\n      hsv[0] = model.hueRange[0] + i * hinc;\n      hsv[1] = model.saturationRange[0] + i * sinc;\n      hsv[2] = model.valueRange[0] + i * vinc;\n      hsv2rgb(hsv, rgba);\n      rgba[3] = model.alphaRange[0] + i * ainc;\n\n      //  case VTK_RAMP_LINEAR:\n      model.table[i * 4] = rgba[0] * 255.0 + 0.5;\n      model.table[i * 4 + 1] = rgba[1] * 255.0 + 0.5;\n      model.table[i * 4 + 2] = rgba[2] * 255.0 + 0.5;\n      model.table[i * 4 + 3] = rgba[3] * 255.0 + 0.5;\n    }\n    publicAPI.buildSpecialColors();\n    model.buildTime.modified();\n  };\n  publicAPI.setTable = table => {\n    // Handle JS array (assume 2D array)\n    if (Array.isArray(table)) {\n      const nbComponents = table[0].length;\n      model.numberOfColors = table.length;\n      const colorOffset = 4 - nbComponents;\n      let offset = 0;\n      // fill table\n      for (let i = 0; i < model.numberOfColors; i++) {\n        model.table[i * 4] = 255;\n        model.table[i * 4 + 1] = 255;\n        model.table[i * 4 + 2] = 255;\n        model.table[i * 4 + 3] = 255;\n      }\n      // extract colors\n      for (let i = 0; i < table.length; i++) {\n        const color = table[i];\n        for (let j = 0; j < nbComponents; j++) {\n          model.table[offset++] = color[j];\n        }\n        offset += colorOffset;\n      }\n      publicAPI.buildSpecialColors();\n      model.insertTime.modified();\n      publicAPI.modified();\n      return true;\n    }\n    if (table.getNumberOfComponents() !== 4) {\n      vtkErrorMacro('Expected 4 components for RGBA colors');\n      return false;\n    }\n    if (table.getDataType() !== VtkDataTypes.UNSIGNED_CHAR) {\n      vtkErrorMacro('Expected unsigned char values for RGBA colors');\n      return false;\n    }\n    model.numberOfColors = table.getNumberOfTuples();\n    const data = table.getData();\n    model.table.length = data.length;\n    for (let i = 0; i < data.length; i++) {\n      model.table[i] = data[i];\n    }\n    publicAPI.buildSpecialColors();\n    model.insertTime.modified();\n    publicAPI.modified();\n    return true;\n  };\n  publicAPI.buildSpecialColors = () => {\n    // Add \"special\" colors (NaN, below range, above range) to table here.\n    const {\n      numberOfColors\n    } = model;\n    const tptr = model.table;\n    let base = (numberOfColors + BELOW_RANGE_COLOR_INDEX) * 4;\n\n    // Below range color\n    if (model.useBelowRangeColor || numberOfColors === 0) {\n      tptr[base] = model.belowRangeColor[0] * 255.0 + 0.5;\n      tptr[base + 1] = model.belowRangeColor[1] * 255.0 + 0.5;\n      tptr[base + 2] = model.belowRangeColor[2] * 255.0 + 0.5;\n      tptr[base + 3] = model.belowRangeColor[3] * 255.0 + 0.5;\n    } else {\n      // Duplicate the first color in the table.\n      tptr[base] = tptr[0];\n      tptr[base + 1] = tptr[1];\n      tptr[base + 2] = tptr[2];\n      tptr[base + 3] = tptr[3];\n    }\n\n    // Above range color\n    base = (numberOfColors + ABOVE_RANGE_COLOR_INDEX) * 4;\n    if (model.useAboveRangeColor || numberOfColors === 0) {\n      tptr[base] = model.aboveRangeColor[0] * 255.0 + 0.5;\n      tptr[base + 1] = model.aboveRangeColor[1] * 255.0 + 0.5;\n      tptr[base + 2] = model.aboveRangeColor[2] * 255.0 + 0.5;\n      tptr[base + 3] = model.aboveRangeColor[3] * 255.0 + 0.5;\n    } else {\n      // Duplicate the last color in the table.\n      tptr[base] = tptr[4 * (numberOfColors - 1) + 0];\n      tptr[base + 1] = tptr[4 * (numberOfColors - 1) + 1];\n      tptr[base + 2] = tptr[4 * (numberOfColors - 1) + 2];\n      tptr[base + 3] = tptr[4 * (numberOfColors - 1) + 3];\n    }\n\n    // Always use NanColor\n    base = (numberOfColors + NAN_COLOR_INDEX) * 4;\n    tptr[base] = model.nanColor[0] * 255.0 + 0.5;\n    tptr[base + 1] = model.nanColor[1] * 255.0 + 0.5;\n    tptr[base + 2] = model.nanColor[2] * 255.0 + 0.5;\n    tptr[base + 3] = model.nanColor[3] * 255.0 + 0.5;\n  };\n  publicAPI.build = () => {\n    if (model.table.length < 1 || publicAPI.getMTime() > model.buildTime.getMTime() && model.insertTime.getMTime() <= model.buildTime.getMTime()) {\n      publicAPI.forceBuild();\n    }\n  };\n  if (model.table.length > 0) {\n    // Ensure that special colors are properly included in the table\n    publicAPI.buildSpecialColors();\n\n    // ensure insertTime is more recently modified than buildTime if\n    // a table is provided via the constructor\n    model.insertTime.modified();\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  numberOfColors: 256,\n  // table: null,\n\n  hueRange: [0.0, 0.66667],\n  saturationRange: [1.0, 1.0],\n  valueRange: [1.0, 1.0],\n  alphaRange: [1.0, 1.0],\n  nanColor: [0.5, 0.0, 0.0, 1.0],\n  belowRangeColor: [0.0, 0.0, 0.0, 1.0],\n  aboveRangeColor: [1.0, 1.0, 1.0, 1.0],\n  useAboveRangeColor: false,\n  useBelowRangeColor: false,\n  alpha: 1.0\n  // buildTime: null,\n  // opaqueFlagBuildTime: null,\n  // insertTime: null,\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkScalarsToColors.extend(publicAPI, model, initialValues);\n\n  // Internal objects initialization\n  if (!model.table) {\n    model.table = [];\n  }\n  model.buildTime = {};\n  macro.obj(model.buildTime);\n  model.opaqueFlagBuildTime = {};\n  macro.obj(model.opaqueFlagBuildTime, {\n    mtime: 0\n  });\n  model.insertTime = {};\n  macro.obj(model.insertTime, {\n    mtime: 0\n  });\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['buildTime']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['numberOfColors', 'useAboveRangeColor', 'useBelowRangeColor']);\n\n  // Create set macros for array (needs to know size)\n  macro.setArray(publicAPI, model, ['alphaRange', 'hueRange', 'saturationRange', 'valueRange'], 2);\n  macro.setArray(publicAPI, model, ['nanColor', 'belowRangeColor', 'aboveRangeColor'], 4);\n\n  // Create get macros for array\n  macro.getArray(publicAPI, model, ['hueRange', 'saturationRange', 'valueRange', 'alphaRange', 'nanColor', 'belowRangeColor', 'aboveRangeColor']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkLookupTable(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkLookupTable');\n\n// ----------------------------------------------------------------------------\n\nvar vtkLookupTable$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkLookupTable$1 as default, extend, newInstance };\n","const Resolve = {\n  Off: 0,\n  PolygonOffset: 1\n};\nlet resolveCoincidentTopologyPolygonOffsetFaces = Resolve.PolygonOffset;\nlet resolveCoincidentTopology = Resolve.Off;\nconst RESOLVE_COINCIDENT_TOPOLOGY_MODE = ['VTK_RESOLVE_OFF', 'VTK_RESOLVE_POLYGON_OFFSET'];\nfunction getResolveCoincidentTopologyPolygonOffsetFaces() {\n  return resolveCoincidentTopologyPolygonOffsetFaces;\n}\nfunction setResolveCoincidentTopologyPolygonOffsetFaces(value) {\n  const changed = resolveCoincidentTopologyPolygonOffsetFaces === value;\n  resolveCoincidentTopologyPolygonOffsetFaces = value;\n  return changed;\n}\nfunction getResolveCoincidentTopology() {\n  return resolveCoincidentTopology;\n}\nfunction setResolveCoincidentTopology() {\n  let mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  const changed = resolveCoincidentTopology === mode;\n  resolveCoincidentTopology = mode;\n  return changed;\n}\nfunction setResolveCoincidentTopologyToDefault() {\n  return setResolveCoincidentTopology(Resolve.Off);\n}\nfunction setResolveCoincidentTopologyToOff() {\n  return setResolveCoincidentTopology(Resolve.Off);\n}\nfunction setResolveCoincidentTopologyToPolygonOffset() {\n  return setResolveCoincidentTopology(Resolve.PolygonOffset);\n}\nfunction getResolveCoincidentTopologyAsString() {\n  return RESOLVE_COINCIDENT_TOPOLOGY_MODE[resolveCoincidentTopology];\n}\nvar otherStaticMethods = {\n  Resolve,\n  getResolveCoincidentTopologyAsString,\n  getResolveCoincidentTopologyPolygonOffsetFaces,\n  getResolveCoincidentTopology,\n  setResolveCoincidentTopology,\n  setResolveCoincidentTopologyPolygonOffsetFaces,\n  setResolveCoincidentTopologyToDefault,\n  setResolveCoincidentTopologyToOff,\n  setResolveCoincidentTopologyToPolygonOffset\n};\n\nexport { RESOLVE_COINCIDENT_TOPOLOGY_MODE, Resolve, otherStaticMethods as default, getResolveCoincidentTopology, getResolveCoincidentTopologyAsString, getResolveCoincidentTopologyPolygonOffsetFaces, setResolveCoincidentTopology, setResolveCoincidentTopologyPolygonOffsetFaces, setResolveCoincidentTopologyToDefault, setResolveCoincidentTopologyToOff, setResolveCoincidentTopologyToPolygonOffset };\n","import otherStaticMethods, { Resolve } from './Static.js';\nexport { Resolve } from './Static.js';\nimport { m as macro } from '../../../macros2.js';\n\n/* eslint-disable arrow-body-style */\nfunction addCoincidentTopologyMethods(publicAPI, model, nameList) {\n  nameList.forEach(item => {\n    publicAPI[`get${item.method}`] = () => model[item.key];\n    publicAPI[`set${item.method}`] = macro.objectSetterMap.object(publicAPI, model, {\n      name: item.key,\n      params: ['factor', 'offset']\n    });\n  });\n}\nconst CATEGORIES = ['Polygon', 'Line', 'Point'];\n\n// CoincidentTopology static methods ------------------------------------------\n\nconst staticOffsetModel = {\n  Polygon: {\n    factor: 2,\n    offset: 0\n  },\n  Line: {\n    factor: 1,\n    offset: -1\n  },\n  Point: {\n    factor: 0,\n    offset: -2\n  }\n};\nconst noOp = () => undefined;\nconst staticOffsetAPI = {\n  modified: noOp\n};\naddCoincidentTopologyMethods(staticOffsetAPI, staticOffsetModel, CATEGORIES.map(key => ({\n  key,\n  method: `ResolveCoincidentTopology${key}OffsetParameters`\n})));\nfunction implementCoincidentTopologyMethods(publicAPI, model) {\n  if (model.resolveCoincidentTopology === undefined) {\n    model.resolveCoincidentTopology = false;\n  }\n  macro.setGet(publicAPI, model, ['resolveCoincidentTopology']);\n\n  // Relative methods\n  model.topologyOffset = {\n    Polygon: {\n      factor: 0,\n      offset: 0\n    },\n    Line: {\n      factor: 0,\n      offset: 0\n    },\n    Point: {\n      factor: 0,\n      offset: 0\n    }\n  };\n\n  // Add Static methods to our instance\n  Object.keys(otherStaticMethods).forEach(methodName => {\n    publicAPI[methodName] = otherStaticMethods[methodName];\n  });\n  Object.keys(staticOffsetAPI).filter(methodName => methodName !== 'modified') // don't override instance's modified\n  .forEach(methodName => {\n    publicAPI[methodName] = staticOffsetAPI[methodName];\n  });\n  addCoincidentTopologyMethods(publicAPI, model.topologyOffset, CATEGORIES.map(key => ({\n    key,\n    method: `RelativeCoincidentTopology${key}OffsetParameters`\n  })));\n  publicAPI.getCoincidentTopologyPolygonOffsetParameters = () => {\n    const globalValue = staticOffsetAPI.getResolveCoincidentTopologyPolygonOffsetParameters();\n    const localValue = publicAPI.getRelativeCoincidentTopologyPolygonOffsetParameters();\n    return {\n      factor: globalValue.factor + localValue.factor,\n      offset: globalValue.offset + localValue.offset\n    };\n  };\n  publicAPI.getCoincidentTopologyLineOffsetParameters = () => {\n    const globalValue = staticOffsetAPI.getResolveCoincidentTopologyLineOffsetParameters();\n    const localValue = publicAPI.getRelativeCoincidentTopologyLineOffsetParameters();\n    return {\n      factor: globalValue.factor + localValue.factor,\n      offset: globalValue.offset + localValue.offset\n    };\n  };\n  publicAPI.getCoincidentTopologyPointOffsetParameter = () => {\n    const globalValue = staticOffsetAPI.getResolveCoincidentTopologyPointOffsetParameters();\n    const localValue = publicAPI.getRelativeCoincidentTopologyPointOffsetParameters();\n    return {\n      factor: globalValue.factor + localValue.factor,\n      offset: globalValue.offset + localValue.offset\n    };\n  };\n}\nvar CoincidentTopologyHelper = {\n  implementCoincidentTopologyMethods,\n  staticOffsetAPI,\n  otherStaticMethods,\n  CATEGORIES,\n  Resolve\n};\n\nexport { CATEGORIES, CoincidentTopologyHelper as default };\n","const PassTypes = {\n  MIN_KNOWN_PASS: 0,\n  ACTOR_PASS: 0,\n  COMPOSITE_INDEX_PASS: 1,\n  ID_LOW24: 2,\n  ID_HIGH24: 3,\n  MAX_KNOWN_PASS: 3\n};\nvar Constants = {\n  PassTypes\n};\n\nexport { PassTypes, Constants as default };\n","import { m as macro } from '../../macros2.js';\nimport vtkAbstractMapper3D from './AbstractMapper3D.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkImageData from '../../Common/DataModel/ImageData.js';\nimport vtkLookupTable from '../../Common/Core/LookupTable.js';\nimport { H as createUninitializedBounds, i as isNan } from '../../Common/Core/Math/index.js';\nimport vtkScalarsToColors from '../../Common/Core/ScalarsToColors/Constants.js';\nimport CoincidentTopologyHelper from './Mapper/CoincidentTopologyHelper.js';\nimport Constants from './Mapper/Constants.js';\nimport vtkDataSet from '../../Common/DataModel/DataSet.js';\nimport { PassTypes } from '../OpenGL/HardwareSelector/Constants.js';\n\nconst {\n  FieldAssociations\n} = vtkDataSet;\nconst {\n  staticOffsetAPI,\n  otherStaticMethods\n} = CoincidentTopologyHelper;\nconst {\n  ColorMode,\n  ScalarMode,\n  GetArray\n} = Constants;\nconst {\n  VectorMode\n} = vtkScalarsToColors;\nconst {\n  VtkDataTypes\n} = vtkDataArray;\n\n// ----------------------------------------------------------------------------\n\nfunction notImplemented(method) {\n  return () => macro.vtkErrorMacro(`vtkMapper::${method} - NOT IMPLEMENTED`);\n}\n\n/**\n * Increase by one the 3D coordinates\n * It will follow a zigzag pattern so that each coordinate is the neighbor of the next coordinate\n * This enables interpolation between two texels without issues\n * Note: texture coordinates can't be interpolated using this pattern\n * @param {vec3} coordinates The 3D coordinates using integers for each coorinate\n * @param {vec3} dimensions The 3D dimensions of the volume\n */\nfunction updateZigzaggingCoordinates(coordinates, dimensions) {\n  const directionX = coordinates[1] % 2 === 0 ? 1 : -1;\n  coordinates[0] += directionX;\n  if (coordinates[0] >= dimensions[0] || coordinates[0] < 0) {\n    const directionY = coordinates[2] % 2 === 0 ? 1 : -1;\n    coordinates[0] -= directionX;\n    coordinates[1] += directionY;\n    if (coordinates[1] >= dimensions[1] || coordinates[1] < 0) {\n      coordinates[1] -= directionY;\n      coordinates[2]++;\n    }\n  }\n}\n\n/**\n * Returns the index in the array representing the volume from a 3D coordinate\n * @param {vec3} coordinates The 3D integer coordinates\n * @param {vec3} dimensions The 3D dimensions of the volume\n * @returns The index in a flat array representing the volume\n */\nfunction getIndexFromCoordinates(coordinates, dimensions) {\n  return coordinates[0] + dimensions[0] * (coordinates[1] + dimensions[1] * coordinates[2]);\n}\n\n/**\n * Write texture coordinates for the given `texelIndexPosition` in `textureCoordinate`.\n * The `texelIndexPosition` is a floating point number that represents the distance in index space\n * from the center of the first texel to the final output position.\n * The output is given in texture coordinates and not in index coordinates (this is done at the very end of the function)\n * @param {vec3} textureCoordinate The output texture coordinates (to avoid allocating a new Array)\n * @param {Number} texelIndexPosition The floating point distance from the center of the first texel, following a zigzag pattern\n * @param {vec3} dimensions The 3D dimensions of the volume\n */\nfunction getZigZagTextureCoordinatesFromTexelPosition(textureCoordinate, texelIndexPosition, dimensions) {\n  // First compute the integer textureCoordinate\n  const intTexelIndex = Math.floor(texelIndexPosition);\n  const xCoordBeforeWrap = intTexelIndex % (2 * dimensions[0]);\n  let xDirection;\n  let xEndFlag;\n  if (xCoordBeforeWrap < dimensions[0]) {\n    textureCoordinate[0] = xCoordBeforeWrap;\n    xDirection = 1;\n    xEndFlag = textureCoordinate[0] === dimensions[0] - 1;\n  } else {\n    textureCoordinate[0] = 2 * dimensions[0] - 1 - xCoordBeforeWrap;\n    xDirection = -1;\n    xEndFlag = textureCoordinate[0] === 0;\n  }\n  const intRowIndex = Math.floor(intTexelIndex / dimensions[0]);\n  const yCoordBeforeWrap = intRowIndex % (2 * dimensions[1]);\n  let yDirection;\n  let yEndFlag;\n  if (yCoordBeforeWrap < dimensions[1]) {\n    textureCoordinate[1] = yCoordBeforeWrap;\n    yDirection = 1;\n    yEndFlag = textureCoordinate[1] === dimensions[1] - 1;\n  } else {\n    textureCoordinate[1] = 2 * dimensions[1] - 1 - yCoordBeforeWrap;\n    yDirection = -1;\n    yEndFlag = textureCoordinate[1] === 0;\n  }\n  textureCoordinate[2] = Math.floor(intRowIndex / dimensions[1]);\n\n  // Now add the remainder either in x, y or z\n  const remainder = texelIndexPosition - intTexelIndex;\n  if (xEndFlag) {\n    if (yEndFlag) {\n      textureCoordinate[2] += remainder;\n    } else {\n      textureCoordinate[1] += yDirection * remainder;\n    }\n  } else {\n    textureCoordinate[0] += xDirection * remainder;\n  }\n\n  // textureCoordinates are in index space, convert to texture space\n  textureCoordinate[0] = (textureCoordinate[0] + 0.5) / dimensions[0];\n  textureCoordinate[1] = (textureCoordinate[1] + 0.5) / dimensions[1];\n  textureCoordinate[2] = (textureCoordinate[2] + 0.5) / dimensions[2];\n}\n\n// Associate an input vtkDataArray to an object { stringHash, textureCoordinates }\n// A single dataArray only caches one array of texture coordinates, so this cache is useless when\n// the input data array is used with two different lookup tables (which is very unlikely)\nconst colorTextureCoordinatesCache = new WeakMap();\n/**\n * The minimum of the range is mapped to the center of the first texel excluding min texel (texel at index distance 1)\n * The maximum of the range is mapped to the center of the last texel excluding max and NaN texels (texel at index distance numberOfColorsInRange)\n * The result is cached, and is reused if the arguments are the same and the input doesn't change\n * @param {vtkDataArray} input The input data array used for coloring\n * @param {Number} component The component of the input data array that is used for coloring (-1 for magnitude of the vectors)\n * @param {Range} range The range of the scalars\n * @param {Number} numberOfColorsInRange The number of colors that are used in the range\n * @param {vec3} dimensions The dimensions of the texture\n * @param {boolean} useLogScale If log scale should be used to transform input scalars\n * @param {boolean} useZigzagPattern If a zigzag pattern should be used. Otherwise 1 row for colors (including min and max) and 1 row for NaN are used.\n * @returns A vtkDataArray containing the texture coordinates (2D or 3D)\n */\nfunction getOrCreateColorTextureCoordinates(input, component, range, numberOfColorsInRange, dimensions, useLogScale, useZigzagPattern) {\n  // Caching using the \"arguments\" special object (because it is a pure function)\n  const argStrings = new Array(arguments.length);\n  for (let argIndex = 0; argIndex < arguments.length; ++argIndex) {\n    // eslint-disable-next-line prefer-rest-params\n    const arg = arguments[argIndex];\n    argStrings[argIndex] = arg.getMTime?.() ?? arg;\n  }\n  const stringHash = argStrings.join('/');\n  const cachedResult = colorTextureCoordinatesCache.get(input);\n  if (cachedResult && cachedResult.stringHash === stringHash) {\n    return cachedResult.textureCoordinates;\n  }\n\n  // The range used for computing coordinates have to change\n  // slightly to accommodate the special above- and below-range\n  // colors that are the first and last texels, respectively.\n  const scalarTexelWidth = (range[1] - range[0]) / (numberOfColorsInRange - 1);\n  const [paddedRangeMin, paddedRangeMax] = [range[0] - scalarTexelWidth, range[1] + scalarTexelWidth];\n\n  // Use the center of the voxel\n  const textureSOrigin = paddedRangeMin - 0.5 * scalarTexelWidth;\n  const textureSCoeff = 1.0 / (paddedRangeMax - paddedRangeMin + scalarTexelWidth);\n\n  // Compute in index space first\n  const texelIndexOrigin = paddedRangeMin;\n  const texelIndexCoeff = (numberOfColorsInRange + 1) / (paddedRangeMax - paddedRangeMin);\n  const inputV = input.getData();\n  const numScalars = input.getNumberOfTuples();\n  const numComps = input.getNumberOfComponents();\n  const useMagnitude = component < 0 || component >= numComps;\n  const numberOfOutputComponents = dimensions[2] <= 1 ? 2 : 3;\n  const output = vtkDataArray.newInstance({\n    numberOfComponents: numberOfOutputComponents,\n    values: new Float32Array(numScalars * numberOfOutputComponents)\n  });\n  const outputV = output.getData();\n  const nanTextureCoordinate = [0, 0, 0];\n  // Distance of NaN from the beginning:\n  // min: 0, ...colorsInRange, max: numberOfColorsInRange + 1, NaN = numberOfColorsInRange + 2\n  getZigZagTextureCoordinatesFromTexelPosition(nanTextureCoordinate, numberOfColorsInRange + 2, dimensions);\n\n  // Set a texture coordinate in the output for each tuple in the input\n  let inputIdx = 0;\n  let outputIdx = 0;\n  const textureCoordinate = [0.5, 0.5, 0.5];\n  for (let scalarIdx = 0; scalarIdx < numScalars; ++scalarIdx) {\n    // Get scalar value from magnitude or a single component\n    let scalarValue;\n    if (useMagnitude) {\n      let sum = 0;\n      for (let compIdx = 0; compIdx < numComps; ++compIdx) {\n        const compValue = inputV[inputIdx + compIdx];\n        sum += compValue * compValue;\n      }\n      scalarValue = Math.sqrt(sum);\n    } else {\n      scalarValue = inputV[inputIdx + component];\n    }\n    inputIdx += numComps;\n\n    // Apply log scale if necessary\n    if (useLogScale) {\n      scalarValue = vtkLookupTable.applyLogScale(scalarValue, range, range);\n    }\n\n    // Convert to texture coordinates and update output\n    if (isNan(scalarValue)) {\n      // Last texels are NaN colors (there is at least one NaN color)\n      textureCoordinate[0] = nanTextureCoordinate[0];\n      textureCoordinate[1] = nanTextureCoordinate[1];\n      textureCoordinate[2] = nanTextureCoordinate[2];\n    } else if (useZigzagPattern) {\n      // Texel position is in [0, numberOfColorsInRange + 1]\n      let texelIndexPosition = (scalarValue - texelIndexOrigin) * texelIndexCoeff;\n      if (texelIndexPosition < 1) {\n        // Use min color when smaller than range\n        texelIndexPosition = 0;\n      } else if (texelIndexPosition > numberOfColorsInRange) {\n        // Use max color when greater than range\n        texelIndexPosition = numberOfColorsInRange + 1;\n      }\n\n      // Convert the texel position into texture coordinate following a zigzag pattern\n      getZigZagTextureCoordinatesFromTexelPosition(textureCoordinate, texelIndexPosition, dimensions);\n    } else {\n      // 0.0 in t coordinate means not NaN.  So why am I setting it to 0.49?\n      // Because when you are mapping scalars and you have a NaN adjacent to\n      // anything else, the interpolation everywhere should be NaN.  Thus, I\n      // want the NaN color everywhere except right on the non-NaN neighbors.\n      // To simulate this, I set the t coord for the real numbers close to\n      // the threshold so that the interpolation almost immediately looks up\n      // the NaN value.\n      textureCoordinate[1] = 0.49;\n\n      // Some implementations apparently don't handle relatively large\n      // numbers (compared to the range [0.0, 1.0]) very well. In fact,\n      // values above 1122.0f appear to cause texture wrap-around on\n      // some systems even when edge clamping is enabled. Why 1122.0f? I\n      // don't know. For safety, we'll clamp at +/- 1000. This will\n      // result in incorrect images when the texture value should be\n      // above or below 1000, but I don't have a better solution.\n      const textureS = (scalarValue - textureSOrigin) * textureSCoeff;\n      if (textureS > 1000.0) {\n        textureCoordinate[0] = 1000.0;\n      } else if (textureS < -1000.0) {\n        textureCoordinate[0] = -1000.0;\n      } else {\n        textureCoordinate[0] = textureS;\n      }\n    }\n    for (let i = 0; i < numberOfOutputComponents; ++i) {\n      outputV[outputIdx++] = textureCoordinate[i];\n    }\n  }\n  colorTextureCoordinatesCache.set(input, {\n    stringHash,\n    textureCoordinates: output\n  });\n  return output;\n}\n\n// ----------------------------------------------------------------------------\n// vtkMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkMapper');\n  publicAPI.getBounds = () => {\n    const input = publicAPI.getInputData();\n    if (!input) {\n      model.bounds = createUninitializedBounds();\n    } else {\n      if (!model.static) {\n        publicAPI.update();\n      }\n      model.bounds = input.getBounds();\n    }\n    return model.bounds;\n  };\n  publicAPI.setForceCompileOnly = v => {\n    model.forceCompileOnly = v;\n    // make sure we do NOT call modified()\n  };\n\n  publicAPI.setSelectionWebGLIdsToVTKIds = selectionWebGLIdsToVTKIds => {\n    model.selectionWebGLIdsToVTKIds = selectionWebGLIdsToVTKIds;\n    // make sure we do NOT call modified()\n    // this attribute is only used when processing a selection made with the hardware selector\n    // the mtime of the mapper doesn't need to be changed\n  };\n\n  publicAPI.createDefaultLookupTable = () => {\n    model.lookupTable = vtkLookupTable.newInstance();\n  };\n  publicAPI.getColorModeAsString = () => macro.enumToString(ColorMode, model.colorMode);\n  publicAPI.setColorModeToDefault = () => publicAPI.setColorMode(0);\n  publicAPI.setColorModeToMapScalars = () => publicAPI.setColorMode(1);\n  publicAPI.setColorModeToDirectScalars = () => publicAPI.setColorMode(2);\n  publicAPI.getScalarModeAsString = () => macro.enumToString(ScalarMode, model.scalarMode);\n  publicAPI.setScalarModeToDefault = () => publicAPI.setScalarMode(0);\n  publicAPI.setScalarModeToUsePointData = () => publicAPI.setScalarMode(1);\n  publicAPI.setScalarModeToUseCellData = () => publicAPI.setScalarMode(2);\n  publicAPI.setScalarModeToUsePointFieldData = () => publicAPI.setScalarMode(3);\n  publicAPI.setScalarModeToUseCellFieldData = () => publicAPI.setScalarMode(4);\n  publicAPI.setScalarModeToUseFieldData = () => publicAPI.setScalarMode(5);\n  publicAPI.getAbstractScalars = (input, scalarMode, arrayAccessMode, arrayId, arrayName) => {\n    // make sure we have an input\n    if (!input || !model.scalarVisibility) {\n      return {\n        scalars: null,\n        cellFlag: false\n      };\n    }\n    let scalars = null;\n    let cellFlag = false;\n\n    // get and scalar data according to scalar mode\n    if (scalarMode === ScalarMode.DEFAULT) {\n      scalars = input.getPointData().getScalars();\n      if (!scalars) {\n        scalars = input.getCellData().getScalars();\n        cellFlag = true;\n      }\n    } else if (scalarMode === ScalarMode.USE_POINT_DATA) {\n      scalars = input.getPointData().getScalars();\n    } else if (scalarMode === ScalarMode.USE_CELL_DATA) {\n      scalars = input.getCellData().getScalars();\n      cellFlag = true;\n    } else if (scalarMode === ScalarMode.USE_POINT_FIELD_DATA) {\n      const pd = input.getPointData();\n      if (arrayAccessMode === GetArray.BY_ID) {\n        scalars = pd.getArrayByIndex(arrayId);\n      } else {\n        scalars = pd.getArrayByName(arrayName);\n      }\n    } else if (scalarMode === ScalarMode.USE_CELL_FIELD_DATA) {\n      const cd = input.getCellData();\n      cellFlag = true;\n      if (arrayAccessMode === GetArray.BY_ID) {\n        scalars = cd.getArrayByIndex(arrayId);\n      } else {\n        scalars = cd.getArrayByName(arrayName);\n      }\n    } else if (scalarMode === ScalarMode.USE_FIELD_DATA) {\n      const fd = input.getFieldData();\n      if (arrayAccessMode === GetArray.BY_ID) {\n        scalars = fd.getArrayByIndex(arrayId);\n      } else {\n        scalars = fd.getArrayByName(arrayName);\n      }\n    }\n    return {\n      scalars,\n      cellFlag\n    };\n  };\n  publicAPI.mapScalars = (input, alpha) => {\n    const {\n      scalars,\n      cellFlag\n    } = publicAPI.getAbstractScalars(input, model.scalarMode, model.arrayAccessMode, model.arrayId, model.colorByArrayName);\n    model.areScalarsMappedFromCells = cellFlag;\n    if (!scalars) {\n      model.colorCoordinates = null;\n      model.colorTextureMap = null;\n      model.colorMapColors = null;\n      return;\n    }\n\n    // we want to only recompute when something has changed\n    const toString = `${publicAPI.getMTime()}${scalars.getMTime()}${alpha}`;\n    if (model.colorBuildString === toString) return;\n    if (!model.useLookupTableScalarRange) {\n      publicAPI.getLookupTable().setRange(model.scalarRange[0], model.scalarRange[1]);\n    }\n\n    // Decide between texture color or vertex color.\n    // Cell data always uses vertex color.\n    // Only point data can use both texture and vertex coloring.\n    if (publicAPI.canUseTextureMapForColoring(scalars, cellFlag)) {\n      model.mapScalarsToTexture(scalars, cellFlag, alpha);\n    } else {\n      model.colorCoordinates = null;\n      model.colorTextureMap = null;\n      const lut = publicAPI.getLookupTable();\n      if (lut) {\n        // Ensure that the lookup table is built\n        lut.build();\n        model.colorMapColors = lut.mapScalars(scalars, model.colorMode, model.fieldDataTupleId);\n      }\n    }\n    model.colorBuildString = `${publicAPI.getMTime()}${scalars.getMTime()}${alpha}`;\n  };\n\n  // Protected method\n  model.mapScalarsToTexture = (scalars, cellFlag, alpha) => {\n    const range = model.lookupTable.getRange();\n    const useLogScale = model.lookupTable.usingLogScale();\n    if (useLogScale) {\n      // convert range to log.\n      vtkLookupTable.getLogRange(range, range);\n    }\n    const origAlpha = model.lookupTable.getAlpha();\n\n    // Get rid of vertex color array.  Only texture or vertex coloring\n    // can be active at one time.  The existence of the array is the\n    // signal to use that technique.\n    model.colorMapColors = null;\n\n    // If the lookup table has changed, then recreate the color texture map.\n    // Set a new lookup table changes this->MTime.\n    if (model.colorTextureMap == null || publicAPI.getMTime() > model.colorTextureMap.getMTime() || model.lookupTable.getMTime() > model.colorTextureMap.getMTime() || model.lookupTable.getAlpha() !== alpha) {\n      model.lookupTable.setAlpha(alpha);\n      model.colorTextureMap = null;\n\n      // Get the texture map from the lookup table.\n      // Create a dummy ramp of scalars.\n      // In the future, we could extend vtkScalarsToColors.\n      model.lookupTable.build();\n      const numberOfAvailableColors = model.lookupTable.getNumberOfAvailableColors();\n\n      // Maximum dimensions and number of colors in range\n      const maxTextureWidthForCells = 2048;\n      const maxColorsInRangeForCells = maxTextureWidthForCells ** 3 - 3; // 3D but keep a color for min, max and NaN\n      const maxTextureWidthForPoints = 4096;\n      const maxColorsInRangeForPoints = maxTextureWidthForPoints - 2; // 1D but keep a color for min and max (NaN is in a different row)\n      // Minimum number of colors in range (excluding special colors like minColor, maxColor and NaNColor)\n      const minColorsInRange = 2;\n      // Maximum number of colors, limited by the maximum possible texture size\n      const maxColorsInRange = cellFlag ? maxColorsInRangeForCells : maxColorsInRangeForPoints;\n      model.numberOfColorsInRange = Math.min(Math.max(numberOfAvailableColors, minColorsInRange), maxColorsInRange);\n      const numberOfColorsForCells = model.numberOfColorsInRange + 3; // Add min, max and NaN\n      const numberOfColorsInUpperRowForPoints = model.numberOfColorsInRange + 2; // Add min and max ; the lower row will be used for NaN color\n      const textureDimensions = cellFlag ? [Math.min(Math.ceil(numberOfColorsForCells / maxTextureWidthForCells ** 0), maxTextureWidthForCells), Math.min(Math.ceil(numberOfColorsForCells / maxTextureWidthForCells ** 1), maxTextureWidthForCells), Math.min(Math.ceil(numberOfColorsForCells / maxTextureWidthForCells ** 2), maxTextureWidthForCells)] : [numberOfColorsInUpperRowForPoints, 2, 1];\n      const textureSize = textureDimensions[0] * textureDimensions[1] * textureDimensions[2];\n      const scalarsArray = new Float64Array(textureSize);\n\n      // Colors for NaN by default\n      scalarsArray.fill(NaN);\n\n      // Colors in range\n      // Add 2 to also get color for min and max\n      const numberOfNonSpecialColors = model.numberOfColorsInRange;\n      const numberOfNonNaNColors = numberOfNonSpecialColors + 2;\n      const textureCoordinates = [0, 0, 0];\n      const rangeMin = range[0];\n      const rangeDifference = range[1] - range[0];\n      for (let i = 0; i < numberOfNonNaNColors; ++i) {\n        const scalarsArrayIndex = getIndexFromCoordinates(textureCoordinates, textureDimensions);\n\n        // Minus 1 start at min color\n        const scalarValue = rangeMin + rangeDifference * (i - 1) / (numberOfNonSpecialColors - 1);\n        scalarsArray[scalarsArrayIndex] = useLogScale ? 10.0 ** scalarValue : scalarValue;\n\n        // Colors are zigzagging to allow interpolation between two neighbor colors when coloring cells\n        updateZigzaggingCoordinates(textureCoordinates, textureDimensions);\n      }\n      const scalarsDataArray = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        values: scalarsArray\n      });\n      const colorsDataArray = model.lookupTable.mapScalars(scalarsDataArray, model.colorMode, 0);\n      model.colorTextureMap = vtkImageData.newInstance();\n      model.colorTextureMap.setDimensions(textureDimensions);\n      model.colorTextureMap.getPointData().setScalars(colorsDataArray);\n      model.lookupTable.setAlpha(origAlpha);\n    }\n\n    // Although I like the feature of applying magnitude to single component\n    // scalars, it is not how the old MapScalars for vertex coloring works.\n    const scalarComponent = model.lookupTable.getVectorMode() === VectorMode.MAGNITUDE && scalars.getNumberOfComponents() > 1 ? -1 : model.lookupTable.getVectorComponent();\n\n    // Create new coordinates if necessary, this function uses cache if possible.\n    // A zigzag pattern can't be used with point data, as interpolation of texture coordinates will be wrong\n    // A zigzag pattern can be used with cell data, as there will be no texture coordinates interpolation\n    // The texture generated using a zigzag pattern in one dimension is the same as without zigzag\n    // Therefore, the same code can be used for texture generation of point/cell data but not for texture coordinates\n    model.colorCoordinates = getOrCreateColorTextureCoordinates(scalars, scalarComponent, range, model.numberOfColorsInRange, model.colorTextureMap.getDimensions(), useLogScale, cellFlag);\n  };\n  publicAPI.getIsOpaque = () => {\n    const input = publicAPI.getInputData();\n    const gasResult = publicAPI.getAbstractScalars(input, model.scalarMode, model.arrayAccessMode, model.arrayId, model.colorByArrayName);\n    const scalars = gasResult.scalars;\n    if (!model.scalarVisibility || scalars == null) {\n      // No scalar colors.\n      return true;\n    }\n    const lut = publicAPI.getLookupTable();\n    if (lut) {\n      // Ensure that the lookup table is built\n      lut.build();\n      return lut.areScalarsOpaque(scalars, model.colorMode, -1);\n    }\n    return true;\n  };\n  publicAPI.canUseTextureMapForColoring = (scalars, cellFlag) => {\n    if (cellFlag && !(model.colorMode === ColorMode.DIRECT_SCALARS)) {\n      return true; // cell data always use textures.\n    }\n\n    if (!model.interpolateScalarsBeforeMapping) {\n      return false; // user doesn't want us to use texture maps at all.\n    }\n\n    // index color does not use textures\n    if (model.lookupTable && model.lookupTable.getIndexedLookup()) {\n      return false;\n    }\n    if (!scalars) {\n      // no scalars on this dataset, we don't care if texture is used at all.\n      return false;\n    }\n    if (model.colorMode === ColorMode.DEFAULT && scalars.getDataType() === VtkDataTypes.UNSIGNED_CHAR || model.colorMode === ColorMode.DIRECT_SCALARS) {\n      // Don't use texture is direct coloring using RGB unsigned chars is\n      // requested.\n      return false;\n    }\n    return true;\n  };\n  publicAPI.clearColorArrays = () => {\n    model.colorMapColors = null;\n    model.colorCoordinates = null;\n    model.colorTextureMap = null;\n  };\n  publicAPI.getLookupTable = () => {\n    if (!model.lookupTable) {\n      publicAPI.createDefaultLookupTable();\n    }\n    return model.lookupTable;\n  };\n  publicAPI.getMTime = () => {\n    let mt = model.mtime;\n    if (model.lookupTable !== null) {\n      const time = model.lookupTable.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    return mt;\n  };\n  publicAPI.getPrimitiveCount = () => {\n    const input = publicAPI.getInputData();\n    const pcount = {\n      points: input.getPoints().getNumberOfValues() / 3,\n      verts: input.getVerts().getNumberOfValues() - input.getVerts().getNumberOfCells(),\n      lines: input.getLines().getNumberOfValues() - 2 * input.getLines().getNumberOfCells(),\n      triangles: input.getPolys().getNumberOfValues() - 3 * input.getPolys().getNumberOfCells()\n    };\n    return pcount;\n  };\n  publicAPI.acquireInvertibleLookupTable = notImplemented('AcquireInvertibleLookupTable');\n  publicAPI.valueToColor = notImplemented('ValueToColor');\n  publicAPI.colorToValue = notImplemented('ColorToValue');\n  publicAPI.useInvertibleColorFor = notImplemented('UseInvertibleColorFor');\n  publicAPI.clearInvertibleColor = notImplemented('ClearInvertibleColor');\n  publicAPI.processSelectorPixelBuffers = (selector, pixelOffsets) => {\n    /* eslint-disable no-bitwise */\n    if (!selector || !model.selectionWebGLIdsToVTKIds || !model.populateSelectionSettings) {\n      return;\n    }\n    const rawLowData = selector.getRawPixelBuffer(PassTypes.ID_LOW24);\n    const rawHighData = selector.getRawPixelBuffer(PassTypes.ID_HIGH24);\n    const currentPass = selector.getCurrentPass();\n    const fieldAssociation = selector.getFieldAssociation();\n    let idMap = null;\n    if (fieldAssociation === FieldAssociations.FIELD_ASSOCIATION_POINTS) {\n      idMap = model.selectionWebGLIdsToVTKIds.points;\n    } else if (fieldAssociation === FieldAssociations.FIELD_ASSOCIATION_CELLS) {\n      idMap = model.selectionWebGLIdsToVTKIds.cells;\n    }\n    if (!idMap) {\n      return;\n    }\n    pixelOffsets.forEach(pos => {\n      if (currentPass === PassTypes.ID_LOW24) {\n        let inValue = 0;\n        if (rawHighData) {\n          inValue += rawHighData[pos];\n          inValue *= 256;\n        }\n        inValue += rawLowData[pos + 2];\n        inValue *= 256;\n        inValue += rawLowData[pos + 1];\n        inValue *= 256;\n        inValue += rawLowData[pos];\n        const outValue = idMap[inValue];\n        const lowData = selector.getPixelBuffer(PassTypes.ID_LOW24);\n        lowData[pos] = outValue & 0xff;\n        lowData[pos + 1] = (outValue & 0xff00) >> 8;\n        lowData[pos + 2] = (outValue & 0xff0000) >> 16;\n      } else if (currentPass === PassTypes.ID_HIGH24 && rawHighData) {\n        let inValue = 0;\n        inValue += rawHighData[pos];\n        inValue *= 256;\n        inValue += rawLowData[pos + 2];\n        inValue *= 256;\n        inValue += rawLowData[pos + 1];\n        inValue *= 256;\n        inValue += rawLowData[pos];\n        const outValue = idMap[inValue];\n        const highData = selector.getPixelBuffer(PassTypes.ID_HIGH24);\n        highData[pos] = (outValue & 0xff000000) >> 24;\n      }\n    });\n    /* eslint-enable no-bitwise */\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  colorMapColors: null,\n  // Same as this->Colors\n  areScalarsMappedFromCells: false,\n  static: false,\n  lookupTable: null,\n  scalarVisibility: true,\n  scalarRange: [0, 1],\n  useLookupTableScalarRange: false,\n  colorMode: 0,\n  scalarMode: 0,\n  arrayAccessMode: 1,\n  // By_NAME\n\n  renderTime: 0,\n  colorByArrayName: null,\n  fieldDataTupleId: -1,\n  populateSelectionSettings: true,\n  selectionWebGLIdsToVTKIds: null,\n  interpolateScalarsBeforeMapping: false,\n  colorCoordinates: null,\n  colorTextureMap: null,\n  numberOfColorsInRange: 0,\n  forceCompileOnly: 0,\n  useInvertibleColors: false,\n  invertibleScalars: null,\n  customShaderAttributes: []\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkAbstractMapper3D.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['areScalarsMappedFromCells', 'colorCoordinates', 'colorMapColors', 'colorTextureMap', 'numberOfColorsInRange', 'selectionWebGLIdsToVTKIds']);\n  macro.setGet(publicAPI, model, ['colorByArrayName', 'arrayAccessMode', 'colorMode', 'fieldDataTupleId', 'interpolateScalarsBeforeMapping', 'lookupTable', 'populateSelectionSettings', 'renderTime', 'scalarMode', 'scalarVisibility', 'static', 'useLookupTableScalarRange', 'customShaderAttributes' // point data array names that will be transferred to the VBO\n  ]);\n\n  macro.setGetArray(publicAPI, model, ['scalarRange'], 2);\n  CoincidentTopologyHelper.implementCoincidentTopologyMethods(publicAPI, model);\n\n  // Object methods\n  vtkMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkMapper');\n\n// ----------------------------------------------------------------------------\n\nvar vtkMapper$1 = {\n  newInstance,\n  extend,\n  ...staticOffsetAPI,\n  ...otherStaticMethods,\n  ...Constants\n};\n\nexport { vtkMapper$1 as default, extend, newInstance };\n","const Wrap = {\n  CLAMP_TO_EDGE: 0,\n  REPEAT: 1,\n  MIRRORED_REPEAT: 2\n};\nconst Filter = {\n  NEAREST: 0,\n  LINEAR: 1,\n  NEAREST_MIPMAP_NEAREST: 2,\n  NEAREST_MIPMAP_LINEAR: 3,\n  LINEAR_MIPMAP_NEAREST: 4,\n  LINEAR_MIPMAP_LINEAR: 5\n};\nvar Constants = {\n  Wrap,\n  Filter\n};\n\nexport { Filter, Wrap, Constants as default };\n","/* eslint-disable no-bitwise */\n\nconst floatView = new Float32Array(1);\nconst int32View = new Int32Array(floatView.buffer);\n\n/* eslint-disable no-bitwise */\n/* This method is faster than the OpenEXR implementation (very often\n * used, eg. in Ogre), with the additional benefit of rounding, inspired\n * by James Tursa?s half-precision code. */\nfunction toHalf(val) {\n  floatView[0] = val;\n  const x = int32View[0];\n  let bits = x >> 16 & 0x8000; /* Get the sign */\n  let m = x >> 12 & 0x07ff; /* Keep one extra bit for rounding */\n  const e = x >> 23 & 0xff; /* Using int is faster here */\n\n  /* If zero, or denormal, or exponent underflows too much for a denormal\n   * half, return signed zero. */\n  if (e < 103) {\n    return bits;\n  }\n\n  /* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n  if (e > 142) {\n    bits |= 0x7c00;\n    /* If exponent was 0xff and one mantissa bit was set, it means NaN,\n     * not Inf, so make sure we set one mantissa bit too. */\n    bits |= (e === 255 ? 0 : 1) && x & 0x007fffff;\n    return bits;\n  }\n\n  /* If exponent underflows but not too much, return a denormal */\n  if (e < 113) {\n    m |= 0x0800;\n    /* Extra rounding may overflow and set mantissa to 0 and exponent\n     * to 1, which is OK. */\n    bits |= (m >> 114 - e) + (m >> 113 - e & 1);\n    return bits;\n  }\n  bits |= e - 112 << 10 | m >> 1;\n  /* Extra rounding. An overflow will set mantissa to 0 and increment\n   * the exponent, which is OK. */\n  bits += m & 1;\n  return bits;\n}\nfunction fromHalf(h) {\n  const s = (h & 0x8000) >> 15;\n  const e = (h & 0x7c00) >> 10;\n  const f = h & 0x03ff;\n  if (e === 0) {\n    return (s ? -1 : 1) * 2 ** -14 * (f / 2 ** 10);\n  }\n  if (e === 0x1f) {\n    return f ? NaN : (s ? -1 : 1) * Infinity;\n  }\n  return (s ? -1 : 1) * 2 ** (e - 15) * (1 + f / 2 ** 10);\n}\nvar HalfFloat = {\n  fromHalf,\n  toHalf\n};\n\nexport { HalfFloat as default };\n","/**\n * Even when the EXT_texture_norm16 extension is present, linear filtering\n * might not be supported for normalized fixed point textures.\n *\n * This is a driver bug. See https://github.com/KhronosGroup/WebGL/issues/3706\n * @return {boolean}\n */\nfunction supportsNorm16Linear() {\n  try {\n    const canvasSize = 4;\n    const texWidth = 2;\n    const texHeight = 1;\n    const texData = new Int16Array([0, 2 ** 15 - 1]);\n    const pixelToCheck = [1, 1];\n    const canvas = document.createElement('canvas');\n    canvas.width = canvasSize;\n    canvas.height = canvasSize;\n    const gl = canvas.getContext('webgl2');\n    if (!gl) {\n      return false;\n    }\n    const ext = gl.getExtension('EXT_texture_norm16');\n    if (!ext) {\n      return false;\n    }\n    const vs = `#version 300 es\n    void main() {\n      gl_PointSize = ${canvasSize.toFixed(1)};\n      gl_Position = vec4(0, 0, 0, 1);\n    }\n  `;\n    const fs = `#version 300 es\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n\n    uniform sampler2D u_image;\n\n    out vec4 color;\n\n    void main() {\n        vec4 intColor = texture(u_image, gl_PointCoord.xy);\n        color = vec4(vec3(intColor.rrr), 1);\n    }\n    `;\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vs);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fs);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n    const program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      return false;\n    }\n    const tex = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, tex);\n    gl.texImage2D(gl.TEXTURE_2D, 0, ext.R16_SNORM_EXT, texWidth, texHeight, 0, gl.RED, gl.SHORT, texData);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.useProgram(program);\n    gl.drawArrays(gl.POINTS, 0, 1);\n    const pixel = new Uint8Array(4);\n    gl.readPixels(pixelToCheck[0], pixelToCheck[1], 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\n    const [r, g, b] = pixel;\n    const webglLoseContext = gl.getExtension('WEBGL_lose_context');\n    if (webglLoseContext) {\n      webglLoseContext.loseContext();\n    }\n    return r === g && g === b && r !== 0;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * @type {boolean | undefined}\n */\nlet supportsNorm16LinearCache;\nfunction supportsNorm16LinearCached() {\n  // Only create a canvas+texture+shaders the first time\n  if (supportsNorm16LinearCache === undefined) {\n    supportsNorm16LinearCache = supportsNorm16Linear();\n  }\n  return supportsNorm16LinearCache;\n}\n\nexport { supportsNorm16LinearCached as default };\n","import Constants from './Texture/Constants.js';\nimport HalfFloat from '../../Common/Core/HalfFloat.js';\nimport { n as newInstance$1, o as obj, s as set, e as setGet, g as get, i as moveToProtected, a as newTypedArray, c as macro } from '../../macros2.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport { V as isPowerOfTwo, R as nearestPowerOfTwo } from '../../Common/Core/Math/index.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\nimport supportsNorm16LinearCached from './Texture/supportsNorm16Linear.js';\n\nconst {\n  Wrap,\n  Filter\n} = Constants;\nconst {\n  VtkDataTypes\n} = vtkDataArray;\nconst {\n  vtkDebugMacro,\n  vtkErrorMacro,\n  vtkWarningMacro\n} = macro;\nconst {\n  toHalf\n} = HalfFloat;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLTexture methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLTexture(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLTexture');\n  // Renders myself\n  publicAPI.render = function () {\n    let renWin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    if (renWin) {\n      model._openGLRenderWindow = renWin;\n    } else {\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      // sync renderable properties\n      model._openGLRenderWindow = model._openGLRenderer.getLastAncestorOfType('vtkOpenGLRenderWindow');\n    }\n    model.context = model._openGLRenderWindow.getContext();\n    if (model.renderable.getInterpolate()) {\n      if (model.generateMipmap) {\n        publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\n      } else {\n        publicAPI.setMinificationFilter(Filter.LINEAR);\n      }\n      publicAPI.setMagnificationFilter(Filter.LINEAR);\n    } else {\n      publicAPI.setMinificationFilter(Filter.NEAREST);\n      publicAPI.setMagnificationFilter(Filter.NEAREST);\n    }\n    if (model.renderable.getRepeat()) {\n      publicAPI.setWrapR(Wrap.REPEAT);\n      publicAPI.setWrapS(Wrap.REPEAT);\n      publicAPI.setWrapT(Wrap.REPEAT);\n    }\n    // clear image if input data is set\n    if (model.renderable.getInputData()) {\n      model.renderable.setImage(null);\n    }\n    // create the texture if it is not done already\n    if (!model.handle || model.renderable.getMTime() > model.textureBuildTime.getMTime()) {\n      // if we have an Image\n      if (model.renderable.getImage() !== null) {\n        if (model.renderable.getInterpolate()) {\n          model.generateMipmap = true;\n          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\n        }\n        // Have an Image which may not be complete\n        if (model.renderable.getImage() && model.renderable.getImageLoaded()) {\n          publicAPI.create2DFromImage(model.renderable.getImage());\n          publicAPI.activate();\n          publicAPI.sendParameters();\n          model.textureBuildTime.modified();\n        }\n      }\n      // if we have a canvas\n      if (model.renderable.getCanvas() !== null) {\n        if (model.renderable.getInterpolate()) {\n          model.generateMipmap = true;\n          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\n        }\n        const canvas = model.renderable.getCanvas();\n        publicAPI.create2DFromRaw(canvas.width, canvas.height, 4, VtkDataTypes.UNSIGNED_CHAR, canvas, true);\n        publicAPI.activate();\n        publicAPI.sendParameters();\n        model.textureBuildTime.modified();\n      }\n      // if we have jsImageData\n      if (model.renderable.getJsImageData() !== null) {\n        const jsid = model.renderable.getJsImageData();\n        if (model.renderable.getInterpolate()) {\n          model.generateMipmap = true;\n          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\n        }\n        publicAPI.create2DFromRaw(jsid.width, jsid.height, 4, VtkDataTypes.UNSIGNED_CHAR, jsid.data, true);\n        publicAPI.activate();\n        publicAPI.sendParameters();\n        model.textureBuildTime.modified();\n      }\n      // if we have InputData\n      const input = model.renderable.getInputData(0);\n      if (input && input.getPointData().getScalars()) {\n        const ext = input.getExtent();\n        const inScalars = input.getPointData().getScalars();\n\n        // do we have a cube map? Six inputs\n        const data = [];\n        for (let i = 0; i < model.renderable.getNumberOfInputPorts(); ++i) {\n          const indata = model.renderable.getInputData(i);\n          const scalars = indata ? indata.getPointData().getScalars().getData() : null;\n          if (scalars) {\n            data.push(scalars);\n          }\n        }\n        if (model.renderable.getInterpolate() && inScalars.getNumberOfComponents() === 4) {\n          model.generateMipmap = true;\n          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\n        }\n        if (data.length % 6 === 0) {\n          publicAPI.createCubeFromRaw(ext[1] - ext[0] + 1, ext[3] - ext[2] + 1, inScalars.getNumberOfComponents(), inScalars.getDataType(), data);\n        } else {\n          publicAPI.create2DFromRaw(ext[1] - ext[0] + 1, ext[3] - ext[2] + 1, inScalars.getNumberOfComponents(), inScalars.getDataType(), inScalars.getData());\n        }\n        publicAPI.activate();\n        publicAPI.sendParameters();\n        model.textureBuildTime.modified();\n      }\n    }\n    if (model.handle) {\n      publicAPI.activate();\n    }\n  };\n  const getNorm16Ext = () => {\n    if ((model.minificationFilter === Filter.LINEAR || model.magnificationFilter === Filter.LINEAR) && !supportsNorm16LinearCached()) {\n      return undefined;\n    }\n    return model.oglNorm16Ext;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.destroyTexture = () => {\n    // deactivate it first\n    publicAPI.deactivate();\n    if (model.context && model.handle) {\n      model.context.deleteTexture(model.handle);\n    }\n    model.handle = 0;\n    model.numberOfDimensions = 0;\n    model.target = 0;\n    model.components = 0;\n    model.width = 0;\n    model.height = 0;\n    model.depth = 0;\n    publicAPI.resetFormatAndType();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.createTexture = () => {\n    // reuse the existing handle if we have one\n    if (!model.handle) {\n      model.handle = model.context.createTexture();\n      if (model.target) {\n        model.context.bindTexture(model.target, model.handle);\n\n        // See: http://www.openmodel.context..org/wiki/Common_Mistakes#Creating_a_complete_texture\n        // turn off mip map filter or set the base and max level correctly. here\n        // both are done.\n        model.context.texParameteri(model.target, model.context.TEXTURE_MIN_FILTER, publicAPI.getOpenGLFilterMode(model.minificationFilter));\n        model.context.texParameteri(model.target, model.context.TEXTURE_MAG_FILTER, publicAPI.getOpenGLFilterMode(model.magnificationFilter));\n        model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_S, publicAPI.getOpenGLWrapMode(model.wrapS));\n        model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_T, publicAPI.getOpenGLWrapMode(model.wrapT));\n        if (model._openGLRenderWindow.getWebgl2()) {\n          model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_R, publicAPI.getOpenGLWrapMode(model.wrapR));\n        }\n        model.context.bindTexture(model.target, null);\n      }\n    }\n  };\n\n  //---------------------------------------------------------------------------\n  publicAPI.getTextureUnit = () => {\n    if (model._openGLRenderWindow) {\n      return model._openGLRenderWindow.getTextureUnitForTexture(publicAPI);\n    }\n    return -1;\n  };\n\n  //---------------------------------------------------------------------------\n  publicAPI.activate = () => {\n    // activate a free texture unit for this texture\n    model._openGLRenderWindow.activateTexture(publicAPI);\n    publicAPI.bind();\n  };\n\n  //---------------------------------------------------------------------------\n  publicAPI.deactivate = () => {\n    if (model._openGLRenderWindow) {\n      model._openGLRenderWindow.deactivateTexture(publicAPI);\n    }\n  };\n\n  //---------------------------------------------------------------------------\n  publicAPI.releaseGraphicsResources = rwin => {\n    if (rwin && model.handle) {\n      rwin.activateTexture(publicAPI);\n      rwin.deactivateTexture(publicAPI);\n      model.context.deleteTexture(model.handle);\n      model.handle = 0;\n      model.numberOfDimensions = 0;\n      model.target = 0;\n      model.internalFormat = 0;\n      model.format = 0;\n      model.openGLDataType = 0;\n      model.components = 0;\n      model.width = 0;\n      model.height = 0;\n      model.depth = 0;\n      model.allocatedGPUMemoryInBytes = 0;\n    }\n    if (model.shaderProgram) {\n      model.shaderProgram.releaseGraphicsResources(rwin);\n      model.shaderProgram = null;\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.bind = () => {\n    model.context.bindTexture(model.target, model.handle);\n    if (model.autoParameters && publicAPI.getMTime() > model.sendParametersTime.getMTime()) {\n      publicAPI.sendParameters();\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.isBound = () => {\n    let result = false;\n    if (model.context && model.handle) {\n      let target = 0;\n      switch (model.target) {\n        case model.context.TEXTURE_2D:\n          target = model.context.TEXTURE_BINDING_2D;\n          break;\n        default:\n          vtkWarningMacro('impossible case');\n          break;\n      }\n      const oid = model.context.getIntegerv(target);\n      result = oid === model.handle;\n    }\n    return result;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.sendParameters = () => {\n    model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_S, publicAPI.getOpenGLWrapMode(model.wrapS));\n    model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_T, publicAPI.getOpenGLWrapMode(model.wrapT));\n    if (model._openGLRenderWindow.getWebgl2()) {\n      model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_R, publicAPI.getOpenGLWrapMode(model.wrapR));\n    }\n    model.context.texParameteri(model.target, model.context.TEXTURE_MIN_FILTER, publicAPI.getOpenGLFilterMode(model.minificationFilter));\n    model.context.texParameteri(model.target, model.context.TEXTURE_MAG_FILTER, publicAPI.getOpenGLFilterMode(model.magnificationFilter));\n    if (model._openGLRenderWindow.getWebgl2()) {\n      model.context.texParameteri(model.target, model.context.TEXTURE_BASE_LEVEL, model.baseLevel);\n      model.context.texParameteri(model.target, model.context.TEXTURE_MAX_LEVEL, model.maxLevel);\n    }\n\n    // model.context.texParameterf(model.target, model.context.TEXTURE_MIN_LOD, model.minLOD);\n    // model.context.texParameterf(model.target, model.context.TEXTURE_MAX_LOD, model.maxLOD);\n\n    model.sendParametersTime.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getInternalFormat = (vtktype, numComps) => {\n    if (!model._forceInternalFormat) {\n      model.internalFormat = publicAPI.getDefaultInternalFormat(vtktype, numComps);\n    }\n    if (!model.internalFormat) {\n      vtkDebugMacro(`Unable to find suitable internal format for T=${vtktype} NC= ${numComps}`);\n    }\n    if ([model.context.R32F, model.context.RG32F, model.context.RGB32F, model.context.RGBA32F].includes(model.internalFormat) && !model.context.getExtension('OES_texture_float_linear')) {\n      vtkWarningMacro('Failed to load OES_texture_float_linear. Texture filtering is not available for *32F internal formats.');\n    }\n    return model.internalFormat;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getDefaultInternalFormat = (vtktype, numComps) => {\n    let result = 0;\n    // try default next\n    result = model._openGLRenderWindow.getDefaultTextureInternalFormat(vtktype, numComps, getNorm16Ext(), publicAPI.useHalfFloat());\n    if (result) {\n      return result;\n    }\n    if (!result) {\n      vtkDebugMacro('Unsupported internal texture type!');\n      vtkDebugMacro(`Unable to find suitable internal format for T=${vtktype} NC= ${numComps}`);\n    }\n    return result;\n  };\n  publicAPI.useHalfFloat = () => model.enableUseHalfFloat && model.canUseHalfFloat;\n\n  //----------------------------------------------------------------------------\n  publicAPI.setInternalFormat = iFormat => {\n    model._forceInternalFormat = true;\n    if (iFormat !== model.internalFormat) {\n      model.internalFormat = iFormat;\n      publicAPI.modified();\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getFormat = (vtktype, numComps) => {\n    model.format = publicAPI.getDefaultFormat(vtktype, numComps);\n    return model.format;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getDefaultFormat = (vtktype, numComps) => {\n    if (model._openGLRenderWindow.getWebgl2()) {\n      switch (numComps) {\n        case 1:\n          return model.context.RED;\n        case 2:\n          return model.context.RG;\n        case 3:\n          return model.context.RGB;\n        case 4:\n          return model.context.RGBA;\n        default:\n          return model.context.RGB;\n      }\n    } else {\n      // webgl1\n      switch (numComps) {\n        case 1:\n          return model.context.LUMINANCE;\n        case 2:\n          return model.context.LUMINANCE_ALPHA;\n        case 3:\n          return model.context.RGB;\n        case 4:\n          return model.context.RGBA;\n        default:\n          return model.context.RGB;\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.resetFormatAndType = () => {\n    model.format = 0;\n    model.internalFormat = 0;\n    model._forceInternalFormat = false;\n    model.openGLDataType = 0;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getDefaultDataType = vtkScalarType => {\n    const useHalfFloat = publicAPI.useHalfFloat();\n    // DON'T DEAL with VTK_CHAR as this is platform dependent.\n    if (model._openGLRenderWindow.getWebgl2()) {\n      switch (vtkScalarType) {\n        // case VtkDataTypes.SIGNED_CHAR:\n        //   return model.context.BYTE;\n        case VtkDataTypes.UNSIGNED_CHAR:\n          return model.context.UNSIGNED_BYTE;\n        // prefer norm16 since that is accurate compared to\n        // half float which is not\n        case getNorm16Ext() && !useHalfFloat && VtkDataTypes.SHORT:\n          return model.context.SHORT;\n        case getNorm16Ext() && !useHalfFloat && VtkDataTypes.UNSIGNED_SHORT:\n          return model.context.UNSIGNED_SHORT;\n        // use half float type\n        case useHalfFloat && VtkDataTypes.SHORT:\n          return model.context.HALF_FLOAT;\n        case useHalfFloat && VtkDataTypes.UNSIGNED_SHORT:\n          return model.context.HALF_FLOAT;\n        // case VtkDataTypes.INT:\n        //   return model.context.INT;\n        // case VtkDataTypes.UNSIGNED_INT:\n        //   return model.context.UNSIGNED_INT;\n        case VtkDataTypes.FLOAT:\n        case VtkDataTypes.VOID: // used for depth component textures.\n        default:\n          return model.context.FLOAT;\n      }\n    }\n    switch (vtkScalarType) {\n      // case VtkDataTypes.SIGNED_CHAR:\n      //   return model.context.BYTE;\n      case VtkDataTypes.UNSIGNED_CHAR:\n        return model.context.UNSIGNED_BYTE;\n      // case VtkDataTypes.SHORT:\n      //   return model.context.SHORT;\n      // case VtkDataTypes.UNSIGNED_SHORT:\n      //   return model.context.UNSIGNED_SHORT;\n      // case VtkDataTypes.INT:\n      //   return model.context.INT;\n      // case VtkDataTypes.UNSIGNED_INT:\n      //   return model.context.UNSIGNED_INT;\n      case VtkDataTypes.FLOAT:\n      case VtkDataTypes.VOID: // used for depth component textures.\n      default:\n        if (model.context.getExtension('OES_texture_float') && model.context.getExtension('OES_texture_float_linear')) {\n          return model.context.FLOAT;\n        }\n        {\n          const halfFloat = model.context.getExtension('OES_texture_half_float');\n          if (halfFloat && model.context.getExtension('OES_texture_half_float_linear')) {\n            return halfFloat.HALF_FLOAT_OES;\n          }\n        }\n        return model.context.UNSIGNED_BYTE;\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getOpenGLDataType = function (vtkScalarType) {\n    let forceUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!model.openGLDataType || forceUpdate) {\n      model.openGLDataType = publicAPI.getDefaultDataType(vtkScalarType);\n    }\n    return model.openGLDataType;\n  };\n  publicAPI.getShiftAndScale = () => {\n    let shift = 0.0;\n    let scale = 1.0;\n\n    // for all float type internal formats\n    switch (model.openGLDataType) {\n      case model.context.BYTE:\n        scale = 127.5;\n        shift = scale - 128.0;\n        break;\n      case model.context.UNSIGNED_BYTE:\n        scale = 255.0;\n        shift = 0.0;\n        break;\n      case model.context.SHORT:\n        scale = 32767.5;\n        shift = scale - 32768.0;\n        break;\n      case model.context.UNSIGNED_SHORT:\n        scale = 65536.0;\n        shift = 0.0;\n        break;\n      case model.context.INT:\n        scale = 2147483647.5;\n        shift = scale - 2147483648.0;\n        break;\n      case model.context.UNSIGNED_INT:\n        scale = 4294967295.0;\n        shift = 0.0;\n        break;\n      case model.context.FLOAT:\n    }\n    return {\n      shift,\n      scale\n    };\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getOpenGLFilterMode = emode => {\n    switch (emode) {\n      case Filter.NEAREST:\n        return model.context.NEAREST;\n      case Filter.LINEAR:\n        return model.context.LINEAR;\n      case Filter.NEAREST_MIPMAP_NEAREST:\n        return model.context.NEAREST_MIPMAP_NEAREST;\n      case Filter.NEAREST_MIPMAP_LINEAR:\n        return model.context.NEAREST_MIPMAP_LINEAR;\n      case Filter.LINEAR_MIPMAP_NEAREST:\n        return model.context.LINEAR_MIPMAP_NEAREST;\n      case Filter.LINEAR_MIPMAP_LINEAR:\n        return model.context.LINEAR_MIPMAP_LINEAR;\n      default:\n        return model.context.NEAREST;\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getOpenGLWrapMode = vtktype => {\n    switch (vtktype) {\n      case Wrap.CLAMP_TO_EDGE:\n        return model.context.CLAMP_TO_EDGE;\n      case Wrap.REPEAT:\n        return model.context.REPEAT;\n      case Wrap.MIRRORED_REPEAT:\n        return model.context.MIRRORED_REPEAT;\n      default:\n        return model.context.CLAMP_TO_EDGE;\n    }\n  };\n\n  /**\n   * Updates the data array to match the required data type for OpenGL.\n   *\n   * This function takes the input data and converts it to the appropriate\n   * format required by the OpenGL texture, based on the specified data type.\n   *\n   * @param {string} dataType - The original data type of the input data.\n   * @param {Array} data - The input data array that needs to be updated.\n   * @param {boolean} [depth=false] - Indicates whether the data is a 3D array.\n   * @returns {Array} The updated data array that matches the OpenGL data type.\n   */\n  publicAPI.updateArrayDataTypeForGL = function (dataType, data) {\n    let depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const pixData = [];\n    let pixCount = model.width * model.height * model.components;\n    if (depth) {\n      pixCount *= model.depth;\n    }\n\n    // if the opengl data type is float\n    // then the data array must be float\n    if (dataType !== VtkDataTypes.FLOAT && model.openGLDataType === model.context.FLOAT) {\n      for (let idx = 0; idx < data.length; idx++) {\n        if (data[idx]) {\n          const dataArrayToCopy = data[idx].length > pixCount ? data[idx].subarray(0, pixCount) : data[idx];\n          pixData.push(new Float32Array(dataArrayToCopy));\n        } else {\n          pixData.push(null);\n        }\n      }\n    }\n\n    // if the opengl data type is ubyte\n    // then the data array must be u8, we currently simply truncate the data\n    if (dataType !== VtkDataTypes.UNSIGNED_CHAR && model.openGLDataType === model.context.UNSIGNED_BYTE) {\n      for (let idx = 0; idx < data.length; idx++) {\n        if (data[idx]) {\n          const dataArrayToCopy = data[idx].length > pixCount ? data[idx].subarray(0, pixCount) : data[idx];\n          pixData.push(new Uint8Array(dataArrayToCopy));\n        } else {\n          pixData.push(null);\n        }\n      }\n    }\n\n    // if the opengl data type is half float\n    // then the data array must be u16\n    let halfFloat = false;\n    if (model._openGLRenderWindow.getWebgl2()) {\n      halfFloat = model.openGLDataType === model.context.HALF_FLOAT;\n    } else {\n      const halfFloatExt = model.context.getExtension('OES_texture_half_float');\n      halfFloat = halfFloatExt && model.openGLDataType === halfFloatExt.HALF_FLOAT_OES;\n    }\n    if (halfFloat) {\n      for (let idx = 0; idx < data.length; idx++) {\n        if (data[idx]) {\n          const newArray = new Uint16Array(pixCount);\n          const src = data[idx];\n          for (let i = 0; i < pixCount; i++) {\n            newArray[i] = toHalf(src[i]);\n          }\n          pixData.push(newArray);\n        } else {\n          pixData.push(null);\n        }\n      }\n    }\n\n    // The output has to be filled\n    if (pixData.length === 0) {\n      for (let i = 0; i < data.length; i++) {\n        pixData.push(data[i]);\n      }\n    }\n    return pixData;\n  };\n\n  //----------------------------------------------------------------------------\n  function scaleTextureToHighestPowerOfTwo(data) {\n    if (model._openGLRenderWindow.getWebgl2()) {\n      // No need if webGL2\n      return data;\n    }\n    const pixData = [];\n    const width = model.width;\n    const height = model.height;\n    const numComps = model.components;\n    if (data && (!isPowerOfTwo(width) || !isPowerOfTwo(height))) {\n      // Scale up the texture to the next highest power of two dimensions.\n      const halfFloat = model.context.getExtension('OES_texture_half_float');\n      const newWidth = nearestPowerOfTwo(width);\n      const newHeight = nearestPowerOfTwo(height);\n      const pixCount = newWidth * newHeight * model.components;\n      for (let idx = 0; idx < data.length; idx++) {\n        if (data[idx] !== null) {\n          let newArray = null;\n          const jFactor = height / newHeight;\n          const iFactor = width / newWidth;\n          let usingHalf = false;\n          if (model.openGLDataType === model.context.FLOAT) {\n            newArray = new Float32Array(pixCount);\n          } else if (halfFloat && model.openGLDataType === halfFloat.HALF_FLOAT_OES) {\n            newArray = new Uint16Array(pixCount);\n            usingHalf = true;\n          } else {\n            newArray = new Uint8Array(pixCount);\n          }\n          for (let j = 0; j < newHeight; j++) {\n            const joff = j * newWidth * numComps;\n            const jidx = j * jFactor;\n            let jlow = Math.floor(jidx);\n            let jhi = Math.ceil(jidx);\n            if (jhi >= height) {\n              jhi = height - 1;\n            }\n            const jmix = jidx - jlow;\n            const jmix1 = 1.0 - jmix;\n            jlow = jlow * width * numComps;\n            jhi = jhi * width * numComps;\n            for (let i = 0; i < newWidth; i++) {\n              const ioff = i * numComps;\n              const iidx = i * iFactor;\n              let ilow = Math.floor(iidx);\n              let ihi = Math.ceil(iidx);\n              if (ihi >= width) {\n                ihi = width - 1;\n              }\n              const imix = iidx - ilow;\n              ilow *= numComps;\n              ihi *= numComps;\n              for (let c = 0; c < numComps; c++) {\n                if (usingHalf) {\n                  newArray[joff + ioff + c] = HalfFloat.toHalf(HalfFloat.fromHalf(data[idx][jlow + ilow + c]) * jmix1 * (1.0 - imix) + HalfFloat.fromHalf(data[idx][jlow + ihi + c]) * jmix1 * imix + HalfFloat.fromHalf(data[idx][jhi + ilow + c]) * jmix * (1.0 - imix) + HalfFloat.fromHalf(data[idx][jhi + ihi + c]) * jmix * imix);\n                } else {\n                  newArray[joff + ioff + c] = data[idx][jlow + ilow + c] * jmix1 * (1.0 - imix) + data[idx][jlow + ihi + c] * jmix1 * imix + data[idx][jhi + ilow + c] * jmix * (1.0 - imix) + data[idx][jhi + ihi + c] * jmix * imix;\n                }\n              }\n            }\n          }\n          pixData.push(newArray);\n          model.width = newWidth;\n          model.height = newHeight;\n        } else {\n          pixData.push(null);\n        }\n      }\n    }\n\n    // The output has to be filled\n    if (pixData.length === 0) {\n      for (let i = 0; i < data.length; i++) {\n        pixData.push(data[i]);\n      }\n    }\n    return pixData;\n  }\n\n  //----------------------------------------------------------------------------\n  function useTexStorage(dataType) {\n    if (model._openGLRenderWindow) {\n      if (model.resizable || model.renderable?.getResizable()) {\n        // Cannot use texStorage if the texture is supposed to be resizable.\n        return false;\n      }\n      if (model._openGLRenderWindow.getWebgl2()) {\n        const webGLInfo = model._openGLRenderWindow.getGLInformations();\n        if (webGLInfo.RENDERER.value.match(/WebKit/gi) && navigator.platform.match(/Mac/gi) && getNorm16Ext() && (dataType === VtkDataTypes.UNSIGNED_SHORT || dataType === VtkDataTypes.SHORT)) {\n          // Cannot use texStorage with EXT_texture_norm16 textures on Mac M1 GPU.\n          // No errors reported but the texture is unusable.\n          return false;\n        }\n        // Use texStorage for WebGL2\n        return true;\n      }\n      return false;\n    }\n    return false;\n  }\n\n  //----------------------------------------------------------------------------\n  publicAPI.create2DFromRaw = function (width, height, numComps, dataType, data) {\n    let flip = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    // Now determine the texture parameters using the arguments.\n    publicAPI.getOpenGLDataType(dataType, true);\n    publicAPI.getInternalFormat(dataType, numComps);\n    publicAPI.getFormat(dataType, numComps);\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n    model.target = model.context.TEXTURE_2D;\n    model.components = numComps;\n    model.width = width;\n    model.height = height;\n    model.depth = 1;\n    model.numberOfDimensions = 2;\n    model._openGLRenderWindow.activateTexture(publicAPI);\n    publicAPI.createTexture();\n    publicAPI.bind();\n\n    // Create an array of texture with one texture\n    const dataArray = [data];\n    const pixData = publicAPI.updateArrayDataTypeForGL(dataType, dataArray);\n    const scaledData = scaleTextureToHighestPowerOfTwo(pixData);\n\n    // Source texture data from the PBO.\n    model.context.pixelStorei(model.context.UNPACK_FLIP_Y_WEBGL, flip);\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\n    if (useTexStorage(dataType)) {\n      model.context.texStorage2D(model.target, 1, model.internalFormat, model.width, model.height);\n      if (scaledData[0] != null) {\n        model.context.texSubImage2D(model.target, 0, 0, 0, model.width, model.height, model.format, model.openGLDataType, scaledData[0]);\n      }\n    } else {\n      model.context.texImage2D(model.target, 0, model.internalFormat, model.width, model.height, 0, model.format, model.openGLDataType, scaledData[0]);\n    }\n    if (model.generateMipmap) {\n      model.context.generateMipmap(model.target);\n    }\n\n    // always reset the flip\n    if (flip) {\n      model.context.pixelStorei(model.context.UNPACK_FLIP_Y_WEBGL, false);\n    }\n    model.allocatedGPUMemoryInBytes = model.width * model.height * model.depth * numComps * model._openGLRenderWindow.getDefaultTextureByteSize(dataType, getNorm16Ext(), publicAPI.useHalfFloat());\n    publicAPI.deactivate();\n    return true;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.createCubeFromRaw = (width, height, numComps, dataType, data) => {\n    // Now determine the texture parameters using the arguments.\n    publicAPI.getOpenGLDataType(dataType);\n    publicAPI.getInternalFormat(dataType, numComps);\n    publicAPI.getFormat(dataType, numComps);\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n    model.target = model.context.TEXTURE_CUBE_MAP;\n    model.components = numComps;\n    model.width = width;\n    model.height = height;\n    model.depth = 1;\n    model.numberOfDimensions = 2;\n    model._openGLRenderWindow.activateTexture(publicAPI);\n    model.maxLevel = data.length / 6 - 1;\n    publicAPI.createTexture();\n    publicAPI.bind();\n    const pixData = publicAPI.updateArrayDataTypeForGL(dataType, data);\n    const scaledData = scaleTextureToHighestPowerOfTwo(pixData);\n\n    // invert the data because opengl is messed up with cube maps\n    // and uses the old renderman standard with Y going down\n    // even though it is completely at odds with OpenGL standards\n    const invertedData = [];\n    let widthLevel = model.width;\n    let heightLevel = model.height;\n    for (let i = 0; i < scaledData.length; i++) {\n      if (i % 6 === 0 && i !== 0) {\n        widthLevel /= 2;\n        heightLevel /= 2;\n      }\n      invertedData[i] = newTypedArray(dataType, heightLevel * widthLevel * model.components);\n      for (let y = 0; y < heightLevel; ++y) {\n        const row1 = y * widthLevel * model.components;\n        const row2 = (heightLevel - y - 1) * widthLevel * model.components;\n        invertedData[i].set(scaledData[i].slice(row2, row2 + widthLevel * model.components), row1);\n      }\n    }\n\n    // Source texture data from the PBO.\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\n    if (useTexStorage(dataType)) {\n      model.context.texStorage2D(model.target, 6, model.internalFormat, model.width, model.height);\n    }\n    // We get the 6 images\n    for (let i = 0; i < 6; i++) {\n      // For each mipmap level\n      let j = 0;\n      let w = model.width;\n      let h = model.height;\n      while (w >= 1 && h >= 1) {\n        // In webgl 1, all levels need to be defined. So if the latest level size is\n        // 8x8, we have to add 3 more null textures (4x4, 2x2, 1x1)\n        // In webgl 2, the attribute maxLevel will be use.\n        let tempData = null;\n        if (j <= model.maxLevel) {\n          tempData = invertedData[6 * j + i];\n        }\n        if (useTexStorage(dataType)) {\n          if (tempData != null) {\n            model.context.texSubImage2D(model.context.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, w, h, model.format, model.openGLDataType, tempData);\n          }\n        } else {\n          model.context.texImage2D(model.context.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, model.internalFormat, w, h, 0, model.format, model.openGLDataType, tempData);\n        }\n        j++;\n        w /= 2;\n        h /= 2;\n      }\n    }\n    model.allocatedGPUMemoryInBytes = model.width * model.height * model.depth * numComps * model._openGLRenderWindow.getDefaultTextureByteSize(dataType, getNorm16Ext(), publicAPI.useHalfFloat());\n    // generateMipmap must not be called here because we manually upload all levels\n    // if it is called, all levels will be overwritten\n\n    publicAPI.deactivate();\n    return true;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.createDepthFromRaw = (width, height, dataType, data) => {\n    // Now determine the texture parameters using the arguments.\n    publicAPI.getOpenGLDataType(dataType);\n    model.format = model.context.DEPTH_COMPONENT;\n    if (model._openGLRenderWindow.getWebgl2()) {\n      if (dataType === VtkDataTypes.FLOAT) {\n        model.internalFormat = model.context.DEPTH_COMPONENT32F;\n      } else {\n        model.internalFormat = model.context.DEPTH_COMPONENT16;\n      }\n    } else {\n      model.internalFormat = model.context.DEPTH_COMPONENT;\n    }\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n    model.target = model.context.TEXTURE_2D;\n    model.components = 1;\n    model.width = width;\n    model.height = height;\n    model.depth = 1;\n    model.numberOfDimensions = 2;\n    model._openGLRenderWindow.activateTexture(publicAPI);\n    publicAPI.createTexture();\n    publicAPI.bind();\n\n    // Source texture data from the PBO.\n    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\n    if (useTexStorage(dataType)) {\n      model.context.texStorage2D(model.target, 1, model.internalFormat, model.width, model.height);\n      if (data != null) {\n        model.context.texSubImage2D(model.target, 0, 0, 0, model.width, model.height, model.format, model.openGLDataType, data);\n      }\n    } else {\n      model.context.texImage2D(model.target, 0, model.internalFormat, model.width, model.height, 0, model.format, model.openGLDataType, data);\n    }\n    if (model.generateMipmap) {\n      model.context.generateMipmap(model.target);\n    }\n    model.allocatedGPUMemoryInBytes = model.width * model.height * model.depth * model.components * model._openGLRenderWindow.getDefaultTextureByteSize(dataType, getNorm16Ext(), publicAPI.useHalfFloat());\n    publicAPI.deactivate();\n    return true;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.create2DFromImage = image => {\n    // Now determine the texture parameters using the arguments.\n    publicAPI.getOpenGLDataType(VtkDataTypes.UNSIGNED_CHAR);\n    publicAPI.getInternalFormat(VtkDataTypes.UNSIGNED_CHAR, 4);\n    publicAPI.getFormat(VtkDataTypes.UNSIGNED_CHAR, 4);\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n    model.target = model.context.TEXTURE_2D;\n    model.components = 4;\n    model.depth = 1;\n    model.numberOfDimensions = 2;\n    model._openGLRenderWindow.activateTexture(publicAPI);\n    publicAPI.createTexture();\n    publicAPI.bind();\n\n    // Source texture data from the PBO.\n    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\n\n    // Scale up the texture to the next highest power of two dimensions (if needed) and flip y.\n    const needNearestPowerOfTwo = !model._openGLRenderWindow.getWebgl2() && (!isPowerOfTwo(image.width) || !isPowerOfTwo(image.height));\n    const canvas = document.createElement('canvas');\n    canvas.width = needNearestPowerOfTwo ? nearestPowerOfTwo(image.width) : image.width;\n    canvas.height = needNearestPowerOfTwo ? nearestPowerOfTwo(image.height) : image.height;\n    model.width = canvas.width;\n    model.height = canvas.height;\n    const ctx = canvas.getContext('2d');\n    ctx.translate(0, canvas.height);\n    ctx.scale(1, -1);\n    ctx.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\n    const safeImage = canvas;\n    if (useTexStorage(VtkDataTypes.UNSIGNED_CHAR)) {\n      model.context.texStorage2D(model.target, 1, model.internalFormat, model.width, model.height);\n      if (safeImage != null) {\n        model.context.texSubImage2D(model.target, 0, 0, 0, model.width, model.height, model.format, model.openGLDataType, safeImage);\n      }\n    } else {\n      model.context.texImage2D(model.target, 0, model.internalFormat, model.width, model.height, 0, model.format, model.openGLDataType, safeImage);\n    }\n    if (model.generateMipmap) {\n      model.context.generateMipmap(model.target);\n    }\n    model.allocatedGPUMemoryInBytes = model.width * model.height * model.depth * model.components * model._openGLRenderWindow.getDefaultTextureByteSize(VtkDataTypes.UNSIGNED_CHAR, getNorm16Ext(), publicAPI.useHalfFloat());\n    publicAPI.deactivate();\n    return true;\n  };\n\n  // Compute scale and offset per component from min and max per component\n  function computeScaleOffsets(min, max, numComps) {\n    const offset = new Array(numComps);\n    const scale = new Array(numComps);\n    for (let c = 0; c < numComps; ++c) {\n      offset[c] = min[c];\n      scale[c] = max[c] - min[c] || 1.0;\n    }\n    return {\n      scale,\n      offset\n    };\n  }\n\n  // HalfFloat only represents numbers between [-2048, 2048] exactly accurate,\n  // for numbers outside of this range there is a precision limitation\n  function hasExactHalfFloat(offset, scale) {\n    // Per Component\n    for (let c = 0; c < offset.length; c++) {\n      const min = offset[c];\n      const max = scale[c] + min;\n      if (min < -2048 || min > 2048 || max < -2048 || max > 2048) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function setCanUseHalfFloat(dataType, offset, scale, preferSizeOverAccuracy) {\n    publicAPI.getOpenGLDataType(dataType);\n\n    // Don't consider halfFloat and convert back to Float when the range of data does not generate an accurate halfFloat\n    // AND it is not preferable to have a smaller texture than an exact texture.\n    const isExactHalfFloat = hasExactHalfFloat(offset, scale) || preferSizeOverAccuracy;\n    let useHalfFloat = false;\n    if (model._openGLRenderWindow.getWebgl2()) {\n      // If OES_texture_float_linear is not available, and using a half float would still be exact, force half floats\n      // This is because half floats are always texture filterable in webgl2, while full *32F floats are not (unless the extension is present)\n      const forceHalfFloat = model.openGLDataType === model.context.FLOAT && model.context.getExtension('OES_texture_float_linear') === null && isExactHalfFloat;\n      useHalfFloat = forceHalfFloat || model.openGLDataType === model.context.HALF_FLOAT;\n    } else {\n      const halfFloatExt = model.context.getExtension('OES_texture_half_float');\n      useHalfFloat = halfFloatExt && model.openGLDataType === halfFloatExt.HALF_FLOAT_OES;\n    }\n    model.canUseHalfFloat = useHalfFloat && isExactHalfFloat;\n  }\n  function processDataArray(dataArray, preferSizeOverAccuracy) {\n    const numComps = dataArray.getNumberOfComponents();\n    const dataType = dataArray.getDataType();\n    const data = dataArray.getData();\n\n    // Compute min max from array\n    // Using the vtkDataArray.getRange() enables caching\n    const minArray = new Array(numComps);\n    const maxArray = new Array(numComps);\n    for (let c = 0; c < numComps; ++c) {\n      const [min, max] = dataArray.getRange(c);\n      minArray[c] = min;\n      maxArray[c] = max;\n    }\n    const scaleOffsets = computeScaleOffsets(minArray, maxArray, numComps);\n\n    // preferSizeOverAccuracy will override norm16 due to bug with norm16 implementation\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1408247\n    setCanUseHalfFloat(dataType, scaleOffsets.offset, scaleOffsets.scale, preferSizeOverAccuracy);\n\n    // since our default is to use half float, in case that we can't use it\n    // we need to use another type\n    if (!publicAPI.useHalfFloat()) {\n      publicAPI.getOpenGLDataType(dataType, true);\n    }\n    return {\n      numComps,\n      dataType,\n      data,\n      scaleOffsets\n    };\n  }\n  publicAPI.create2DFilterableFromRaw = function (width, height, numberOfComponents, dataType, values) {\n    let preferSizeOverAccuracy = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    return publicAPI.create2DFilterableFromDataArray(width, height, vtkDataArray.newInstance({\n      numberOfComponents,\n      dataType,\n      values\n    }), preferSizeOverAccuracy);\n  };\n  publicAPI.create2DFilterableFromDataArray = function (width, height, dataArray) {\n    let preferSizeOverAccuracy = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    const {\n      numComps,\n      dataType,\n      data\n    } = processDataArray(dataArray, preferSizeOverAccuracy);\n    publicAPI.create2DFromRaw(width, height, numComps, dataType, data);\n  };\n  publicAPI.updateVolumeInfoForGL = (dataType, numComps) => {\n    let isScalingApplied = false;\n    const useHalfFloat = publicAPI.useHalfFloat();\n\n    // Initialize volume info if it doesn't exist\n    if (!model.volumeInfo?.scale || !model.volumeInfo?.offset) {\n      model.volumeInfo = {\n        scale: new Array(numComps),\n        offset: new Array(numComps)\n      };\n    }\n\n    // Default scaling and offset\n    for (let c = 0; c < numComps; ++c) {\n      model.volumeInfo.scale[c] = 1.0;\n      model.volumeInfo.offset[c] = 0.0;\n    }\n\n    // Handle SHORT data type with EXT_texture_norm16 extension\n    if (getNorm16Ext() && !useHalfFloat && dataType === VtkDataTypes.SHORT) {\n      for (let c = 0; c < numComps; ++c) {\n        model.volumeInfo.scale[c] = 32767.0; // Scale to [-1, 1] range\n      }\n\n      isScalingApplied = true;\n    }\n\n    // Handle UNSIGNED_SHORT data type with EXT_texture_norm16 extension\n    if (getNorm16Ext() && !useHalfFloat && dataType === VtkDataTypes.UNSIGNED_SHORT) {\n      for (let c = 0; c < numComps; ++c) {\n        model.volumeInfo.scale[c] = 65535.0; // Scale to [0, 1] range\n      }\n\n      isScalingApplied = true;\n    }\n\n    // Handle UNSIGNED_CHAR data type\n    if (dataType === VtkDataTypes.UNSIGNED_CHAR) {\n      for (let c = 0; c < numComps; ++c) {\n        model.volumeInfo.scale[c] = 255.0; // Scale to [0, 1] range\n      }\n\n      isScalingApplied = true;\n    }\n\n    // No scaling needed for FLOAT or HalfFloat (SHORT/UNSIGNED_SHORT)\n    if (dataType === VtkDataTypes.FLOAT || useHalfFloat && (dataType === VtkDataTypes.SHORT || dataType === VtkDataTypes.UNSIGNED_SHORT)) {\n      isScalingApplied = true;\n    }\n    return isScalingApplied;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.create3DFromRaw = (width, height, depth, numComps, dataType, data) => {\n    let dataTypeToUse = dataType;\n    let dataToUse = data;\n    if (!publicAPI.updateVolumeInfoForGL(dataTypeToUse, numComps) && dataToUse) {\n      const numPixelsIn = width * height * depth;\n      const scaleOffsetsCopy = structuredClone(model.volumeInfo);\n      // otherwise convert to float\n      const newArray = new Float32Array(numPixelsIn * numComps);\n      // use computed scale and offset\n      model.volumeInfo.offset = scaleOffsetsCopy.offset;\n      model.volumeInfo.scale = scaleOffsetsCopy.scale;\n      let count = 0;\n      const scaleInverse = scaleOffsetsCopy.scale.map(s => 1 / s);\n      for (let i = 0; i < numPixelsIn; i++) {\n        for (let nc = 0; nc < numComps; nc++) {\n          newArray[count] = (dataToUse[count] - scaleOffsetsCopy.offset[nc]) * scaleInverse[nc];\n          count++;\n        }\n      }\n      dataTypeToUse = VtkDataTypes.FLOAT;\n      dataToUse = newArray;\n    }\n\n    // Permit OpenGLDataType to be half float, if applicable, for 3D\n    publicAPI.getOpenGLDataType(dataTypeToUse);\n\n    // Now determine the texture parameters using the arguments.\n    publicAPI.getInternalFormat(dataTypeToUse, numComps);\n    publicAPI.getFormat(dataTypeToUse, numComps);\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n    model.target = model.context.TEXTURE_3D;\n    model.components = numComps;\n    model.width = width;\n    model.height = height;\n    model.depth = depth;\n    model.numberOfDimensions = 3;\n    model._openGLRenderWindow.activateTexture(publicAPI);\n    publicAPI.createTexture();\n    publicAPI.bind();\n    // Create an array of texture with one texture\n    const dataArray = [dataToUse];\n    const is3DArray = true;\n    const pixData = publicAPI.updateArrayDataTypeForGL(dataTypeToUse, dataArray, is3DArray);\n    const scaledData = scaleTextureToHighestPowerOfTwo(pixData);\n\n    // Source texture data from the PBO.\n    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\n\n    // openGLDataType\n\n    if (useTexStorage(dataTypeToUse)) {\n      model.context.texStorage3D(model.target, 1, model.internalFormat, model.width, model.height, model.depth);\n      if (scaledData[0] != null) {\n        model.context.texSubImage3D(model.target, 0, 0, 0, 0, model.width, model.height, model.depth, model.format, model.openGLDataType, scaledData[0]);\n      }\n    } else {\n      model.context.texImage3D(model.target, 0, model.internalFormat, model.width, model.height, model.depth, 0, model.format, model.openGLDataType, scaledData[0]);\n    }\n    if (model.generateMipmap) {\n      model.context.generateMipmap(model.target);\n    }\n    model.allocatedGPUMemoryInBytes = model.width * model.height * model.depth * model.components * model._openGLRenderWindow.getDefaultTextureByteSize(dataTypeToUse, getNorm16Ext(), publicAPI.useHalfFloat());\n    publicAPI.deactivate();\n    return true;\n  };\n\n  //----------------------------------------------------------------------------\n  // This method simulates a 3D texture using 2D\n  // Prefer create3DFilterableFromDataArray to enable caching of min and max values\n  publicAPI.create3DFilterableFromRaw = function (width, height, depth, numberOfComponents, dataType, values) {\n    let preferSizeOverAccuracy = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n    return publicAPI.create3DFilterableFromDataArray(width, height, depth, vtkDataArray.newInstance({\n      numberOfComponents,\n      dataType,\n      values\n    }), preferSizeOverAccuracy);\n  };\n\n  //----------------------------------------------------------------------------\n  // This method create a 3D texture from dimensions and a DataArray\n  publicAPI.create3DFilterableFromDataArray = function (width, height, depth, dataArray) {\n    let preferSizeOverAccuracy = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    const {\n      numComps,\n      dataType,\n      data,\n      scaleOffsets\n    } = processDataArray(dataArray, preferSizeOverAccuracy);\n    const offset = [];\n    const scale = [];\n    for (let c = 0; c < numComps; ++c) {\n      offset[c] = 0.0;\n      scale[c] = 1.0;\n    }\n\n    // store the information, we will need it later\n    // offset and scale are the offset and scale required to get\n    // the texture value back to data values ala\n    // data = texture * scale + offset\n    // and texture = (data - offset)/scale\n    model.volumeInfo = {\n      scale,\n      offset,\n      dataComputedScale: scaleOffsets.scale,\n      dataComputedOffset: scaleOffsets.offset,\n      width,\n      height,\n      depth\n    };\n\n    // Create a copy of scale and offset to avoid aliasing issues\n    // Original is read only, copy is read/write\n    // Use the copy as volumeInfo.scale and volumeInfo.offset\n\n    // WebGL2 path, we have 3d textures etc\n    if (model._openGLRenderWindow.getWebgl2()) {\n      return publicAPI.create3DFromRaw(width, height, depth, numComps, dataType, data);\n    }\n    const numPixelsIn = width * height * depth;\n    const scaleOffsetsCopy = structuredClone(scaleOffsets);\n\n    // not webgl2, deal with webgl1, no 3d textures\n    // and maybe no float textures\n\n    let volCopyData = (outArray, outIdx, inValue, smin, smax) => {\n      outArray[outIdx] = inValue;\n    };\n    let dataTypeToUse = VtkDataTypes.UNSIGNED_CHAR;\n    // unsigned char gets used as is\n    if (dataType === VtkDataTypes.UNSIGNED_CHAR) {\n      for (let c = 0; c < numComps; ++c) {\n        scaleOffsetsCopy.offset[c] = 0.0;\n        scaleOffsetsCopy.scale[c] = 255.0;\n      }\n    } else if (model.context.getExtension('OES_texture_float') && model.context.getExtension('OES_texture_float_linear')) {\n      // use float textures scaled to 0.0 to 1.0\n      dataTypeToUse = VtkDataTypes.FLOAT;\n      volCopyData = (outArray, outIdx, inValue, soffset, sscale) => {\n        outArray[outIdx] = (inValue - soffset) / sscale;\n      };\n    } else {\n      // worst case, scale data to uchar\n      dataTypeToUse = VtkDataTypes.UNSIGNED_CHAR;\n      volCopyData = (outArray, outIdx, inValue, soffset, sscale) => {\n        outArray[outIdx] = 255.0 * (inValue - soffset) / sscale;\n      };\n    }\n\n    // Now determine the texture parameters using the arguments.\n    publicAPI.getOpenGLDataType(dataTypeToUse);\n    publicAPI.getInternalFormat(dataTypeToUse, numComps);\n    publicAPI.getFormat(dataTypeToUse, numComps);\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n\n    // have to pack this 3D texture into pot 2D texture\n    model.target = model.context.TEXTURE_2D;\n    model.components = numComps;\n    model.depth = 1;\n    model.numberOfDimensions = 2;\n\n    // MAX_TEXTURE_SIZE gives the max dimensions that can be supported by the GPU,\n    // but it doesn't mean it will fit in memory. If we have to use a float data type\n    // or 4 components, there are good chances that the texture size will blow up\n    // and could not fit in the GPU memory. Use a smaller texture size in that case,\n    // which will force a downsampling of the dataset.\n    // That problem does not occur when using webGL2 since we can pack the data in\n    // denser textures based on our data type.\n    // TODO: try to fit in the biggest supported texture, catch the gl error if it\n    // does not fix (OUT_OF_MEMORY), then attempt with smaller texture\n    let maxTexDim = model.context.getParameter(model.context.MAX_TEXTURE_SIZE);\n    if (maxTexDim > 4096 && (dataTypeToUse === VtkDataTypes.FLOAT || numComps >= 3)) {\n      maxTexDim = 4096;\n    }\n\n    // compute estimate for XY subsample\n    let xstride = 1;\n    let ystride = 1;\n    if (numPixelsIn > maxTexDim * maxTexDim) {\n      xstride = Math.ceil(Math.sqrt(numPixelsIn / (maxTexDim * maxTexDim)));\n      ystride = xstride;\n    }\n    let targetWidth = Math.sqrt(numPixelsIn) / xstride;\n    targetWidth = nearestPowerOfTwo(targetWidth);\n    // determine X reps\n    const xreps = Math.floor(targetWidth * xstride / width);\n    const yreps = Math.ceil(depth / xreps);\n    const targetHeight = nearestPowerOfTwo(height * yreps / ystride);\n    model.width = targetWidth;\n    model.height = targetHeight;\n    model._openGLRenderWindow.activateTexture(publicAPI);\n    publicAPI.createTexture();\n    publicAPI.bind();\n\n    // store the information, we will need it later\n    model.volumeInfo.xreps = xreps;\n    model.volumeInfo.yreps = yreps;\n    model.volumeInfo.xstride = xstride;\n    model.volumeInfo.ystride = ystride;\n    model.volumeInfo.offset = scaleOffsetsCopy.offset;\n    model.volumeInfo.scale = scaleOffsetsCopy.scale;\n\n    // OK stuff the data into the 2d TEXTURE\n\n    // first allocate the new texture\n    let newArray;\n    const pixCount = targetWidth * targetHeight * numComps;\n    if (dataTypeToUse === VtkDataTypes.FLOAT) {\n      newArray = new Float32Array(pixCount);\n    } else {\n      newArray = new Uint8Array(pixCount);\n    }\n\n    // then stuff the data into it, nothing fancy right now\n    // for stride\n    let outIdx = 0;\n    const tileWidth = Math.floor(width / xstride);\n    const tileHeight = Math.floor(height / ystride);\n    for (let yRep = 0; yRep < yreps; yRep++) {\n      const xrepsThisRow = Math.min(xreps, depth - yRep * xreps);\n      const outXContIncr = numComps * (model.width - xrepsThisRow * Math.floor(width / xstride));\n      for (let tileY = 0; tileY < tileHeight; tileY++) {\n        for (let xRep = 0; xRep < xrepsThisRow; xRep++) {\n          const inOffset = numComps * ((yRep * xreps + xRep) * width * height + ystride * tileY * width);\n          for (let tileX = 0; tileX < tileWidth; tileX++) {\n            // copy value\n            for (let nc = 0; nc < numComps; nc++) {\n              volCopyData(newArray, outIdx, data[inOffset + xstride * tileX * numComps + nc], scaleOffsetsCopy.offset[nc], scaleOffsetsCopy.scale[nc]);\n              outIdx++;\n            }\n          }\n        }\n        outIdx += outXContIncr;\n      }\n    }\n\n    // Source texture data from the PBO.\n    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\n    if (useTexStorage(dataTypeToUse)) {\n      model.context.texStorage2D(model.target, 1, model.internalFormat, model.width, model.height);\n      if (newArray != null) {\n        model.context.texSubImage2D(model.target, 0, 0, 0, model.width, model.height, model.format, model.openGLDataType, newArray);\n      }\n    } else {\n      model.context.texImage2D(model.target, 0, model.internalFormat, model.width, model.height, 0, model.format, model.openGLDataType, newArray);\n    }\n    publicAPI.deactivate();\n    return true;\n  };\n  publicAPI.setOpenGLRenderWindow = rw => {\n    if (model._openGLRenderWindow === rw) {\n      return;\n    }\n    publicAPI.releaseGraphicsResources();\n    model._openGLRenderWindow = rw;\n    model.context = null;\n    if (rw) {\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getMaximumTextureSize = ctx => {\n    if (ctx && ctx.isCurrent()) {\n      return ctx.getIntegerv(ctx.MAX_TEXTURE_SIZE);\n    }\n    return -1;\n  };\n\n  // set use half float\n  publicAPI.enableUseHalfFloat = use => {\n    model.enableUseHalfFloat = use;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  _openGLRenderWindow: null,\n  _forceInternalFormat: false,\n  context: null,\n  handle: 0,\n  sendParametersTime: null,\n  textureBuildTime: null,\n  numberOfDimensions: 0,\n  target: 0,\n  format: 0,\n  openGLDataType: 0,\n  components: 0,\n  width: 0,\n  height: 0,\n  depth: 0,\n  autoParameters: true,\n  wrapS: Wrap.CLAMP_TO_EDGE,\n  wrapT: Wrap.CLAMP_TO_EDGE,\n  wrapR: Wrap.CLAMP_TO_EDGE,\n  minificationFilter: Filter.NEAREST,\n  magnificationFilter: Filter.NEAREST,\n  minLOD: -1000.0,\n  maxLOD: 1000.0,\n  baseLevel: 0,\n  maxLevel: 1000,\n  generateMipmap: false,\n  oglNorm16Ext: null,\n  allocatedGPUMemoryInBytes: 0,\n  // by default it is enabled\n  enableUseHalfFloat: true,\n  // but by default we don't know if we can use half float base on the data range\n  canUseHalfFloat: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.sendParametersTime = {};\n  obj(model.sendParametersTime, {\n    mtime: 0\n  });\n  model.textureBuildTime = {};\n  obj(model.textureBuildTime, {\n    mtime: 0\n  });\n\n  // Build VTK API\n  set(publicAPI, model, ['format', 'openGLDataType']);\n  setGet(publicAPI, model, ['keyMatrixTime', 'minificationFilter', 'magnificationFilter', 'wrapS', 'wrapT', 'wrapR', 'generateMipmap', 'oglNorm16Ext']);\n  get(publicAPI, model, ['width', 'height', 'volumeInfo', 'components', 'handle', 'target', 'allocatedGPUMemoryInBytes']);\n  moveToProtected(publicAPI, model, ['openGLRenderWindow']);\n\n  // Object methods\n  vtkOpenGLTexture(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkOpenGLTexture');\n\n// ----------------------------------------------------------------------------\n\nvar vtkOpenGLTexture$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkTexture', newInstance);\n\nexport { vtkOpenGLTexture$1 as default, extend, newInstance };\n","const CoordinateSystem = {\n  DISPLAY: 0,\n  WORLD: 1\n};\nvar Constants = {\n  CoordinateSystem\n};\n\nexport { CoordinateSystem, Constants as default };\n","import { m as macro } from '../../macros2.js';\nimport Constants from './Prop/Constants.js';\n\nconst {\n  CoordinateSystem\n} = Constants;\nfunction notImplemented(method) {\n  return () => macro.vtkErrorMacro(`vtkProp::${method} - NOT IMPLEMENTED`);\n}\n\n// ----------------------------------------------------------------------------\n// vtkProp methods\n// ----------------------------------------------------------------------------\n\nfunction vtkProp(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkProp');\n  publicAPI.getMTime = () => {\n    let m1 = model.mtime;\n    for (let index = 0; index < model.textures.length; ++index) {\n      const m2 = model.textures[index].getMTime();\n      if (m2 > m1) {\n        m1 = m2;\n      }\n    }\n    return m1;\n  };\n  publicAPI.processSelectorPixelBuffers = (selector, pixeloffsets) => {};\n  publicAPI.getNestedProps = () => null;\n  publicAPI.getActors = () => [];\n  publicAPI.getActors2D = () => [];\n  publicAPI.getVolumes = () => [];\n  publicAPI.pick = notImplemented('pick');\n  publicAPI.hasKey = notImplemented('hasKey');\n  publicAPI.getNestedVisibility = () => model.visibility && (!model._parentProp || model._parentProp.getNestedVisibility());\n  publicAPI.getNestedPickable = () => model.pickable && (!model._parentProp || model._parentProp.getNestedPickable());\n  publicAPI.getNestedDragable = () => model.dragable && (!model._parentProp || model._parentProp.getNestedDragable());\n  publicAPI.getRedrawMTime = () => model.mtime;\n  publicAPI.setEstimatedRenderTime = t => {\n    model.estimatedRenderTime = t;\n    model.savedEstimatedRenderTime = t;\n  };\n  publicAPI.restoreEstimatedRenderTime = () => {\n    model.estimatedRenderTime = model.savedEstimatedRenderTime;\n  };\n  publicAPI.addEstimatedRenderTime = t => {\n    model.estimatedRenderTime += t;\n  };\n  publicAPI.setAllocatedRenderTime = t => {\n    model.allocatedRenderTime = t;\n    model.savedEstimatedRenderTime = model.estimatedRenderTime;\n    model.estimatedRenderTime = 0;\n  };\n  publicAPI.getSupportsSelection = () => false;\n  publicAPI.getTextures = () => model.textures;\n  publicAPI.hasTexture = texture => model.textures.indexOf(texture) !== -1;\n  publicAPI.addTexture = texture => {\n    if (texture && !publicAPI.hasTexture(texture)) {\n      model.textures = model.textures.concat(texture);\n      publicAPI.modified();\n    }\n  };\n  publicAPI.removeTexture = texture => {\n    const newTextureList = model.textures.filter(item => item !== texture);\n    if (model.textures.length !== newTextureList.length) {\n      model.textures = newTextureList;\n      publicAPI.modified();\n    }\n  };\n  publicAPI.removeAllTextures = () => {\n    model.textures = [];\n    publicAPI.modified();\n  };\n\n  // not all mappers support all coordinate systems\n  publicAPI.setCoordinateSystemToWorld = () => publicAPI.setCoordinateSystem(CoordinateSystem.WORLD);\n  publicAPI.setCoordinateSystemToDisplay = () => publicAPI.setCoordinateSystem(CoordinateSystem.DISPLAY);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // _parentProp: null,\n  allocatedRenderTime: 10,\n  coordinateSystem: CoordinateSystem.WORLD,\n  dragable: true,\n  estimatedRenderTime: 0,\n  paths: null,\n  pickable: true,\n  renderTimeMultiplier: 1,\n  savedEstimatedRenderTime: 0,\n  textures: [],\n  useBounds: true,\n  visibility: true\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['estimatedRenderTime', 'allocatedRenderTime']);\n  macro.setGet(publicAPI, model, ['_parentProp', 'coordinateSystem', 'dragable', 'pickable', 'renderTimeMultiplier', 'useBounds', 'visibility']);\n  macro.moveToProtected(publicAPI, model, ['parentProp']);\n\n  // Object methods\n  vtkProp(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkProp');\n\n// ----------------------------------------------------------------------------\n\nvar vtkProp$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkProp$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport PropertyConst from './Property/Constants.js';\n\nconst {\n  Representation,\n  Interpolation\n} = PropertyConst;\nfunction notImplemented(method) {\n  return () => macro.vtkErrorMacro(`vtkProperty::${method} - NOT IMPLEMENTED`);\n}\n\n// ----------------------------------------------------------------------------\n// vtkProperty methods\n// ----------------------------------------------------------------------------\n\nfunction vtkProperty(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkProperty');\n  publicAPI.setColor = (r, g, b) => {\n    if (Array.isArray(r)) {\n      if (model.color[0] !== r[0] || model.color[1] !== r[1] || model.color[2] !== r[2]) {\n        model.color[0] = r[0];\n        model.color[1] = r[1];\n        model.color[2] = r[2];\n        publicAPI.modified();\n      }\n    } else if (model.color[0] !== r || model.color[1] !== g || model.color[2] !== b) {\n      model.color[0] = r;\n      model.color[1] = g;\n      model.color[2] = b;\n      publicAPI.modified();\n    }\n    publicAPI.setDiffuseColor(model.color);\n    publicAPI.setAmbientColor(model.color);\n    publicAPI.setSpecularColor(model.color);\n  };\n  publicAPI.computeCompositeColor = notImplemented('ComputeCompositeColor');\n  publicAPI.getColor = () => {\n    // Inline computeCompositeColor\n    let norm = 0.0;\n    if (model.ambient + model.diffuse + model.specular > 0) {\n      norm = 1.0 / (model.ambient + model.diffuse + model.specular);\n    }\n    for (let i = 0; i < 3; i++) {\n      model.color[i] = norm * (model.ambient * model.ambientColor[i] + model.diffuse * model.diffuseColor[i] + model.specular * model.specularColor[i]);\n    }\n    return [].concat(model.color);\n  };\n  publicAPI.setSpecularPower = specularPower => {\n    const roughness = 1 / Math.max(1.0, specularPower);\n    if (model.roughness !== roughness || model.specularPower !== specularPower) {\n      model.specularPower = specularPower; // Specular power still needs to be set as long as webgl is using it (otherwise testShaderReplacementsClear fails)\n      model.roughness = roughness;\n      publicAPI.modified();\n    }\n  };\n  publicAPI.addShaderVariable = notImplemented('AddShaderVariable');\n  publicAPI.setInterpolationToFlat = () => publicAPI.setInterpolation(Interpolation.FLAT);\n  publicAPI.setInterpolationToGouraud = () => publicAPI.setInterpolation(Interpolation.GOURAUD);\n  publicAPI.setInterpolationToPhong = () => publicAPI.setInterpolation(Interpolation.PHONG);\n  publicAPI.getInterpolationAsString = () => macro.enumToString(Interpolation, model.interpolation);\n  publicAPI.setRepresentationToWireframe = () => publicAPI.setRepresentation(Representation.WIREFRAME);\n  publicAPI.setRepresentationToSurface = () => publicAPI.setRepresentation(Representation.SURFACE);\n  publicAPI.setRepresentationToPoints = () => publicAPI.setRepresentation(Representation.POINTS);\n  publicAPI.getRepresentationAsString = () => macro.enumToString(Representation, model.representation);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  color: [1, 1, 1],\n  ambientColor: [1, 1, 1],\n  diffuseColor: [1, 1, 1],\n  specularColor: [1, 1, 1],\n  edgeColor: [0, 0, 0],\n  ambient: 0,\n  diffuse: 1,\n  metallic: 0,\n  roughness: 0.6,\n  normalStrength: 1,\n  emission: 1,\n  baseIOR: 1.45,\n  specular: 0,\n  specularPower: 1,\n  opacity: 1,\n  interpolation: Interpolation.GOURAUD,\n  representation: Representation.SURFACE,\n  edgeVisibility: false,\n  backfaceCulling: false,\n  frontfaceCulling: false,\n  pointSize: 1,\n  lineWidth: 1,\n  lighting: true,\n  shading: false,\n  materialName: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['lighting', 'interpolation', 'ambient', 'diffuse', 'metallic', 'roughness', 'normalStrength', 'emission', 'baseIOR', 'specular', 'specularPower', 'opacity', 'edgeVisibility', 'lineWidth', 'pointSize', 'backfaceCulling', 'frontfaceCulling', 'representation', 'diffuseTexture', 'metallicTexture', 'roughnessTexture', 'normalTexture', 'ambientOcclusionTexture', 'emissionTexture']);\n  macro.setGetArray(publicAPI, model, ['ambientColor', 'specularColor', 'diffuseColor', 'edgeColor'], 3);\n\n  // Object methods\n  vtkProperty(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkProperty');\n\n// ----------------------------------------------------------------------------\n\nvar vtkProperty$1 = {\n  newInstance,\n  extend,\n  ...PropertyConst\n};\n\nexport { vtkProperty$1 as default, extend, newInstance };\n","var vtkPolyDataVS = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkPolyDataVS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n\\nattribute vec4 vertexMC;\\n\\n// frag position in VC\\n//VTK::PositionVC::Dec\\n\\n// optional normal declaration\\n//VTK::Normal::Dec\\n\\n// extra lighting parameters\\n//VTK::Light::Dec\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\n// material property values\\n//VTK::Color::Dec\\n\\n// clipping plane vars\\n//VTK::Clip::Dec\\n\\n// camera and actor matrix values\\n//VTK::Camera::Dec\\n\\n// Apple Bug\\n//VTK::PrimID::Dec\\n\\n// picking support\\n//VTK::Picking::Dec\\n\\nvoid main()\\n{\\n  //VTK::Color::Impl\\n\\n  //VTK::Normal::Impl\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::Clip::Impl\\n\\n  //VTK::PrimID::Impl\\n\\n  //VTK::PositionVC::Impl\\n\\n  //VTK::Light::Impl\\n\\n  //VTK::Picking::Impl\\n}\\n\";\n\nexport { vtkPolyDataVS as v };\n","var vtkPolyDataFS = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkPolyDataFS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n// Template for the polydata mappers fragment shader\\n\\nuniform int PrimitiveIDOffset;\\n\\n// VC position of this fragment\\n//VTK::PositionVC::Dec\\n\\n// optional color passed in from the vertex shader, vertexColor\\n//VTK::Color::Dec\\n\\n// optional surface normal declaration\\n//VTK::Normal::Dec\\n\\n// extra lighting parameters\\n//VTK::Light::Dec\\n\\n// define vtkImageLabelOutlineOn\\n//VTK::ImageLabelOutlineOn\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\n// picking support\\n//VTK::Picking::Dec\\n\\n// Depth Peeling Support\\n//VTK::DepthPeeling::Dec\\n\\n// clipping plane vars\\n//VTK::Clip::Dec\\n\\n// label outline \\n//VTK::LabelOutline::Dec\\n\\n// the output of this shader\\n//VTK::Output::Dec\\n\\n// Apple Bug\\n//VTK::PrimID::Dec\\n\\n// handle coincident offsets\\n//VTK::Coincident::Dec\\n\\n//VTK::ZBuffer::Dec\\n\\n//VTK::LabelOutlineHelperFunction\\n\\nvoid main()\\n{\\n  // VC position of this fragment. This should not branch/return/discard.\\n  //VTK::PositionVC::Impl\\n\\n  // Place any calls that require uniform flow (e.g. dFdx) here.\\n  //VTK::UniformFlow::Impl\\n\\n  // Set gl_FragDepth here (gl_FragCoord.z by default)\\n  //VTK::Depth::Impl\\n\\n  // Early depth peeling abort:\\n  //VTK::DepthPeeling::PreColor\\n\\n  // Apple Bug\\n  //VTK::PrimID::Impl\\n\\n  //VTK::Clip::Impl\\n\\n  //VTK::Color::Impl\\n\\n  // Generate the normal if we are not passed in one\\n  //VTK::Normal::Impl\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::Light::Impl\\n\\n  if (gl_FragData[0].a <= 0.0)\\n    {\\n    discard;\\n    }\\n\\n  //VTK::DepthPeeling::Impl\\n\\n  //VTK::Picking::Impl\\n\\n  // handle coincident offsets\\n  //VTK::Coincident::Impl\\n\\n  //VTK::ZBuffer::Impl\\n\\n  //VTK::RenderPassFragmentShader::Impl\\n}\\n\";\n\nexport { vtkPolyDataFS as v };\n","import vtkShaderProgram from './ShaderProgram.js';\n\nfunction implementReplaceShaderCoincidentOffset(publicAPI, model) {\n  publicAPI.replaceShaderCoincidentOffset = (shaders, ren, actor) => {\n    const cp = publicAPI.getCoincidentParameters(ren, actor);\n\n    // if we need an offset handle it here\n    // The value of .000016 is suitable for depth buffers\n    // of at least 16 bit depth. We do not query the depth\n    // right now because we would need some mechanism to\n    // cache the result taking into account FBO changes etc.\n    if (cp && (cp.factor !== 0.0 || cp.offset !== 0.0)) {\n      let FSSource = shaders.Fragment;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Coincident::Dec', ['uniform float cfactor;', 'uniform float coffset;']).result;\n      if (model.context.getExtension('EXT_frag_depth')) {\n        if (cp.factor !== 0.0) {\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::UniformFlow::Impl', ['float cscale = length(vec2(dFdx(gl_FragCoord.z),dFdy(gl_FragCoord.z)));', '//VTK::UniformFlow::Impl'], false).result;\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Depth::Impl', 'gl_FragDepthEXT = gl_FragCoord.z + cfactor*cscale + 0.000016*coffset;').result;\n        } else {\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Depth::Impl', 'gl_FragDepthEXT = gl_FragCoord.z + 0.000016*coffset;').result;\n        }\n      }\n      if (model._openGLRenderWindow.getWebgl2()) {\n        if (cp.factor !== 0.0) {\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::UniformFlow::Impl', ['float cscale = length(vec2(dFdx(gl_FragCoord.z),dFdy(gl_FragCoord.z)));', '//VTK::UniformFlow::Impl'], false).result;\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Depth::Impl', 'gl_FragDepth = gl_FragCoord.z + cfactor*cscale + 0.000016*coffset;').result;\n        } else {\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Depth::Impl', 'gl_FragDepth = gl_FragCoord.z + 0.000016*coffset;').result;\n        }\n      }\n      shaders.Fragment = FSSource;\n    }\n  };\n}\nfunction implementBuildShadersWithReplacements(publicAPI, model) {\n  publicAPI.applyShaderReplacements = (shaders, viewSpec, pre) => {\n    let shaderReplacements = null;\n    if (viewSpec) {\n      shaderReplacements = viewSpec.ShaderReplacements;\n    }\n    if (shaderReplacements) {\n      for (let i = 0; i < shaderReplacements.length; i++) {\n        const currReplacement = shaderReplacements[i];\n        if (pre && currReplacement.replaceFirst || !pre && !currReplacement.replaceFirst) {\n          const shaderType = currReplacement.shaderType;\n          const ssrc = shaders[shaderType];\n          const substituteRes = vtkShaderProgram.substitute(ssrc, currReplacement.originalValue, currReplacement.replacementValue, currReplacement.replaceAll);\n          shaders[shaderType] = substituteRes.result;\n        }\n      }\n    }\n  };\n  publicAPI.buildShaders = (shaders, ren, actor) => {\n    publicAPI.getReplacedShaderTemplate(shaders, ren, actor);\n    model.lastRenderPassShaderReplacement = model.currentRenderPass ? model.currentRenderPass.getShaderReplacement() : null;\n\n    // apply any renderPassReplacements\n    if (model.lastRenderPassShaderReplacement) {\n      model.lastRenderPassShaderReplacement(shaders);\n    }\n    const openGLSpec = model.renderable.getViewSpecificProperties().OpenGL;\n\n    // user specified pre replacements\n    publicAPI.applyShaderReplacements(shaders, openGLSpec, true);\n    publicAPI.replaceShaderValues(shaders, ren, actor);\n\n    // user specified post replacements\n    publicAPI.applyShaderReplacements(shaders, openGLSpec);\n  };\n  publicAPI.getReplacedShaderTemplate = (shaders, ren, actor) => {\n    const openGLSpecProp = model.renderable.getViewSpecificProperties().OpenGL;\n    publicAPI.getShaderTemplate(shaders, ren, actor);\n    let vertexShaderCode = shaders.Vertex;\n    if (openGLSpecProp) {\n      const vertexSpecProp = openGLSpecProp.VertexShaderCode;\n      if (vertexSpecProp !== undefined && vertexSpecProp !== '') {\n        vertexShaderCode = vertexSpecProp;\n      }\n    }\n    shaders.Vertex = vertexShaderCode;\n    let fragmentShaderCode = shaders.Fragment;\n    if (openGLSpecProp) {\n      const fragmentSpecProp = openGLSpecProp.FragmentShaderCode;\n      if (fragmentSpecProp !== undefined && fragmentSpecProp !== '') {\n        fragmentShaderCode = fragmentSpecProp;\n      }\n    }\n    shaders.Fragment = fragmentShaderCode;\n    let geometryShaderCode = shaders.Geometry;\n    if (openGLSpecProp) {\n      const geometrySpecProp = openGLSpecProp.GeometryShaderCode;\n      if (geometrySpecProp !== undefined) {\n        geometryShaderCode = geometrySpecProp;\n      }\n    }\n    shaders.Geometry = geometryShaderCode;\n  };\n}\nvar vtkReplacementShaderMapper = {\n  implementReplaceShaderCoincidentOffset,\n  implementBuildShadersWithReplacements\n};\n\nexport { vtkReplacementShaderMapper as default };\n","import { mat3, mat4, vec3 } from 'gl-matrix';\nimport { n as newInstance$1, e as setGet, o as obj, c as macro } from '../../macros2.js';\nimport vtkHelper from './Helper.js';\nimport vtkMapper from '../Core/Mapper.js';\nimport { l as normalize, u as uninitializeBounds } from '../../Common/Core/Math/index.js';\nimport vtkOpenGLTexture from './Texture.js';\nimport vtkProp from '../Core/Prop.js';\nimport vtkProperty from '../Core/Property.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { v as vtkPolyDataVS } from './glsl/vtkPolyDataVS.glsl.js';\nimport { v as vtkPolyDataFS } from './glsl/vtkPolyDataFS.glsl.js';\nimport vtkReplacementShaderMapper from './ReplacementShaderMapper.js';\nimport { registerOverride } from './ViewNodeFactory.js';\nimport { PassTypes } from './HardwareSelector/Constants.js';\nimport vtkDataSet from '../../Common/DataModel/DataSet.js';\nimport '../Core/Mapper/CoincidentTopologyHelper.js';\nimport { Resolve } from '../Core/Mapper/Static.js';\n\nconst {\n  FieldAssociations\n} = vtkDataSet;\n\n/* eslint-disable no-lonely-if */\n\nconst {\n  primTypes\n} = vtkHelper;\nconst {\n  Representation,\n  Shading\n} = vtkProperty;\nconst {\n  ScalarMode\n} = vtkMapper;\nconst {\n  Filter,\n  Wrap\n} = vtkOpenGLTexture;\nconst {\n  vtkErrorMacro\n} = macro;\nconst StartEvent = {\n  type: 'StartEvent'\n};\nconst EndEvent = {\n  type: 'EndEvent'\n};\nconst {\n  CoordinateSystem\n} = vtkProp;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLPolyDataMapper methods\n// ----------------------------------------------------------------------------\n\nfunction getPickState(renderer) {\n  const selector = renderer.getSelector();\n  if (selector) {\n    return selector.getCurrentPass();\n  }\n  return PassTypes.MIN_KNOWN_PASS - 1;\n}\nfunction vtkOpenGLPolyDataMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLPolyDataMapper');\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model.currentRenderPass = null;\n      model.openGLActor = publicAPI.getFirstAncestorOfType('vtkOpenGLActor');\n      model._openGLRenderer = model.openGLActor.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model._openGLRenderWindow = model._openGLRenderer.getLastAncestorOfType('vtkOpenGLRenderWindow');\n      model.openGLCamera = model._openGLRenderer.getViewNodeFor(model._openGLRenderer.getRenderable().getActiveCamera());\n    }\n  };\n\n  // Renders myself\n  publicAPI.translucentPass = (prepass, renderPass) => {\n    if (prepass) {\n      model.currentRenderPass = renderPass;\n      publicAPI.render();\n    }\n  };\n  publicAPI.zBufferPass = prepass => {\n    if (prepass) {\n      model.haveSeenDepthRequest = true;\n      model.renderDepth = true;\n      publicAPI.render();\n      model.renderDepth = false;\n    }\n  };\n  publicAPI.opaqueZBufferPass = prepass => publicAPI.zBufferPass(prepass);\n  publicAPI.opaquePass = prepass => {\n    if (prepass) {\n      publicAPI.render();\n    }\n  };\n  publicAPI.render = () => {\n    const ctx = model._openGLRenderWindow.getContext();\n    if (model.context !== ctx) {\n      model.context = ctx;\n      for (let i = primTypes.Start; i < primTypes.End; i++) {\n        model.primitives[i].setOpenGLRenderWindow(model._openGLRenderWindow);\n      }\n    }\n    const actor = model.openGLActor.getRenderable();\n    const ren = model._openGLRenderer.getRenderable();\n    publicAPI.renderPiece(ren, actor);\n  };\n  publicAPI.getShaderTemplate = (shaders, ren, actor) => {\n    shaders.Vertex = vtkPolyDataVS;\n    shaders.Fragment = vtkPolyDataFS;\n    shaders.Geometry = '';\n  };\n  publicAPI.replaceShaderColor = (shaders, ren, actor) => {\n    let VSSource = shaders.Vertex;\n    let GSSource = shaders.Geometry;\n    let FSSource = shaders.Fragment;\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n\n    // create the material/color property declarations, and VS implementation\n    // these are always defined\n    let colorDec = ['uniform float ambient;', 'uniform float diffuse;', 'uniform float specular;', 'uniform float opacityUniform; // the fragment opacity', 'uniform vec3 ambientColorUniform;', 'uniform vec3 diffuseColorUniform;'];\n    // add more for specular\n    if (lastLightComplexity) {\n      colorDec = colorDec.concat(['uniform vec3 specularColorUniform;', 'uniform float specularPowerUniform;']);\n    }\n\n    // now handle the more complex fragment shader implementation\n    // the following are always defined variables.  We start\n    // by assigning a default value from the uniform\n    let colorImpl = ['vec3 ambientColor;', '  vec3 diffuseColor;', '  float opacity;'];\n    if (lastLightComplexity) {\n      colorImpl = colorImpl.concat(['  vec3 specularColor;', '  float specularPower;']);\n    }\n    colorImpl = colorImpl.concat(['  ambientColor = ambientColorUniform;', '  diffuseColor = diffuseColorUniform;', '  opacity = opacityUniform;']);\n    if (lastLightComplexity) {\n      colorImpl = colorImpl.concat(['  specularColor = specularColorUniform;', '  specularPower = specularPowerUniform;']);\n    }\n\n    // add scalar vertex coloring\n    if (model.lastBoundBO.getCABO().getColorComponents() !== 0 && !model.drawingEdges) {\n      colorDec = colorDec.concat(['varying vec4 vertexColorVSOutput;']);\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Color::Dec', ['attribute vec4 scalarColor;', 'varying vec4 vertexColorVSOutput;']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Color::Impl', ['vertexColorVSOutput =  scalarColor;']).result;\n      GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Color::Dec', ['in vec4 vertexColorVSOutput[];', 'out vec4 vertexColorGSOutput;']).result;\n      GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Color::Impl', ['vertexColorGSOutput = vertexColorVSOutput[i];']).result;\n    }\n    if (model.lastBoundBO.getCABO().getColorComponents() !== 0 && !model.drawingEdges) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Impl', colorImpl.concat(['  diffuseColor = vertexColorVSOutput.rgb;', '  ambientColor = vertexColorVSOutput.rgb;', '  opacity = opacity*vertexColorVSOutput.a;'])).result;\n    } else {\n      if ((model.renderable.getAreScalarsMappedFromCells() || model.renderable.getInterpolateScalarsBeforeMapping()) && model.renderable.getColorCoordinates() && !model.drawingEdges) {\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Impl', colorImpl.concat(['  vec4 texColor = texture2D(texture1, tcoordVCVSOutput.st);', '  diffuseColor = texColor.rgb;', '  ambientColor = texColor.rgb;', '  opacity = opacity*texColor.a;'])).result;\n      } else {\n        if (actor.getBackfaceProperty() && !model.drawingEdges) {\n          colorDec = colorDec.concat(['uniform float opacityUniformBF; // the fragment opacity', 'uniform float ambientIntensityBF; // the material ambient', 'uniform float diffuseIntensityBF; // the material diffuse', 'uniform vec3 ambientColorUniformBF; // ambient material color', 'uniform vec3 diffuseColorUniformBF; // diffuse material color']);\n          if (lastLightComplexity) {\n            colorDec = colorDec.concat(['uniform float specularIntensityBF; // the material specular intensity', 'uniform vec3 specularColorUniformBF; // intensity weighted color', 'uniform float specularPowerUniformBF;']);\n            colorImpl = colorImpl.concat(['if (gl_FrontFacing == false) {', '  ambientColor = ambientIntensityBF * ambientColorUniformBF;', '  diffuseColor = diffuseIntensityBF * diffuseColorUniformBF;', '  specularColor = specularIntensityBF * specularColorUniformBF;', '  specularPower = specularPowerUniformBF;', '  opacity = opacityUniformBF; }']);\n          } else {\n            colorImpl = colorImpl.concat(['if (gl_FrontFacing == false) {', '  ambientColor = ambientIntensityBF * ambientColorUniformBF;', '  diffuseColor = diffuseIntensityBF * diffuseColorUniformBF;', '  opacity = opacityUniformBF; }']);\n          }\n        }\n        if (model.haveCellScalars && !model.drawingEdges) {\n          colorDec = colorDec.concat(['uniform samplerBuffer texture1;']);\n        }\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Impl', colorImpl).result;\n      }\n    }\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Dec', colorDec).result;\n    shaders.Vertex = VSSource;\n    shaders.Geometry = GSSource;\n    shaders.Fragment = FSSource;\n  };\n  publicAPI.replaceShaderLight = (shaders, ren, actor) => {\n    let FSSource = shaders.Fragment;\n\n    // check for shadow maps\n    const shadowFactor = '';\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n    const lastLightCount = model.lastBoundBO.getReferenceByName('lastLightCount');\n    let sstring = [];\n    switch (lastLightComplexity) {\n      case 0:\n        // no lighting or RENDER_VALUES\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Impl', ['  gl_FragData[0] = vec4(ambientColor * ambient + diffuseColor * diffuse, opacity);', '  //VTK::Light::Impl'], false).result;\n        break;\n      case 1:\n        // headlight\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Impl', ['  float df = max(0.0, normalVCVSOutput.z);', '  float sf = pow(df, specularPower);', '  vec3 diffuseL = df * diffuseColor;', '  vec3 specularL = sf * specularColor;', '  gl_FragData[0] = vec4(ambientColor * ambient + diffuseL * diffuse + specularL * specular, opacity);', '  //VTK::Light::Impl'], false).result;\n        break;\n      case 2:\n        // light kit\n        for (let lc = 0; lc < lastLightCount; ++lc) {\n          sstring = sstring.concat([`uniform vec3 lightColor${lc};`, `uniform vec3 lightDirectionVC${lc}; // normalized`, `uniform vec3 lightHalfAngleVC${lc}; // normalized`]);\n        }\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Dec', sstring).result;\n        sstring = ['vec3 diffuseL = vec3(0,0,0);', '  vec3 specularL = vec3(0,0,0);', '  float df;'];\n        for (let lc = 0; lc < lastLightCount; ++lc) {\n          sstring = sstring.concat([`  df = max(0.0, dot(normalVCVSOutput, -lightDirectionVC${lc}));`, `  diffuseL += ((df${shadowFactor}) * lightColor${lc});`, `  if (dot(normalVCVSOutput, lightDirectionVC${lc}) < 0.0)`, '    {', `    float sf = sign(df)*pow(max(1e-5,\n                                              dot(reflect(lightDirectionVC${lc},normalVCVSOutput),\n                                                  normalize(-vertexVC.xyz))),\n                                         specularPower);`, `    specularL += (sf${shadowFactor} * lightColor${lc});`, '    }']);\n        }\n        sstring = sstring.concat(['  diffuseL = diffuseL * diffuseColor;', '  specularL = specularL * specularColor;', '  gl_FragData[0] = vec4(ambientColor * ambient + diffuseL * diffuse + specularL * specular, opacity);', '  //VTK::Light::Impl']);\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Impl', sstring, false).result;\n        break;\n      case 3:\n        // positional\n        for (let lc = 0; lc < lastLightCount; ++lc) {\n          sstring = sstring.concat([`uniform vec3 lightColor${lc};`, `uniform vec3 lightDirectionVC${lc}; // normalized`, `uniform vec3 lightHalfAngleVC${lc}; // normalized`, `uniform vec3 lightPositionVC${lc};`, `uniform vec3 lightAttenuation${lc};`, `uniform float lightConeAngle${lc};`, `uniform float lightExponent${lc};`, `uniform int lightPositional${lc};`]);\n        }\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Dec', sstring).result;\n        sstring = ['vec3 diffuseL = vec3(0,0,0);', '  vec3 specularL = vec3(0,0,0);', '  vec3 vertLightDirectionVC;', '  float attenuation;', '  float df;'];\n        for (let lc = 0; lc < lastLightCount; ++lc) {\n          sstring = sstring.concat(['  attenuation = 1.0;', `  if (lightPositional${lc} == 0)`, '    {', `      vertLightDirectionVC = lightDirectionVC${lc};`, '    }', '  else', '    {', `    vertLightDirectionVC = vertexVC.xyz - lightPositionVC${lc};`, '    float distanceVC = length(vertLightDirectionVC);', '    vertLightDirectionVC = normalize(vertLightDirectionVC);', '    attenuation = 1.0 /', `      (lightAttenuation${lc}.x`, `       + lightAttenuation${lc}.y * distanceVC`, `       + lightAttenuation${lc}.z * distanceVC * distanceVC);`, '    // per OpenGL standard cone angle is 90 or less for a spot light', `    if (lightConeAngle${lc} <= 90.0)`, '      {', `      float coneDot = dot(vertLightDirectionVC, lightDirectionVC${lc});`, '      // if inside the cone', `      if (coneDot >= cos(radians(lightConeAngle${lc})))`, '        {', `        attenuation = attenuation * pow(coneDot, lightExponent${lc});`, '        }', '      else', '        {', '        attenuation = 0.0;', '        }', '      }', '    }', '    df = max(0.0, attenuation*dot(normalVCVSOutput, -vertLightDirectionVC));', `    diffuseL += ((df${shadowFactor}) * lightColor${lc});`, '    if (dot(normalVCVSOutput, vertLightDirectionVC) < 0.0)', '      {', `      float sf = sign(df)*attenuation*pow(max(1e-5,\n                                                           dot(reflect(lightDirectionVC${lc},\n                                                                       normalVCVSOutput),\n                                                               normalize(-vertexVC.xyz))),\n                                                       specularPower);`, `    specularL += ((sf${shadowFactor}) * lightColor${lc});`, '    }']);\n        }\n        sstring = sstring.concat(['  diffuseL = diffuseL * diffuseColor;', '  specularL = specularL * specularColor;', '  gl_FragData[0] = vec4(ambientColor * ambient + diffuseL * diffuse + specularL * specular, opacity);', '  //VTK::Light::Impl']);\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Impl', sstring, false).result;\n        break;\n      default:\n        vtkErrorMacro('bad light complexity');\n    }\n    shaders.Fragment = FSSource;\n  };\n  publicAPI.replaceShaderNormal = (shaders, ren, actor) => {\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n    if (lastLightComplexity > 0) {\n      let VSSource = shaders.Vertex;\n      let GSSource = shaders.Geometry;\n      let FSSource = shaders.Fragment;\n      if (model.lastBoundBO.getCABO().getNormalOffset()) {\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Normal::Dec', ['attribute vec3 normalMC;', 'uniform mat3 normalMatrix;', 'varying vec3 normalVCVSOutput;']).result;\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Normal::Impl', ['normalVCVSOutput = normalMatrix * normalMC;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Normal::Dec', ['in vec3 normalVCVSOutput[];', 'out vec3 normalVCGSOutput;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Normal::Impl', ['normalVCGSOutput = normalVCVSOutput[i];']).result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Dec', ['varying vec3 normalVCVSOutput;']).result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Impl', ['vec3 normalVCVSOutput = normalize(normalVCVSOutput);',\n        //  if (!gl_FrontFacing) does not work in intel hd4000 mac\n        //  if (int(gl_FrontFacing) == 0) does not work on mesa\n        '  if (gl_FrontFacing == false) { normalVCVSOutput = -normalVCVSOutput; }']).result;\n      } else {\n        if (model.haveCellNormals) {\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Dec', ['uniform mat3 normalMatrix;', 'uniform samplerBuffer textureN;']).result;\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Impl', ['vec3 normalVCVSOutput = normalize(normalMatrix *', '    texelFetchBuffer(textureN, gl_PrimitiveID + PrimitiveIDOffset).xyz);', '  if (gl_FrontFacing == false) { normalVCVSOutput = -normalVCVSOutput; }']).result;\n        } else {\n          if (model.lastBoundBO.getOpenGLMode(actor.getProperty().getRepresentation()) === model.context.LINES) {\n            // generate a normal for lines, it will be perpendicular to the line\n            // and maximally aligned with the camera view direction\n            // no clue if this is the best way to do this.\n            // the code below has been optimized a bit so what follows is\n            // an explanation of the basic approach. Compute the gradient of the line\n            // with respect to x and y, the the larger of the two\n            // cross that with the camera view direction. That gives a vector\n            // orthogonal to the camera view and the line. Note that the line and the camera\n            // view are probably not orthogonal. Which is why when we cross result that with\n            // the line gradient again we get a reasonable normal. It will be othogonal to\n            // the line (which is a plane but maximally aligned with the camera view.\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::UniformFlow::Impl', ['  vec3 fdx = dFdx(vertexVC.xyz);', '  vec3 fdy = dFdy(vertexVC.xyz);', '  //VTK::UniformFlow::Impl'] // For further replacements\n            ).result;\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Impl', ['vec3 normalVCVSOutput;', '  if (abs(fdx.x) > 0.0)', '    { fdx = normalize(fdx); normalVCVSOutput = normalize(cross(vec3(fdx.y, -fdx.x, 0.0), fdx)); }', '  else { fdy = normalize(fdy); normalVCVSOutput = normalize(cross(vec3(fdy.y, -fdy.x, 0.0), fdy));}']).result;\n          } else {\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Dec', ['uniform int cameraParallel;']).result;\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::UniformFlow::Impl', [\n            // '  vec3 fdx = vec3(dFdx(vertexVC.x),dFdx(vertexVC.y),dFdx(vertexVC.z));',\n            // '  vec3 fdy = vec3(dFdy(vertexVC.x),dFdy(vertexVC.y),dFdy(vertexVC.z));',\n            '  vec3 fdx = dFdx(vertexVC.xyz);', '  vec3 fdy = dFdy(vertexVC.xyz);', '  //VTK::UniformFlow::Impl'] // For further replacements\n            ).result;\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Impl', ['  fdx = normalize(fdx);', '  fdy = normalize(fdy);', '  vec3 normalVCVSOutput = normalize(cross(fdx,fdy));',\n            // the code below is faster, but does not work on some devices\n            // 'vec3 normalVC = normalize(cross(dFdx(vertexVC.xyz), dFdy(vertexVC.xyz)));',\n            '  if (cameraParallel == 1 && normalVCVSOutput.z < 0.0) { normalVCVSOutput = -1.0*normalVCVSOutput; }', '  if (cameraParallel == 0 && dot(normalVCVSOutput,vertexVC.xyz) > 0.0) { normalVCVSOutput = -1.0*normalVCVSOutput; }']).result;\n          }\n        }\n      }\n      shaders.Vertex = VSSource;\n      shaders.Geometry = GSSource;\n      shaders.Fragment = FSSource;\n    }\n  };\n  publicAPI.replaceShaderPositionVC = (shaders, ren, actor) => {\n    // replace common shader code\n    model.lastBoundBO.replaceShaderPositionVC(shaders, ren, actor);\n    let VSSource = shaders.Vertex;\n    let GSSource = shaders.Geometry;\n    let FSSource = shaders.Fragment;\n\n    // do we need the vertex in the shader in View Coordinates\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n    if (lastLightComplexity > 0) {\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Dec', ['varying vec4 vertexVCVSOutput;']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Impl', ['vertexVCVSOutput = MCVCMatrix * vertexMC;', '  gl_Position = MCPCMatrix * vertexMC;']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', ['uniform mat4 MCPCMatrix;', 'uniform mat4 MCVCMatrix;']).result;\n      GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::PositionVC::Dec', ['in vec4 vertexVCVSOutput[];', 'out vec4 vertexVCGSOutput;']).result;\n      GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::PositionVC::Impl', ['vertexVCGSOutput = vertexVCVSOutput[i];']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::PositionVC::Dec', ['varying vec4 vertexVCVSOutput;']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::PositionVC::Impl', ['vec4 vertexVC = vertexVCVSOutput;']).result;\n    } else {\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', ['uniform mat4 MCPCMatrix;']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Impl', ['  gl_Position = MCPCMatrix * vertexMC;']).result;\n    }\n    shaders.Vertex = VSSource;\n    shaders.Geometry = GSSource;\n    shaders.Fragment = FSSource;\n  };\n  publicAPI.replaceShaderTCoord = (shaders, ren, actor) => {\n    if (model.lastBoundBO.getCABO().getTCoordOffset()) {\n      let VSSource = shaders.Vertex;\n      let GSSource = shaders.Geometry;\n      let FSSource = shaders.Fragment;\n      if (model.drawingEdges) {\n        return;\n      }\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Impl', 'tcoordVCVSOutput = tcoordMC;').result;\n\n      // we only handle the first texture by default\n      // additional textures are activated and we set the uniform\n      // for the texture unit they are assigned to, but you have to\n      // add in the shader code to do something with them\n      const tus = model.openGLActor.getActiveTextures();\n      let tNumComp = 2;\n      let tcdim = 2;\n      if (tus && tus.length > 0) {\n        tNumComp = tus[0].getComponents();\n        if (tus[0].getTarget() === model.context.TEXTURE_CUBE_MAP) {\n          tcdim = 3;\n        }\n      }\n      if (model.renderable.getColorTextureMap()) {\n        tNumComp = model.renderable.getColorTextureMap().getPointData().getScalars().getNumberOfComponents();\n        tcdim = 2;\n      }\n      if (tcdim === 2) {\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Dec', 'attribute vec2 tcoordMC; varying vec2 tcoordVCVSOutput;').result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::TCoord::Dec', ['in vec2 tcoordVCVSOutput[];', 'out vec2 tcoordVCGSOutput;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::TCoord::Impl', 'tcoordVCGSOutput = tcoordVCVSOutput[i];').result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Dec', ['varying vec2 tcoordVCVSOutput;', 'uniform sampler2D texture1;']).result;\n        if (tus && tus.length >= 1) {\n          switch (tNumComp) {\n            case 1:\n              FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = texture2D(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.r;', '  diffuseColor = diffuseColor*tcolor.r;']).result;\n              break;\n            case 2:\n              FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = texture2D(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.r;', '  diffuseColor = diffuseColor*tcolor.r;', '  opacity = opacity * tcolor.g;']).result;\n              break;\n            default:\n              FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = texture2D(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.rgb;', '  diffuseColor = diffuseColor*tcolor.rgb;', '  opacity = opacity * tcolor.a;']).result;\n          }\n        }\n      } else {\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Dec', 'attribute vec3 tcoordMC; varying vec3 tcoordVCVSOutput;').result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::TCoord::Dec', ['in vec3 tcoordVCVSOutput[];', 'out vec3 tcoordVCGSOutput;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::TCoord::Impl', 'tcoordVCGSOutput = tcoordVCVSOutput[i];').result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Dec', ['varying vec3 tcoordVCVSOutput;', 'uniform samplerCube texture1;']).result;\n        switch (tNumComp) {\n          case 1:\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = textureCube(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.r;', '  diffuseColor = diffuseColor*tcolor.r;']).result;\n            break;\n          case 2:\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = textureCube(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.r;', '  diffuseColor = diffuseColor*tcolor.r;', '  opacity = opacity * tcolor.g;']).result;\n            break;\n          default:\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = textureCube(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.rgb;', '  diffuseColor = diffuseColor*tcolor.rgb;', '  opacity = opacity * tcolor.a;']).result;\n        }\n      }\n      shaders.Vertex = VSSource;\n      shaders.Geometry = GSSource;\n      shaders.Fragment = FSSource;\n    }\n  };\n  publicAPI.replaceShaderClip = (shaders, ren, actor) => {\n    let VSSource = shaders.Vertex;\n    let FSSource = shaders.Fragment;\n    if (model.renderable.getNumberOfClippingPlanes()) {\n      const numClipPlanes = model.renderable.getNumberOfClippingPlanes();\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Clip::Dec', ['uniform int numClipPlanes;', `uniform vec4 clipPlanes[${numClipPlanes}];`, `varying float clipDistancesVSOutput[${numClipPlanes}];`]).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Clip::Impl', [`for (int planeNum = 0; planeNum < ${numClipPlanes}; planeNum++)`, '    {', '    if (planeNum >= numClipPlanes)', '        {', '        break;', '        }', '    clipDistancesVSOutput[planeNum] = dot(clipPlanes[planeNum], vertexMC);', '    }']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Clip::Dec', ['uniform int numClipPlanes;', `varying float clipDistancesVSOutput[${numClipPlanes}];`]).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Clip::Impl', [`for (int planeNum = 0; planeNum < ${numClipPlanes}; planeNum++)`, '    {', '    if (planeNum >= numClipPlanes)', '        {', '        break;', '        }', '    if (clipDistancesVSOutput[planeNum] < 0.0) discard;', '    }']).result;\n    }\n    shaders.Vertex = VSSource;\n    shaders.Fragment = FSSource;\n  };\n  publicAPI.getCoincidentParameters = (ren, actor) => {\n    // 1. ResolveCoincidentTopology is On and non zero for this primitive\n    // type\n    let cp = {\n      factor: 0.0,\n      offset: 0.0\n    };\n    const prop = actor.getProperty();\n    if (\n    // backwards compat with code that (errorneously) set this to boolean\n    // eslint-disable-next-line eqeqeq\n    model.renderable.getResolveCoincidentTopology() == Resolve.PolygonOffset || prop.getEdgeVisibility() && prop.getRepresentation() === Representation.SURFACE) {\n      const primType = model.lastBoundBO.getPrimitiveType();\n      if (primType === primTypes.Points || prop.getRepresentation() === Representation.POINTS) {\n        cp = model.renderable.getCoincidentTopologyPointOffsetParameter();\n      } else if (primType === primTypes.Lines || prop.getRepresentation() === Representation.WIREFRAME) {\n        cp = model.renderable.getCoincidentTopologyLineOffsetParameters();\n      } else if (primType === primTypes.Tris || primType === primTypes.TriStrips) {\n        cp = model.renderable.getCoincidentTopologyPolygonOffsetParameters();\n      }\n      if (primType === primTypes.TrisEdges || primType === primTypes.TriStripsEdges) {\n        cp = model.renderable.getCoincidentTopologyPolygonOffsetParameters();\n        cp.factor /= 2.0;\n        cp.offset /= 2.0;\n      }\n    }\n\n    // hardware picking always offset due to saved zbuffer\n    // This gets you above the saved surface depth buffer.\n    const selector = model._openGLRenderer.getSelector();\n    if (selector && selector.getFieldAssociation() === FieldAssociations.FIELD_ASSOCIATION_POINTS) {\n      cp.offset -= 2.0;\n    }\n    return cp;\n  };\n  publicAPI.replaceShaderPicking = (shaders, ren, actor) => {\n    let FSSource = shaders.Fragment;\n    let VSSource = shaders.Vertex;\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Dec', ['uniform int picking;', '//VTK::Picking::Dec']).result;\n    if (!model._openGLRenderer.getSelector()) {\n      return;\n    }\n    if (model.lastSelectionState === PassTypes.ID_LOW24 || model.lastSelectionState === PassTypes.ID_HIGH24) {\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Picking::Dec', ['flat out int vertexIDVSOutput;\\n', 'uniform int VertexIDOffset;\\n']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Picking::Impl', '  vertexIDVSOutput = gl_VertexID + VertexIDOffset;\\n').result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Dec', 'flat in int vertexIDVSOutput;\\n').result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Impl', ['  int idx = vertexIDVSOutput;', '//VTK::Picking::Impl']).result;\n    }\n    switch (model.lastSelectionState) {\n      case PassTypes.ID_LOW24:\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Impl', '  gl_FragData[0] = vec4(float(idx%256)/255.0, float((idx/256)%256)/255.0, float((idx/65536)%256)/255.0, 1.0);').result;\n        break;\n      case PassTypes.ID_HIGH24:\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Impl', '  gl_FragData[0] = vec4(float((idx/16777216)%256)/255.0, 0.0, 0.0, 1.0);').result;\n        break;\n      default:\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Dec', 'uniform vec3 mapperIndex;').result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Impl', '  gl_FragData[0] = picking != 0 ? vec4(mapperIndex,1.0) : gl_FragData[0];').result;\n    }\n    shaders.Fragment = FSSource;\n    shaders.Vertex = VSSource;\n  };\n  publicAPI.replaceShaderValues = (shaders, ren, actor) => {\n    publicAPI.replaceShaderColor(shaders, ren, actor);\n    publicAPI.replaceShaderNormal(shaders, ren, actor);\n    publicAPI.replaceShaderLight(shaders, ren, actor);\n    publicAPI.replaceShaderTCoord(shaders, ren, actor);\n    publicAPI.replaceShaderPicking(shaders, ren, actor);\n    publicAPI.replaceShaderClip(shaders, ren, actor);\n    publicAPI.replaceShaderCoincidentOffset(shaders, ren, actor);\n    publicAPI.replaceShaderPositionVC(shaders, ren, actor);\n    if (model.haveSeenDepthRequest) {\n      let FSSource = shaders.Fragment;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Dec', 'uniform int depthRequest;').result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Impl', ['if (depthRequest == 1) {', 'float iz = floor(gl_FragCoord.z*65535.0 + 0.1);', 'float rf = floor(iz/256.0)/255.0;', 'float gf = mod(iz,256.0)/255.0;', 'gl_FragData[0] = vec4(rf, gf, 0.0, 1.0); }']).result;\n      shaders.Fragment = FSSource;\n    }\n  };\n  publicAPI.getNeedToRebuildShaders = (cellBO, ren, actor) => {\n    let lightComplexity = 0;\n    let numberOfLights = 0;\n    const primType = cellBO.getPrimitiveType();\n    const poly = model.currentInput;\n\n    // different algo from C++ as of 5/2019\n    let needLighting = false;\n    const pointNormals = poly.getPointData().getNormals();\n    const cellNormals = poly.getCellData().getNormals();\n    const flat = actor.getProperty().getInterpolation() === Shading.FLAT;\n    const representation = actor.getProperty().getRepresentation();\n    const mode = cellBO.getOpenGLMode(representation, primType);\n    // 1) all surfaces need lighting\n    if (mode === model.context.TRIANGLES) {\n      needLighting = true;\n      // 2) all cell normals without point normals need lighting\n    } else if (cellNormals && !pointNormals) {\n      needLighting = true;\n      // 3) Phong + pointNormals need lighting\n    } else if (!flat && pointNormals) {\n      needLighting = true;\n      // 4) Phong Lines need lighting\n    } else if (!flat && mode === model.context.LINES) {\n      needLighting = true;\n    }\n    // 5) everything else is unlit\n\n    // do we need lighting?\n    if (actor.getProperty().getLighting() && needLighting) {\n      // consider the lighting complexity to determine which case applies\n      // simple headlight, Light Kit, the whole feature set of VTK\n      lightComplexity = 0;\n      const lights = ren.getLightsByReference();\n      for (let index = 0; index < lights.length; ++index) {\n        const light = lights[index];\n        const status = light.getSwitch();\n        if (status > 0) {\n          numberOfLights++;\n          if (lightComplexity === 0) {\n            lightComplexity = 1;\n          }\n        }\n        if (lightComplexity === 1 && (numberOfLights > 1 || light.getIntensity() !== 1.0 || !light.lightTypeIsHeadLight())) {\n          lightComplexity = 2;\n        }\n        if (lightComplexity < 3 && light.getPositional()) {\n          lightComplexity = 3;\n        }\n      }\n    }\n    let needRebuild = false;\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n    const lastLightCount = model.lastBoundBO.getReferenceByName('lastLightCount');\n    if (lastLightComplexity !== lightComplexity || lastLightCount !== numberOfLights) {\n      model.lastBoundBO.set({\n        lastLightComplexity: lightComplexity\n      }, true);\n      model.lastBoundBO.set({\n        lastLightCount: numberOfLights\n      }, true);\n      needRebuild = true;\n    }\n\n    // has the render pass shader replacement changed? Two options\n    if (!model.currentRenderPass && model.lastRenderPassShaderReplacement || model.currentRenderPass && model.currentRenderPass.getShaderReplacement() !== model.lastRenderPassShaderReplacement) {\n      needRebuild = true;\n    }\n\n    // has something changed that would require us to recreate the shader?\n    // candidates are\n    // property modified (representation interpolation and lighting)\n    // input modified\n    // light complexity changed\n    // render pass shader replacement changed\n    if (model.lastHaveSeenDepthRequest !== model.haveSeenDepthRequest || cellBO.getShaderSourceTime().getMTime() < model.renderable.getMTime() || cellBO.getShaderSourceTime().getMTime() < model.currentInput.getMTime() || cellBO.getShaderSourceTime().getMTime() < model.selectionStateChanged.getMTime() || needRebuild) {\n      model.lastHaveSeenDepthRequest = model.haveSeenDepthRequest;\n      return true;\n    }\n    return false;\n  };\n  publicAPI.invokeShaderCallbacks = (cellBO, ren, actor) => {\n    const listCallbacks = model.renderable.getViewSpecificProperties().ShadersCallbacks;\n    if (listCallbacks) {\n      listCallbacks.forEach(object => {\n        object.callback(object.userData, cellBO, ren, actor);\n      });\n    }\n  };\n  publicAPI.setMapperShaderParameters = (cellBO, ren, actor) => {\n    // Now to update the VAO too, if necessary.\n    if (cellBO.getProgram().isUniformUsed('PrimitiveIDOffset')) {\n      cellBO.getProgram().setUniformi('PrimitiveIDOffset', model.primitiveIDOffset);\n    }\n    if (cellBO.getProgram().isUniformUsed('VertexIDOffset')) {\n      cellBO.getProgram().setUniformi('VertexIDOffset', model.vertexIDOffset);\n    }\n    if (cellBO.getCABO().getElementCount() && (model.VBOBuildTime.getMTime() > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime())) {\n      const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n      if (cellBO.getProgram().isAttributeUsed('vertexMC')) {\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'vertexMC', cellBO.getCABO().getVertexOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, false)) {\n          vtkErrorMacro('Error setting vertexMC in shader VAO.');\n        }\n      }\n      if (cellBO.getProgram().isAttributeUsed('normalMC') && cellBO.getCABO().getNormalOffset() && lastLightComplexity > 0) {\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'normalMC', cellBO.getCABO().getNormalOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, false)) {\n          vtkErrorMacro('Error setting normalMC in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('normalMC');\n      }\n      model.renderable.getCustomShaderAttributes().forEach((attrName, idx) => {\n        if (cellBO.getProgram().isAttributeUsed(`${attrName}MC`)) {\n          if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), `${attrName}MC`, cellBO.getCABO().getCustomData()[idx].offset, cellBO.getCABO().getStride(), model.context.FLOAT, cellBO.getCABO().getCustomData()[idx].components, false)) {\n            vtkErrorMacro(`Error setting ${attrName}MC in shader VAO.`);\n          }\n        }\n      });\n      if (cellBO.getProgram().isAttributeUsed('tcoordMC') && cellBO.getCABO().getTCoordOffset()) {\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'tcoordMC', cellBO.getCABO().getTCoordOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, cellBO.getCABO().getTCoordComponents(), false)) {\n          vtkErrorMacro('Error setting tcoordMC in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('tcoordMC');\n      }\n      if (cellBO.getProgram().isAttributeUsed('scalarColor') && cellBO.getCABO().getColorComponents()) {\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO().getColorBO(), 'scalarColor', cellBO.getCABO().getColorOffset(), cellBO.getCABO().getColorBOStride(), model.context.UNSIGNED_BYTE, 4, true)) {\n          vtkErrorMacro('Error setting scalarColor in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('scalarColor');\n      }\n      cellBO.getAttributeUpdateTime().modified();\n    }\n    if (model.renderable.getNumberOfClippingPlanes()) {\n      // add all the clipping planes\n      const numClipPlanes = model.renderable.getNumberOfClippingPlanes();\n      const planeEquations = [];\n      const shiftScaleEnabled = cellBO.getCABO().getCoordShiftAndScaleEnabled();\n      const inverseShiftScaleMatrix = shiftScaleEnabled ? cellBO.getCABO().getInverseShiftAndScaleMatrix() : null;\n      const mat = inverseShiftScaleMatrix ? mat4.copy(model.tmpMat4, actor.getMatrix()) : actor.getMatrix();\n      if (inverseShiftScaleMatrix) {\n        mat4.transpose(mat, mat);\n        mat4.multiply(mat, mat, inverseShiftScaleMatrix);\n        mat4.transpose(mat, mat);\n      }\n      for (let i = 0; i < numClipPlanes; i++) {\n        const planeEquation = [];\n        model.renderable.getClippingPlaneInDataCoords(mat, i, planeEquation);\n        for (let j = 0; j < 4; j++) {\n          planeEquations.push(planeEquation[j]);\n        }\n      }\n      cellBO.getProgram().setUniformi('numClipPlanes', numClipPlanes);\n      cellBO.getProgram().setUniform4fv('clipPlanes', planeEquations);\n    }\n    if (model.internalColorTexture && cellBO.getProgram().isUniformUsed('texture1')) {\n      cellBO.getProgram().setUniformi('texture1', model.internalColorTexture.getTextureUnit());\n    }\n    const tus = model.openGLActor.getActiveTextures();\n    if (tus) {\n      for (let index = 0; index < tus.length; ++index) {\n        const tex = tus[index];\n        const texUnit = tex.getTextureUnit();\n        const tname = `texture${texUnit + 1}`;\n        if (cellBO.getProgram().isUniformUsed(tname)) {\n          cellBO.getProgram().setUniformi(tname, texUnit);\n        }\n      }\n    }\n\n    // handle depth requests\n    if (model.haveSeenDepthRequest) {\n      cellBO.getProgram().setUniformi('depthRequest', model.renderDepth ? 1 : 0);\n    }\n\n    // handle coincident\n    if (cellBO.getProgram().isUniformUsed('coffset')) {\n      const cp = publicAPI.getCoincidentParameters(ren, actor);\n      cellBO.getProgram().setUniformf('coffset', cp.offset);\n      // cfactor isn't always used when coffset is.\n      if (cellBO.getProgram().isUniformUsed('cfactor')) {\n        cellBO.getProgram().setUniformf('cfactor', cp.factor);\n      }\n    }\n\n    // handle wide lines\n    cellBO.setMapperShaderParameters(ren, actor, model._openGLRenderer.getTiledSizeAndOrigin());\n    const selector = model._openGLRenderer.getSelector();\n    cellBO.getProgram().setUniform3fArray('mapperIndex', selector ? selector.getPropColorValue() : [0.0, 0.0, 0.0]);\n    cellBO.getProgram().setUniformi('picking', selector ? selector.getCurrentPass() + 1 : 0);\n  };\n  publicAPI.setLightingShaderParameters = (cellBO, ren, actor) => {\n    // for unlit and headlight there are no lighting parameters\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n    if (lastLightComplexity < 2) {\n      return;\n    }\n    const program = cellBO.getProgram();\n\n    // bind some light settings\n    let numberOfLights = 0;\n    const lights = ren.getLightsByReference();\n    for (let index = 0; index < lights.length; ++index) {\n      const light = lights[index];\n      const status = light.getSwitch();\n      if (status > 0.0) {\n        const dColor = light.getColorByReference();\n        const intensity = light.getIntensity();\n        model.lightColor[0] = dColor[0] * intensity;\n        model.lightColor[1] = dColor[1] * intensity;\n        model.lightColor[2] = dColor[2] * intensity;\n        // get required info from light\n        const ld = light.getDirection();\n        const transform = ren.getActiveCamera().getViewMatrix();\n        const newLightDirection = [...ld];\n        if (light.lightTypeIsSceneLight()) {\n          newLightDirection[0] = transform[0] * ld[0] + transform[1] * ld[1] + transform[2] * ld[2];\n          newLightDirection[1] = transform[4] * ld[0] + transform[5] * ld[1] + transform[6] * ld[2];\n          newLightDirection[2] = transform[8] * ld[0] + transform[9] * ld[1] + transform[10] * ld[2];\n          normalize(newLightDirection);\n        }\n        model.lightDirection[0] = newLightDirection[0];\n        model.lightDirection[1] = newLightDirection[1];\n        model.lightDirection[2] = newLightDirection[2];\n        normalize(model.lightDirection);\n        program.setUniform3fArray(`lightColor${numberOfLights}`, model.lightColor);\n        program.setUniform3fArray(`lightDirectionVC${numberOfLights}`, model.lightDirection);\n        numberOfLights++;\n      }\n    }\n\n    // we are done unless we have positional lights\n    if (lastLightComplexity < 3) {\n      return;\n    }\n\n    // for lightkit case there are some parameters to set\n    const cam = ren.getActiveCamera();\n    const viewTF = cam.getViewMatrix();\n    mat4.transpose(viewTF, viewTF);\n    numberOfLights = 0;\n    for (let index = 0; index < lights.length; ++index) {\n      const light = lights[index];\n      const status = light.getSwitch();\n      if (status > 0.0) {\n        const lp = light.getTransformedPosition();\n        const np = new Float64Array(3);\n        vec3.transformMat4(np, lp, viewTF);\n        program.setUniform3fArray(`lightAttenuation${numberOfLights}`, light.getAttenuationValuesByReference());\n        program.setUniformi(`lightPositional${numberOfLights}`, light.getPositional());\n        program.setUniformf(`lightExponent${numberOfLights}`, light.getExponent());\n        program.setUniformf(`lightConeAngle${numberOfLights}`, light.getConeAngle());\n        program.setUniform3fArray(`lightPositionVC${numberOfLights}`, [np[0], np[1], np[2]]);\n        numberOfLights++;\n      }\n    }\n  };\n  function safeMatrixMultiply(matrixArray, matrixType, tmpMat) {\n    matrixType.identity(tmpMat);\n    return matrixArray.reduce((res, matrix, index) => {\n      if (index === 0) {\n        return matrix ? matrixType.copy(res, matrix) : matrixType.identity(res);\n      }\n      return matrix ? matrixType.multiply(res, res, matrix) : res;\n    }, tmpMat);\n  }\n  publicAPI.setCameraShaderParameters = (cellBO, ren, actor) => {\n    const program = cellBO.getProgram();\n\n    // [WMVP]C == {world, model, view, projection} coordinates\n    // E.g., WCPC == world to projection coordinate transformation\n    const keyMats = model.openGLCamera.getKeyMatrices(ren);\n    const cam = ren.getActiveCamera();\n    const camm = model.openGLCamera.getKeyMatrixTime().getMTime();\n    const progm = program.getLastCameraMTime();\n    const shiftScaleEnabled = cellBO.getCABO().getCoordShiftAndScaleEnabled();\n    const inverseShiftScaleMatrix = shiftScaleEnabled ? cellBO.getCABO().getInverseShiftAndScaleMatrix() : null;\n    const actorIsIdentity = actor.getIsIdentity();\n    const actMats = actorIsIdentity ? {\n      mcwc: null,\n      normalMatrix: null\n    } : model.openGLActor.getKeyMatrices();\n    if (actor.getCoordinateSystem() === CoordinateSystem.DISPLAY) {\n      const size = model._openGLRenderer.getTiledSizeAndOrigin();\n      mat4.identity(model.tmpMat4);\n      model.tmpMat4[0] = 2.0 / size.usize;\n      model.tmpMat4[12] = -1.0;\n      model.tmpMat4[5] = 2.0 / size.vsize;\n      model.tmpMat4[13] = -1.0;\n      mat4.multiply(model.tmpMat4, model.tmpMat4, inverseShiftScaleMatrix);\n      program.setUniformMatrix('MCPCMatrix', model.tmpMat4);\n    } else {\n      program.setUniformMatrix('MCPCMatrix', safeMatrixMultiply([keyMats.wcpc, actMats.mcwc, inverseShiftScaleMatrix], mat4, model.tmpMat4));\n    }\n    if (program.isUniformUsed('MCVCMatrix')) {\n      program.setUniformMatrix('MCVCMatrix', safeMatrixMultiply([keyMats.wcvc, actMats.mcwc, inverseShiftScaleMatrix], mat4, model.tmpMat4));\n    }\n    if (program.isUniformUsed('normalMatrix')) {\n      program.setUniformMatrix3x3('normalMatrix', safeMatrixMultiply([keyMats.normalMatrix, actMats.normalMatrix], mat3, model.tmpMat3));\n    }\n    if (progm !== camm) {\n      if (program.isUniformUsed('cameraParallel')) {\n        program.setUniformi('cameraParallel', cam.getParallelProjection());\n      }\n      program.setLastCameraMTime(camm);\n    }\n    if (!actorIsIdentity) {\n      // reset the cam mtime as actor modified the shader values\n      program.setLastCameraMTime(0);\n    }\n  };\n  publicAPI.setPropertyShaderParameters = (cellBO, ren, actor) => {\n    const program = cellBO.getProgram();\n    let ppty = actor.getProperty();\n    let opacity = ppty.getOpacity();\n    let aColor = model.drawingEdges ? ppty.getEdgeColorByReference() : ppty.getAmbientColorByReference();\n    let dColor = model.drawingEdges ? ppty.getEdgeColorByReference() : ppty.getDiffuseColorByReference();\n    let aIntensity = model.drawingEdges ? 1.0 : ppty.getAmbient();\n    let dIntensity = model.drawingEdges ? 0.0 : ppty.getDiffuse();\n    let sIntensity = model.drawingEdges ? 0.0 : ppty.getSpecular();\n    const specularPower = ppty.getSpecularPower();\n    program.setUniformf('opacityUniform', opacity);\n    program.setUniform3fArray('ambientColorUniform', aColor);\n    program.setUniform3fArray('diffuseColorUniform', dColor);\n    program.setUniformf('ambient', aIntensity);\n    program.setUniformf('diffuse', dIntensity);\n\n    // we are done unless we have lighting\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n    if (lastLightComplexity < 1) {\n      return;\n    }\n    let sColor = ppty.getSpecularColorByReference();\n    program.setUniform3fArray('specularColorUniform', sColor);\n    program.setUniformf('specularPowerUniform', specularPower);\n    program.setUniformf('specular', sIntensity);\n\n    // now set the backface properties if we have them\n    if (program.isUniformUsed('ambientIntensityBF')) {\n      ppty = actor.getBackfaceProperty();\n      opacity = ppty.getOpacity();\n      aColor = ppty.getAmbientColor();\n      aIntensity = ppty.getAmbient();\n      dColor = ppty.getDiffuseColor();\n      dIntensity = ppty.getDiffuse();\n      sColor = ppty.getSpecularColor();\n      sIntensity = ppty.getSpecular();\n      program.setUniformf('ambientIntensityBF', aIntensity);\n      program.setUniformf('diffuseIntensityBF', dIntensity);\n      program.setUniformf('opacityUniformBF', opacity);\n      program.setUniform3fArray('ambientColorUniformBF', aColor);\n      program.setUniform3fArray('diffuseColorUniformBF', dColor);\n\n      // we are done unless we have lighting\n      if (lastLightComplexity < 1) {\n        return;\n      }\n      program.setUniformf('specularIntensityBF', sIntensity);\n      program.setUniform3fArray('specularColorUniformBF', sColor);\n      program.setUniformf('specularPowerUniformBF', specularPower);\n    }\n  };\n  publicAPI.updateMaximumPointCellIds = (ren, actor) => {\n    const selector = model._openGLRenderer.getSelector();\n    if (!selector) {\n      return;\n    }\n    if (model.selectionWebGLIdsToVTKIds?.points?.length) {\n      const length = model.selectionWebGLIdsToVTKIds.points.length;\n      selector.setMaximumPointId(length - 1);\n    }\n    if (model.selectionWebGLIdsToVTKIds?.cells?.length) {\n      const length = model.selectionWebGLIdsToVTKIds.cells.length;\n      selector.setMaximumCellId(length - 1);\n    }\n    const fieldAssociation = selector.getFieldAssociation();\n    if (fieldAssociation === FieldAssociations.FIELD_ASSOCIATION_POINTS) {\n      model.pointPicking = true;\n    }\n  };\n  publicAPI.renderPieceStart = (ren, actor) => {\n    model.primitiveIDOffset = 0;\n    model.vertexIDOffset = 0;\n    const picking = getPickState(model._openGLRenderer);\n    if (model.lastSelectionState !== picking) {\n      model.selectionStateChanged.modified();\n      model.lastSelectionState = picking;\n    }\n    if (model._openGLRenderer.getSelector()) {\n      switch (picking) {\n        default:\n          model._openGLRenderer.getSelector().renderProp(actor);\n      }\n    }\n\n    // make sure the BOs are up to date\n    publicAPI.updateBufferObjects(ren, actor);\n\n    // If we are coloring by texture, then load the texture map.\n    // Use Map as indicator, because texture hangs around.\n    if (model.renderable.getColorTextureMap()) {\n      model.internalColorTexture.activate();\n    }\n\n    // Bind the OpenGL, this is shared between the different primitive/cell types.\n    model.lastBoundBO = null;\n  };\n  publicAPI.renderPieceDraw = (ren, actor) => {\n    const representation = actor.getProperty().getRepresentation();\n    const drawSurfaceWithEdges = actor.getProperty().getEdgeVisibility() && representation === Representation.SURFACE;\n    const selector = model._openGLRenderer.getSelector();\n    // If we are picking points, we need to tell it to the helper\n    const pointPicking = selector && selector.getFieldAssociation() === FieldAssociations.FIELD_ASSOCIATION_POINTS && (model.lastSelectionState === PassTypes.ID_LOW24 || model.lastSelectionState === PassTypes.ID_HIGH24);\n\n    // for every primitive type\n    for (let i = primTypes.Start; i < primTypes.End; i++) {\n      model.primitives[i].setPointPicking(pointPicking);\n      const cabo = model.primitives[i].getCABO();\n      if (cabo.getElementCount()) {\n        // are we drawing edges\n        model.drawingEdges = drawSurfaceWithEdges && (i === primTypes.TrisEdges || i === primTypes.TriStripsEdges);\n        // don't draw edges when rendering depth or rendering for picking\n        if (!model.drawingEdges || !(model.renderDepth || model.lastSelectionState >= 0)) {\n          model.lastBoundBO = model.primitives[i];\n          model.primitiveIDOffset += model.primitives[i].drawArrays(ren, actor, representation, publicAPI);\n          model.vertexIDOffset += model.primitives[i].getCABO().getElementCount();\n        }\n      }\n    }\n  };\n  publicAPI.renderPieceFinish = (ren, actor) => {\n    if (model.LastBoundBO) {\n      model.LastBoundBO.getVAO().release();\n    }\n    if (model.renderable.getColorTextureMap()) {\n      model.internalColorTexture.deactivate();\n    }\n  };\n  publicAPI.renderPiece = (ren, actor) => {\n    // Make sure that we have been properly initialized.\n    // if (ren.getRenderWindow().checkAbortStatus()) {\n    //   return;\n    // }\n\n    publicAPI.invokeEvent(StartEvent);\n    if (!model.renderable.getStatic()) {\n      model.renderable.update();\n    }\n    model.currentInput = model.renderable.getInputData();\n    publicAPI.invokeEvent(EndEvent);\n    if (!model.currentInput) {\n      vtkErrorMacro('No input!');\n      return;\n    }\n\n    // if there are no points then we are done\n    if (!model.currentInput.getPoints || !model.currentInput.getPoints().getNumberOfValues()) {\n      return;\n    }\n\n    // apply faceCulling\n    const gl = model.context;\n    const backfaceCulling = actor.getProperty().getBackfaceCulling();\n    const frontfaceCulling = actor.getProperty().getFrontfaceCulling();\n    if (!backfaceCulling && !frontfaceCulling) {\n      model._openGLRenderWindow.disableCullFace();\n    } else if (frontfaceCulling) {\n      model._openGLRenderWindow.enableCullFace();\n      gl.cullFace(gl.FRONT);\n    } else {\n      model._openGLRenderWindow.enableCullFace();\n      gl.cullFace(gl.BACK);\n    }\n    publicAPI.renderPieceStart(ren, actor);\n    publicAPI.renderPieceDraw(ren, actor);\n    publicAPI.renderPieceFinish(ren, actor);\n  };\n  publicAPI.computeBounds = (ren, actor) => {\n    if (!publicAPI.getInput()) {\n      uninitializeBounds(model.bounds);\n      return;\n    }\n    model.bounds = publicAPI.getInput().getBounds();\n  };\n  publicAPI.updateBufferObjects = (ren, actor) => {\n    // Rebuild buffers if needed\n    if (publicAPI.getNeedToRebuildBufferObjects(ren, actor)) {\n      publicAPI.buildBufferObjects(ren, actor);\n    }\n    // Always call this function as the selector can change\n    publicAPI.updateMaximumPointCellIds();\n  };\n  publicAPI.getNeedToRebuildBufferObjects = (ren, actor) => {\n    // first do a coarse check\n    // Note that the actor's mtime includes it's properties mtime\n    const vmtime = model.VBOBuildTime.getMTime();\n    if (vmtime < publicAPI.getMTime() || vmtime < model.renderable.getMTime() || vmtime < actor.getMTime() || vmtime < model.currentInput.getMTime()) {\n      return true;\n    }\n    return false;\n  };\n  publicAPI.buildBufferObjects = (ren, actor) => {\n    const poly = model.currentInput;\n    if (poly === null) {\n      return;\n    }\n    model.renderable.mapScalars(poly, 1.0);\n    const c = model.renderable.getColorMapColors();\n    model.haveCellScalars = false;\n    const scalarMode = model.renderable.getScalarMode();\n    if (model.renderable.getScalarVisibility()) {\n      // We must figure out how the scalars should be mapped to the polydata.\n      if ((scalarMode === ScalarMode.USE_CELL_DATA || scalarMode === ScalarMode.USE_CELL_FIELD_DATA || scalarMode === ScalarMode.USE_FIELD_DATA || !poly.getPointData().getScalars()) && scalarMode !== ScalarMode.USE_POINT_FIELD_DATA && c) {\n        model.haveCellScalars = true;\n      }\n    }\n\n    // Do we have normals?\n    let n = actor.getProperty().getInterpolation() !== Shading.FLAT ? poly.getPointData().getNormals() : null;\n    if (n === null && poly.getCellData().getNormals()) {\n      model.haveCellNormals = true;\n      n = poly.getCellData().getNormals();\n    }\n\n    // rebuild the VBO if the data has changed we create a string for the VBO what\n    // can change the VBO? points normals tcoords colors so what can change those?\n    // the input data is clearly one as it can change all four items tcoords may\n    // haveTextures or not colors may change based on quite a few mapping\n    // parameters in the mapper\n\n    const representation = actor.getProperty().getRepresentation();\n    let tcoords = poly.getPointData().getTCoords();\n    if (!model.openGLActor.getActiveTextures()) {\n      tcoords = null;\n    }\n\n    // Flag to check if tcoords are per cell instead of per point\n    let useTCoordsPerCell = false;\n    // handle color mapping via texture\n    if (model.renderable.getColorCoordinates()) {\n      tcoords = model.renderable.getColorCoordinates();\n      useTCoordsPerCell = model.renderable.getAreScalarsMappedFromCells();\n      if (!model.internalColorTexture) {\n        model.internalColorTexture = vtkOpenGLTexture.newInstance({\n          resizable: true\n        });\n      }\n      const tex = model.internalColorTexture;\n      // the following 4 lines allow for NPOT textures\n      tex.setMinificationFilter(Filter.NEAREST);\n      tex.setMagnificationFilter(Filter.NEAREST);\n      tex.setWrapS(Wrap.CLAMP_TO_EDGE);\n      tex.setWrapT(Wrap.CLAMP_TO_EDGE);\n      tex.setOpenGLRenderWindow(model._openGLRenderWindow);\n      const input = model.renderable.getColorTextureMap();\n      const ext = input.getExtent();\n      const inScalars = input.getPointData().getScalars();\n      tex.create2DFromRaw(ext[1] - ext[0] + 1, ext[3] - ext[2] + 1, inScalars.getNumberOfComponents(), inScalars.getDataType(), inScalars.getData());\n      tex.activate();\n      tex.sendParameters();\n      tex.deactivate();\n    }\n    const toString = `${poly.getMTime()}A${representation}B${poly.getMTime()}` + `C${n ? n.getMTime() : 1}D${c ? c.getMTime() : 1}` + `E${actor.getProperty().getEdgeVisibility()}` + `F${tcoords ? tcoords.getMTime() : 1}`;\n    if (model.VBOBuildString !== toString) {\n      // Build the VBOs\n      const points = poly.getPoints();\n      const options = {\n        points,\n        normals: n,\n        tcoords,\n        colors: c,\n        cellOffset: 0,\n        vertexOffset: 0,\n        // Used to keep track of vertex ids across primitives for selection\n        useTCoordsPerCell,\n        haveCellScalars: model.haveCellScalars,\n        haveCellNormals: model.haveCellNormals,\n        customAttributes: model.renderable.getCustomShaderAttributes().map(arrayName => poly.getPointData().getArrayByName(arrayName))\n      };\n      if (model.renderable.getPopulateSelectionSettings()) {\n        model.selectionWebGLIdsToVTKIds = {\n          points: null,\n          cells: null\n        };\n      }\n      const primitives = [{\n        inRep: 'verts',\n        cells: poly.getVerts()\n      }, {\n        inRep: 'lines',\n        cells: poly.getLines()\n      }, {\n        inRep: 'polys',\n        cells: poly.getPolys()\n      }, {\n        inRep: 'strips',\n        cells: poly.getStrips()\n      }, {\n        inRep: 'polys',\n        cells: poly.getPolys()\n      }, {\n        inRep: 'strips',\n        cells: poly.getStrips()\n      }];\n      const drawSurfaceWithEdges = actor.getProperty().getEdgeVisibility() && representation === Representation.SURFACE;\n      for (let i = primTypes.Start; i < primTypes.End; i++) {\n        if (i !== primTypes.TrisEdges && i !== primTypes.TriStripsEdges) {\n          options.cellOffset += model.primitives[i].getCABO().createVBO(primitives[i].cells, primitives[i].inRep, representation, options, model.selectionWebGLIdsToVTKIds);\n          options.vertexOffset += model.primitives[i].getCABO().getElementCount();\n        } else {\n          // if we have edge visibility build the edge VBOs\n          if (drawSurfaceWithEdges) {\n            // VBOs for edges in \"surface with edges\" are the last to be built,\n            // they are not used when picking with a hardware selector so they\n            // don't need selectionWebGLIdsToVTKIds and don't update cellOffset and vertexOffset\n            model.primitives[i].getCABO().createVBO(primitives[i].cells, primitives[i].inRep, Representation.WIREFRAME, {\n              ...options,\n              tcoords: null,\n              colors: null,\n              haveCellScalars: false,\n              haveCellNormals: false\n            });\n          } else {\n            // otherwise free them\n            model.primitives[i].releaseGraphicsResources();\n          }\n        }\n      }\n      if (model.renderable.getPopulateSelectionSettings()) {\n        model.renderable.setSelectionWebGLIdsToVTKIds(model.selectionWebGLIdsToVTKIds);\n      }\n      model.VBOBuildString = toString;\n    }\n    model.VBOBuildTime.modified();\n  };\n  publicAPI.getAllocatedGPUMemoryInBytes = () => {\n    let memUsed = 0;\n    model.primitives.forEach(prim => {\n      memUsed += prim.getAllocatedGPUMemoryInBytes();\n    });\n    // Return in MB\n    return memUsed;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  VBOBuildTime: 0,\n  VBOBuildString: null,\n  primitives: null,\n  primTypes: null,\n  shaderRebuildString: null,\n  tmpMat4: null,\n  ambientColor: [],\n  // used internally\n  diffuseColor: [],\n  // used internally\n  specularColor: [],\n  // used internally\n  lightColor: [],\n  // used internally\n  lightDirection: [],\n  // used internally\n  lastHaveSeenDepthRequest: false,\n  haveSeenDepthRequest: false,\n  lastSelectionState: PassTypes.MIN_KNOWN_PASS - 1,\n  selectionStateChanged: null,\n  selectionWebGLIdsToVTKIds: null,\n  pointPicking: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  vtkReplacementShaderMapper.implementReplaceShaderCoincidentOffset(publicAPI, model, initialValues);\n  vtkReplacementShaderMapper.implementBuildShadersWithReplacements(publicAPI, model, initialValues);\n  model.primitives = [];\n  model.primTypes = primTypes;\n  model.tmpMat3 = mat3.identity(new Float64Array(9));\n  model.tmpMat4 = mat4.identity(new Float64Array(16));\n  for (let i = primTypes.Start; i < primTypes.End; i++) {\n    model.primitives[i] = vtkHelper.newInstance();\n    model.primitives[i].setPrimitiveType(i);\n    model.primitives[i].set({\n      lastLightComplexity: 0,\n      lastLightCount: 0,\n      lastSelectionPass: false\n    }, true);\n  }\n\n  // Build VTK API\n  setGet(publicAPI, model, ['context']);\n  model.VBOBuildTime = {};\n  obj(model.VBOBuildTime, {\n    mtime: 0\n  });\n  model.selectionStateChanged = {};\n  obj(model.selectionStateChanged, {\n    mtime: 0\n  });\n\n  // Object methods\n  vtkOpenGLPolyDataMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkOpenGLPolyDataMapper');\n\n// ----------------------------------------------------------------------------\n\nvar vtkOpenGLPolyDataMapper$1 = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkMapper', newInstance);\n\nexport { vtkOpenGLPolyDataMapper$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkAbstractMapper from './AbstractMapper.js';\nimport vtkLookupTable from '../../Common/Core/LookupTable.js';\nimport Constants from './Mapper/Constants.js';\n\nconst {\n  ColorMode,\n  ScalarMode,\n  GetArray\n} = Constants;\n\n// ---------------------------------------------------------------------------\n// vtkMapper2D methods\n// ---------------------------------------------------------------------------\n\nfunction vtkMapper2D(publicAPI, model) {\n  // Set out className\n  model.classHierarchy.push('vtkMapper2D');\n  publicAPI.createDefaultLookupTable = () => {\n    model.lookupTable = vtkLookupTable.newInstance();\n  };\n  publicAPI.getColorModeAsString = () => macro.enumToString(ColorMode, model.colorMode);\n  publicAPI.setColorModeToDefault = () => publicAPI.setColorMode(0);\n  publicAPI.setColorModeToMapScalars = () => publicAPI.setColorMode(1);\n  publicAPI.setColorModeToDirectScalars = () => publicAPI.setColorMode(2);\n  publicAPI.getScalarModeAsString = () => macro.enumToString(ScalarMode, model.scalarMode);\n  publicAPI.setScalarModeToDefault = () => publicAPI.setScalarMode(0);\n  publicAPI.setScalarModeToUsePointData = () => publicAPI.setScalarMode(1);\n  publicAPI.setScalarModeToUseCellData = () => publicAPI.setScalarMode(2);\n  publicAPI.setScalarModeToUsePointFieldData = () => publicAPI.setScalarMode(3);\n  publicAPI.setScalarModeToUseCellFieldData = () => publicAPI.setScalarMode(4);\n  publicAPI.setScalarModeToUseFieldData = () => publicAPI.setScalarMode(5);\n  publicAPI.getAbstractScalars = (input, scalarMode, arrayAccessMode, arrayId, arrayName) => {\n    // make sure we have an input\n    if (!input || !model.scalarVisibility) {\n      return {\n        scalars: null,\n        cellFLag: false\n      };\n    }\n    let scalars = null;\n    let cellFlag = false;\n\n    // get scalar data and point/cell attribute according to scalar mode\n    if (scalarMode === ScalarMode.DEFAULT) {\n      scalars = input.getPointData().getScalars();\n      if (!scalars) {\n        scalars = input.getCellData().getScalars();\n        cellFlag = true;\n      }\n    } else if (scalarMode === ScalarMode.USE_POINT_DATA) {\n      scalars = input.getPointData().getScalars();\n    } else if (scalarMode === ScalarMode.USE_CELL_DATA) {\n      scalars = input.getCellData().getScalars();\n      cellFlag = true;\n    } else if (scalarMode === ScalarMode.USE_POINT_FIELD_DATA) {\n      const pd = input.getPointData();\n      if (arrayAccessMode === GetArray.BY_ID) {\n        scalars = pd.getArrayByIndex(arrayId);\n      } else {\n        scalars = pd.getArrayByName(arrayName);\n      }\n    } else if (scalarMode === ScalarMode.USE_CELL_FIELD_DATA) {\n      const cd = input.getCellData();\n      cellFlag = true;\n      if (arrayAccessMode === GetArray.BY_ID) {\n        scalars = cd.getArrayByIndex(arrayId);\n      } else {\n        scalars = cd.getArrayByName(arrayName);\n      }\n    } else if (scalarMode === ScalarMode.USE_FIELD_DATA) {\n      const fd = input.getFieldData();\n      if (arrayAccessMode === GetArray.BY_ID) {\n        scalars = fd.getArrayByIndex(arrayId);\n      } else {\n        scalars = fd.getArrayByName(arrayName);\n      }\n    }\n    return {\n      scalars,\n      cellFlag\n    };\n  };\n  publicAPI.getLookupTable = () => {\n    if (!model.lookupTable) {\n      publicAPI.createDefaultLookupTable();\n    }\n    return model.lookupTable;\n  };\n  publicAPI.getMTime = () => {\n    let mt = model.mtime;\n    if (model.lookupTable !== null) {\n      const time = model.lookupTable.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    return mt;\n  };\n  publicAPI.mapScalars = (input, alpha) => {\n    const scalars = publicAPI.getAbstractScalars(input, model.scalarMode, model.arrayAccessMode, model.arrayId, model.colorByArrayName).scalars;\n    if (!scalars) {\n      model.colorMapColors = null;\n      return;\n    }\n\n    // we want to only recompute when something has changed\n    const toString = `${publicAPI.getMTime()}${scalars.getMTime()}${alpha}`;\n    if (model.colorBuildString === toString) return;\n    if (!model.useLookupTableScalarRange) {\n      publicAPI.getLookupTable().setRange(model.scalarRange[0], model.scalarRange[1]);\n    }\n    const lut = publicAPI.getLookupTable();\n    if (lut) {\n      // Ensure that the lookup table is built\n      lut.build();\n      model.colorMapColors = lut.mapScalars(scalars, model.colorMode, model.fieldDataTupleId);\n    }\n    model.colorBuildString = `${publicAPI.getMTime()}${scalars.getMTime()}${alpha}`;\n  };\n  publicAPI.getPrimitiveCount = () => {\n    const input = publicAPI.getInputData();\n    const pcount = {\n      points: input.getPoints().getNumberOfValues() / 3,\n      verts: input.getVerts().getNumberOfValues() - input.getVerts().getNumberOfCells(),\n      lines: input.getLines().getNumberOfValues() - 2 * input.getLines().getNumberOfCells(),\n      triangles: input.getPolys().getNumberOfValues() - 3 * input.getPolys().getNumberOfCells()\n    };\n    return pcount;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  static: false,\n  lookupTable: null,\n  scalarVisibility: false,\n  scalarRange: [0, 1],\n  useLookupTableScalarRange: false,\n  colorMode: 0,\n  scalarMode: 0,\n  arrayAccessMode: 1,\n  // By_NAME\n\n  renderTime: 0,\n  colorByArrayName: null,\n  transformCoordinate: null,\n  viewSpecificProperties: null,\n  customShaderAttributes: []\n};\n\n// ----------------------------------------------------------------------------\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkAbstractMapper.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['colorMapColors']);\n  macro.setGet(publicAPI, model, ['arrayAccessMode', 'colorByArrayName', 'colorMode', 'lookupTable', 'renderTime', 'scalarMode', 'scalarVisibility', 'static', 'transformCoordinate', 'useLookupTableScalarRange', 'viewSpecificProperties', 'customShaderAttributes' // point data array names that will be transferred to the VBO\n  ]);\n\n  macro.setGetArray(publicAPI, model, ['scalarRange'], 2);\n  if (!model.viewSpecificProperties) {\n    model.viewSpecificProperties = {};\n  }\n\n  // Object methods\n  vtkMapper2D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkMapper2D');\n\n// ----------------------------------------------------------------------------\n\nvar vtkMapper2D$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkMapper2D$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkDataArray from './DataArray.js';\nimport { VtkDataTypes } from './DataArray/Constants.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\nconst INVALID_BOUNDS = [1, -1, 1, -1, 1, -1];\n\n// ----------------------------------------------------------------------------\n// vtkPoints methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPoints(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPoints');\n\n  // Forwarding methods\n  publicAPI.getNumberOfPoints = publicAPI.getNumberOfTuples;\n  publicAPI.setNumberOfPoints = function (nbPoints) {\n    let dimension = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n    if (publicAPI.getNumberOfPoints() !== nbPoints) {\n      model.size = nbPoints * dimension;\n      model.values = macro.newTypedArray(model.dataType, model.size);\n      publicAPI.setNumberOfComponents(dimension);\n      publicAPI.modified();\n    }\n  };\n  publicAPI.setPoint = function (idx) {\n    for (var _len = arguments.length, xyz = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      xyz[_key - 1] = arguments[_key];\n    }\n    publicAPI.setTuple(idx, xyz);\n  };\n  publicAPI.getPoint = publicAPI.getTuple;\n  publicAPI.findPoint = publicAPI.findTuple;\n  publicAPI.insertNextPoint = (x, y, z) => publicAPI.insertNextTuple([x, y, z]);\n  publicAPI.getBounds = () => {\n    if (publicAPI.getNumberOfComponents() === 3) {\n      const xRange = publicAPI.getRange(0);\n      model.bounds[0] = xRange[0];\n      model.bounds[1] = xRange[1];\n      const yRange = publicAPI.getRange(1);\n      model.bounds[2] = yRange[0];\n      model.bounds[3] = yRange[1];\n      const zRange = publicAPI.getRange(2);\n      model.bounds[4] = zRange[0];\n      model.bounds[5] = zRange[1];\n      return model.bounds;\n    }\n    if (publicAPI.getNumberOfComponents() !== 2) {\n      vtkErrorMacro(`getBounds called on an array with components of\n        ${publicAPI.getNumberOfComponents()}`);\n      return INVALID_BOUNDS;\n    }\n    const xRange = publicAPI.getRange(0);\n    model.bounds[0] = xRange[0];\n    model.bounds[1] = xRange[1];\n    const yRange = publicAPI.getRange(1);\n    model.bounds[2] = yRange[0];\n    model.bounds[3] = yRange[1];\n    model.bounds[4] = 0;\n    model.bounds[5] = 0;\n    return model.bounds;\n  };\n\n  // Trigger the computation of bounds\n  publicAPI.computeBounds = publicAPI.getBounds;\n\n  // Initialize\n  publicAPI.setNumberOfComponents(model.numberOfComponents < 2 ? 3 : model.numberOfComponents);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  empty: true,\n  numberOfComponents: 3,\n  dataType: VtkDataTypes.FLOAT,\n  bounds: [1, -1, 1, -1, 1, -1]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkDataArray.extend(publicAPI, model, initialValues);\n  vtkPoints(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkPoints');\n\n// ----------------------------------------------------------------------------\n\nvar vtkPoints$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkPoints$1 as default, extend, newInstance };\n","var vtkPolyData2DFS = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkPolyData2DFS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n\\nuniform int PrimitiveIDOffset;\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\n// Scalar coloring\\n//VTK::Color::Dec\\n\\n// Depth Peeling\\n//VTK::DepthPeeling::Dec\\n\\n// picking support\\n//VTK::Picking::Dec\\n\\n// the output of this shader\\n//VTK::Output::Dec\\n\\n// Apple Bug\\n//VTK::PrimID::Dec\\n\\nvoid main()\\n{\\n  // Apple Bug\\n  //VTK::PrimID::Impl\\n\\n  //VTK::Color::Impl\\n  //VTK::TCoord::Impl\\n\\n  //VTK::DepthPeeling::Impl\\n  //VTK::Picking::Impl\\n\\n  if (gl_FragData[0].a <= 0.0)\\n    {\\n    discard;\\n    }\\n}\\n\";\n\nexport { vtkPolyData2DFS as v };\n","var vtkPolyData2DVS = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkPolyData2DVS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n\\n// all variables that represent positions or directions have a suffix\\n// indicating the coordinate system they are in. The possible values are\\n// MC - Model Coordinates\\n// WC - WC world coordinates\\n// VC - View Coordinates\\n// DC - Display Coordinates\\n\\nin vec4 vertexWC;\\n\\n// frag position in VC\\n//VTK::PositionVC::Dec\\n\\n// material property values\\n//VTK::Color::Dec\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\n// Apple Bug\\n//VTK::PrimID::Dec\\n\\nuniform mat4 WCVCMatrix;  // World to view matrix\\n\\nvoid main()\\n{\\n  // Apple Bug\\n  //VTK::PrimID::Impl\\n\\n  gl_Position = WCVCMatrix*vertexWC;\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::Color::Impl\\n\\n  //VTK::PositionVC::Impl\\n}\\n\";\n\nexport { vtkPolyData2DVS as v };\n","const DisplayLocation = {\n  BACKGROUND: 0,\n  FOREGROUND: 1\n};\nvar Constants = {\n  DisplayLocation\n};\n\nexport { DisplayLocation, Constants as default };\n","import { mat4 } from 'gl-matrix';\nimport { n as newInstance$1, e as setGet, o as obj, c as macro } from '../../macros2.js';\nimport vtkHelper from './Helper.js';\nimport vtkMapper2D from '../Core/Mapper2D.js';\nimport vtkPoints from '../../Common/Core/Points.js';\nimport { v as vtkPolyData2DFS } from './glsl/vtkPolyData2DFS.glsl.js';\nimport { v as vtkPolyData2DVS } from './glsl/vtkPolyData2DVS.glsl.js';\nimport vtkReplacementShaderMapper from './ReplacementShaderMapper.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { P as round } from '../../Common/Core/Math/index.js';\nimport { DisplayLocation } from '../Core/Property2D/Constants.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// import { mat3, mat4, vec3 } from 'gl-matrix';\nconst {\n  primTypes\n} = vtkHelper;\nconst {\n  ScalarMode\n} = vtkMapper2D;\nconst {\n  vtkErrorMacro\n} = macro;\nconst StartEvent = {\n  type: 'StartEvent'\n};\nconst EndEvent = {\n  type: 'EndEvent'\n};\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLPolyDataMapper2D methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLPolyDataMapper2D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLPolyDataMapper2D');\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model.openGLActor2D = publicAPI.getFirstAncestorOfType('vtkOpenGLActor2D');\n      model._openGLRenderer = model.openGLActor2D.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model._openGLRenderWindow = model._openGLRenderer.getLastAncestorOfType('vtkOpenGLRenderWindow');\n      model.openGLCamera = model._openGLRenderer.getViewNodeFor(model._openGLRenderer.getRenderable().getActiveCamera());\n    }\n  };\n  publicAPI.overlayPass = prepass => {\n    if (prepass) {\n      publicAPI.render();\n    }\n  };\n  publicAPI.getShaderTemplate = (shaders, ren, actor) => {\n    shaders.Vertex = vtkPolyData2DVS;\n    shaders.Fragment = vtkPolyData2DFS;\n    shaders.Geometry = '';\n  };\n  publicAPI.render = () => {\n    const ctx = model._openGLRenderWindow.getContext();\n    if (model.context !== ctx) {\n      model.context = ctx;\n      for (let i = primTypes.Start; i < primTypes.End; i++) {\n        model.primitives[i].setOpenGLRenderWindow(model._openGLRenderWindow);\n      }\n    }\n    const actor = model.openGLActor2D.getRenderable();\n    const ren = model._openGLRenderer.getRenderable();\n    publicAPI.renderPiece(ren, actor);\n  };\n  publicAPI.renderPiece = (ren, actor) => {\n    publicAPI.invokeEvent(StartEvent);\n    if (!model.renderable.getStatic()) {\n      model.renderable.update();\n    }\n    model.currentInput = model.renderable.getInputData();\n    publicAPI.invokeEvent(EndEvent);\n    if (!model.currentInput) {\n      vtkErrorMacro('No input!');\n      return;\n    }\n\n    // if there are no points then we are done\n    if (!model.currentInput.getPoints || !model.currentInput.getPoints().getNumberOfValues()) {\n      return;\n    }\n    publicAPI.renderPieceStart(ren, actor);\n    publicAPI.renderPieceDraw(ren, actor);\n    publicAPI.renderPieceFinish(ren, actor);\n  };\n  publicAPI.renderPieceStart = (ren, actor) => {\n    model.primitiveIDOffset = 0;\n    if (model._openGLRenderer.getSelector()) {\n      switch (model._openGLRenderer.getSelector().getCurrentPass()) {\n        default:\n          model._openGLRenderer.getSelector().renderProp(actor);\n      }\n    }\n    // make sure the BOs are up to date\n    publicAPI.updateBufferObjects(ren, actor);\n\n    // Bind the OpenGL, this is shared between the different primitive/cell types.\n    model.lastBoundBO = null;\n  };\n  publicAPI.getNeedToRebuildShaders = (cellBO, ren, actor) => {\n    // has something changed that would require us to recreate the shader?\n    // candidates are\n    // property modified (representation interpolation and lighting)\n    // input modified\n    // light complexity changed\n    if (cellBO.getShaderSourceTime().getMTime() < model.renderable.getMTime() || cellBO.getShaderSourceTime().getMTime() < model.currentInput.getMTime()) {\n      return true;\n    }\n    return false;\n  };\n  publicAPI.updateBufferObjects = (ren, actor) => {\n    // Rebuild buffers if needed\n    if (publicAPI.getNeedToRebuildBufferObjects(ren, actor)) {\n      publicAPI.buildBufferObjects(ren, actor);\n    }\n  };\n  publicAPI.getNeedToRebuildBufferObjects = (ren, actor) => {\n    // first do a coarse check\n    // Note that the actor's mtime includes it's properties mtime\n    const vmtime = model.VBOBuildTime.getMTime();\n    if (vmtime < publicAPI.getMTime() || vmtime < model._openGLRenderWindow.getMTime() || vmtime < model.renderable.getMTime() || vmtime < actor.getMTime() || vmtime < model.currentInput.getMTime() || model.renderable.getTransformCoordinate() && vmtime < ren.getMTime()) {\n      return true;\n    }\n    return false;\n  };\n  publicAPI.buildBufferObjects = (ren, actor) => {\n    const poly = model.currentInput;\n    if (poly === null) {\n      return;\n    }\n    model.renderable.mapScalars(poly, actor.getProperty().getOpacity());\n    const c = model.renderable.getColorMapColors();\n    model.haveCellScalars = false;\n    const scalarMode = model.renderable.getScalarMode();\n    if (model.renderable.getScalarVisibility()) {\n      // We must figure out how the scalars should be mapped to the polydata.\n      if ((scalarMode === ScalarMode.USE_CELL_DATA || scalarMode === ScalarMode.USE_CELL_FIELD_DATA || scalarMode === ScalarMode.USE_FIELD_DATA || !poly.getPointData().getScalars()) && scalarMode !== ScalarMode.USE_POINT_FIELD_DATA && c) {\n        model.haveCellScalars = true;\n      }\n    }\n    const representation = actor.getProperty().getRepresentation();\n    let tcoords = poly.getPointData().getTCoords();\n    if (!model.openGLActor2D.getActiveTextures()) {\n      tcoords = null;\n    }\n    const transformCoordinate = model.renderable.getTransformCoordinate();\n    const view = ren.getRenderWindow().getViews()[0];\n    const vsize = view.getViewportSize(ren);\n    const toString = `${poly.getMTime()}A${representation}B${poly.getMTime()}` + `C${c ? c.getMTime() : 1}` + `D${tcoords ? tcoords.getMTime() : 1}` + `E${transformCoordinate ? ren.getMTime() : 1}` + `F${vsize}`;\n    if (model.VBOBuildString !== toString) {\n      // Build the VBOs\n      let points = poly.getPoints();\n      if (transformCoordinate) {\n        const p = vtkPoints.newInstance();\n        const numPts = points.getNumberOfPoints();\n        p.setNumberOfPoints(numPts);\n        const point = [];\n        for (let i = 0; i < numPts; ++i) {\n          points.getPoint(i, point);\n          transformCoordinate.setValue(point);\n          const v = transformCoordinate.getComputedDoubleViewportValue(ren);\n          p.setPoint(i, v[0], v[1], 0.0);\n        }\n        points = p;\n      }\n      const options = {\n        points,\n        tcoords,\n        colors: c,\n        cellOffset: 0,\n        haveCellScalars: model.haveCellSCalars,\n        customAttributes: model.renderable.getCustomShaderAttributes().map(arrayName => poly.getPointData().getArrayByName(arrayName))\n      };\n      options.cellOffset += model.primitives[primTypes.Points].getCABO().createVBO(poly.getVerts(), 'verts', representation, options);\n      options.cellOffset += model.primitives[primTypes.Lines].getCABO().createVBO(poly.getLines(), 'lines', representation, options);\n      options.cellOffset += model.primitives[primTypes.Tris].getCABO().createVBO(poly.getPolys(), 'polys', representation, options);\n      options.cellOffset += model.primitives[primTypes.TriStrips].getCABO().createVBO(poly.getStrips(), 'strips', representation, options);\n      model.VBOBuildTime.modified();\n      model.VBOBuildString = toString;\n    }\n  };\n  publicAPI.renderPieceDraw = (ren, actor) => {\n    const representation = actor.getProperty().getRepresentation();\n    const gl = model.context;\n    gl.depthMask(true);\n\n    // for every primitive type\n    for (let i = primTypes.Start; i < primTypes.End; i++) {\n      // if there are entries\n      const cabo = model.primitives[i].getCABO();\n      if (cabo.getElementCount()) {\n        model.lastBoundBO = model.primitives[i];\n        model.primitiveIDOffset += model.primitives[i].drawArrays(ren, actor, representation, publicAPI);\n      }\n    }\n  };\n  publicAPI.renderPieceFinish = (ren, actor) => {\n    if (model.lastBoundBO) {\n      model.lastBoundBO.getVAO().release();\n    }\n  };\n  publicAPI.replaceShaderValues = (shaders, ren, actor) => {\n    publicAPI.replaceShaderColor(shaders, ren, actor);\n    publicAPI.replaceShaderTCoord(shaders, ren, actor);\n    publicAPI.replaceShaderPicking(shaders, ren, actor);\n    publicAPI.replaceShaderPositionVC(shaders, ren, actor);\n  };\n  publicAPI.replaceShaderColor = (shaders, ren, actor) => {\n    let VSSource = shaders.Vertex;\n    let GSSource = shaders.Geometry;\n    let FSSource = shaders.Fragment;\n    if (model.haveCellScalars) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Dec', ['uniform samplerBuffer texture1;']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Impl', ['gl_FragData[0] = texelFetchBuffer(texture1, gl_PrimitiveID + PrimitiveIDOffset);']).result;\n    }\n    if (model.lastBoundBO.getCABO().getColorComponents() !== 0) {\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Color::Dec', ['in vec4 diffuseColor;', 'out vec4 fcolorVSOutput;']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Color::Impl', ['fcolorVSOutput = diffuseColor;']).result;\n      GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Color::Dec', ['in vec4 fcolorVSOutput[];\\n', 'out vec4 fcolorGSOutput;']).result;\n      GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Color::Impl', ['fcolorGSOutput = fcolorVSOutput[i];']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Dec', ['in vec4 fcolorVSOutput;']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Impl', ['gl_FragData[0] = fcolorVSOutput;']).result;\n    } else {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Dec', ['uniform vec4 diffuseColor;']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Impl', ['gl_FragData[0] = diffuseColor;']).result;\n    }\n    shaders.Vertex = VSSource;\n    shaders.Geometry = GSSource;\n    shaders.Fragment = FSSource;\n  };\n  publicAPI.replaceShaderTCoord = (shaders, ren, actor) => {\n    if (model.lastBoundBO.getCABO().getTCoordOffset()) {\n      let VSSource = shaders.Vertex;\n      let GSSource = shaders.Geometry;\n      let FSSource = shaders.Fragment;\n      const tcdim = model.lastBoundBO.getCABO().getTCoordComponents();\n      if (tcdim === 1) {\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Dec', ['in float tcoordMC;', 'out float tcoordVCVSOutput;']).result;\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Impl', ['tcoordVCVSOutput = tcoordMC;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::TCoord::Dec', ['in float tcoordVCVSOutput[];\\n', 'out float tcoordVCGSOutput;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, ['//VTK::TCoord::Impl', 'tcoordVCGSOutput = tcoordVCVSOutput[i];']).result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Dec', ['in float tcoordVCVSOutput;', 'uniform sampler2D texture1;']).result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['gl_FragData[0] = gl_FragData[0]*texture2D(texture1, vec2(tcoordVCVSOutput,0));']).result;\n      } else if (tcdim === 2) {\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Dec', ['in vec2 tcoordMC;', 'out vec2 tcoordVCVSOutput;']).result;\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Impl', ['tcoordVCVSOutput = tcoordMC;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::TCoord::Dec', ['in vec2 tcoordVCVSOutput[];\\n', 'out vec2 tcoordVCGSOutput;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::TCoord::Impl', ['tcoordVCGSOutput = tcoordVCVSOutput[i];']).result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Dec', ['in vec2 tcoordVCVSOutput;', 'uniform sampler2D texture1;']).result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['gl_FragData[0] = gl_FragData[0]*texture2D(texture1, tcoordVCVSOutput.st);']).result;\n      }\n      if (model.haveCellScalars) {\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::PrimID::Impl', ['gl_PrimitiveID = gl_PrimitiveIDIn;']).result;\n      }\n      shaders.Vertex = VSSource;\n      shaders.Geometry = GSSource;\n      shaders.Fragment = FSSource;\n    }\n  };\n  publicAPI.replaceShaderPicking = (shaders, ren, actor) => {\n    let FSSource = shaders.Fragment;\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Dec', ['uniform vec3 mapperIndex;', 'uniform int picking;']).result;\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Impl', '  gl_FragData[0] = picking != 0 ? vec4(mapperIndex,1.0) : gl_FragData[0];').result;\n    shaders.Fragment = FSSource;\n  };\n  publicAPI.replaceShaderPositionVC = (shaders, ren, actor) => {\n    // replace common shader code\n    model.lastBoundBO.replaceShaderPositionVC(shaders, ren, actor);\n  };\n  publicAPI.invokeShaderCallbacks = (cellBO, ren, actor) => {\n    const listCallbacks = model.renderable.getViewSpecificProperties().ShadersCallbacks;\n    if (listCallbacks) {\n      listCallbacks.forEach(object => {\n        object.callback(object.userData, cellBO, ren, actor);\n      });\n    }\n  };\n  publicAPI.setMapperShaderParameters = (cellBO, ren, actor) => {\n    // Now to update the VAO too, if necessary.\n    if (cellBO.getProgram().isUniformUsed('PrimitiveIDOffset')) {\n      cellBO.getProgram().setUniformi('PrimitiveIDOffset', model.primitiveIDOffset);\n    }\n    if (cellBO.getProgram().isAttributeUsed('vertexWC')) {\n      if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'vertexWC', cellBO.getCABO().getVertexOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, false)) {\n        vtkErrorMacro('Error setting vertexWC in shader VAO.');\n      }\n    }\n    if (cellBO.getCABO().getElementCount() && (model.VBOBuildTime.getMTime() > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime())) {\n      model.renderable.getCustomShaderAttributes().forEach((attrName, idx) => {\n        if (cellBO.getProgram().isAttributeUsed(`${attrName}MC`)) {\n          if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), `${attrName}MC`, cellBO.getCABO().getCustomData()[idx].offset, cellBO.getCABO().getStride(), model.context.FLOAT, cellBO.getCABO().getCustomData()[idx].components, false)) {\n            vtkErrorMacro(`Error setting ${attrName}MC in shader VAO.`);\n          }\n        }\n      });\n      if (cellBO.getProgram().isAttributeUsed('tcoordMC') && cellBO.getCABO().getTCoordOffset()) {\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'tcoordMC', cellBO.getCABO().getTCoordOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, cellBO.getCABO().getTCoordComponents(), false)) {\n          vtkErrorMacro('Error setting tcoordMC in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('tcoordMC');\n      }\n      if (model.internalColorTexture && cellBO.getProgram().isUniformUsed('texture1')) {\n        cellBO.getProgram().setUniformi('texture1', model.internalColorTexture.getTextureUnit());\n      }\n      const tus = model.openGLActor2D.getActiveTextures();\n      if (tus) {\n        for (let index = 0; index < tus.length; ++index) {\n          const tex = tus[index];\n          const texUnit = tex.getTextureUnit();\n          const tname = `texture${texUnit + 1}`;\n          if (cellBO.getProgram().isUniformUsed(tname)) {\n            cellBO.getProgram().setUniformi(tname, texUnit);\n          }\n        }\n      }\n\n      // handle wide lines\n      cellBO.setMapperShaderParameters(ren, actor, model._openGLRenderer.getTiledSizeAndOrigin());\n      const selector = model._openGLRenderer.getSelector();\n      cellBO.getProgram().setUniform3fArray('mapperIndex', selector ? selector.getPropColorValue() : [0.0, 0.0, 0.0]);\n      cellBO.getProgram().setUniformi('picking', selector ? selector.getCurrentPass() + 1 : 0);\n    }\n  };\n  publicAPI.setPropertyShaderParameters = (cellBO, ren, actor) => {\n    const c = model.renderable.getColorMapColors();\n    if (!c || c.getNumberOfComponents() === 0) {\n      const program = cellBO.getProgram();\n      const ppty = actor.getProperty();\n      const opacity = ppty.getOpacity();\n      const dColor = ppty.getColor();\n      const diffuseColor = [dColor[0], dColor[1], dColor[2], opacity];\n      program.setUniform4f('diffuseColor', diffuseColor);\n    }\n  };\n  publicAPI.setLightingShaderParameters = (cellBO, ren, actor) => {\n    // no-op\n  };\n  function safeMatrixMultiply(matrixArray, matrixType, tmpMat) {\n    matrixType.identity(tmpMat);\n    return matrixArray.reduce((res, matrix, index) => {\n      if (index === 0) {\n        return matrix ? matrixType.copy(res, matrix) : matrixType.identity(res);\n      }\n      return matrix ? matrixType.multiply(res, res, matrix) : res;\n    }, tmpMat);\n  }\n  publicAPI.setCameraShaderParameters = (cellBO, ren, actor) => {\n    const program = cellBO.getProgram();\n    const shiftScaleEnabled = cellBO.getCABO().getCoordShiftAndScaleEnabled();\n    const inverseShiftScaleMatrix = shiftScaleEnabled ? cellBO.getCABO().getInverseShiftAndScaleMatrix() : null;\n\n    // Get the position of the actor\n    const view = ren.getRenderWindow().getViews()[0];\n    const size = view.getViewportSize(ren);\n    const vport = ren.getViewport();\n    const actorPos = actor.getActualPositionCoordinate().getComputedDoubleViewportValue(ren);\n\n    // Get the window info\n    // Assume tile viewport is 0 1 based on vtkOpenGLRenderer\n    const tileViewport = [0.0, 0.0, 1.0, 1.0];\n    const visVP = [0.0, 0.0, 1.0, 1.0];\n    visVP[0] = vport[0] >= tileViewport[0] ? vport[0] : tileViewport[0];\n    visVP[1] = vport[1] >= tileViewport[1] ? vport[1] : tileViewport[1];\n    visVP[2] = vport[2] <= tileViewport[2] ? vport[2] : tileViewport[2];\n    visVP[3] = vport[3] <= tileViewport[3] ? vport[3] : tileViewport[3];\n    if (visVP[0] >= visVP[2]) {\n      return;\n    }\n    if (visVP[1] >= visVP[3]) {\n      return;\n    }\n    size[0] = round(size[0] * (visVP[2] - visVP[0]) / (vport[2] - vport[0]));\n    size[1] = round(size[1] * (visVP[3] - visVP[1]) / (vport[3] - vport[1]));\n    const winSize = model._openGLRenderer.getParent().getSize();\n    const xoff = round(actorPos[0] - (visVP[0] - vport[0]) * winSize[0]);\n    const yoff = round(actorPos[1] - (visVP[1] - vport[1]) * winSize[1]);\n\n    // set ortho projection\n    const left = -xoff;\n    let right = -xoff + size[0];\n    const bottom = -yoff;\n    let top = -yoff + size[1];\n\n    // it's an error to call glOrtho with\n    // either left==right or top==bottom\n    if (left === right) {\n      right = left + 1.0;\n    }\n    if (bottom === top) {\n      top = bottom + 1.0;\n    }\n\n    // compute the combined ModelView matrix and send it down to save time in the shader\n    const tmpMat4 = mat4.identity(new Float64Array(16));\n    tmpMat4[0] = 2.0 / (right - left);\n    tmpMat4[1 * 4 + 1] = 2.0 / (top - bottom);\n    tmpMat4[0 * 4 + 3] = -1.0 * (right + left) / (right - left);\n    tmpMat4[1 * 4 + 3] = -1.0 * (top + bottom) / (top - bottom);\n    tmpMat4[2 * 4 + 2] = 0.0;\n    tmpMat4[2 * 4 + 3] = actor.getProperty().getDisplayLocation() === DisplayLocation.FOREGROUND ? -1.0 : 1.0;\n    tmpMat4[3 * 4 + 3] = 1.0;\n    mat4.transpose(tmpMat4, tmpMat4);\n    program.setUniformMatrix('WCVCMatrix', safeMatrixMultiply([tmpMat4, inverseShiftScaleMatrix], mat4, model.tmpMat4));\n  };\n  publicAPI.getAllocatedGPUMemoryInBytes = () => {\n    let memUsed = 0;\n    model.primitives.forEach(prim => {\n      memUsed += prim.getAllocatedGPUMemoryInBytes();\n    });\n    // Return in MB\n    return memUsed;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  VBOBuildTime: 0,\n  VBOBuildString: null,\n  primitives: null,\n  primTypes: null,\n  shaderRebuildString: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  vtkReplacementShaderMapper.implementReplaceShaderCoincidentOffset(publicAPI, model, initialValues);\n  vtkReplacementShaderMapper.implementBuildShadersWithReplacements(publicAPI, model, initialValues);\n  model.primitives = [];\n  model.primTypes = primTypes;\n  model.tmpMat4 = mat4.identity(new Float64Array(16));\n  for (let i = primTypes.Start; i < primTypes.End; i++) {\n    model.primitives[i] = vtkHelper.newInstance();\n    model.primitives[i].setPrimitiveType(i);\n    model.primitives[i].set({\n      lastLightComplexity: 0,\n      lastLightCount: 0,\n      lastSelectionPass: false\n    }, true);\n  }\n\n  // Build VTK API\n  setGet(publicAPI, model, ['context']);\n  model.VBOBuildTime = {};\n  obj(model.VBOBuildTime, {\n    mtime: 0\n  });\n\n  // Object methods\n  vtkOpenGLPolyDataMapper2D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkOpenGLPolyDataMapper2D');\n\n// ----------------------------------------------------------------------------\n\nvar vtkPolyDataMapper2D = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkMapper2D', newInstance);\n\nexport { vtkPolyDataMapper2D as default, extend, newInstance };\n","import { mat3, mat4 } from 'gl-matrix';\nimport { n as newInstance$1, o as obj, e as setGet, g as get, c as macro } from '../../macros2.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkHelper from './Helper.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport vtkOpenGLTexture from './Texture.js';\nimport { Representation } from '../Core/Property/Constants.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLSkybox methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLSkybox(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLSkybox');\n\n  // Builds myself.\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model._openGLRenderWindow = model._openGLRenderer.getParent();\n      model.context = model._openGLRenderWindow.getContext();\n      model.tris.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.openGLTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      const ren = model._openGLRenderer.getRenderable();\n      model.openGLCamera = model._openGLRenderer.getViewNodeFor(ren.getActiveCamera());\n    }\n  };\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n      renderPass.incrementOpaqueActorCount();\n    }\n  };\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    if (prepass && !model._openGLRenderer.getSelector()) {\n      publicAPI.updateBufferObjects();\n      model.context.depthMask(true);\n      model._openGLRenderWindow.getShaderCache().readyShaderProgram(model.tris.getProgram());\n      model.openGLTexture.render(model._openGLRenderWindow);\n      const texUnit = model.openGLTexture.getTextureUnit();\n      model.tris.getProgram().setUniformi('sbtexture', texUnit);\n      const ren = model._openGLRenderer.getRenderable();\n      const keyMats = model.openGLCamera.getKeyMatrices(ren);\n      const imat = new Float64Array(16);\n      mat4.invert(imat, keyMats.wcpc);\n      model.tris.getProgram().setUniformMatrix('IMCPCMatrix', imat);\n      if (model.lastFormat === 'box') {\n        const camPos = ren.getActiveCamera().getPosition();\n        model.tris.getProgram().setUniform3f('camPos', camPos[0], camPos[1], camPos[2]);\n      }\n      model.tris.getVAO().bind();\n\n      // draw polygons\n      model.context.drawArrays(model.context.TRIANGLES, 0, model.tris.getCABO().getElementCount());\n      model.tris.getVAO().release();\n      model.openGLTexture.deactivate();\n    }\n  };\n  publicAPI.updateBufferObjects = () => {\n    // build the VBO if needed, only happens once\n    if (!model.tris.getCABO().getElementCount()) {\n      const ptsArray = new Float32Array(12);\n      for (let i = 0; i < 4; i++) {\n        ptsArray[i * 3] = i % 2 * 2 - 1.0;\n        ptsArray[i * 3 + 1] = i > 1 ? 1.0 : -1.0;\n        ptsArray[i * 3 + 2] = 1.0;\n      }\n      const points = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        values: ptsArray\n      });\n      points.setName('points');\n      const cellArray = new Uint16Array(8);\n      cellArray[0] = 3;\n      cellArray[1] = 0;\n      cellArray[2] = 1;\n      cellArray[3] = 3;\n      cellArray[4] = 3;\n      cellArray[5] = 0;\n      cellArray[6] = 3;\n      cellArray[7] = 2;\n      const cells = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        values: cellArray\n      });\n      model.tris.getCABO().createVBO(cells, 'polys', Representation.SURFACE, {\n        points,\n        cellOffset: 0\n      });\n    }\n\n    // update the program?\n    if (model.renderable.getFormat() !== model.lastFormat) {\n      model.lastFormat = model.renderable.getFormat();\n      if (model.lastFormat === 'box') {\n        // we invert Y below because opengl is messed up!\n        // Cube Maps have been specified to follow the RenderMan\n        // specification (for whatever reason), and RenderMan\n        // assumes the images' origin being in the upper left,\n        // contrary to the usual OpenGL behaviour of having the\n        // image origin in the lower left. That's why things get\n        // swapped in the Y direction. It totally breaks with the usual\n        // OpenGL semantics and doesn't make sense at all.\n        // But now we're stuck with it.  From\n        // https://stackoverflow.com/questions/11685608/convention-of-faces-in-opengl-cubemapping\n        //\n        model.tris.setProgram(model._openGLRenderWindow.getShaderCache().readyShaderProgramArray(`//VTK::System::Dec\n             attribute vec3 vertexMC;\n             uniform mat4 IMCPCMatrix;\n             varying vec3 TexCoords;\n             void main () {\n              gl_Position = vec4(vertexMC.xyz, 1.0);\n              vec4 wpos = IMCPCMatrix * gl_Position;\n              TexCoords = wpos.xyz/wpos.w;\n             }`, `//VTK::System::Dec\n             //VTK::Output::Dec\n             varying vec3 TexCoords;\n             uniform samplerCube sbtexture;\n             uniform vec3 camPos;\n             void main () {\n               // skybox looks from inside out\n               // which means we have to adjust\n               // our tcoords. Otherwise text would\n               // be flipped\n               vec3 tc = normalize(TexCoords - camPos);\n               if (abs(tc.z) < max(abs(tc.x),abs(tc.y)))\n               {\n                 tc = vec3(1.0, 1.0, -1.0) * tc;\n               }\n               else\n               {\n                 tc = vec3(-1.0, 1.0, 1.0) * tc;\n               }\n               gl_FragData[0] = textureCube(sbtexture, tc);\n             }`, ''));\n      }\n      if (model.lastFormat === 'background') {\n        // maps the texture to the window\n        model.tris.setProgram(model._openGLRenderWindow.getShaderCache().readyShaderProgramArray(`//VTK::System::Dec\n             attribute vec3 vertexMC;\n             uniform mat4 IMCPCMatrix;\n             varying vec2 TexCoords;\n             void main () {\n              gl_Position = vec4(vertexMC.xyz, 1.0);\n              vec4 wpos = IMCPCMatrix * gl_Position;\n              TexCoords = vec2(vertexMC.x, vertexMC.y)*0.5 + 0.5;\n             }`, `//VTK::System::Dec\n             //VTK::Output::Dec\n             varying vec2 TexCoords;\n             uniform sampler2D sbtexture;\n             void main () {\n               gl_FragData[0] = texture2D(sbtexture, TexCoords);\n             }`, ''));\n      }\n      model.tris.getShaderSourceTime().modified();\n      model.tris.getVAO().bind();\n      if (!model.tris.getVAO().addAttributeArray(model.tris.getProgram(), model.tris.getCABO(), 'vertexMC', model.tris.getCABO().getVertexOffset(), model.tris.getCABO().getStride(), model.context.FLOAT, 3, model.context.FALSE)) {\n        vtkErrorMacro('Error setting vertexMC in shader VAO.');\n      }\n    }\n\n    // set/update the texture map if needed\n    const tmaps = model.renderable.getTextures();\n    if (!tmaps.length) {\n      vtkErrorMacro('vtkSkybox requires a texture map');\n    }\n    if (model.openGLTexture.getRenderable() !== tmaps[0]) {\n      model.openGLTexture.releaseGraphicsResources(model._openGLRenderWindow);\n      model.openGLTexture.setRenderable(tmaps[0]);\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.openGLTexture = vtkOpenGLTexture.newInstance();\n  model.tris = vtkHelper.newInstance();\n  model.keyMatrixTime = {};\n  obj(model.keyMatrixTime, {\n    mtime: 0\n  });\n  model.keyMatrices = {\n    normalMatrix: mat3.identity(new Float64Array(9)),\n    mcwc: mat4.identity(new Float64Array(16))\n  };\n\n  // Build VTK API\n  setGet(publicAPI, model, ['context']);\n  get(publicAPI, model, ['activeTextures']);\n\n  // Object methods\n  vtkOpenGLSkybox(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkSkybox = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkSkybox', newInstance);\n\nexport { vtkSkybox as default, extend, newInstance };\n","import { n as newInstance$1, c as macro } from '../../macros2.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// import { mat4, vec3 }     from 'gl-matrix';\nconst {\n  vtkDebugMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLPixelSpaceCallbackMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLPixelSpaceCallbackMapper(publicAPI, model) {\n  model.classHierarchy.push('vtkOpenGLPixelSpaceCallbackMapper');\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n    model._openGLRenderWindow = model._openGLRenderer.getLastAncestorOfType('vtkOpenGLRenderWindow');\n    const aspectRatio = model._openGLRenderer.getAspectRatio();\n    const camera = model._openGLRenderer ? model._openGLRenderer.getRenderable().getActiveCamera() : null;\n    const tsize = model._openGLRenderer.getTiledSizeAndOrigin();\n    let texels = null;\n    if (model.renderable.getUseZValues()) {\n      const zbt = renderPass.getZBufferTexture();\n      const width = Math.floor(zbt.getWidth());\n      const height = Math.floor(zbt.getHeight());\n      const gl = model._openGLRenderWindow.getContext();\n      zbt.bind();\n\n      // Here we need to use vtkFramebuffer to save current settings (bindings/buffers)\n      const fb = renderPass.getFramebuffer();\n      if (!fb) {\n        vtkDebugMacro('No framebuffer to save/restore');\n      } else {\n        // save framebuffer settings\n        fb.saveCurrentBindingsAndBuffers();\n      }\n      const framebuffer = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, zbt.getHandle(), 0);\n      if (gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE) {\n        texels = new Uint8Array(width * height * 4);\n        gl.viewport(0, 0, width, height);\n        gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, texels);\n      }\n\n      // Now we need to restore framebuffer bindings/buffers\n      if (fb) {\n        fb.restorePreviousBindingsAndBuffers();\n      }\n      gl.deleteFramebuffer(framebuffer);\n    }\n    model.renderable.invokeCallback(model.renderable.getInputData(), camera, aspectRatio, tsize, texels);\n  };\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (model.renderable.getUseZValues()) {\n        renderPass.requestDepth();\n      }\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  // Object methods\n  vtkOpenGLPixelSpaceCallbackMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkOpenGLPixelSpaceCallbackMapper');\n\n// ----------------------------------------------------------------------------\n\nvar vtkPixelSpaceCallbackMapper = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkPixelSpaceCallbackMapper', newInstance);\n\nexport { vtkPixelSpaceCallbackMapper as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkDataArray from './DataArray.js';\nimport { VtkDataTypes } from './DataArray/Constants.js';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction extractCellSizes(cellArray) {\n  let currentIdx = 0;\n  return cellArray.filter((value, index) => {\n    if (index === currentIdx) {\n      currentIdx += value + 1;\n      return true;\n    }\n    return false;\n  });\n}\nfunction getNumberOfCells(cellArray) {\n  let cellId = 0;\n  for (let cellArrayIndex = 0; cellArrayIndex < cellArray.length;) {\n    cellArrayIndex += cellArray[cellArrayIndex] + 1;\n    cellId++;\n  }\n  return cellId;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst STATIC = {\n  extractCellSizes,\n  getNumberOfCells\n};\n\n// ----------------------------------------------------------------------------\n// vtkCellArray methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCellArray(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCellArray');\n  const superClass = {\n    ...publicAPI\n  };\n  publicAPI.getNumberOfCells = recompute => {\n    if (model.numberOfCells !== undefined && !recompute) {\n      return model.numberOfCells;\n    }\n    if (model.cellSizes) {\n      model.numberOfCells = model.cellSizes.length;\n    } else {\n      model.numberOfCells = getNumberOfCells(publicAPI.getData());\n    }\n    return model.numberOfCells;\n  };\n  publicAPI.getCellSizes = recompute => {\n    if (model.cellSizes !== undefined && !recompute) {\n      return model.cellSizes;\n    }\n    model.cellSizes = extractCellSizes(publicAPI.getData());\n    return model.cellSizes;\n  };\n\n  /**\n   * When `resize()` is being used, you then MUST use `insertNextCell()`.\n   */\n  publicAPI.resize = requestedNumTuples => {\n    const oldNumTuples = publicAPI.getNumberOfTuples();\n    superClass.resize(requestedNumTuples);\n    const newNumTuples = publicAPI.getNumberOfTuples();\n    if (newNumTuples < oldNumTuples) {\n      if (newNumTuples === 0) {\n        model.numberOfCells = 0;\n        model.cellSizes = [];\n      } else {\n        // We do not know how many cells are left.\n        // Set to undefined to ensure insertNextCell works correctly.\n        model.numberOfCells = undefined;\n        model.cellSizes = undefined;\n      }\n    }\n  };\n  publicAPI.setData = typedArray => {\n    superClass.setData(typedArray, 1);\n    model.numberOfCells = undefined;\n    model.cellSizes = undefined;\n  };\n  publicAPI.getCell = loc => {\n    let cellLoc = loc;\n    const numberOfPoints = model.values[cellLoc++];\n    return model.values.subarray(cellLoc, cellLoc + numberOfPoints);\n  };\n  publicAPI.insertNextCell = cellPointIds => {\n    const cellId = publicAPI.getNumberOfCells();\n    publicAPI.insertNextTuples([cellPointIds.length, ...cellPointIds]);\n    // By computing the number of cells earlier, we made sure that numberOfCells is defined\n    ++model.numberOfCells;\n    if (model.cellSizes != null) {\n      model.cellSizes.push(cellPointIds.length);\n    }\n    return cellId;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nfunction defaultValues(initialValues) {\n  return {\n    empty: true,\n    numberOfComponents: 1,\n    dataType: VtkDataTypes.UNSIGNED_INT,\n    ...initialValues\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  vtkDataArray.extend(publicAPI, model, defaultValues(initialValues));\n  vtkCellArray(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkCellArray');\n\n// ----------------------------------------------------------------------------\n\nvar vtkCellArray$1 = {\n  newInstance,\n  extend,\n  ...STATIC\n};\n\nexport { STATIC, vtkCellArray$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport { u as uninitializeBounds } from '../Core/Math/index.js';\nimport vtkPoints from '../Core/Points.js';\n\n// ----------------------------------------------------------------------------\n// vtkCell methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCell(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCell');\n  publicAPI.initialize = function (points) {\n    let pointIdsList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (!pointIdsList) {\n      model.points = points;\n      model.pointsIds = new Array(points.getNumberOfPoints());\n      for (let i = points.getNumberOfPoints() - 1; i >= 0; --i) {\n        model.pointsIds[i] = i;\n      }\n    } else {\n      model.pointsIds = pointIdsList;\n      let triangleData = model.points.getData();\n      if (triangleData.length !== 3 * model.pointsIds.length) {\n        triangleData = macro.newTypedArray(points.getDataType(), 3 * model.pointsIds.length);\n      }\n      const pointsData = points.getData();\n      model.pointsIds.forEach((pointId, index) => {\n        // const start = 3 * pointId;\n        // pointsData.set(p.subarray(start, start + 3), 3 * index);\n        let pointOffset = 3 * pointId;\n        let trianglePointOffset = 3 * index;\n        triangleData[trianglePointOffset] = pointsData[pointOffset];\n        triangleData[++trianglePointOffset] = pointsData[++pointOffset];\n        triangleData[++trianglePointOffset] = pointsData[++pointOffset];\n      });\n      model.points.setData(triangleData);\n    }\n  };\n  publicAPI.getBounds = () => {\n    const nbPoints = model.points.getNumberOfPoints();\n    const x = [];\n    if (nbPoints) {\n      model.points.getPoint(0, x);\n      model.bounds[0] = x[0];\n      model.bounds[1] = x[0];\n      model.bounds[2] = x[1];\n      model.bounds[3] = x[1];\n      model.bounds[4] = x[2];\n      model.bounds[5] = x[2];\n      for (let i = 1; i < nbPoints; i++) {\n        model.points.getPoint(i, x);\n        model.bounds[0] = x[0] < model.bounds[0] ? x[0] : model.bounds[0];\n        model.bounds[1] = x[0] > model.bounds[1] ? x[0] : model.bounds[1];\n        model.bounds[2] = x[1] < model.bounds[2] ? x[1] : model.bounds[2];\n        model.bounds[3] = x[1] > model.bounds[3] ? x[1] : model.bounds[3];\n        model.bounds[4] = x[2] < model.bounds[4] ? x[2] : model.bounds[4];\n        model.bounds[5] = x[2] > model.bounds[5] ? x[2] : model.bounds[5];\n      }\n    } else {\n      uninitializeBounds(model.bounds);\n    }\n    return model.bounds;\n  };\n  publicAPI.getLength2 = () => {\n    publicAPI.getBounds();\n    let length = 0.0;\n    let diff = 0;\n    for (let i = 0; i < 3; i++) {\n      diff = model.bounds[2 * i + 1] - model.bounds[2 * i];\n      length += diff * diff;\n    }\n    return length;\n  };\n  publicAPI.getParametricDistance = pcoords => {\n    let pDist;\n    let pDistMax = 0.0;\n    for (let i = 0; i < 3; i++) {\n      if (pcoords[i] < 0.0) {\n        pDist = -pcoords[i];\n      } else if (pcoords[i] > 1.0) {\n        pDist = pcoords[i] - 1.0;\n      } else {\n        // inside the cell in the parametric direction\n        pDist = 0.0;\n      }\n      if (pDist > pDistMax) {\n        pDistMax = pDist;\n      }\n    }\n    return pDistMax;\n  };\n  publicAPI.getNumberOfPoints = () => model.points.getNumberOfPoints();\n  publicAPI.deepCopy = cell => {\n    cell.initialize(model.points, model.pointsIds);\n  };\n  publicAPI.getCellDimension = () => {}; // virtual\n  publicAPI.intersectWithLine = (p1, p2, tol, t, x, pcoords, subId) => {}; // virtual\n  publicAPI.evaluatePosition = (x, closestPoint, subId, pcoords, dist2, weights) => {\n    macro.vtkErrorMacro('vtkCell.evaluatePosition is not implemented.');\n  }; // virtual\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  bounds: [-1, -1, -1, -1, -1, -1],\n  pointsIds: []\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  if (!model.points) {\n    model.points = vtkPoints.newInstance();\n  }\n  macro.get(publicAPI, model, ['points', 'pointsIds']);\n  vtkCell(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkCell');\n\n// ----------------------------------------------------------------------------\n\nvar vtkCell$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkCell$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkCell from './Cell.js';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\nconst InitLink = {\n  ncells: 0,\n  cells: null\n};\nfunction resize(model, sz) {\n  let newSize = sz;\n  if (sz >= model.array.length) {\n    newSize += model.array.length;\n  }\n  while (newSize > model.array.length) model.array.push({\n    ncells: 0,\n    cells: null\n  });\n  model.array.length = newSize;\n}\n\n// ----------------------------------------------------------------------------\n// vtkCellLinks methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCellLinks(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCellLinks');\n\n  /**\n   * Build the link list array. All subclasses of vtkAbstractCellLinks\n   * must support this method.\n   */\n  publicAPI.buildLinks = data => {\n    const numPts = data.getPoints().getNumberOfPoints();\n    const numCells = data.getNumberOfCells();\n\n    // fill out lists with number of references to cells\n    const linkLoc = new Uint32Array(numPts);\n\n    // Use fast path if polydata\n    if (data.isA('vtkPolyData')) {\n      // traverse data to determine number of uses of each point\n      for (let cellId = 0; cellId < numCells; ++cellId) {\n        const {\n          cellPointIds\n        } = data.getCellPoints(cellId);\n        cellPointIds.forEach(cellPointId => {\n          publicAPI.incrementLinkCount(cellPointId);\n        });\n      }\n\n      // now allocate storage for the links\n      publicAPI.allocateLinks(numPts);\n      model.maxId = numPts - 1;\n      for (let cellId = 0; cellId < numCells; ++cellId) {\n        const {\n          cellPointIds\n        } = data.getCellPoints(cellId);\n        cellPointIds.forEach(cellPointId => {\n          publicAPI.insertCellReference(cellPointId, linkLoc[cellPointId]++, cellId);\n        });\n      }\n    } // any other type of dataset\n    else {\n      // traverse data to determine number of uses of each point\n      for (let cellId = 0; cellId < numCells; cellId++) {\n        // TODO: Currently not supported: const cell = data.getCell(cellId);\n        const cell = vtkCell.newInstance();\n        cell.getPointsIds().forEach(cellPointId => {\n          publicAPI.incrementLinkCount(cellPointId);\n        });\n      }\n\n      // now allocate storage for the links\n      publicAPI.allocateLinks(numPts);\n      model.maxId = numPts - 1;\n      for (let cellId = 0; cellId < numCells; ++cellId) {\n        // TODO: Currently not supported: const cell = data.getCell(cellId);\n        const cell = vtkCell.newInstance();\n        cell.getPointsIds().forEach(cellPointId => {\n          publicAPI.insertCellReference(cellPointId, linkLoc[cellPointId]++, cellId);\n        });\n      }\n    } // end else\n  };\n\n  /**\n   * Build the link list array with a provided connectivity array.\n   */\n  // publicAPI.buildLinks = (data, connectivity) => {};\n\n  /**\n   * Allocate the specified number of links (i.e., number of points) that\n   * will be built.\n   */\n  publicAPI.allocate = function (numLinks) {\n    let ext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n    model.array = Array(numLinks).fill().map(() => ({\n      ncells: 0,\n      cells: null\n    }));\n    model.extend = ext;\n    model.maxId = -1;\n  };\n  publicAPI.initialize = () => {\n    model.array = null;\n  };\n\n  /**\n   * Get a link structure given a point id.\n   */\n  publicAPI.getLink = ptId => model.array[ptId];\n\n  /**\n   * Get the number of cells using the point specified by ptId.\n   */\n  publicAPI.getNcells = ptId => model.array[ptId].ncells;\n\n  /**\n   * Return a list of cell ids using the point.\n   */\n  publicAPI.getCells = ptId => model.array[ptId].cells;\n\n  /**\n   * Insert a new point into the cell-links data structure. The size parameter\n   * is the initial size of the list.\n   */\n  publicAPI.insertNextPoint = numLinks => {\n    model.array.push({\n      ncells: numLinks,\n      cells: Array(numLinks)\n    });\n    ++model.maxId;\n  };\n\n  /**\n   * Insert a cell id into the list of cells (at the end) using the cell id\n   * provided. (Make sure to extend the link list (if necessary) using the\n   * method resizeCellList().)\n   */\n  publicAPI.insertNextCellReference = (ptId, cellId) => {\n    model.array[ptId].cells[model.array[ptId].ncells++] = cellId;\n  };\n\n  /**\n   * Delete point (and storage) by destroying links to using cells.\n   */\n  publicAPI.deletePoint = ptId => {\n    model.array[ptId].ncells = 0;\n    model.array[ptId].cells = null;\n  };\n\n  /**\n   * Delete the reference to the cell (cellId) from the point (ptId). This\n   * removes the reference to the cellId from the cell list, but does not\n   * resize the list (recover memory with resizeCellList(), if necessary).\n   */\n  publicAPI.removeCellReference = (cellId, ptId) => {\n    model.array[ptId].cells = model.array[ptId].cells.filter(cell => cell !== cellId);\n    model.array[ptId].ncells = model.array[ptId].cells.length;\n  };\n\n  /**\n   * Add the reference to the cell (cellId) from the point (ptId). This\n   * adds a reference to the cellId from the cell list, but does not resize\n   * the list (extend memory with resizeCellList(), if necessary).\n   */\n  publicAPI.addCellReference = (cellId, ptId) => {\n    model.array[ptId].cells[model.array[ptId].ncells++] = cellId;\n  };\n\n  /**\n   * Change the length of a point's link list (i.e., list of cells using a\n   * point) by the size specified.\n   */\n  publicAPI.resizeCellList = (ptId, size) => {\n    model.array[ptId].cells.length = size;\n  };\n\n  /**\n   * Reclaim any unused memory.\n   */\n  publicAPI.squeeze = () => {\n    resize(model, model.maxId + 1);\n  };\n\n  /**\n   * Reset to a state of no entries without freeing the memory.\n   */\n  publicAPI.reset = () => {\n    model.maxId = -1;\n  };\n\n  /**\n   * Standard DeepCopy method.  Since this object contains no reference\n   * to other objects, there is no ShallowCopy.\n   */\n  publicAPI.deepCopy = src => {\n    model.array = [...src.array];\n    model.extend = src.extend;\n    model.maxId = src.maxId;\n  };\n\n  /**\n   * Increment the count of the number of cells using the point.\n   */\n  publicAPI.incrementLinkCount = ptId => {\n    ++model.array[ptId].ncells;\n  };\n  publicAPI.allocateLinks = n => {\n    for (let i = 0; i < n; ++i) {\n      model.array[i].cells = new Array(model.array[i].ncells);\n    }\n  };\n\n  /**\n   * Insert a cell id into the list of cells using the point.\n   */\n  publicAPI.insertCellReference = (ptId, pos, cellId) => {\n    model.array[ptId].cells[pos] = cellId;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  array: null,\n  // pointer to data\n  maxId: 0,\n  // maximum index inserted thus far\n  extend: 0 // grow array by this point\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  vtkCellLinks(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkCellLinks');\n\n// ----------------------------------------------------------------------------\n\nvar vtkCellLinks$1 = {\n  newInstance,\n  extend\n};\n\nexport { InitLink, vtkCellLinks$1 as default, extend, newInstance };\n","const CellType = {\n  // Linear cells\n  VTK_EMPTY_CELL: 0,\n  VTK_VERTEX: 1,\n  VTK_POLY_VERTEX: 2,\n  VTK_LINE: 3,\n  VTK_POLY_LINE: 4,\n  VTK_TRIANGLE: 5,\n  VTK_TRIANGLE_STRIP: 6,\n  VTK_POLYGON: 7,\n  VTK_PIXEL: 8,\n  VTK_QUAD: 9,\n  VTK_TETRA: 10,\n  VTK_VOXEL: 11,\n  VTK_HEXAHEDRON: 12,\n  VTK_WEDGE: 13,\n  VTK_PYRAMID: 14,\n  VTK_PENTAGONAL_PRISM: 15,\n  VTK_HEXAGONAL_PRISM: 16,\n  // Quadratic, isoparametric cells\n  VTK_QUADRATIC_EDGE: 21,\n  VTK_QUADRATIC_TRIANGLE: 22,\n  VTK_QUADRATIC_QUAD: 23,\n  VTK_QUADRATIC_POLYGON: 36,\n  VTK_QUADRATIC_TETRA: 24,\n  VTK_QUADRATIC_HEXAHEDRON: 25,\n  VTK_QUADRATIC_WEDGE: 26,\n  VTK_QUADRATIC_PYRAMID: 27,\n  VTK_BIQUADRATIC_QUAD: 28,\n  VTK_TRIQUADRATIC_HEXAHEDRON: 29,\n  VTK_QUADRATIC_LINEAR_QUAD: 30,\n  VTK_QUADRATIC_LINEAR_WEDGE: 31,\n  VTK_BIQUADRATIC_QUADRATIC_WEDGE: 32,\n  VTK_BIQUADRATIC_QUADRATIC_HEXAHEDRON: 33,\n  VTK_BIQUADRATIC_TRIANGLE: 34,\n  // Cubic, isoparametric cell\n  VTK_CUBIC_LINE: 35,\n  // Special class of cells formed by convex group of points\n  VTK_CONVEX_POINT_SET: 41,\n  // Polyhedron cell (consisting of polygonal faces)\n  VTK_POLYHEDRON: 42,\n  // Higher order cells in parametric form\n  VTK_PARAMETRIC_CURVE: 51,\n  VTK_PARAMETRIC_SURFACE: 52,\n  VTK_PARAMETRIC_TRI_SURFACE: 53,\n  VTK_PARAMETRIC_QUAD_SURFACE: 54,\n  VTK_PARAMETRIC_TETRA_REGION: 55,\n  VTK_PARAMETRIC_HEX_REGION: 56,\n  // Higher order cells\n  VTK_HIGHER_ORDER_EDGE: 60,\n  VTK_HIGHER_ORDER_TRIANGLE: 61,\n  VTK_HIGHER_ORDER_QUAD: 62,\n  VTK_HIGHER_ORDER_POLYGON: 63,\n  VTK_HIGHER_ORDER_TETRAHEDRON: 64,\n  VTK_HIGHER_ORDER_WEDGE: 65,\n  VTK_HIGHER_ORDER_PYRAMID: 66,\n  VTK_HIGHER_ORDER_HEXAHEDRON: 67,\n  // Arbitrary order Lagrange elements (formulated separated from generic higher order cells)\n  VTK_LAGRANGE_CURVE: 68,\n  VTK_LAGRANGE_TRIANGLE: 69,\n  VTK_LAGRANGE_QUADRILATERAL: 70,\n  VTK_LAGRANGE_TETRAHEDRON: 71,\n  VTK_LAGRANGE_HEXAHEDRON: 72,\n  VTK_LAGRANGE_WEDGE: 73,\n  VTK_LAGRANGE_PYRAMID: 74,\n  VTK_NUMBER_OF_CELL_TYPES: 75\n};\n\n// This list should contain the cell class names in\n// the same order as in CellType.\nconst CellTypesStrings = ['vtkEmptyCell', 'vtkVertex', 'vtkPolyVertex', 'vtkLine', 'vtkPolyLine', 'vtkTriangle', 'vtkTriangleStrip', 'vtkPolygon', 'vtkPixel', 'vtkQuad', 'vtkTetra', 'vtkVoxel', 'vtkHexahedron', 'vtkWedge', 'vtkPyramid', 'vtkPentagonalPrism', 'vtkHexagonalPrism', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'vtkQuadraticEdge', 'vtkQuadraticTriangle', 'vtkQuadraticQuad', 'vtkQuadraticTetra', 'vtkQuadraticHexahedron', 'vtkQuadraticWedge', 'vtkQuadraticPyramid', 'vtkBiQuadraticQuad', 'vtkTriQuadraticHexahedron', 'vtkQuadraticLinearQuad', 'vtkQuadraticLinearWedge', 'vtkBiQuadraticQuadraticWedge', 'vtkBiQuadraticQuadraticHexahedron', 'vtkBiQuadraticTriangle', 'vtkCubicLine', 'vtkQuadraticPolygon', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'vtkConvexPointSet', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'vtkParametricCurve', 'vtkParametricSurface', 'vtkParametricTriSurface', 'vtkParametricQuadSurface', 'vtkParametricTetraRegion', 'vtkParametricHexRegion', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'vtkHigherOrderEdge', 'vtkHigherOrderTriangle', 'vtkHigherOrderQuad', 'vtkHigherOrderPolygon', 'vtkHigherOrderTetrahedron', 'vtkHigherOrderWedge', 'vtkHigherOrderPyramid', 'vtkHigherOrderHexahedron'];\nvar Constants = {\n  CellType,\n  CellTypesStrings\n};\n\nexport { CellType, CellTypesStrings, Constants as default };\n","import { m as macro } from '../../macros2.js';\nimport { CellTypesStrings, CellType } from './CellTypes/Constants.js';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n/**\n * Given an int (as defined in vtkCellType.h) identifier for a class\n * return it's classname.\n */\nfunction getClassNameFromTypeId(typeId) {\n  return typeId < CellTypesStrings.length ? CellTypesStrings[typeId] : 'UnknownClass';\n}\n\n/**\n * Given a data object classname, return it's int identified (as\n * defined in vtkCellType.h)\n */\nfunction getTypeIdFromClassName(cellTypeString) {\n  return CellTypesStrings.findIndex(cellTypeString);\n}\n\n/**\n * This convenience method is a fast check to determine if a cell type\n * represents a linear or nonlinear cell.  This is generally much more\n * efficient than getting the appropriate vtkCell and checking its IsLinear\n * method.\n */\nfunction isLinear(type) {\n  return type < CellType.VTK_QUADRATIC_EDGE || type === CellType.VTK_CONVEX_POINT_SET || type === CellType.VTK_POLYHEDRON;\n}\nfunction hasSubCells(cellType) {\n  return cellType === CellType.VTK_TRIANGLE_STRIP || cellType === CellType.VTK_POLY_LINE || cellType === CellType.VTK_POLY_VERTEX;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst STATIC = {\n  getClassNameFromTypeId,\n  getTypeIdFromClassName,\n  isLinear,\n  hasSubCells\n};\n\n// ----------------------------------------------------------------------------\n// vtkCellTypes methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCellTypes(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCellTypes');\n\n  /**\n   * Allocate memory for this array. Delete old storage only if necessary.\n   */\n  publicAPI.allocate = function () {\n    let sz = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 512;\n    let ext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n    model.size = sz > 0 ? sz : 1;\n    model.extend = ext > 0 ? ext : 1;\n    model.maxId = -1;\n    model.typeArray = new Uint8Array(sz);\n    model.locationArray = new Uint32Array(sz);\n  };\n\n  /**\n   * Add a cell at specified id.\n   */\n  publicAPI.insertCell = (cellId, type, loc) => {\n    model.typeArray[cellId] = type;\n    model.locationArray[cellId] = loc;\n    if (cellId > model.maxId) {\n      model.maxId = cellId;\n    }\n  };\n\n  /**\n   * Add a cell to the object in the next available slot.\n   */\n  publicAPI.insertNextCell = (type, loc) => {\n    publicAPI.insertCell(++model.maxId, type, loc);\n    return model.maxId;\n  };\n\n  /**\n   * Specify a group of cell types. This version is provided to maintain\n   * backwards compatibility and does a copy of the cellLocations\n   */\n  publicAPI.setCellTypes = (ncells, cellTypes, cellLocations) => {\n    model.size = ncells;\n    model.typeArray = cellTypes;\n    model.locationArray = cellLocations;\n    model.maxId = ncells - 1;\n  };\n\n  /**\n   * Return the location of the cell in the associated vtkCellArray.\n   */\n  publicAPI.getCellLocation = cellId => model.locationArray[cellId];\n\n  /**\n   * Delete cell by setting to nullptr cell type.\n   */\n  publicAPI.deleteCell = cellId => {\n    model.typeArray[cellId] = CellType.VTK_EMPTY_CELL;\n  };\n\n  /**\n   * Return the number of types in the list.\n   */\n  publicAPI.getNumberOfTypes = () => model.maxId + 1;\n\n  /**\n   * Return true if type specified is contained in list; false otherwise.\n   */\n  publicAPI.isType = type => {\n    const numTypes = publicAPI.getNumberOfTypes();\n    for (let i = 0; i < numTypes; ++i) {\n      if (type === publicAPI.getCellType(i)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Add the type specified to the end of the list. Range checking is performed.\n   */\n  publicAPI.insertNextType = type => publicAPI.insertNextCell(type, -1);\n\n  /**\n   * Return the type of cell.\n   */\n  publicAPI.getCellType = cellId => model.typeArray[cellId];\n\n  /**\n   * Reclaim any extra memory.\n   */\n  // TODO: publicAPI.squeeze = () =>  {};\n\n  /**\n   * Initialize object without releasing memory.\n   */\n  publicAPI.reset = () => {\n    model.maxId = -1;\n  };\n\n  /**\n   * Standard DeepCopy method.  Since this object contains no reference\n   * to other objects, there is no ShallowCopy.\n   */\n  publicAPI.deepCopy = src => {\n    publicAPI.allocate(src.getSize(), src.getExtend());\n    model.typeArray.set(src.getTypeArray());\n    model.locationArray.set(src.getLocationArray());\n    model.maxId = src.getMaxId();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // typeArray: null, // pointer to types array\n  // locationArray: null;   // pointer to array of offsets\n  size: 0,\n  // allocated size of data\n  maxId: -1,\n  // maximum index inserted thus far\n  extend: 1000 // grow array by this point\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['size', 'maxId', 'extend']);\n  macro.getArray(publicAPI, model, ['typeArray', 'locationArray']);\n  vtkCellTypes(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkCellTypes');\n\n// ----------------------------------------------------------------------------\n\nvar vtkCellTypes$1 = {\n  newInstance,\n  extend,\n  ...STATIC\n};\n\nexport { STATIC, vtkCellTypes$1 as default, extend, newInstance };\n","const IntersectionState = {\n  NO_INTERSECTION: 0,\n  YES_INTERSECTION: 1,\n  ON_LINE: 2\n};\nvar Constants = {\n  IntersectionState\n};\n\nexport { IntersectionState, Constants as default };\n","import { m as macro } from '../../macros2.js';\nimport Constants from './Line/Constants.js';\nimport vtkCell from './Cell.js';\nimport { d as dot, e as distance2BetweenPoints, s as subtract, g as solveLinearSystem } from '../Core/Math/index.js';\nimport { quat } from 'gl-matrix';\n\nconst {\n  IntersectionState\n} = Constants;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\nfunction distanceToLine(x, p1, p2) {\n  let closestPoint = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  const outObj = {\n    t: Number.MIN_VALUE,\n    distance: 0\n  };\n  const p21 = [];\n  let closest;\n  // Determine appropriate vector\n  p21[0] = p2[0] - p1[0];\n  p21[1] = p2[1] - p1[1];\n  p21[2] = p2[2] - p1[2];\n\n  // Get parametric location\n  const num = p21[0] * (x[0] - p1[0]) + p21[1] * (x[1] - p1[1]) + p21[2] * (x[2] - p1[2]);\n  const denom = dot(p21, p21);\n\n  // trying to avoid an expensive fabs\n  let tolerance = 1e-5 * num;\n  if (denom !== 0.0) {\n    outObj.t = num / denom;\n  }\n  if (tolerance < 0.0) {\n    tolerance = -tolerance;\n  }\n  if (-tolerance < denom && denom < tolerance) {\n    closest = p1;\n  } else if (denom <= 0.0 || outObj.t < 0.0) {\n    // If parametric coordinate is within 0<=p<=1, then the point is closest to\n    // the line.  Otherwise, it's closest to a point at the end of the line.\n    closest = p1;\n  } else if (outObj.t > 1.0) {\n    closest = p2;\n  } else {\n    closest = p21;\n    p21[0] = p1[0] + outObj.t * p21[0];\n    p21[1] = p1[1] + outObj.t * p21[1];\n    p21[2] = p1[2] + outObj.t * p21[2];\n  }\n  if (closestPoint) {\n    closestPoint[0] = closest[0];\n    closestPoint[1] = closest[1];\n    closestPoint[2] = closest[2];\n  }\n  outObj.distance = distance2BetweenPoints(closest, x);\n  return outObj;\n}\nfunction intersection(a1, a2, b1, b2, u, v) {\n  const a21 = [];\n  const b21 = [];\n  const b1a1 = [];\n  u[0] = 0.0;\n  v[0] = 0.0;\n\n  // Determine line vectors.\n  subtract(a2, a1, a21);\n  subtract(b2, b1, b21);\n  subtract(b1, a1, b1a1);\n\n  // Compute the system (least squares) matrix.\n  const A = [dot(a21, a21), -dot(a21, b21), -dot(a21, b21), dot(b21, b21)];\n\n  // Compute the least squares system constant term.\n  const c = [];\n  c[0] = dot(a21, b1a1);\n  c[1] = -dot(b21, b1a1);\n  // Solve the system of equations\n  if (solveLinearSystem(A, c, 2) === 0) {\n    // The lines are colinear. Therefore, one of the four endpoints is the\n    // point of closest approach\n    let minDist = Number.MAX_VALUE;\n    const p = [a1, a2, b1, b2];\n    const l1 = [b1, b1, a1, a1];\n    const l2 = [b2, b2, a2, a2];\n    [v[0], v[0], u[0], u[0]];\n    [u[0], u[0], v[0], v[0]];\n    let obj;\n    for (let i = 0; i < 4; i++) {\n      obj = distanceToLine(p[i], l1[i], l2[i]);\n      if (obj.distance < minDist) {\n        minDist = obj.distance;\n      }\n    }\n    return IntersectionState.ON_LINE;\n  }\n  u[0] = c[0];\n  v[0] = c[1];\n\n  // Check parametric coordinates for intersection.\n  if (u[0] >= 0.0 && u[0] <= 1.0 && v[0] >= 0.0 && v[0] <= 1.0) {\n    return IntersectionState.YES_INTERSECTION;\n  }\n  return IntersectionState.NO_INTERSECTION;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst STATIC = {\n  distanceToLine,\n  intersection\n};\n\n// ----------------------------------------------------------------------------\n// vtkLine methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLine(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLine');\n  function isBetweenPoints(t) {\n    return t >= 0.0 && t <= 1.0;\n  }\n  publicAPI.getCellDimension = () => 1;\n  publicAPI.intersectWithLine = (p1, p2, tol, x, pcoords) => {\n    const outObj = {\n      intersect: 0,\n      t: Number.MAX_VALUE,\n      subId: 0,\n      betweenPoints: null\n    };\n    pcoords[1] = 0.0;\n    pcoords[2] = 0.0;\n    const projXYZ = [];\n    const a1 = [];\n    const a2 = [];\n    model.points.getPoint(0, a1);\n    model.points.getPoint(1, a2);\n    const u = [];\n    const v = [];\n    const intersect = intersection(p1, p2, a1, a2, u, v);\n    outObj.t = u[0];\n    outObj.betweenPoints = isBetweenPoints(outObj.t);\n    pcoords[0] = v[0];\n    if (intersect === IntersectionState.YES_INTERSECTION) {\n      // make sure we are within tolerance\n      for (let i = 0; i < 3; i++) {\n        x[i] = a1[i] + pcoords[0] * (a2[i] - a1[i]);\n        projXYZ[i] = p1[i] + outObj.t * (p2[i] - p1[i]);\n      }\n      if (distance2BetweenPoints(x, projXYZ) <= tol * tol) {\n        outObj.intersect = 1;\n        return outObj;\n      }\n    } else {\n      let outDistance;\n      // check to see if it lies within tolerance\n      // one of the parametric coords must be outside 0-1\n      if (outObj.t < 0.0) {\n        outDistance = distanceToLine(p1, a1, a2, x);\n        if (outDistance.distance <= tol * tol) {\n          outObj.t = 0.0;\n          outObj.intersect = 1;\n          outObj.betweenPoints = true; // Intersection is near p1\n          return outObj;\n        }\n        return outObj;\n      }\n      if (outObj.t > 1.0) {\n        outDistance = distanceToLine(p2, a1, a2, x);\n        if (outDistance.distance <= tol * tol) {\n          outObj.t = 1.0;\n          outObj.intersect = 1;\n          outObj.betweenPoints = true; // Intersection is near p2\n          return outObj;\n        }\n        return outObj;\n      }\n      if (pcoords[0] < 0.0) {\n        pcoords[0] = 0.0;\n        outDistance = distanceToLine(a1, p1, p2, x);\n        outObj.t = outDistance.t;\n        if (outDistance.distance <= tol * tol) {\n          outObj.intersect = 1;\n          return outObj;\n        }\n        return outObj;\n      }\n      if (pcoords[0] > 1.0) {\n        pcoords[0] = 1.0;\n        outDistance = distanceToLine(a2, p1, p2, x);\n        outObj.t = outDistance.t;\n        if (outDistance.distance <= tol * tol) {\n          outObj.intersect = 1;\n          return outObj;\n        }\n        return outObj;\n      }\n    }\n    return outObj;\n  };\n  publicAPI.evaluateLocation = (pcoords, x, weights) => {\n    const a1 = [];\n    const a2 = [];\n    model.points.getPoint(0, a1);\n    model.points.getPoint(1, a2);\n    for (let i = 0; i < 3; i++) {\n      x[i] = a1[i] + pcoords[0] * (a2[i] - a1[i]);\n    }\n    weights[0] = 1.0 - pcoords[0];\n    weights[1] = pcoords[0];\n  };\n  publicAPI.evaluateOrientation = (pcoords, q, weights) => {\n    if (model.orientations) {\n      quat.slerp(q, model.orientations[0], model.orientations[1], pcoords[0]);\n      weights[0] = 1.0 - pcoords[0];\n      weights[1] = pcoords[0];\n      return true;\n    }\n    return false;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  orientations: null // an array of two quat or null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkCell.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['orientations']);\n  vtkLine(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkLine');\n\n// ----------------------------------------------------------------------------\n\nvar vtkLine$1 = {\n  newInstance,\n  extend,\n  ...STATIC,\n  ...Constants\n};\n\nexport { STATIC, vtkLine$1 as default, extend, newInstance };\n","import vtk from '../../vtk.js';\nimport { m as macro } from '../../macros2.js';\nimport vtkDataSet from './DataSet.js';\nimport vtkPoints from '../Core/Points.js';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// vtkPointSet methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPointSet(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPointSet');\n\n  // Create empty points\n  if (!model.points) {\n    model.points = vtkPoints.newInstance();\n  } else {\n    model.points = vtk(model.points);\n  }\n  publicAPI.getNumberOfPoints = () => model.points.getNumberOfPoints();\n  publicAPI.getBounds = () => model.points.getBounds();\n  publicAPI.computeBounds = () => {\n    publicAPI.getBounds();\n  };\n  const superShallowCopy = publicAPI.shallowCopy;\n  publicAPI.shallowCopy = function (other) {\n    let debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    superShallowCopy(other, debug);\n    model.points = vtkPoints.newInstance();\n    model.points.shallowCopy(other.getPoints());\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // points: null,\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkDataSet.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['points']);\n\n  // Object specific methods\n  vtkPointSet(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkPointSet');\n\n// ----------------------------------------------------------------------------\n\nvar vtkPointSet$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkPointSet$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkCell from './Cell.js';\nimport { d as dot, j as cross, l as normalize, m as multiplyAccumulate, e as distance2BetweenPoints, o as determinant2x2 } from '../Core/Math/index.js';\nimport vtkLine from './Line.js';\nimport vtkPlane from './Plane.js';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction computeNormalDirection(v1, v2, v3, n) {\n  // order is important!!! maintain consistency with triangle vertex order\n  const ax = v3[0] - v2[0];\n  const ay = v3[1] - v2[1];\n  const az = v3[2] - v2[2];\n  const bx = v1[0] - v2[0];\n  const by = v1[1] - v2[1];\n  const bz = v1[2] - v2[2];\n  n[0] = ay * bz - az * by;\n  n[1] = az * bx - ax * bz;\n  n[2] = ax * by - ay * bx;\n}\nfunction computeNormal(v1, v2, v3, n) {\n  computeNormalDirection(v1, v2, v3, n);\n  const length = Math.sqrt(n[0] * n[0] + n[1] * n[1] + n[2] * n[2]);\n  if (length !== 0.0) {\n    n[0] /= length;\n    n[1] /= length;\n    n[2] /= length;\n  }\n}\nfunction intersectWithTriangle(p1, q1, r1, p2, q2, r2) {\n  let tolerance = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 1e-6;\n  let coplanar = false;\n  const pt1 = [];\n  const pt2 = [];\n  const surfaceId = [];\n  const n1 = [];\n  const n2 = [];\n\n  // Compute supporting plane normals.\n  computeNormal(p1, q1, r1, n1);\n  computeNormal(p2, q2, r2, n2);\n  const s1 = -dot(n1, p1);\n  const s2 = -dot(n2, p2);\n\n  // Compute signed distances of points p1, q1, r1 from supporting\n  // plane of second triangle.\n  const dist1 = [dot(n2, p1) + s2, dot(n2, q1) + s2, dot(n2, r1) + s2];\n\n  // If signs of all points are the same, all the points lie on the\n  // same side of the supporting plane, and we can exit early.\n  if (dist1[0] * dist1[1] > tolerance && dist1[0] * dist1[2] > tolerance) {\n    // vtkDebugMacro(<<\"Same side supporting plane 1!\");\n    return {\n      intersect: false,\n      coplanar,\n      pt1,\n      pt2,\n      surfaceId\n    };\n  }\n  // Do the same for p2, q2, r2 and supporting plane of first\n  // triangle.\n  const dist2 = [dot(n1, p2) + s1, dot(n1, q2) + s1, dot(n1, r2) + s1];\n\n  // If signs of all points are the same, all the points lie on the\n  // same side of the supporting plane, and we can exit early.\n  if (dist2[0] * dist2[1] > tolerance && dist2[0] * dist2[2] > tolerance) {\n    // vtkDebugMacro(<<\"Same side supporting plane 2!\");\n    return {\n      intersect: false,\n      coplanar,\n      pt1,\n      pt2,\n      surfaceId\n    };\n  }\n  // Check for coplanarity of the supporting planes.\n  if (Math.abs(n1[0] - n2[0]) < 1e-9 && Math.abs(n1[1] - n2[1]) < 1e-9 && Math.abs(n1[2] - n2[2]) < 1e-9 && Math.abs(s1 - s2) < 1e-9) {\n    coplanar = true;\n    // vtkDebugMacro(<<\"Coplanar!\");\n    return {\n      intersect: false,\n      coplanar,\n      pt1,\n      pt2,\n      surfaceId\n    };\n  }\n\n  // There are more efficient ways to find the intersection line (if\n  // it exists), but this is clear enough.\n  const pts1 = [p1, q1, r1];\n  const pts2 = [p2, q2, r2];\n\n  // Find line of intersection (L = p + t*v) between two planes.\n  const n1n2 = dot(n1, n2);\n  const a = (s1 - s2 * n1n2) / (n1n2 * n1n2 - 1.0);\n  const b = (s2 - s1 * n1n2) / (n1n2 * n1n2 - 1.0);\n  const p = [a * n1[0] + b * n2[0], a * n1[1] + b * n2[1], a * n1[2] + b * n2[2]];\n  const v = cross(n1, n2, []);\n  normalize(v);\n  let index1 = 0;\n  let index2 = 0;\n  const t1 = [];\n  const t2 = [];\n  let ts1 = 50;\n  let ts2 = 50;\n  for (let i = 0; i < 3; i++) {\n    const id1 = i;\n    const id2 = (i + 1) % 3;\n\n    // Find t coordinate on line of intersection between two planes.\n    const val1 = vtkPlane.intersectWithLine(pts1[id1], pts1[id2], p2, n2);\n    if (val1.intersection && val1.t > 0 - tolerance && val1.t < 1 + tolerance) {\n      if (val1.t < 1 + tolerance && val1.t > 1 - tolerance) {\n        ts1 = index1;\n      }\n      t1[index1++] = dot(val1.x, v) - dot(p, v);\n    }\n    const val2 = vtkPlane.intersectWithLine(pts2[id1], pts2[id2], p1, n1);\n    if (val2.intersection && val2.t > 0 - tolerance && val2.t < 1 + tolerance) {\n      if (val2.t < 1 + tolerance && val2.t > 1 - tolerance) {\n        ts2 = index2;\n      }\n      t2[index2++] = dot(val2.x, v) - dot(p, v);\n    }\n  }\n\n  // If the value of the index is greater than 2, the intersecting point\n  // actually is intersected by all three edges. In this case, set the two\n  // edges to the two edges where the intersecting point is not the end point\n  if (index1 > 2) {\n    index1--;\n    // swap\n    const t12 = t1[2];\n    t1[2] = t1[ts1];\n    t1[ts1] = t12;\n  }\n  if (index2 > 2) {\n    index2--;\n    const t22 = t2[2];\n    t2[2] = t2[ts2];\n    t2[ts2] = t22;\n  }\n  // Check if only one edge or all edges intersect the supporting\n  // planes intersection.\n  if (index1 !== 2 || index2 !== 2) {\n    // vtkDebugMacro(<<\"Only one edge intersecting!\");\n    return {\n      intersect: false,\n      coplanar,\n      pt1,\n      pt2,\n      surfaceId\n    };\n  }\n\n  // Check for NaNs\n  if (Number.isNaN(t1[0]) || Number.isNaN(t1[1]) || Number.isNaN(t2[0]) || Number.isNaN(t2[1])) {\n    // vtkWarningMacro(<<\"NaNs!\");\n    return {\n      intersect: false,\n      coplanar,\n      pt1,\n      pt2,\n      surfaceId\n    };\n  }\n  if (t1[0] > t1[1]) {\n    // swap\n    const t11 = t1[1];\n    t1[1] = t1[0];\n    t1[0] = t11;\n  }\n  if (t2[0] > t2[1]) {\n    // swap\n    const t21 = t2[1];\n    t2[1] = t2[0];\n    t2[0] = t21;\n  }\n  // Handle the different interval configuration cases.\n  let tt1;\n  let tt2;\n  if (t1[1] < t2[0] || t2[1] < t1[0]) {\n    // vtkDebugMacro(<<\"No Overlap!\");\n    return {\n      intersect: false,\n      coplanar,\n      pt1,\n      pt2,\n      surfaceId\n    }; // No overlap\n  }\n\n  if (t1[0] < t2[0]) {\n    if (t1[1] < t2[1]) {\n      // First point on surface 2, second point on surface 1\n      surfaceId[0] = 2;\n      surfaceId[1] = 1;\n      tt1 = t2[0];\n      tt2 = t1[1];\n    } else {\n      // Both points belong to lines on surface 2\n      surfaceId[0] = 2;\n      surfaceId[1] = 2;\n      tt1 = t2[0];\n      tt2 = t2[1];\n    }\n  } // t1[0] >= t2[0]\n  else if (t1[1] < t2[1]) {\n    // Both points belong to lines on surface 1\n    surfaceId[0] = 1;\n    surfaceId[1] = 1;\n    tt1 = t1[0];\n    tt2 = t1[1];\n  } else {\n    // First point on surface 1, second point on surface 2\n    surfaceId[0] = 1;\n    surfaceId[1] = 2;\n    tt1 = t1[0];\n    tt2 = t2[1];\n  }\n\n  // Create actual intersection points.\n  multiplyAccumulate(p, v, tt1, pt1);\n  multiplyAccumulate(p, v, tt2, pt2);\n  return {\n    intersect: true,\n    coplanar,\n    pt1,\n    pt2,\n    surfaceId\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst STATIC = {\n  computeNormalDirection,\n  computeNormal,\n  intersectWithTriangle\n};\n\n// ----------------------------------------------------------------------------\n// vtkTriangle methods\n// ----------------------------------------------------------------------------\n\nfunction vtkTriangle(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkTriangle');\n  publicAPI.getCellDimension = () => 2;\n  publicAPI.intersectWithLine = (p1, p2, tol, x, pcoords) => {\n    const outObj = {\n      subId: 0,\n      t: Number.MAX_VALUE,\n      intersect: 0,\n      betweenPoints: false\n    };\n    pcoords[2] = 0.0;\n    const closestPoint = [];\n    const tol2 = tol * tol;\n\n    // Get normal for triangle\n    const pt1 = [];\n    const pt2 = [];\n    const pt3 = [];\n    model.points.getPoint(0, pt1);\n    model.points.getPoint(1, pt2);\n    model.points.getPoint(2, pt3);\n    const n = [];\n    const weights = [];\n    computeNormal(pt1, pt2, pt3, n);\n    if (n[0] !== 0 || n[1] !== 0 || n[2] !== 0) {\n      // Intersect plane of triangle with line\n      const plane = vtkPlane.intersectWithLine(p1, p2, pt1, n);\n      outObj.betweenPoints = plane.betweenPoints;\n      outObj.t = plane.t;\n      x[0] = plane.x[0];\n      x[1] = plane.x[1];\n      x[2] = plane.x[2];\n      if (!plane.intersection) {\n        pcoords[0] = 0.0;\n        pcoords[1] = 0.0;\n        outObj.intersect = 0;\n        return outObj;\n      }\n\n      // Evaluate position\n      const inside = publicAPI.evaluatePosition(x, closestPoint, pcoords, weights);\n      if (inside.evaluation >= 0) {\n        if (inside.dist2 <= tol2) {\n          outObj.intersect = 1;\n          return outObj;\n        }\n        outObj.intersect = inside.evaluation;\n        return outObj;\n      }\n    }\n\n    // Normals are null, so the triangle is degenerated and\n    // we still need to check intersection between line and\n    // the longest edge.\n    const dist2Pt1Pt2 = distance2BetweenPoints(pt1, pt2);\n    const dist2Pt2Pt3 = distance2BetweenPoints(pt2, pt3);\n    const dist2Pt3Pt1 = distance2BetweenPoints(pt3, pt1);\n    if (!model.line) {\n      model.line = vtkLine.newInstance();\n    }\n    if (dist2Pt1Pt2 > dist2Pt2Pt3 && dist2Pt1Pt2 > dist2Pt3Pt1) {\n      model.line.getPoints().setPoint(0, pt1);\n      model.line.getPoints().setPoint(1, pt2);\n    } else if (dist2Pt2Pt3 > dist2Pt3Pt1 && dist2Pt2Pt3 > dist2Pt1Pt2) {\n      model.line.getPoints().setPoint(0, pt2);\n      model.line.getPoints().setPoint(1, pt3);\n    } else {\n      model.line.getPoints().setPoint(0, pt3);\n      model.line.getPoints().setPoint(1, pt1);\n    }\n    const intersectLine = model.line.intersectWithLine(p1, p2, tol, x, pcoords);\n    outObj.betweenPoints = intersectLine.betweenPoints;\n    outObj.t = intersectLine.t;\n    if (intersectLine.intersect) {\n      const pt3Pt1 = [];\n      const pt3Pt2 = [];\n      const pt3X = [];\n      // Compute r and s manually, using dot and norm.\n      for (let i = 0; i < 3; i++) {\n        pt3Pt1[i] = pt1[i] - pt3[i];\n        pt3Pt2[i] = pt2[i] - pt3[i];\n        pt3X[i] = x[i] - pt3[i];\n      }\n      pcoords[0] = dot(pt3X, pt3Pt1) / dist2Pt3Pt1;\n      pcoords[1] = dot(pt3X, pt3Pt2) / dist2Pt2Pt3;\n      outObj.intersect = 1;\n      return outObj;\n    }\n    pcoords[0] = 0.0;\n    pcoords[1] = 0.0;\n    outObj.intersect = 0;\n    return outObj;\n  };\n  publicAPI.evaluatePosition = (x, closestPoint, pcoords, weights) => {\n    // will return obj\n    const outObj = {\n      subId: 0,\n      dist2: 0,\n      evaluation: -1\n    };\n    let i;\n    let j;\n    const pt1 = [];\n    const pt2 = [];\n    const pt3 = [];\n    const n = [];\n    let fabsn;\n    const rhs = [];\n    const c1 = [];\n    const c2 = [];\n    let det = 0;\n    let idx = 0;\n    const indices = [];\n    let dist2Point;\n    let dist2Line1;\n    let dist2Line2;\n    let closest = [];\n    const closestPoint1 = [];\n    const closestPoint2 = [];\n    const cp = [];\n    outObj.subId = 0;\n    pcoords[2] = 0.0;\n\n    // Get normal for triangle, only the normal direction is needed, i.e. the\n    // normal need not be normalized (unit length)\n    //\n    model.points.getPoint(1, pt1);\n    model.points.getPoint(2, pt2);\n    model.points.getPoint(0, pt3);\n    computeNormalDirection(pt1, pt2, pt3, n);\n\n    // Project point to plane\n    vtkPlane.generalizedProjectPoint(x, pt1, n, cp);\n\n    // Construct matrices.  Since we have over determined system, need to find\n    // which 2 out of 3 equations to use to develop equations. (Any 2 should\n    // work since we've projected point to plane.)\n    let maxComponent = 0.0;\n    for (i = 0; i < 3; i++) {\n      // trying to avoid an expensive call to fabs()\n      if (n[i] < 0) {\n        fabsn = -n[i];\n      } else {\n        fabsn = n[i];\n      }\n      if (fabsn > maxComponent) {\n        maxComponent = fabsn;\n        idx = i;\n      }\n    }\n    for (j = 0, i = 0; i < 3; i++) {\n      if (i !== idx) {\n        indices[j++] = i;\n      }\n    }\n    for (i = 0; i < 2; i++) {\n      rhs[i] = cp[indices[i]] - pt3[indices[i]];\n      c1[i] = pt1[indices[i]] - pt3[indices[i]];\n      c2[i] = pt2[indices[i]] - pt3[indices[i]];\n    }\n    det = determinant2x2(c1, c2);\n    if (det === 0.0) {\n      pcoords[0] = 0.0;\n      pcoords[1] = 0.0;\n      outObj.evaluation = -1;\n      return outObj;\n    }\n    pcoords[0] = determinant2x2(rhs, c2) / det;\n    pcoords[1] = determinant2x2(c1, rhs) / det;\n\n    // Okay, now find closest point to element\n    weights[0] = 1 - (pcoords[0] + pcoords[1]);\n    weights[1] = pcoords[0];\n    weights[2] = pcoords[1];\n    if (weights[0] >= 0.0 && weights[0] <= 1.0 && weights[1] >= 0.0 && weights[1] <= 1.0 && weights[2] >= 0.0 && weights[2] <= 1.0) {\n      // projection distance\n      if (closestPoint) {\n        outObj.dist2 = distance2BetweenPoints(cp, x);\n        closestPoint[0] = cp[0];\n        closestPoint[1] = cp[1];\n        closestPoint[2] = cp[2];\n      }\n      outObj.evaluation = 1;\n    } else {\n      let t;\n      if (closestPoint) {\n        if (weights[1] < 0.0 && weights[2] < 0.0) {\n          dist2Point = distance2BetweenPoints(x, pt3);\n          dist2Line1 = vtkLine.distanceToLine(x, pt1, pt3, t, closestPoint1);\n          dist2Line2 = vtkLine.distanceToLine(x, pt3, pt2, t, closestPoint2);\n          if (dist2Point < dist2Line1) {\n            outObj.dist2 = dist2Point;\n            closest = pt3;\n          } else {\n            outObj.dist2 = dist2Line1;\n            closest = closestPoint1;\n          }\n          if (dist2Line2 < outObj.dist2) {\n            outObj.dist2 = dist2Line2;\n            closest = closestPoint2;\n          }\n          for (i = 0; i < 3; i++) {\n            closestPoint[i] = closest[i];\n          }\n        } else if (weights[2] < 0.0 && weights[0] < 0.0) {\n          dist2Point = distance2BetweenPoints(x, pt1);\n          dist2Line1 = vtkLine.distanceToLine(x, pt1, pt3, t, closestPoint1);\n          dist2Line2 = vtkLine.distanceToLine(x, pt1, pt2, t, closestPoint2);\n          if (dist2Point < dist2Line1) {\n            outObj.dist2 = dist2Point;\n            closest = pt1;\n          } else {\n            outObj.dist2 = dist2Line1;\n            closest = closestPoint1;\n          }\n          if (dist2Line2 < outObj.dist2) {\n            outObj.dist2 = dist2Line2;\n            closest = closestPoint2;\n          }\n          for (i = 0; i < 3; i++) {\n            closestPoint[i] = closest[i];\n          }\n        } else if (weights[1] < 0.0 && weights[0] < 0.0) {\n          dist2Point = distance2BetweenPoints(x, pt2);\n          dist2Line1 = vtkLine.distanceToLine(x, pt2, pt3, t, closestPoint1);\n          dist2Line2 = vtkLine.distanceToLine(x, pt1, pt2, t, closestPoint2);\n          if (dist2Point < dist2Line1) {\n            outObj.dist2 = dist2Point;\n            closest = pt2;\n          } else {\n            outObj.dist2 = dist2Line1;\n            closest = closestPoint1;\n          }\n          if (dist2Line2 < outObj.dist2) {\n            outObj.dist2 = dist2Line2;\n            closest = closestPoint2;\n          }\n          for (i = 0; i < 3; i++) {\n            closestPoint[i] = closest[i];\n          }\n        } else if (weights[0] < 0.0) {\n          const lineDistance = vtkLine.distanceToLine(x, pt1, pt2, closestPoint);\n          outObj.dist2 = lineDistance.distance;\n        } else if (weights[1] < 0.0) {\n          const lineDistance = vtkLine.distanceToLine(x, pt2, pt3, closestPoint);\n          outObj.dist2 = lineDistance.distance;\n        } else if (weights[2] < 0.0) {\n          const lineDistance = vtkLine.distanceToLine(x, pt1, pt3, closestPoint);\n          outObj.dist2 = lineDistance.distance;\n        }\n      }\n      outObj.evaluation = 0;\n    }\n    return outObj;\n  };\n  publicAPI.evaluateLocation = (pcoords, x, weights) => {\n    const p0 = [];\n    const p1 = [];\n    const p2 = [];\n    model.points.getPoint(0, p0);\n    model.points.getPoint(1, p1);\n    model.points.getPoint(2, p2);\n    const u3 = 1.0 - pcoords[0] - pcoords[1];\n    for (let i = 0; i < 3; i++) {\n      x[i] = p0[i] * u3 + p1[i] * pcoords[0] + p2[i] * pcoords[1];\n    }\n    weights[0] = u3;\n    weights[1] = pcoords[0];\n    weights[2] = pcoords[1];\n  };\n  publicAPI.getParametricDistance = pcoords => {\n    let pDist;\n    let pDistMax = 0.0;\n    const pc = [];\n    pc[0] = pcoords[0];\n    pc[1] = pcoords[1];\n    pc[2] = 1.0 - pcoords[0] - pcoords[1];\n    for (let i = 0; i < 3; i++) {\n      if (pc[i] < 0.0) {\n        pDist = -pc[i];\n      } else if (pc[i] > 1.0) {\n        pDist = pc[i] - 1.0;\n      } else {\n        // inside the cell in the parametric direction\n        pDist = 0.0;\n      }\n      if (pDist > pDistMax) {\n        pDistMax = pDist;\n      }\n    }\n    return pDistMax;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkCell.extend(publicAPI, model, initialValues);\n  vtkTriangle(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkTriangle');\n\n// ----------------------------------------------------------------------------\n\nvar vtkTriangle$1 = {\n  newInstance,\n  extend,\n  ...STATIC\n};\n\nexport { STATIC, vtkTriangle$1 as default, extend, newInstance };\n","const POLYDATA_FIELDS = ['verts', 'lines', 'polys', 'strips'];\nvar Constants = {\n  POLYDATA_FIELDS\n};\n\nexport { POLYDATA_FIELDS, Constants as default };\n","import { m as macro } from '../../macros2.js';\nimport vtk from '../../vtk.js';\nimport vtkCellArray from '../Core/CellArray.js';\nimport vtkCellLinks from './CellLinks.js';\nimport vtkCellTypes from './CellTypes.js';\nimport vtkLine from './Line.js';\nimport vtkPointSet from './PointSet.js';\nimport vtkTriangle from './Triangle.js';\nimport { CellType } from './CellTypes/Constants.js';\nimport { POLYDATA_FIELDS } from './PolyData/Constants.js';\n\nconst {\n  vtkWarningMacro\n} = macro;\nconst CELL_FACTORY = {\n  [CellType.VTK_LINE]: vtkLine,\n  [CellType.VTK_POLY_LINE]: vtkLine,\n  [CellType.VTK_TRIANGLE]: vtkTriangle\n};\n\n// ----------------------------------------------------------------------------\n// vtkPolyData methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPolyData(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPolyData');\n  function camelize(str) {\n    return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, letter => letter.toUpperCase()).replace(/\\s+/g, '');\n  }\n\n  // build empty cell arrays and set methods\n  POLYDATA_FIELDS.forEach(type => {\n    publicAPI[`getNumberOf${camelize(type)}`] = () => model[type].getNumberOfCells();\n    if (!model[type]) {\n      model[type] = vtkCellArray.newInstance();\n    } else {\n      model[type] = vtk(model[type]);\n    }\n  });\n  publicAPI.getNumberOfCells = () => POLYDATA_FIELDS.reduce((num, cellType) => num + model[cellType].getNumberOfCells(), 0);\n  const superShallowCopy = publicAPI.shallowCopy;\n  publicAPI.shallowCopy = function (other) {\n    let debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    superShallowCopy(other, debug);\n    POLYDATA_FIELDS.forEach(type => {\n      model[type] = vtkCellArray.newInstance();\n      model[type].shallowCopy(other.getReferenceByName(type));\n    });\n  };\n  publicAPI.buildCells = () => {\n    // here are the number of cells we have\n    const nVerts = publicAPI.getNumberOfVerts();\n    const nLines = publicAPI.getNumberOfLines();\n    const nPolys = publicAPI.getNumberOfPolys();\n    const nStrips = publicAPI.getNumberOfStrips();\n\n    // pre-allocate the space we need\n    const nCells = nVerts + nLines + nPolys + nStrips;\n    const types = new Uint8Array(nCells);\n    let pTypes = types;\n    const locs = new Uint32Array(nCells);\n    let pLocs = locs;\n\n    // record locations and type of each cell.\n    // verts\n    if (nVerts) {\n      let nextCellPts = 0;\n      model.verts.getCellSizes().forEach((numCellPts, index) => {\n        pLocs[index] = nextCellPts;\n        pTypes[index] = numCellPts > 1 ? CellType.VTK_POLY_VERTEX : CellType.VTK_VERTEX;\n        nextCellPts += numCellPts + 1;\n      });\n      pLocs = pLocs.subarray(nVerts);\n      pTypes = pTypes.subarray(nVerts);\n    }\n\n    // lines\n    if (nLines) {\n      let nextCellPts = 0;\n      model.lines.getCellSizes().forEach((numCellPts, index) => {\n        pLocs[index] = nextCellPts;\n        pTypes[index] = numCellPts > 2 ? CellType.VTK_POLY_LINE : CellType.VTK_LINE;\n        if (numCellPts === 1) {\n          vtkWarningMacro('Building VTK_LINE ', index, ' with only one point, but VTK_LINE needs at least two points. Check the input.');\n        }\n        nextCellPts += numCellPts + 1;\n      });\n      pLocs = pLocs.subarray(nLines);\n      pTypes = pTypes.subarray(nLines);\n    }\n\n    // polys\n    if (nPolys) {\n      let nextCellPts = 0;\n      model.polys.getCellSizes().forEach((numCellPts, index) => {\n        pLocs[index] = nextCellPts;\n        switch (numCellPts) {\n          case 3:\n            pTypes[index] = CellType.VTK_TRIANGLE;\n            break;\n          case 4:\n            pTypes[index] = CellType.VTK_QUAD;\n            break;\n          default:\n            pTypes[index] = CellType.VTK_POLYGON;\n            break;\n        }\n        if (numCellPts < 3) {\n          vtkWarningMacro('Building VTK_TRIANGLE ', index, ' with less than three points, but VTK_TRIANGLE needs at least three points. Check the input.');\n        }\n        nextCellPts += numCellPts + 1;\n      });\n      pLocs += pLocs.subarray(nPolys);\n      pTypes += pTypes.subarray(nPolys);\n    }\n\n    // strips\n    if (nStrips) {\n      let nextCellPts = 0;\n      pTypes.fill(CellType.VTK_TRIANGLE_STRIP, 0, nStrips);\n      model.strips.getCellSizes().forEach((numCellPts, index) => {\n        pLocs[index] = nextCellPts;\n        nextCellPts += numCellPts + 1;\n      });\n    }\n\n    // set up the cell types data structure\n    model.cells = vtkCellTypes.newInstance();\n    model.cells.setCellTypes(nCells, types, locs);\n  };\n\n  /**\n   * Create upward links from points to cells that use each point. Enables\n   * topologically complex queries.\n   */\n  publicAPI.buildLinks = function () {\n    let initialSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (model.cells === undefined) {\n      publicAPI.buildCells();\n    }\n    model.links = vtkCellLinks.newInstance();\n    if (initialSize > 0) {\n      model.links.allocate(initialSize);\n    } else {\n      model.links.allocate(publicAPI.getPoints().getNumberOfPoints());\n    }\n    model.links.buildLinks(publicAPI);\n  };\n  publicAPI.getCellType = cellId => model.cells.getCellType(cellId);\n  publicAPI.getCellPoints = cellId => {\n    const cellType = publicAPI.getCellType(cellId);\n    let cells = null;\n    switch (cellType) {\n      case CellType.VTK_VERTEX:\n      case CellType.VTK_POLY_VERTEX:\n        cells = model.verts;\n        break;\n      case CellType.VTK_LINE:\n      case CellType.VTK_POLY_LINE:\n        cells = model.lines;\n        break;\n      case CellType.VTK_TRIANGLE:\n      case CellType.VTK_QUAD:\n      case CellType.VTK_POLYGON:\n        cells = model.polys;\n        break;\n      case CellType.VTK_TRIANGLE_STRIP:\n        cells = model.strips;\n        break;\n      default:\n        cells = null;\n        return {\n          type: 0,\n          cellPointIds: null\n        };\n    }\n    const loc = model.cells.getCellLocation(cellId);\n    const cellPointIds = cells.getCell(loc);\n    return {\n      cellType,\n      cellPointIds\n    };\n  };\n  publicAPI.getPointCells = ptId => model.links.getCells(ptId);\n  publicAPI.getCellEdgeNeighbors = (cellId, point1, point2) => {\n    const link1 = model.links.getLink(point1);\n    const link2 = model.links.getLink(point2);\n    return link1.cells.filter(cell => cell !== cellId && link2.cells.indexOf(cell) !== -1);\n  };\n\n  /**\n   * If you know the type of cell, you may provide it to improve performances.\n   */\n  publicAPI.getCell = function (cellId) {\n    let cellHint = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const cellInfo = publicAPI.getCellPoints(cellId);\n    const cell = cellHint || CELL_FACTORY[cellInfo.cellType].newInstance();\n    cell.initialize(publicAPI.getPoints(), cellInfo.cellPointIds);\n    return cell;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // verts: null,\n  // lines: null,\n  // polys: null,\n  // strips: null,\n  // cells: null,\n  // links: null,\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkPointSet.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['cells', 'links']);\n  macro.setGet(publicAPI, model, ['verts', 'lines', 'polys', 'strips']);\n\n  // Object specific methods\n  vtkPolyData(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkPolyData');\n\n// ----------------------------------------------------------------------------\n\nvar vtkPolyData$1 = {\n  newInstance,\n  extend\n};\n\nexport { CELL_FACTORY, vtkPolyData$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkCellArray from '../../Common/Core/CellArray.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\nclass SegmentAgregator {\n  constructor() {\n    this.segmentMapping = {};\n    this.segments = [null]; // to force first id to be 1\n    this.faces = [];\n  }\n  addSegment(segment) {\n    const first = segment[0];\n    const last = segment[segment.length - 1];\n    if (first === last || segment.length < 2) {\n      return;\n    }\n    const mappingFirst = this.segmentMapping[first];\n    const mappingLast = this.segmentMapping[last];\n    if (mappingFirst !== undefined && mappingLast !== undefined) {\n      if (Math.abs(mappingFirst) === Math.abs(mappingLast)) {\n        // This make a closing loop\n        const idx = mappingFirst < mappingLast ? mappingLast : mappingFirst;\n        const seg = this.segments[idx];\n        if (mappingFirst > 0) {\n          for (let i = 1; i < segment.length - 1; i++) {\n            seg.push(segment[i]);\n          }\n        } else {\n          for (let i = 1; i < segment.length - 1; i++) {\n            seg.unshift(segment[segment.length - 1 - i]);\n          }\n        }\n        this.faces.push(seg);\n        this.segments[idx] = null;\n        this.segmentMapping[first] = undefined;\n        this.segmentMapping[last] = undefined;\n      } else {\n        // we need to merge segments\n        // strategie:\n        // => remove and add them again in special order to induce merge\n        const idxHead = Math.abs(mappingFirst);\n        const idxTail = Math.abs(mappingLast);\n        const segHead = this.segments[idxHead];\n        const segTail = this.segments[idxTail];\n        this.segments[idxHead] = null;\n        this.segments[idxTail] = null;\n        this.segmentMapping[segHead[0]] = undefined;\n        this.segmentMapping[segTail[0]] = undefined;\n        this.segmentMapping[segHead[segHead.length - 1]] = undefined;\n        this.segmentMapping[segTail[segTail.length - 1]] = undefined;\n\n        // This will lead to a single segment\n        this.addSegment(segment);\n        this.addSegment(segHead);\n        this.addSegment(segTail);\n      }\n    } else if (mappingFirst !== undefined) {\n      if (mappingFirst > 0) {\n        // The head of our segment match the tail of the existing one\n        const seg = this.segments[mappingFirst];\n        for (let i = 1; i < segment.length; i++) {\n          seg.push(segment[i]);\n        }\n        // record new tail\n        this.segmentMapping[last] = mappingFirst;\n      } else {\n        // our segment should be reverted and put on the front of the existing one\n        const seg = this.segments[-mappingFirst];\n        // record new head\n        this.segmentMapping[last] = mappingFirst;\n        for (let i = 1; i < segment.length; i++) {\n          seg.unshift(segment[i]);\n        }\n      }\n      // Erase used connection\n      this.segmentMapping[first] = undefined;\n    } else if (mappingLast !== undefined) {\n      if (mappingLast > 0) {\n        // The tail of our segment match the tail of the existing one\n        const seg = this.segments[mappingLast];\n        for (let i = 1; i < segment.length; i++) {\n          seg.push(segment[segment.length - 1 - i]);\n        }\n        // record new tail\n        this.segmentMapping[first] = mappingLast;\n      } else {\n        // our segment should be reverted and put on the front of the existing one\n        const seg = this.segments[-mappingLast];\n\n        // record new head\n        this.segmentMapping[first] = mappingLast;\n        for (let i = 1; i < segment.length; i++) {\n          seg.unshift(segment[segment.length - i - 1]);\n        }\n      }\n      // Erase used connection\n      this.segmentMapping[last] = undefined;\n    } else {\n      // store segment for now\n      const id = this.segments.length;\n      this.segments.push(segment);\n      this.segmentMapping[first] = -id;\n      this.segmentMapping[last] = id;\n    }\n  }\n}\n\n// ----------------------------------------------------------------------------\n// vtkClosedPolyLineToSurfaceFilter methods\n// ----------------------------------------------------------------------------\n\nfunction vtkClosedPolyLineToSurfaceFilter(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkClosedPolyLineToSurfaceFilter');\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.requestData = (inData, outData) => {\n    // implement requestData\n    const input = inData[0];\n    if (!input) {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    }\n    const output = vtkPolyData.newInstance();\n    output.shallowCopy(input);\n\n    // Extract faces\n    const agregator = new SegmentAgregator();\n    const lines = input.getLines().getData();\n    let offset = 0;\n    while (offset < lines.length) {\n      const lineSize = lines[offset++];\n      const lineSegment = [];\n      for (let i = 0; i < lineSize; i++) {\n        lineSegment.push(lines[offset + i]);\n      }\n      agregator.addSegment(lineSegment);\n      offset += lineSize;\n    }\n\n    // Create CellArray for polys\n    const {\n      faces\n    } = agregator;\n    let cellArraySize = faces.length;\n    for (let i = 0; i < faces.length; i++) {\n      cellArraySize += faces[i].length;\n    }\n    const cellArray = new Uint16Array(cellArraySize);\n    offset = 0;\n    for (let i = 0; i < faces.length; i++) {\n      const face = faces[i];\n      cellArray[offset++] = face.length;\n      for (let j = 0; j < face.length; j++) {\n        cellArray[offset++] = face[j];\n      }\n    }\n    output.setPolys(vtkCellArray.newInstance({\n      values: cellArray,\n      name: 'faces'\n    }));\n    outData[0] = output;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Make this a VTK object\n  macro.obj(publicAPI, model);\n\n  // Also make it an algorithm with one input and one output\n  macro.algo(publicAPI, model, 1, 1);\n\n  // Object specific methods\n  vtkClosedPolyLineToSurfaceFilter(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkClosedPolyLineToSurfaceFilter');\n\n// ----------------------------------------------------------------------------\n\nvar vtkClosedPolyLineToSurfaceFilter$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkClosedPolyLineToSurfaceFilter$1 as default, extend, newInstance };\n","import { n as newInstance$1, o as obj, d as algo, e as setGet, c as macro, b as newTypedArrayFrom } from '../../macros2.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\nfunction initPolyIterator(pd) {\n  const polys = pd.getPolys().getData();\n  const strips = pd.getStrips().getData();\n  const it = {\n    cellSize: 0,\n    cell: [],\n    done: false,\n    polyIdx: 0,\n    stripIdx: 0,\n    remainingStripLength: 0,\n    // returns a single poly cell\n    next() {\n      if (it.polyIdx < polys.length) {\n        it.cellSize = polys[it.polyIdx];\n        const start = it.polyIdx + 1;\n        const end = start + it.cellSize;\n        it.polyIdx = end;\n        let p = 0;\n        for (let i = start; i < end; ++i) {\n          it.cell[p++] = polys[i];\n        }\n      } else if (it.stripIdx < strips.length) {\n        it.cellSize = 3;\n        if (it.remainingStripLength === 0) {\n          it.remainingStripLength = strips[it.stripIdx] - 2; // sliding window of 3 points\n          // stripIdx points to the last point in a triangle 3-tuple\n          it.stripIdx += 3;\n        }\n        const start = it.stripIdx - 2;\n        const end = it.stripIdx + 1;\n        it.stripIdx++;\n        it.remainingStripLength--;\n        let p = 0;\n        for (let i = start; i < end; ++i) {\n          it.cell[p++] = strips[i];\n        }\n      } else if (!it.done) {\n        it.done = true;\n      } else {\n        throw new Error('Iterator is done');\n      }\n    }\n  };\n  it.next();\n  return it;\n}\n\n// ----------------------------------------------------------------------------\n// vtkCutter methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCutter(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCutter');\n\n  // Capture \"parentClass\" api for internal use\n  const superClass = {\n    ...publicAPI\n  };\n  publicAPI.getMTime = () => {\n    let mTime = superClass.getMTime();\n    if (!model.cutFunction) {\n      return mTime;\n    }\n    mTime = Math.max(mTime, model.cutFunction.getMTime());\n    return mTime;\n  };\n  function dataSetCutter(input, output) {\n    const points = input.getPoints();\n    const pointsData = points.getData();\n    const numPts = points.getNumberOfPoints();\n    const newPointsData = [];\n    const newLinesData = [];\n    const newPolysData = [];\n    if (!model.cutScalars || model.cutScalars.length < numPts) {\n      model.cutScalars = new Float32Array(numPts);\n    }\n\n    // Loop over all points evaluating scalar function at each point\n    let inOffset = 0;\n    let outOffset = 0;\n    while (inOffset < pointsData.length) {\n      model.cutScalars[outOffset++] = model.cutFunction.evaluateFunction(pointsData[inOffset++], pointsData[inOffset++], pointsData[inOffset++]);\n    }\n    const crossedEdges = [];\n    const x1 = new Array(3);\n    const x2 = new Array(3);\n    const cellPointsScalars = [];\n\n    // Loop over all cells; get scalar values for all cell points\n    // and process each cell.\n    /* eslint-disable no-continue */\n    for (const it = initPolyIterator(input); !it.done; it.next()) {\n      // cell contains the point IDs/indices\n\n      // Check that cells have at least 3 points\n      if (it.cellSize <= 2) {\n        continue;\n      }\n\n      // Get associated scalar of points that constitute the current cell\n      for (let i = 0; i < it.cellSize;) {\n        cellPointsScalars[i] = model.cutScalars[it.cell[i++]];\n      }\n\n      // Check if all cell points are on same side (same side == cell not crossed by cut function)\n      // TODO: won't work if one point scalar is = 0 ?\n      const sideFirstPoint = cellPointsScalars[0] > 0;\n      let allPointsSameSide = true;\n      for (let i = 1; i < it.cell.length; i++) {\n        const sideCurrentPoint = cellPointsScalars[i] > 0;\n        if (sideCurrentPoint !== sideFirstPoint) {\n          allPointsSameSide = false;\n          break;\n        }\n      }\n\n      // Go to next cell if cell is not crossed by cut function\n      if (allPointsSameSide) {\n        continue;\n      }\n\n      // Find and compute edges which intersect cells\n      const intersectedEdgesList = [];\n      for (let i = 0; i < it.cellSize; i++) {\n        const idNext = i + 1 === it.cellSize ? 0 : i + 1;\n\n        // Go to next edge if edge is not crossed\n        // TODO: in most come cases, (numberOfPointsInCell - 1) or 0 edges of the cell\n        // will be crossed, but if it crosses right at a point, it could be intersecting\n        // with (numberOfPoints) or 1 edge(s). Do we account for that?\n        const signPoint0 = cellPointsScalars[i] > 0;\n        const signPoint1 = cellPointsScalars[idNext] > 0;\n        if (signPoint1 === signPoint0) {\n          continue;\n        }\n\n        // Compute preferred interpolation direction\n        let e1 = i;\n        let e2 = idNext;\n        let deltaScalar = cellPointsScalars[e2] - cellPointsScalars[e1];\n        if (deltaScalar <= 0) {\n          e1 = idNext;\n          e2 = i;\n          deltaScalar *= -1;\n        }\n\n        // linear interpolation\n        let t = 0.0;\n        if (deltaScalar !== 0.0) {\n          t = (model.cutValue - cellPointsScalars[e1]) / deltaScalar;\n        }\n\n        // points position\n        const pointID1 = it.cell[e1];\n        const pointID2 = it.cell[e2];\n        x1[0] = pointsData[pointID1 * 3];\n        x1[1] = pointsData[pointID1 * 3 + 1];\n        x1[2] = pointsData[pointID1 * 3 + 2];\n        x2[0] = pointsData[pointID2 * 3];\n        x2[1] = pointsData[pointID2 * 3 + 1];\n        x2[2] = pointsData[pointID2 * 3 + 2];\n\n        // Compute the intersected point on edge\n        const computedIntersectedPoint = [x1[0] + t * (x2[0] - x1[0]), x1[1] + t * (x2[1] - x1[1]), x1[2] + t * (x2[2] - x1[2])];\n\n        // Keep track of it\n        intersectedEdgesList.push({\n          pointEdge1: pointID1,\n          // id of one point of the edge\n          pointEdge2: pointID2,\n          // id of one point of the edge\n          intersectedPoint: computedIntersectedPoint,\n          // 3D coordinate of points that intersected edge\n          newPointID: -1 // id of the intersected point when it will be added into vtkPoints\n        });\n      }\n\n      // Add points into newPointList\n      for (let i = 0; i < intersectedEdgesList.length; i++) {\n        const intersectedEdge = intersectedEdgesList[i];\n        let alreadyAdded = false;\n        // Check if point/edge already added\n        for (let j = 0; j < crossedEdges.length; j++) {\n          const crossedEdge = crossedEdges[j];\n          const sameEdge = intersectedEdge.pointEdge1 === crossedEdge.pointEdge1 && intersectedEdge.pointEdge2 === crossedEdge.pointEdge2;\n          const samePoint = intersectedEdge.intersectedPoint[0] === crossedEdge.intersectedPoint[0] && intersectedEdge.intersectedPoint[1] === crossedEdge.intersectedPoint[1] && intersectedEdge.intersectedPoint[2] === crossedEdge.intersectedPoint[2];\n          if (sameEdge || samePoint) {\n            alreadyAdded = true;\n            intersectedEdgesList[i].newPointID = crossedEdges[j].newPointID;\n            break;\n          }\n        }\n        if (!alreadyAdded) {\n          newPointsData.push(intersectedEdge.intersectedPoint[0]);\n          newPointsData.push(intersectedEdge.intersectedPoint[1]);\n          newPointsData.push(intersectedEdge.intersectedPoint[2]);\n          intersectedEdgesList[i].newPointID = newPointsData.length / 3 - 1;\n          crossedEdges.push(intersectedEdgesList[i]);\n        }\n      }\n\n      // Store cells\n      const cellSize = intersectedEdgesList.length;\n      if (cellSize === 2) {\n        newLinesData.push(cellSize, intersectedEdgesList[0].newPointID, intersectedEdgesList[1].newPointID);\n      } else if (cellSize > 2) {\n        newPolysData.push(cellSize);\n        intersectedEdgesList.forEach(edge => {\n          newPolysData.push(edge.newPointID);\n        });\n      }\n    }\n\n    // Set points\n    const outputPoints = output.getPoints();\n    outputPoints.setData(newTypedArrayFrom(points.getDataType(), newPointsData), 3);\n\n    // Set lines\n    if (newLinesData.length !== 0) {\n      output.getLines().setData(Uint16Array.from(newLinesData));\n    }\n\n    // Set polys\n    if (newPolysData.length !== 0) {\n      output.getPolys().setData(Uint16Array.from(newPolysData));\n    }\n  }\n\n  // expose requestData\n  publicAPI.requestData = (inData, outData) => {\n    // implement requestData\n    const input = inData[0];\n    if (!input) {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    }\n    if (!model.cutFunction) {\n      vtkErrorMacro('Missing cut function');\n      return;\n    }\n    const output = vtkPolyData.newInstance();\n    dataSetCutter(input, output);\n    outData[0] = output;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  cutFunction: null,\n  // support method with evaluateFunction method\n  cutScalars: null,\n  cutValue: 0.0\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Make this a VTK object\n  obj(publicAPI, model);\n\n  // Also make it an algorithm with one input and one output\n  algo(publicAPI, model, 1, 1);\n\n  // Set implicit function use to cut the input data (is vtkPlane)\n  setGet(publicAPI, model, ['cutFunction', 'cutValue']);\n\n  // Object specific methods\n  vtkCutter(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkCutter');\n\n// ----------------------------------------------------------------------------\n\nvar vtkCutter$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkCutter$1 as default, extend, newInstance };\n","import { mat4, glMatrix, vec3 } from 'gl-matrix';\nimport { a as areMatricesEqual } from './Math/index.js';\nimport { IDENTITY } from './Math/Constants.js';\n\nconst NoOp = v => v;\nconst EPSILON = 1e-6;\nclass Transform {\n  constructor() {\n    let useDegree = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    this.matrix = mat4.identity(new Float64Array(16));\n    this.tmp = new Float64Array(3);\n    this.angleConv = useDegree ? glMatrix.toRadian : NoOp;\n  }\n  rotateFromDirections(originDirection, targetDirection) {\n    const src = new Float64Array(3);\n    const dst = new Float64Array(3);\n    const transf = new Float64Array(16);\n    vec3.set(src, originDirection[0], originDirection[1], originDirection[2]);\n    vec3.set(dst, targetDirection[0], targetDirection[1], targetDirection[2]);\n    vec3.normalize(src, src);\n    vec3.normalize(dst, dst);\n    const cosAlpha = vec3.dot(src, dst);\n    if (cosAlpha >= 1) {\n      return this;\n    }\n    vec3.cross(this.tmp, src, dst);\n    if (vec3.length(this.tmp) < EPSILON) {\n      // cross product is 0, so pick arbitrary axis perpendicular\n      // to originDirection.\n      vec3.cross(this.tmp, [1, 0, 0], originDirection);\n      if (vec3.length(this.tmp) < EPSILON) {\n        vec3.cross(this.tmp, [0, 1, 0], originDirection);\n      }\n    }\n    mat4.fromRotation(transf, Math.acos(cosAlpha), this.tmp);\n    mat4.multiply(this.matrix, this.matrix, transf);\n    return this;\n  }\n  rotate(angle, axis) {\n    vec3.set(this.tmp, ...axis);\n    vec3.normalize(this.tmp, this.tmp);\n    mat4.rotate(this.matrix, this.matrix, this.angleConv(angle), this.tmp);\n    return this;\n  }\n  rotateX(angle) {\n    mat4.rotateX(this.matrix, this.matrix, this.angleConv(angle));\n    return this;\n  }\n  rotateY(angle) {\n    mat4.rotateY(this.matrix, this.matrix, this.angleConv(angle));\n    return this;\n  }\n  rotateZ(angle) {\n    mat4.rotateZ(this.matrix, this.matrix, this.angleConv(angle));\n    return this;\n  }\n  translate(x, y, z) {\n    vec3.set(this.tmp, x, y, z);\n    mat4.translate(this.matrix, this.matrix, this.tmp);\n    return this;\n  }\n  scale(sx, sy, sz) {\n    vec3.set(this.tmp, sx, sy, sz);\n    mat4.scale(this.matrix, this.matrix, this.tmp);\n    return this;\n  }\n  multiply(mat4x4) {\n    mat4.multiply(this.matrix, this.matrix, mat4x4);\n    return this;\n  }\n  multiply3x3(mat3x3) {\n    mat4.multiply(this.matrix, this.matrix, [mat3x3[0], mat3x3[1], mat3x3[2], 0, mat3x3[3], mat3x3[4], mat3x3[5], 0, mat3x3[6], mat3x3[7], mat3x3[8], 0, 0, 0, 0, 1]);\n    return this;\n  }\n  invert() {\n    mat4.invert(this.matrix, this.matrix);\n    return this;\n  }\n  identity() {\n    mat4.identity(this.matrix);\n    return this;\n  }\n\n  //-----------\n\n  apply(typedArray) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let nbIterations = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    if (areMatricesEqual(IDENTITY, this.matrix)) {\n      // Make sure we can chain apply...\n      return this;\n    }\n    const size = nbIterations === -1 ? typedArray.length : offset + nbIterations * 3;\n    for (let i = offset; i < size; i += 3) {\n      vec3.set(this.tmp, typedArray[i], typedArray[i + 1], typedArray[i + 2]);\n      vec3.transformMat4(this.tmp, this.tmp, this.matrix);\n      typedArray[i] = this.tmp[0];\n      typedArray[i + 1] = this.tmp[1];\n      typedArray[i + 2] = this.tmp[2];\n    }\n\n    // Make sure we can chain apply...\n    return this;\n  }\n  getMatrix() {\n    return this.matrix;\n  }\n  setMatrix(mat4x4) {\n    if (!!mat4x4 && mat4x4.length === 16) {\n      mat4.copy(this.matrix, mat4x4);\n    }\n    return this;\n  }\n}\nfunction buildFromDegree() {\n  return new Transform(true);\n}\nfunction buildFromRadian() {\n  return new Transform(false);\n}\nvar vtkMatrixBuilder = {\n  buildFromDegree,\n  buildFromRadian\n};\n\nexport { vtkMatrixBuilder as default };\n","import { m as macro } from '../../macros2.js';\nimport vtkCellArray from '../../Common/Core/CellArray.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\n\n// prettier-ignore\nconst LINE_ARRAY = [2, 0, 1, 2, 2, 3, 2, 4, 5, 2, 6, 7, 2, 0, 2, 2, 1, 3, 2, 4, 6, 2, 5, 7, 2, 0, 4, 2, 1, 5, 2, 2, 6, 2, 3, 7];\n\n// prettier-ignore\nconst POLY_ARRAY = [4, 0, 1, 3, 2, 4, 4, 6, 7, 5, 4, 8, 10, 11, 9, 4, 12, 13, 15, 14, 4, 16, 18, 19, 17, 4, 20, 21, 23, 22];\n\n// ----------------------------------------------------------------------------\n// vtkCubeSource methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCubeSource(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCubeSource');\n  function requestData(inData, outData) {\n    if (model.deleted) {\n      return;\n    }\n    const polyData = vtkPolyData.newInstance();\n    outData[0] = polyData;\n    const numberOfPoints = 24;\n\n    // Define points\n    const points = macro.newTypedArray(model.pointType, numberOfPoints * 3);\n    polyData.getPoints().setData(points, 3);\n    const normals = macro.newTypedArray(model.pointType, numberOfPoints * 3);\n    const normalArray = vtkDataArray.newInstance({\n      name: 'Normals',\n      values: normals,\n      numberOfComponents: 3\n    });\n    polyData.getPointData().setNormals(normalArray);\n    let tcdim = 2;\n    if (model.generate3DTextureCoordinates === true) {\n      tcdim = 3;\n    }\n    const textureCoords = macro.newTypedArray(model.pointType, numberOfPoints * tcdim);\n    const tcoords = vtkDataArray.newInstance({\n      name: 'TextureCoordinates',\n      values: textureCoords,\n      numberOfComponents: tcdim\n    });\n    polyData.getPointData().setTCoords(tcoords);\n    const x = [0.0, 0.0, 0.0];\n    const n = [0.0, 0.0, 0.0];\n    const tc = [0.0, 0.0];\n    let pointIndex = 0;\n    x[0] = -model.xLength / 2.0;\n    n[0] = -1.0;\n    n[1] = 0.0;\n    n[2] = 0.0;\n    for (let i = 0; i < 2; i++) {\n      x[1] = -model.yLength / 2.0;\n      for (let j = 0; j < 2; j++) {\n        tc[1] = x[1] + 0.5;\n        x[2] = -model.zLength / 2.0;\n        for (let k = 0; k < 2; k++) {\n          tc[0] = (x[2] + 0.5) * (1 - 2 * i);\n          points[pointIndex * 3] = x[0];\n          points[pointIndex * 3 + 1] = x[1];\n          points[pointIndex * 3 + 2] = x[2];\n          normals[pointIndex * 3] = n[0];\n          normals[pointIndex * 3 + 1] = n[1];\n          normals[pointIndex * 3 + 2] = n[2];\n          if (tcdim === 2) {\n            textureCoords[pointIndex * tcdim] = tc[0];\n            textureCoords[pointIndex * tcdim + 1] = tc[1];\n          } else {\n            textureCoords[pointIndex * tcdim] = 2 * i - 1;\n            textureCoords[pointIndex * tcdim + 1] = 2 * j - 1;\n            textureCoords[pointIndex * tcdim + 2] = 2 * k - 1;\n          }\n          pointIndex++;\n          x[2] += model.zLength;\n        }\n        x[1] += model.yLength;\n      }\n      x[0] += model.xLength;\n      n[0] += 2.0;\n    }\n    x[1] = -model.yLength / 2.0;\n    n[1] = -1.0;\n    n[0] = 0.0;\n    n[2] = 0.0;\n    for (let i = 0; i < 2; i++) {\n      x[0] = -model.xLength / 2.0;\n      for (let j = 0; j < 2; j++) {\n        tc[0] = (x[0] + 0.5) * (2 * i - 1);\n        x[2] = -model.zLength / 2.0;\n        for (let k = 0; k < 2; k++) {\n          tc[1] = (x[2] + 0.5) * -1;\n          points[pointIndex * 3] = x[0];\n          points[pointIndex * 3 + 1] = x[1];\n          points[pointIndex * 3 + 2] = x[2];\n          normals[pointIndex * 3] = n[0];\n          normals[pointIndex * 3 + 1] = n[1];\n          normals[pointIndex * 3 + 2] = n[2];\n          if (tcdim === 2) {\n            textureCoords[pointIndex * tcdim] = tc[0];\n            textureCoords[pointIndex * tcdim + 1] = tc[1];\n          } else {\n            textureCoords[pointIndex * tcdim] = 2 * j - 1;\n            textureCoords[pointIndex * tcdim + 1] = 2 * i - 1;\n            textureCoords[pointIndex * tcdim + 2] = 2 * k - 1;\n          }\n          pointIndex++;\n          x[2] += model.zLength;\n        }\n        x[0] += model.xLength;\n      }\n      x[1] += model.yLength;\n      n[1] += 2.0;\n    }\n    x[2] = -model.zLength / 2.0;\n    n[2] = -1.0;\n    n[0] = 0.0;\n    n[1] = 0.0;\n    for (let i = 0; i < 2; i++) {\n      x[1] = -model.yLength / 2.0;\n      for (let j = 0; j < 2; j++) {\n        tc[1] = x[1] + 0.5;\n        x[0] = -model.xLength / 2.0;\n        for (let k = 0; k < 2; k++) {\n          tc[0] = (x[0] + 0.5) * (2 * i - 1);\n          points[pointIndex * 3] = x[0];\n          points[pointIndex * 3 + 1] = x[1];\n          points[pointIndex * 3 + 2] = x[2];\n          normals[pointIndex * 3] = n[0];\n          normals[pointIndex * 3 + 1] = n[1];\n          normals[pointIndex * 3 + 2] = n[2];\n          if (tcdim === 2) {\n            textureCoords[pointIndex * tcdim] = tc[0];\n            textureCoords[pointIndex * tcdim + 1] = tc[1];\n          } else {\n            textureCoords[pointIndex * tcdim] = 2 * k - 1;\n            textureCoords[pointIndex * tcdim + 1] = 2 * j - 1;\n            textureCoords[pointIndex * tcdim + 2] = 2 * i - 1;\n          }\n          pointIndex++;\n          x[0] += model.xLength;\n        }\n        x[1] += model.yLength;\n      }\n      x[2] += model.zLength;\n      n[2] += 2.0;\n    }\n\n    // Apply rotation to the points coordinates and normals\n    if (model.rotations) {\n      vtkMatrixBuilder.buildFromDegree().rotateX(model.rotations[0]).rotateY(model.rotations[1]).rotateZ(model.rotations[2]).apply(points).apply(normals);\n    }\n\n    // Apply transformation to the points coordinates\n    if (model.center) {\n      vtkMatrixBuilder.buildFromRadian().translate(...model.center).apply(points);\n    }\n\n    // Apply optional additionally specified matrix transformation\n    if (model.matrix) {\n      vtkMatrixBuilder.buildFromRadian().setMatrix(model.matrix).apply(points);\n\n      // prettier-ignore\n      const rotMatrix = [model.matrix[0], model.matrix[1], model.matrix[2], 0, model.matrix[4], model.matrix[5], model.matrix[6], 0, model.matrix[8], model.matrix[9], model.matrix[10], 0, 0, 0, 0, 1];\n      vtkMatrixBuilder.buildFromRadian().setMatrix(rotMatrix).apply(normals);\n    }\n\n    // Lastly, generate the necessary cell arrays.\n    if (model.generateFaces) {\n      polyData.getPolys().deepCopy(model._polys);\n    } else {\n      polyData.getPolys().initialize();\n    }\n    if (model.generateLines) {\n      polyData.getLines().deepCopy(model._lineCells);\n      // only set normals for faces, not for lines.\n      polyData.getPointData().setNormals(null);\n    } else {\n      polyData.getLines().initialize();\n    }\n    polyData.modified();\n  }\n  publicAPI.setBounds = function () {\n    let boundsArray = [];\n    if (Array.isArray(arguments.length <= 0 ? undefined : arguments[0])) {\n      boundsArray = arguments.length <= 0 ? undefined : arguments[0];\n    } else {\n      for (let i = 0; i < arguments.length; i++) {\n        boundsArray.push(i < 0 || arguments.length <= i ? undefined : arguments[i]);\n      }\n    }\n    if (boundsArray.length !== 6) {\n      return;\n    }\n    publicAPI.setXLength(boundsArray[1] - boundsArray[0]);\n    publicAPI.setYLength(boundsArray[3] - boundsArray[2]);\n    publicAPI.setZLength(boundsArray[5] - boundsArray[4]);\n    publicAPI.setCenter([(boundsArray[0] + boundsArray[1]) / 2.0, (boundsArray[2] + boundsArray[3]) / 2.0, (boundsArray[4] + boundsArray[5]) / 2.0]);\n  };\n\n  // Expose methods\n  publicAPI.requestData = requestData;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  xLength: 1.0,\n  yLength: 1.0,\n  zLength: 1.0,\n  pointType: 'Float64Array',\n  generate3DTextureCoordinates: false,\n  generateFaces: true,\n  generateLines: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['xLength', 'yLength', 'zLength', 'generate3DTextureCoordinates', 'generateFaces', 'generateLines']);\n  macro.setGetArray(publicAPI, model, ['center', 'rotations'], 3);\n  macro.setGetArray(publicAPI, model, ['matrix'], 16);\n\n  // Internal persistent/static objects\n  model._polys = vtkCellArray.newInstance({\n    values: Uint16Array.from(POLY_ARRAY)\n  });\n  model._lineCells = vtkCellArray.newInstance({\n    values: Uint16Array.from(LINE_ARRAY)\n  });\n  macro.moveToProtected(publicAPI, model, ['polys', 'lineCells']);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkCubeSource(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkCubeSource');\n\n// ----------------------------------------------------------------------------\n\nvar vtkCubeSource$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkCubeSource$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkCubeSource from '../Sources/CubeSource.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkImageDataOutlineFilter methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageDataOutlineFilter(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageDataOutlineFilter');\n\n  // Capture \"parentClass\" api for internal use\n  const superClass = {\n    ...publicAPI\n  };\n  publicAPI.requestData = (inData, outData) => {\n    // implement requestData\n    const input = inData[0];\n    if (!input || !input.isA('vtkImageData')) {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    }\n\n    // First create a cube polydata in the index-space of the image.\n    // The benefit of using `getSpatialExtent` call is that it automatically\n    // takes care of 0.5 voxel padding as required by an vtkImageData representation.\n    const spatialExt = input.getSpatialExtent();\n    if (!spatialExt) {\n      vtkErrorMacro('Unable to fetch spatial extents of input image.');\n      return;\n    }\n    model._cubeSource.setBounds(spatialExt);\n\n    // Then apply index-to-world transform to the cube to create the outline.\n    model._cubeSource.setMatrix(input.getIndexToWorld());\n    outData[0] = model._cubeSource.getOutputData();\n  };\n  publicAPI.getMTime = () => Math.max(superClass.getMTime(), model._cubeSource.getMTime());\n\n  // Forward calls for [set/get]Generate[Faces/Lines] functions to cubeSource:\n  publicAPI.setGenerateFaces = model._cubeSource.setGenerateFaces;\n  publicAPI.setGenerateLines = model._cubeSource.setGenerateLines;\n  publicAPI.getGenerateFaces = model._cubeSource.getGenerateFaces;\n  publicAPI.getGenerateLines = model._cubeSource.getGenerateLines;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Make this a VTK object\n  macro.obj(publicAPI, model);\n\n  // Also make it an algorithm with one input and one output\n  macro.algo(publicAPI, model, 1, 1);\n\n  // Internal persistent objects\n  model._cubeSource = vtkCubeSource.newInstance();\n  macro.moveToProtected(publicAPI, model, ['cubeSource', 'tmpOut']);\n\n  // Object specific methods\n  vtkImageDataOutlineFilter(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageDataOutlineFilter');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageDataOutlineFilter$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkImageDataOutlineFilter$1 as default, extend, newInstance };\n","import { IDENTITY } from '../Core/Math/Constants.js';\nimport { vec3, mat4 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport { f as vtkMath } from '../Core/Math/index.js';\n\n// ----------------------------------------------------------------------------\n// vtkTransform methods\n// ----------------------------------------------------------------------------\n// eslint-disable-next-line import/no-mutable-exports\nlet newInstance;\nfunction vtkTransform(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkAbstractTransform', 'vtkHomogeneousTransform', 'vtkTransform');\n  publicAPI.transformPoint = (point, out) => {\n    vec3.transformMat4(out, point, model.matrix);\n    return out;\n  };\n  publicAPI.transformPoints = (points, out) => {\n    const inPoint = new Float64Array(3);\n    const outPoint = new Float64Array(3);\n    for (let i = 0; i < points.length; i += 3) {\n      inPoint[0] = points[i];\n      inPoint[1] = points[i + 1];\n      inPoint[2] = points[i + 2];\n      vec3.transformMat4(outPoint, inPoint, model.matrix);\n      out[i] = outPoint[0];\n      out[i + 1] = outPoint[1];\n      out[i + 2] = outPoint[2];\n    }\n    return out;\n  };\n\n  /**\n   * Sets the internal state of the transform to PreMultiply.\n   * All subsequent operations will occur before those already represented in the current transformation.\n   * In homogeneous matrix notation, M = M*A where M is the current transformation matrix and A is the applied matrix.\n   * The default is PreMultiply.\n   */\n  publicAPI.preMultiply = () => {\n    publicAPI.setPreMultiplyFlag(true);\n  };\n\n  /**\n   * Sets the internal state of the transform to PostMultiply.\n   * All subsequent operations will occur after those already represented in the current transformation.\n   * In homogeneous matrix notation, M = A*M where M is the current transformation matrix and A is the applied matrix.\n   * The default is PreMultiply.\n   */\n  publicAPI.postMultiply = () => {\n    publicAPI.setPreMultiplyFlag(false);\n  };\n  publicAPI.transformMatrix = (matrix, out) => {\n    if (model.preMultiplyFlag) {\n      mat4.multiply(out, model.matrix, matrix);\n    } else {\n      mat4.multiply(out, matrix, model.matrix);\n    }\n    return out;\n  };\n\n  // Apply the transform to each matrix in the same way as transformMatrix\n  // `matrices` can be a contiguous array of float or an array of array\n  publicAPI.transformMatrices = (matrices, out) => {\n    const inMat = new Float64Array(16);\n    const outMat = new Float64Array(16);\n    const transform = model.preMultiplyFlag ? () => mat4.multiply(outMat, model.matrix, inMat) : () => mat4.multiply(outMat, inMat, model.matrix);\n    for (let i = 0; i < matrices.length; i += 16) {\n      for (let j = 0; j < 16; ++j) {\n        inMat[j] = matrices[i + j];\n      }\n      transform();\n      for (let j = 0; j < 16; ++j) {\n        out[i + j] = outMat[j];\n      }\n    }\n    return out;\n  };\n  publicAPI.getInverse = () => newInstance({\n    matrix: vtkMath.invertMatrix(Array.from(model.matrix), [], 4),\n    preMultiplyFlag: model.preMultiplyFlag\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  preMultiplyFlag: false,\n  matrix: [...IDENTITY]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['preMultiplyFlag']);\n  macro.setGetArray(publicAPI, model, ['matrix'], 16);\n  vtkTransform(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\nnewInstance = macro.newInstance(extend, 'vtkTransform');\n\n// ----------------------------------------------------------------------------\n\nvar vtkTransform$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkTransform$1 as default, extend, newInstance };\n","// See typescript header for documentation\n\nfunction getTransferFunctionHash(transferFunction, useIndependentComponents, numberOfComponents) {\n  return transferFunction ? `${transferFunction.getMTime()}-${useIndependentComponents}-${numberOfComponents}` : '0';\n}\nfunction getImageDataHash(image, scalars) {\n  return `${image.getMTime()}A${scalars.getMTime()}`;\n}\nvar resourceSharingHelper = {\n  getTransferFunctionHash,\n  getImageDataHash\n};\n\nexport { resourceSharingHelper as default, getImageDataHash, getTransferFunctionHash };\n","var vtkImageResliceMapperVS = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkImageResliceMapperVS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n\\n// all variables that represent positions or directions have a suffix\\n// indicating the coordinate system they are in. The possible values are\\n// MC - Model coordinates\\n// WC - World coordinates\\n// VC - View coordinates\\n// DC - Display coordinates\\n// TC - Texture coordinates\\n\\n// frag position in VC\\n//VTK::PositionVC::Dec\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\n// picking support\\n//VTK::Picking::Dec\\n\\n// camera and actor matrix values\\n//VTK::Camera::Dec\\n\\nvoid main()\\n{\\n  //VTK::PositionVC::Impl\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::Picking::Impl\\n}\\n\";\n\nexport { vtkImageResliceMapperVS as v };\n","var vtkImageResliceMapperFS = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkImageResliceMapperFS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n// Template for the gpu image mapper fragment shader\\n\\n// VC position of this fragment\\n//VTK::PositionVC::Dec\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\n// picking support\\n//VTK::Picking::Dec\\n\\n// handle coincident offsets\\n//VTK::Coincident::Dec\\n\\n//VTK::ZBuffer::Dec\\n\\n// the output of this shader\\n//VTK::Output::Dec\\n\\nvoid main()\\n{\\n  // VC position of this fragment. This should not branch/return/discard.\\n  //VTK::PositionVC::Impl\\n\\n  // Place any calls that require uniform flow (e.g. dFdx) here.\\n  //VTK::UniformFlow::Impl\\n\\n  // Set gl_FragDepth here (gl_FragCoord.z by default)\\n  //VTK::Depth::Impl\\n\\n  // Early depth peeling abort:\\n  //VTK::DepthPeeling::PreColor\\n\\n  //VTK::TCoord::Impl\\n\\n  if (gl_FragData[0].a <= 0.0)\\n    {\\n    discard;\\n    }\\n\\n  //VTK::DepthPeeling::Impl\\n\\n  //VTK::Picking::Impl\\n\\n  // handle coincident offsets\\n  //VTK::Coincident::Impl\\n\\n  //VTK::ZBuffer::Impl\\n\\n  //VTK::RenderPassFragmentShader::Impl\\n}\\n\";\n\nexport { vtkImageResliceMapperFS as v };\n","const InterpolationType = {\n  NEAREST: 0,\n  LINEAR: 1\n};\nvar Constants = {\n  InterpolationType\n};\n\nexport { InterpolationType, Constants as default };\n","import { n as newInstance$1, o as obj, g as get, h as chain, c as macro } from '../../macros2.js';\nimport { mat4, mat3, vec3 } from 'gl-matrix';\nimport vtkClosedPolyLineToSurfaceFilter from '../../Filters/General/ClosedPolyLineToSurfaceFilter.js';\nimport vtkCutter from '../../Filters/Core/Cutter.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkHelper from './Helper.js';\nimport vtkImageDataOutlineFilter from '../../Filters/General/ImageDataOutlineFilter.js';\nimport { f as vtkMath } from '../../Common/Core/Math/index.js';\nimport vtkOpenGLTexture from './Texture.js';\nimport vtkPlane from '../../Common/DataModel/Plane.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport vtkReplacementShaderMapper from './ReplacementShaderMapper.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport vtkTransform from '../../Common/Transform/Transform.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { getImageDataHash, getTransferFunctionHash } from './RenderWindow/resourceSharingHelper.js';\nimport { v as vtkImageResliceMapperVS } from './glsl/vtkImageResliceMapperVS.glsl.js';\nimport { v as vtkImageResliceMapperFS } from './glsl/vtkImageResliceMapperFS.glsl.js';\nimport { Filter } from './Texture/Constants.js';\nimport { InterpolationType } from '../Core/ImageProperty/Constants.js';\nimport { Representation } from '../Core/Property/Constants.js';\nimport { VtkDataTypes } from '../../Common/Core/DataArray/Constants.js';\nimport { registerOverride } from './ViewNodeFactory.js';\nimport '../Core/Mapper/CoincidentTopologyHelper.js';\nimport { Resolve } from '../Core/Mapper/Static.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// helper methods\n// ----------------------------------------------------------------------------\n\nfunction safeMatrixMultiply(matrixArray, matrixType, tmpMat) {\n  matrixType.identity(tmpMat);\n  return matrixArray.reduce((res, matrix, index) => {\n    if (index === 0) {\n      return matrix ? matrixType.copy(res, matrix) : matrixType.identity(res);\n    }\n    return matrix ? matrixType.multiply(res, res, matrix) : res;\n  }, tmpMat);\n}\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLImageResliceMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLImageResliceMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLImageResliceMapper');\n  function unregisterGraphicsResources(renderWindow) {\n    [model._scalars, model._colorTransferFunc, model._pwFunc].forEach(coreObject => renderWindow.unregisterGraphicsResourceUser(coreObject, publicAPI));\n  }\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model.currentRenderPass = null;\n      model._openGLImageSlice = publicAPI.getFirstAncestorOfType('vtkOpenGLImageSlice');\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      const ren = model._openGLRenderer.getRenderable();\n      model._openGLCamera = model._openGLRenderer.getViewNodeFor(ren.getActiveCamera());\n      const oldOglRenderWindow = model._openGLRenderWindow;\n      model._openGLRenderWindow = model._openGLRenderer.getLastAncestorOfType('vtkOpenGLRenderWindow');\n      if (oldOglRenderWindow && !oldOglRenderWindow.isDeleted() && oldOglRenderWindow !== model._openGLRenderWindow) {\n        // Unregister the mapper when the render window changes\n        unregisterGraphicsResources(oldOglRenderWindow);\n      }\n      model.context = model._openGLRenderWindow.getContext();\n      model.tris.setOpenGLRenderWindow(model._openGLRenderWindow);\n    }\n  };\n  publicAPI.translucentPass = (prepass, renderPass) => {\n    if (prepass) {\n      model.currentRenderPass = renderPass;\n      publicAPI.render();\n    }\n  };\n  publicAPI.zBufferPass = prepass => {\n    if (prepass) {\n      model.haveSeenDepthRequest = true;\n      model.renderDepth = true;\n      publicAPI.render();\n      model.renderDepth = false;\n    }\n  };\n  publicAPI.opaqueZBufferPass = prepass => publicAPI.zBufferPass(prepass);\n  publicAPI.opaquePass = prepass => {\n    if (prepass) {\n      publicAPI.render();\n    }\n  };\n  publicAPI.getCoincidentParameters = (ren, actor) => {\n    if (\n    // backwards compat with code that (errorneously) set this to boolean\n    // eslint-disable-next-line eqeqeq\n    model.renderable.getResolveCoincidentTopology() == Resolve.PolygonOffset) {\n      return model.renderable.getCoincidentTopologyPolygonOffsetParameters();\n    }\n    return null;\n  };\n\n  // Renders myself\n  publicAPI.render = () => {\n    const actor = model._openGLImageSlice.getRenderable();\n    const ren = model._openGLRenderer.getRenderable();\n    publicAPI.renderPiece(ren, actor);\n  };\n  publicAPI.renderPiece = (ren, actor) => {\n    publicAPI.invokeEvent({\n      type: 'StartEvent'\n    });\n    model.renderable.update();\n    model.currentInput = model.renderable.getInputData();\n    if (!model.currentInput) {\n      vtkErrorMacro('No input!');\n      return;\n    }\n    publicAPI.updateResliceGeometry();\n    publicAPI.renderPieceStart(ren, actor);\n    publicAPI.renderPieceDraw(ren, actor);\n    publicAPI.renderPieceFinish(ren, actor);\n    publicAPI.invokeEvent({\n      type: 'EndEvent'\n    });\n  };\n  publicAPI.renderPieceStart = (ren, actor) => {\n    // make sure the BOs are up to date\n    publicAPI.updateBufferObjects(ren, actor);\n    const iType = actor.getProperty().getInterpolationType();\n    if (iType === InterpolationType.NEAREST) {\n      model.openGLTexture.setMinificationFilter(Filter.NEAREST);\n      model.openGLTexture.setMagnificationFilter(Filter.NEAREST);\n      model.colorTexture.setMinificationFilter(Filter.NEAREST);\n      model.colorTexture.setMagnificationFilter(Filter.NEAREST);\n      model.pwfTexture.setMinificationFilter(Filter.NEAREST);\n      model.pwfTexture.setMagnificationFilter(Filter.NEAREST);\n    } else {\n      model.openGLTexture.setMinificationFilter(Filter.LINEAR);\n      model.openGLTexture.setMagnificationFilter(Filter.LINEAR);\n      model.colorTexture.setMinificationFilter(Filter.LINEAR);\n      model.colorTexture.setMagnificationFilter(Filter.LINEAR);\n      model.pwfTexture.setMinificationFilter(Filter.LINEAR);\n      model.pwfTexture.setMagnificationFilter(Filter.LINEAR);\n    }\n\n    // No buffer objects bound.\n    model.lastBoundBO = null;\n  };\n  publicAPI.renderPieceDraw = (ren, actor) => {\n    const gl = model.context;\n\n    // render the texture\n    model.openGLTexture.activate();\n    model.colorTexture.activate();\n    model.pwfTexture.activate();\n\n    // update shaders if required\n    publicAPI.updateShaders(model.tris, ren, actor);\n\n    // Finally draw\n    gl.drawArrays(gl.TRIANGLES, 0, model.tris.getCABO().getElementCount());\n    model.tris.getVAO().release();\n    model.openGLTexture.deactivate();\n    model.colorTexture.deactivate();\n    model.pwfTexture.deactivate();\n  };\n  publicAPI.renderPieceFinish = (ren, actor) => {};\n  publicAPI.updateBufferObjects = (ren, actor) => {\n    // Rebuild buffer objects if needed\n    if (publicAPI.getNeedToRebuildBufferObjects(ren, actor)) {\n      publicAPI.buildBufferObjects(ren, actor);\n    }\n  };\n  publicAPI.getNeedToRebuildBufferObjects = (ren, actor) => model.VBOBuildTime.getMTime() < publicAPI.getMTime() || model.VBOBuildTime.getMTime() < actor.getMTime() || model.VBOBuildTime.getMTime() < model.renderable.getMTime() || model.VBOBuildTime.getMTime() < actor.getProperty().getMTime() || model.VBOBuildTime.getMTime() < model.currentInput.getMTime() || model.VBOBuildTime.getMTime() < model.resliceGeom.getMTime() || !model.openGLTexture?.getHandle() || !model.colorTexture?.getHandle() || !model.pwfTexture?.getHandle();\n  publicAPI.buildBufferObjects = (ren, actor) => {\n    const image = model.currentInput;\n    if (!image) {\n      return;\n    }\n    const scalars = image.getPointData()?.getScalars();\n    if (!scalars) {\n      return;\n    }\n    const numComp = scalars.getNumberOfComponents();\n    let toString = getImageDataHash(image, scalars);\n    const tex = model._openGLRenderWindow.getGraphicsResourceForObject(scalars);\n    const reBuildTex = !tex?.oglObject?.getHandle() || tex?.hash !== toString;\n    if (reBuildTex) {\n      model.openGLTexture = vtkOpenGLTexture.newInstance();\n      model.openGLTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      // Build the image scalar texture\n      const dims = image.getDimensions();\n      // Use norm16 for the 3D texture if the extension is available\n      model.openGLTexture.setOglNorm16Ext(model.context.getExtension('EXT_texture_norm16'));\n      model.openGLTexture.resetFormatAndType();\n      model.openGLTexture.create3DFilterableFromDataArray(dims[0], dims[1], dims[2], scalars);\n      model._openGLRenderWindow.setGraphicsResourceForObject(scalars, model.openGLTexture, toString);\n      if (scalars !== model._scalars) {\n        model._openGLRenderWindow.registerGraphicsResourceUser(scalars, publicAPI);\n        model._openGLRenderWindow.unregisterGraphicsResourceUser(model._scalars, publicAPI);\n      }\n      model._scalars = scalars;\n    } else {\n      model.openGLTexture = tex.oglObject;\n    }\n    const ppty = actor.getProperty();\n    const iComps = ppty.getIndependentComponents();\n    const numIComps = iComps ? numComp : 1;\n    const textureHeight = iComps ? 2 * numIComps : 1;\n    const colorTransferFunc = ppty.getRGBTransferFunction();\n    toString = getTransferFunctionHash(colorTransferFunc, iComps, numIComps);\n    const cTex = model._openGLRenderWindow.getGraphicsResourceForObject(colorTransferFunc);\n    const reBuildC = !cTex?.oglObject?.getHandle() || cTex?.hash !== toString;\n    if (reBuildC) {\n      const cWidth = 1024;\n      const cSize = cWidth * textureHeight * 3;\n      const cTable = new Uint8ClampedArray(cSize);\n      model.colorTexture = vtkOpenGLTexture.newInstance();\n      model.colorTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      if (colorTransferFunc) {\n        const tmpTable = new Float32Array(cWidth * 3);\n        for (let c = 0; c < numIComps; c++) {\n          const cfun = ppty.getRGBTransferFunction(c);\n          const cRange = cfun.getRange();\n          cfun.getTable(cRange[0], cRange[1], cWidth, tmpTable, 1);\n          if (iComps) {\n            for (let i = 0; i < cWidth * 3; i++) {\n              cTable[c * cWidth * 6 + i] = 255.0 * tmpTable[i];\n              cTable[c * cWidth * 6 + i + cWidth * 3] = 255.0 * tmpTable[i];\n            }\n          } else {\n            for (let i = 0; i < cWidth * 3; i++) {\n              cTable[c * cWidth * 6 + i] = 255.0 * tmpTable[i];\n            }\n          }\n        }\n        model.colorTexture.resetFormatAndType();\n        model.colorTexture.create2DFromRaw(cWidth, textureHeight, 3, VtkDataTypes.UNSIGNED_CHAR, cTable);\n      } else {\n        for (let i = 0; i < cWidth * 3; ++i) {\n          cTable[i] = 255.0 * i / ((cWidth - 1) * 3);\n          cTable[i + 1] = 255.0 * i / ((cWidth - 1) * 3);\n          cTable[i + 2] = 255.0 * i / ((cWidth - 1) * 3);\n        }\n        model.colorTexture.resetFormatAndType();\n        model.colorTexture.create2DFromRaw(cWidth, 1, 3, VtkDataTypes.UNSIGNED_CHAR, cTable);\n      }\n      if (colorTransferFunc) {\n        model._openGLRenderWindow.setGraphicsResourceForObject(colorTransferFunc, model.colorTexture, toString);\n        if (colorTransferFunc !== model._colorTransferFunc) {\n          model._openGLRenderWindow.registerGraphicsResourceUser(colorTransferFunc, publicAPI);\n          model._openGLRenderWindow.unregisterGraphicsResourceUser(model._colorTransferFunc, publicAPI);\n        }\n        model._colorTransferFunc = colorTransferFunc;\n      }\n    } else {\n      model.colorTexture = cTex.oglObject;\n    }\n\n    // Build piecewise function buffer.  This buffer is used either\n    // for component weighting or opacity, depending on whether we're\n    // rendering components independently or not.\n    const pwFunc = ppty.getPiecewiseFunction();\n    toString = getTransferFunctionHash(pwFunc, iComps, numIComps);\n    const pwfTex = model._openGLRenderWindow.getGraphicsResourceForObject(pwFunc);\n    // rebuild opacity tfun?\n    const reBuildPwf = !pwfTex?.oglObject?.getHandle() || pwfTex?.hash !== toString;\n    if (reBuildPwf) {\n      const pwfWidth = 1024;\n      const pwfSize = pwfWidth * textureHeight;\n      const pwfTable = new Uint8ClampedArray(pwfSize);\n      model.pwfTexture = vtkOpenGLTexture.newInstance();\n      model.pwfTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      if (pwFunc) {\n        const pwfFloatTable = new Float32Array(pwfSize);\n        const tmpTable = new Float32Array(pwfWidth);\n        for (let c = 0; c < numIComps; ++c) {\n          const pwfun = ppty.getPiecewiseFunction(c);\n          if (pwfun === null) {\n            // Piecewise constant max if no function supplied for this component\n            pwfFloatTable.fill(1.0);\n          } else {\n            const pwfRange = pwfun.getRange();\n            pwfun.getTable(pwfRange[0], pwfRange[1], pwfWidth, tmpTable, 1);\n            // adjust for sample distance etc\n            if (iComps) {\n              for (let i = 0; i < pwfWidth; i++) {\n                pwfFloatTable[c * pwfWidth * 2 + i] = tmpTable[i];\n                pwfFloatTable[c * pwfWidth * 2 + i + pwfWidth] = tmpTable[i];\n              }\n            } else {\n              for (let i = 0; i < pwfWidth; i++) {\n                pwfFloatTable[c * pwfWidth * 2 + i] = tmpTable[i];\n              }\n            }\n          }\n        }\n        model.pwfTexture.resetFormatAndType();\n        model.pwfTexture.create2DFromRaw(pwfWidth, textureHeight, 1, VtkDataTypes.FLOAT, pwfFloatTable);\n      } else {\n        // default is opaque\n        pwfTable.fill(255.0);\n        model.pwfTexture.resetFormatAndType();\n        model.pwfTexture.create2DFromRaw(pwfWidth, 1, 1, VtkDataTypes.UNSIGNED_CHAR, pwfTable);\n      }\n      if (pwFunc) {\n        model._openGLRenderWindow.setGraphicsResourceForObject(pwFunc, model.pwfTexture, toString);\n        if (pwFunc !== model._pwFunc) {\n          model._openGLRenderWindow.registerGraphicsResourceUser(pwFunc, publicAPI);\n          model._openGLRenderWindow.unregisterGraphicsResourceUser(model._pwFunc, publicAPI);\n        }\n        model._pwFunc = pwFunc;\n      }\n    } else {\n      model.pwfTexture = pwfTex.oglObject;\n    }\n    const vboString = `${model.resliceGeom.getMTime()}A${model.renderable.getSlabThickness()}`;\n    if (!model.tris.getCABO().getElementCount() || model.VBOBuildString !== vboString) {\n      const points = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        values: model.resliceGeom.getPoints().getData()\n      });\n      points.setName('points');\n      const cells = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        values: model.resliceGeom.getPolys().getData()\n      });\n      const options = {\n        points,\n        cellOffset: 0\n      };\n      if (model.renderable.getSlabThickness() > 0.0) {\n        const n = model.resliceGeom.getPointData().getNormals();\n        if (!n) {\n          vtkErrorMacro('Slab mode requested without normals');\n        } else {\n          options.normals = n;\n        }\n      }\n      model.tris.getCABO().createVBO(cells, 'polys', Representation.SURFACE, options);\n    }\n    model.VBOBuildString = vboString;\n    model.VBOBuildTime.modified();\n  };\n  publicAPI.updateShaders = (cellBO, ren, actor) => {\n    model.lastBoundBO = cellBO;\n\n    // has something changed that would require us to recreate the shader?\n    if (publicAPI.getNeedToRebuildShaders(cellBO, ren, actor)) {\n      const shaders = {\n        Vertex: null,\n        Fragment: null,\n        Geometry: null\n      };\n      publicAPI.buildShaders(shaders, ren, actor);\n\n      // compile and bind the program if needed\n      const newShader = model._openGLRenderWindow.getShaderCache().readyShaderProgramArray(shaders.Vertex, shaders.Fragment, shaders.Geometry);\n\n      // if the shader changed reinitialize the VAO\n      if (newShader !== cellBO.getProgram()) {\n        cellBO.setProgram(newShader);\n        // reset the VAO as the shader has changed\n        cellBO.getVAO().releaseGraphicsResources();\n      }\n      cellBO.getShaderSourceTime().modified();\n    } else {\n      model._openGLRenderWindow.getShaderCache().readyShaderProgram(cellBO.getProgram());\n    }\n    cellBO.getVAO().bind();\n    publicAPI.setMapperShaderParameters(cellBO, ren, actor);\n    publicAPI.setCameraShaderParameters(cellBO, ren, actor);\n    publicAPI.setPropertyShaderParameters(cellBO, ren, actor);\n  };\n  publicAPI.setMapperShaderParameters = (cellBO, ren, actor) => {\n    const program = cellBO.getProgram();\n    if (cellBO.getCABO().getElementCount() && (model.VBOBuildTime.getMTime() > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime())) {\n      // Set the 3D texture\n      if (program.isUniformUsed('texture1')) {\n        program.setUniformi('texture1', model.openGLTexture.getTextureUnit());\n      }\n\n      // Set the plane vertex attributes\n      if (program.isAttributeUsed('vertexWC')) {\n        if (!cellBO.getVAO().addAttributeArray(program, cellBO.getCABO(), 'vertexWC', cellBO.getCABO().getVertexOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, model.context.FALSE)) {\n          vtkErrorMacro('Error setting vertexWC in shader VAO.');\n        }\n      }\n\n      // If we are doing slab mode, we need normals\n      if (program.isAttributeUsed('normalWC')) {\n        if (!cellBO.getVAO().addAttributeArray(program, cellBO.getCABO(), 'normalWC', cellBO.getCABO().getNormalOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, model.context.FALSE)) {\n          vtkErrorMacro('Error setting normalWC in shader VAO.');\n        }\n      }\n      if (program.isUniformUsed('slabThickness')) {\n        program.setUniformf('slabThickness', model.renderable.getSlabThickness());\n      }\n      if (program.isUniformUsed('spacing')) {\n        program.setUniform3fv('spacing', model.currentInput.getSpacing());\n      }\n      if (program.isUniformUsed('slabType')) {\n        program.setUniformi('slabType', model.renderable.getSlabType());\n      }\n      if (program.isUniformUsed('slabType')) {\n        program.setUniformi('slabType', model.renderable.getSlabType());\n      }\n      if (program.isUniformUsed('slabTrapezoid')) {\n        program.setUniformi('slabTrapezoid', model.renderable.getSlabTrapezoidIntegration());\n      }\n      const shiftScaleEnabled = cellBO.getCABO().getCoordShiftAndScaleEnabled();\n      const inverseShiftScaleMatrix = shiftScaleEnabled ? cellBO.getCABO().getInverseShiftAndScaleMatrix() : null;\n\n      // Set the world->texture matrix\n      if (program.isUniformUsed('WCTCMatrix')) {\n        const image = model.currentInput;\n        const dim = image.getDimensions();\n        mat4.copy(model.tmpMat4, image.getIndexToWorld());\n        mat4.translate(model.tmpMat4, model.tmpMat4, [-0.5, -0.5, -0.5]);\n        mat4.scale(model.tmpMat4, model.tmpMat4, dim);\n        mat4.invert(model.tmpMat4, model.tmpMat4);\n        if (inverseShiftScaleMatrix) {\n          mat4.multiply(model.tmpMat4, model.tmpMat4, inverseShiftScaleMatrix);\n        }\n        program.setUniformMatrix('WCTCMatrix', model.tmpMat4);\n      }\n      if (program.isUniformUsed('vboScaling')) {\n        program.setUniform3fv('vboScaling', cellBO.getCABO().getCoordScale() ?? [1, 1, 1]);\n      }\n      cellBO.getAttributeUpdateTime().modified();\n    }\n\n    // Depth request\n    if (model.haveSeenDepthRequest) {\n      cellBO.getProgram().setUniformi('depthRequest', model.renderDepth ? 1 : 0);\n    }\n\n    // handle coincident\n    if (cellBO.getProgram().isUniformUsed('coffset')) {\n      const cp = publicAPI.getCoincidentParameters(ren, actor);\n      cellBO.getProgram().setUniformf('coffset', cp.offset);\n      // cfactor isn't always used when coffset is.\n      if (cellBO.getProgram().isUniformUsed('cfactor')) {\n        cellBO.getProgram().setUniformf('cfactor', cp.factor);\n      }\n    }\n  };\n  publicAPI.setCameraShaderParameters = (cellBO, ren, actor) => {\n    // [WMVP]C == {world, model, view, projection} coordinates\n    // e.g. WCPC == world to projection coordinate transformation\n    const keyMats = model._openGLCamera.getKeyMatrices(ren);\n    const actMats = model._openGLImageSlice.getKeyMatrices();\n    const shiftScaleEnabled = cellBO.getCABO().getCoordShiftAndScaleEnabled();\n    const inverseShiftScaleMatrix = shiftScaleEnabled ? cellBO.getCABO().getInverseShiftAndScaleMatrix() : null;\n    const program = cellBO.getProgram();\n    if (program.isUniformUsed('MCPCMatrix')) {\n      mat4.identity(model.tmpMat4);\n      program.setUniformMatrix('MCPCMatrix', safeMatrixMultiply([keyMats.wcpc, actMats.mcwc, inverseShiftScaleMatrix], mat4, model.tmpMat4));\n    }\n    if (program.isUniformUsed('MCVCMatrix')) {\n      mat4.identity(model.tmpMat4);\n      program.setUniformMatrix('MCVCMatrix', safeMatrixMultiply([keyMats.wcvc, actMats.mcwc, inverseShiftScaleMatrix], mat4, model.tmpMat4));\n    }\n  };\n  publicAPI.setPropertyShaderParameters = (cellBO, ren, actor) => {\n    const program = cellBO.getProgram();\n    const ppty = actor.getProperty();\n    const opacity = ppty.getOpacity();\n    program.setUniformf('opacity', opacity);\n\n    // Component mix\n    // Independent components: Mixed according to component weights\n    // Dependent components: Mixed using the following logic:\n    //    - 2 comps => LA\n    //    - 3 comps => RGB + opacity from pwf\n    //    - 4 comps => RGBA\n    const numComp = model.openGLTexture.getComponents();\n    const iComps = ppty.getIndependentComponents();\n    if (iComps) {\n      for (let i = 0; i < numComp; ++i) {\n        program.setUniformf(`mix${i}`, ppty.getComponentWeight(i));\n      }\n    }\n\n    // Color opacity map\n    const volInfo = model.openGLTexture.getVolumeInfo();\n\n    // three levels of shift scale combined into one\n    // for performance in the fragment shader\n    for (let i = 0; i < numComp; i++) {\n      let cw = ppty.getColorWindow();\n      let cl = ppty.getColorLevel();\n      const target = iComps ? i : 0;\n      const cfun = ppty.getRGBTransferFunction(target);\n      if (cfun && ppty.getUseLookupTableScalarRange()) {\n        const cRange = cfun.getRange();\n        cw = cRange[1] - cRange[0];\n        cl = 0.5 * (cRange[1] + cRange[0]);\n      }\n      const scale = volInfo.scale[i] / cw;\n      const shift = (volInfo.offset[i] - cl) / cw + 0.5;\n      program.setUniformf(`cshift${i}`, shift);\n      program.setUniformf(`cscale${i}`, scale);\n    }\n    const texColorUnit = model.colorTexture.getTextureUnit();\n    program.setUniformi('colorTexture1', texColorUnit);\n\n    // pwf shift/scale\n    for (let i = 0; i < numComp; i++) {\n      let pwfScale = 1.0;\n      let pwfShift = 0.0;\n      const target = iComps ? i : 0;\n      const pwfun = ppty.getPiecewiseFunction(target);\n      if (pwfun) {\n        const pwfRange = pwfun.getRange();\n        const length = pwfRange[1] - pwfRange[0];\n        const mid = 0.5 * (pwfRange[0] + pwfRange[1]);\n        pwfScale = volInfo.scale[i] / length;\n        pwfShift = (volInfo.offset[i] - mid) / length + 0.5;\n      }\n      program.setUniformf(`pwfshift${i}`, pwfShift);\n      program.setUniformf(`pwfscale${i}`, pwfScale);\n    }\n    const texOpacityUnit = model.pwfTexture.getTextureUnit();\n    program.setUniformi('pwfTexture1', texOpacityUnit);\n\n    // Background color\n    program.setUniform4fv('backgroundColor', model.renderable.getBackgroundColor());\n  };\n  publicAPI.getNeedToRebuildShaders = (cellBO, ren, actor) => {\n    // has something changed that would require us to recreate the shader?\n    // candidates are\n    // property modified (representation interpolation and lighting)\n    // input modified\n    // light complexity changed\n    // render pass shader replacement changed\n    const tNumComp = model.openGLTexture.getComponents();\n    const iComp = actor.getProperty().getIndependentComponents();\n    const slabTh = model.renderable.getSlabThickness();\n    const slabType = model.renderable.getSlabType();\n    const slabTrap = model.renderable.getSlabTrapezoidIntegration();\n\n    // has the render pass shader replacement changed? Two options\n    let needRebuild = false;\n    if (!model.currentRenderPass && model.lastRenderPassShaderReplacement || model.currentRenderPass && model.currentRenderPass.getShaderReplacement() !== model.lastRenderPassShaderReplacement) {\n      needRebuild = true;\n    }\n    if (needRebuild || model.lastHaveSeenDepthRequest !== model.haveSeenDepthRequest || cellBO.getProgram()?.getHandle() === 0 || model.lastTextureComponents !== tNumComp || model.lastIndependentComponents !== iComp || model.lastSlabThickness !== slabTh || model.lastSlabType !== slabType || model.lastSlabTrapezoidIntegration !== slabTrap) {\n      model.lastHaveSeenDepthRequest = model.haveSeenDepthRequest;\n      model.lastTextureComponents = tNumComp;\n      model.lastIndependentComponents = iComp;\n      model.lastSlabThickness = slabTh;\n      model.lastSlabType = slabType;\n      model.lastSlabTrapezoidIntegration = slabTrap;\n      return true;\n    }\n    return false;\n  };\n  publicAPI.getShaderTemplate = (shaders, ren, actor) => {\n    shaders.Vertex = vtkImageResliceMapperVS;\n    shaders.Fragment = vtkImageResliceMapperFS;\n    shaders.Geometry = '';\n  };\n  publicAPI.replaceShaderValues = (shaders, ren, actor) => {\n    publicAPI.replaceShaderTCoord(shaders, ren, actor);\n    publicAPI.replaceShaderPositionVC(shaders, ren, actor);\n    if (model.haveSeenDepthRequest) {\n      let FSSource = shaders.Fragment;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Dec', 'uniform int depthRequest;').result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Impl', ['if (depthRequest == 1) {', 'float iz = floor(gl_FragCoord.z*65535.0 + 0.1);', 'float rf = floor(iz/256.0)/255.0;', 'float gf = mod(iz,256.0)/255.0;', 'gl_FragData[0] = vec4(rf, gf, 0.0, 1.0); }']).result;\n      shaders.Fragment = FSSource;\n    }\n    publicAPI.replaceShaderCoincidentOffset(shaders, ren, actor);\n  };\n  publicAPI.replaceShaderTCoord = (shaders, ren, actor) => {\n    let VSSource = shaders.Vertex;\n    const GSSource = shaders.Geometry;\n    let FSSource = shaders.Fragment;\n    const tcoordVSDec = ['uniform mat4 WCTCMatrix;', 'out vec3 fragTexCoord;'];\n    const slabThickness = model.renderable.getSlabThickness();\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Dec', tcoordVSDec).result;\n    const tcoordVSImpl = ['fragTexCoord = (WCTCMatrix * vertexWC).xyz;'];\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Impl', tcoordVSImpl).result;\n    const tNumComp = model.openGLTexture.getComponents();\n    const iComps = actor.getProperty().getIndependentComponents();\n    let tcoordFSDec = ['in vec3 fragTexCoord;', 'uniform highp sampler3D texture1;', 'uniform mat4 WCTCMatrix;',\n    // color shift and scale\n    'uniform float cshift0;', 'uniform float cscale0;',\n    // pwf shift and scale\n    'uniform float pwfshift0;', 'uniform float pwfscale0;',\n    // color and pwf textures\n    'uniform sampler2D colorTexture1;', 'uniform sampler2D pwfTexture1;',\n    // opacity\n    'uniform float opacity;',\n    // background color\n    'uniform vec4 backgroundColor;'];\n    if (iComps) {\n      for (let comp = 1; comp < tNumComp; comp++) {\n        tcoordFSDec = tcoordFSDec.concat([\n        // color shift and scale\n        `uniform float cshift${comp};`, `uniform float cscale${comp};`,\n        // weighting shift and scale\n        `uniform float pwfshift${comp};`, `uniform float pwfscale${comp};`]);\n      }\n      // the heights defined below are the locations\n      // for the up to four components of the tfuns\n      // the tfuns have a height of 2XnumComps pixels so the\n      // values are computed to hit the middle of the two rows\n      // for that component\n      switch (tNumComp) {\n        case 1:\n          tcoordFSDec = tcoordFSDec.concat(['uniform float mix0;', '#define height0 0.5']);\n          break;\n        case 2:\n          tcoordFSDec = tcoordFSDec.concat(['uniform float mix0;', 'uniform float mix1;', '#define height0 0.25', '#define height1 0.75']);\n          break;\n        case 3:\n          tcoordFSDec = tcoordFSDec.concat(['uniform float mix0;', 'uniform float mix1;', 'uniform float mix2;', '#define height0 0.17', '#define height1 0.5', '#define height2 0.83']);\n          break;\n        case 4:\n          tcoordFSDec = tcoordFSDec.concat(['uniform float mix0;', 'uniform float mix1;', 'uniform float mix2;', 'uniform float mix3;', '#define height0 0.125', '#define height1 0.375', '#define height2 0.625', '#define height3 0.875']);\n          break;\n        default:\n          vtkErrorMacro('Unsupported number of independent coordinates.');\n      }\n    }\n    if (slabThickness > 0.0) {\n      tcoordFSDec = tcoordFSDec.concat(['uniform vec3 spacing;', 'uniform float slabThickness;', 'uniform int slabType;', 'uniform int slabTrapezoid;', 'uniform vec3 vboScaling;']);\n      tcoordFSDec = tcoordFSDec.concat(['vec4 compositeValue(vec4 currVal, vec4 valToComp, int trapezoid)', '{', '  vec4 retVal = vec4(1.0);', '  if (slabType == 0) // min', '  {', '    retVal = min(currVal, valToComp);', '  }', '  else if (slabType == 1) // max', '  {', '    retVal = max(currVal, valToComp);', '  }', '  else if (slabType == 3) // sum', '  {', '    retVal = currVal + (trapezoid > 0 ? 0.5 * valToComp : valToComp); ', '  }', '  else // mean', '  {', '    retVal = currVal + (trapezoid > 0 ? 0.5 * valToComp : valToComp); ', '  }', '  return retVal;', '}']);\n    }\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Dec', tcoordFSDec).result;\n    let tcoordFSImpl = ['if (any(greaterThan(fragTexCoord, vec3(1.0))) || any(lessThan(fragTexCoord, vec3(0.0))))', '{', '  // set the background color and exit', '  gl_FragData[0] = backgroundColor;', '  return;', '}', 'vec4 tvalue = texture(texture1, fragTexCoord);'];\n    if (slabThickness > 0.0) {\n      tcoordFSImpl = tcoordFSImpl.concat(['// Get the first and last samples', 'int numSlices = 1;', 'float scaling = min(min(spacing.x, spacing.y), spacing.z) * 0.5;', 'vec3 normalxspacing = scaling * normalWCVSOutput;', 'float distTraveled = length(normalxspacing);', 'int trapezoid = 0;', 'while (distTraveled < slabThickness * 0.5)', '{', '  distTraveled += length(normalxspacing);', '  float fnumSlices = float(numSlices);', '  if (distTraveled > slabThickness * 0.5)', '  {', '    // Before stepping outside the slab, sample at the boundaries', '    normalxspacing = normalWCVSOutput * slabThickness * 0.5 / fnumSlices;', '    trapezoid = slabTrapezoid;', '  }', '  vec3 fragTCoordNeg = (WCTCMatrix * vec4(vertexWCVSOutput.xyz - fnumSlices * normalxspacing * vboScaling, 1.0)).xyz;', '  if (!any(greaterThan(fragTCoordNeg, vec3(1.0))) && !any(lessThan(fragTCoordNeg, vec3(0.0))))', '  {', '    vec4 newVal = texture(texture1, fragTCoordNeg);', '    tvalue = compositeValue(tvalue, newVal, trapezoid);', '    numSlices += 1;', '  }', '  vec3 fragTCoordPos = (WCTCMatrix * vec4(vertexWCVSOutput.xyz + fnumSlices * normalxspacing * vboScaling, 1.0)).xyz;', '  if (!any(greaterThan(fragTCoordNeg, vec3(1.0))) && !any(lessThan(fragTCoordNeg, vec3(0.0))))', '  {', '    vec4 newVal = texture(texture1, fragTCoordPos);', '    tvalue = compositeValue(tvalue, newVal, trapezoid);', '    numSlices += 1;', '  }', '}', '// Finally, if slab type is *mean*, divide the sum by the numSlices', 'if (slabType == 2)', '{', '  tvalue = tvalue / float(numSlices);', '}']);\n    }\n    if (iComps) {\n      const rgba = ['r', 'g', 'b', 'a'];\n      for (let comp = 0; comp < tNumComp; ++comp) {\n        tcoordFSImpl = tcoordFSImpl.concat([`vec3 tcolor${comp} = mix${comp} * texture2D(colorTexture1, vec2(tvalue.${rgba[comp]} * cscale${comp} + cshift${comp}, height${comp})).rgb;`, `float compWeight${comp} = mix${comp} * texture2D(pwfTexture1, vec2(tvalue.${rgba[comp]} * pwfscale${comp} + pwfshift${comp}, height${comp})).r;`]);\n      }\n      switch (tNumComp) {\n        case 1:\n          tcoordFSImpl = tcoordFSImpl.concat(['gl_FragData[0] = vec4(tcolor0.rgb, compWeight0 * opacity);']);\n          break;\n        case 2:\n          tcoordFSImpl = tcoordFSImpl.concat(['float weightSum = compWeight0 + compWeight1;', 'gl_FragData[0] = vec4(vec3((tcolor0.rgb * (compWeight0 / weightSum)) + (tcolor1.rgb * (compWeight1 / weightSum))), opacity);']);\n          break;\n        case 3:\n          tcoordFSImpl = tcoordFSImpl.concat(['float weightSum = compWeight0 + compWeight1 + compWeight2;', 'gl_FragData[0] = vec4(vec3((tcolor0.rgb * (compWeight0 / weightSum)) + (tcolor1.rgb * (compWeight1 / weightSum)) + (tcolor2.rgb * (compWeight2 / weightSum))), opacity);']);\n          break;\n        case 4:\n          tcoordFSImpl = tcoordFSImpl.concat(['float weightSum = compWeight0 + compWeight1 + compWeight2 + compWeight3;', 'gl_FragData[0] = vec4(vec3((tcolor0.rgb * (compWeight0 / weightSum)) + (tcolor1.rgb * (compWeight1 / weightSum)) + (tcolor2.rgb * (compWeight2 / weightSum)) + (tcolor3.rgb * (compWeight3 / weightSum))), opacity);']);\n          break;\n        default:\n          vtkErrorMacro('Unsupported number of independent coordinates.');\n      }\n    } else {\n      // dependent components\n      switch (tNumComp) {\n        case 1:\n          tcoordFSImpl = tcoordFSImpl.concat(['// Dependent components', 'float intensity = tvalue.r;', 'vec3 tcolor = texture2D(colorTexture1, vec2(intensity * cscale0 + cshift0, 0.5)).rgb;', 'float scalarOpacity = texture2D(pwfTexture1, vec2(intensity * pwfscale0 + pwfshift0, 0.5)).r;', 'gl_FragData[0] = vec4(tcolor, scalarOpacity * opacity);']);\n          break;\n        case 2:\n          tcoordFSImpl = tcoordFSImpl.concat(['float intensity = tvalue.r*cscale0 + cshift0;', 'gl_FragData[0] = vec4(texture2D(colorTexture1, vec2(intensity, 0.5)).rgb, pwfscale0*tvalue.g + pwfshift0);']);\n          break;\n        case 3:\n          tcoordFSImpl = tcoordFSImpl.concat(['vec4 tcolor = cscale0*tvalue + cshift0;', 'gl_FragData[0] = vec4(texture2D(colorTexture1, vec2(tcolor.r,0.5)).r,', '  texture2D(colorTexture1, vec2(tcolor.g,0.5)).r,', '  texture2D(colorTexture1, vec2(tcolor.b,0.5)).r, opacity);']);\n          break;\n        default:\n          tcoordFSImpl = tcoordFSImpl.concat(['vec4 tcolor = cscale0*tvalue + cshift0;', 'gl_FragData[0] = vec4(texture2D(colorTexture1, vec2(tcolor.r,0.5)).r,', '  texture2D(colorTexture1, vec2(tcolor.g,0.5)).r,', '  texture2D(colorTexture1, vec2(tcolor.b,0.5)).r, tcolor.a);']);\n      }\n    }\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', tcoordFSImpl).result;\n    shaders.Vertex = VSSource;\n    shaders.Fragment = FSSource;\n    shaders.Geometry = GSSource;\n  };\n  publicAPI.replaceShaderPositionVC = (shaders, ren, actor) => {\n    let VSSource = shaders.Vertex;\n    const GSSource = shaders.Geometry;\n    let FSSource = shaders.Fragment;\n    const slabThickness = model.renderable.getSlabThickness();\n    let posVCVSDec = ['attribute vec4 vertexWC;'];\n    // Add a unique hash to the shader to ensure that the shader program is unique to this mapper.\n    posVCVSDec = posVCVSDec.concat([`//${publicAPI.getMTime()}${model.resliceGeomUpdateString}`]);\n    if (slabThickness > 0.0) {\n      posVCVSDec = posVCVSDec.concat(['attribute vec3 normalWC;', 'varying vec3 normalWCVSOutput;', 'varying vec4 vertexWCVSOutput;']);\n    }\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Dec', posVCVSDec).result;\n    let posVCVSImpl = ['gl_Position = MCPCMatrix * vertexWC;'];\n    if (slabThickness > 0.0) {\n      posVCVSImpl = posVCVSImpl.concat(['normalWCVSOutput = normalWC;', 'vertexWCVSOutput = vertexWC;']);\n    }\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Impl', posVCVSImpl).result;\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', ['uniform mat4 MCPCMatrix;', 'uniform mat4 MCVCMatrix;']).result;\n    let posVCFSDec = [];\n    if (slabThickness > 0.0) {\n      posVCFSDec = posVCFSDec.concat(['varying vec3 normalWCVSOutput;', 'varying vec4 vertexWCVSOutput;']);\n    }\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::PositionVC::Dec', posVCFSDec).result;\n    shaders.Vertex = VSSource;\n    shaders.Geometry = GSSource;\n    shaders.Fragment = FSSource;\n  };\n\n  /**\n   * Returns true if the normal is almost axis aligned.\n   * Has a side effect to normalize the vector.\n   */\n  function isVectorAxisAligned(n) {\n    vtkMath.normalize(n);\n    const tmpN = [0, 0, 0];\n    for (let i = 0; i < 3; ++i) {\n      vec3.zero(tmpN);\n      tmpN[i] = 1.0;\n      const dotP = vtkMath.dot(n, tmpN);\n      if (dotP < -0.999999 || dotP > 0.999999) {\n        return [true, i];\n      }\n    }\n    return [false, 2];\n  }\n  publicAPI.updateResliceGeometry = () => {\n    let resGeomString = '';\n    const image = model.currentInput;\n    const imageBounds = image?.getBounds();\n    // Orthogonal slicing by default\n    let orthoSlicing = true;\n    let orthoAxis = 2;\n    const slicePD = model.renderable.getSlicePolyData();\n    const slicePlane = model.renderable.getSlicePlane();\n    if (slicePD) {\n      resGeomString = resGeomString.concat(`PolyData${slicePD.getMTime()}`);\n    } else if (slicePlane) {\n      resGeomString = resGeomString.concat(`Plane${slicePlane.getMTime()}`);\n      // Compute a world-to-image-orientation matrix.\n      const w2io = mat3.create();\n      if (image) {\n        resGeomString = resGeomString.concat(`Image${image.getMTime()}`);\n        // Ignore the translation component since we are\n        // using it on vectors rather than positions.\n        mat3.set(w2io, ...image.getDirection());\n        mat3.invert(w2io, w2io);\n      }\n      // Check to see if we can bypass oblique slicing related bounds computation\n      // transform the cutting plane normal to image local coords\n      const imageLocalNormal = [...slicePlane.getNormal()];\n      vec3.transformMat3(imageLocalNormal, imageLocalNormal, w2io);\n      [orthoSlicing, orthoAxis] = isVectorAxisAligned(imageLocalNormal);\n    } else {\n      // Create a default slice plane here\n      const plane = vtkPlane.newInstance();\n      plane.setNormal(0, 0, 1);\n      let bds = [0, 1, 0, 1, 0, 1];\n      if (image) {\n        bds = imageBounds;\n      }\n      plane.setOrigin(bds[0], bds[2], 0.5 * (bds[5] + bds[4]));\n      model.renderable.setSlicePlane(plane);\n      resGeomString = resGeomString.concat(`Plane${slicePlane?.getMTime()}`);\n      if (image) {\n        resGeomString = resGeomString.concat(`Image${image.getMTime()}`);\n      }\n    }\n    if (!model.resliceGeom || model.resliceGeomUpdateString !== resGeomString) {\n      if (slicePD) {\n        if (!model.resliceGeom) {\n          model.resliceGeom = vtkPolyData.newInstance();\n        }\n        model.resliceGeom.getPoints().setData(slicePD.getPoints().getData(), 3);\n        model.resliceGeom.getPolys().setData(slicePD.getPolys().getData(), 1);\n        model.resliceGeom.getPointData().setNormals(slicePD.getPointData().getNormals());\n      } else if (slicePlane) {\n        if (!orthoSlicing) {\n          model.outlineFilter.setInputData(image);\n          model.cutter.setInputConnection(model.outlineFilter.getOutputPort());\n          model.cutter.setCutFunction(slicePlane);\n          model.lineToSurfaceFilter.setInputConnection(model.cutter.getOutputPort());\n          model.lineToSurfaceFilter.update();\n          if (!model.resliceGeom) {\n            model.resliceGeom = vtkPolyData.newInstance();\n          }\n          const planePD = model.lineToSurfaceFilter.getOutputData();\n          model.resliceGeom.getPoints().setData(planePD.getPoints().getData(), 3);\n          model.resliceGeom.getPolys().setData(planePD.getPolys().getData(), 1);\n          model.resliceGeom.getPointData().setNormals(planePD.getPointData().getNormals());\n          // The above method does not generate point normals\n          // Set it manually here.\n          const n = slicePlane.getNormal();\n          const npts = model.resliceGeom.getNumberOfPoints();\n          vtkMath.normalize(n);\n          const normalsData = new Float32Array(npts * 3);\n          for (let i = 0; i < npts; ++i) {\n            normalsData[3 * i] = n[0];\n            normalsData[3 * i + 1] = n[1];\n            normalsData[3 * i + 2] = n[2];\n          }\n          const normals = vtkDataArray.newInstance({\n            numberOfComponents: 3,\n            values: normalsData,\n            name: 'Normals'\n          });\n          model.resliceGeom.getPointData().setNormals(normals);\n        } else {\n          // Since the image-local normal is axis-aligned, we\n          // can quickly construct the cutting plane using indexToWorld transforms.\n          const ptsArray = new Float32Array(12);\n          const indexSpacePlaneOrigin = image.worldToIndex(slicePlane.getOrigin(), [0, 0, 0]);\n          const otherAxes = [(orthoAxis + 1) % 3, (orthoAxis + 2) % 3].sort();\n          const ext = image.getSpatialExtent();\n          let ptIdx = 0;\n          for (let i = 0; i < 2; ++i) {\n            for (let j = 0; j < 2; ++j) {\n              ptsArray[ptIdx + orthoAxis] = indexSpacePlaneOrigin[orthoAxis];\n              ptsArray[ptIdx + otherAxes[0]] = ext[2 * otherAxes[0] + j];\n              ptsArray[ptIdx + otherAxes[1]] = ext[2 * otherAxes[1] + i];\n              ptIdx += 3;\n            }\n          }\n          model.transform.setMatrix(image.getIndexToWorld());\n          model.transform.transformPoints(ptsArray, ptsArray);\n          const cellArray = new Uint16Array(8);\n          cellArray[0] = 3;\n          cellArray[1] = 0;\n          cellArray[2] = 1;\n          cellArray[3] = 3;\n          cellArray[4] = 3;\n          cellArray[5] = 0;\n          cellArray[6] = 3;\n          cellArray[7] = 2;\n          const n = slicePlane.getNormal();\n          vtkMath.normalize(n);\n          const normalsData = new Float32Array(12);\n          for (let i = 0; i < 4; ++i) {\n            normalsData[3 * i] = n[0];\n            normalsData[3 * i + 1] = n[1];\n            normalsData[3 * i + 2] = n[2];\n          }\n          if (!model.resliceGeom) {\n            model.resliceGeom = vtkPolyData.newInstance();\n          }\n          model.resliceGeom.getPoints().setData(ptsArray, 3);\n          model.resliceGeom.getPolys().setData(cellArray, 1);\n          const normals = vtkDataArray.newInstance({\n            numberOfComponents: 3,\n            values: normalsData,\n            name: 'Normals'\n          });\n          model.resliceGeom.getPointData().setNormals(normals);\n        }\n      } else {\n        vtkErrorMacro('Something went wrong.', 'A default slice plane should have been created in the beginning of', 'updateResliceGeometry.');\n      }\n      model.resliceGeomUpdateString = resGeomString;\n      model.resliceGeom?.modified();\n    }\n  };\n  publicAPI.setOpenGLTexture = oglTex => {\n    if (oglTex) {\n      model.openGLTexture = oglTex;\n      model._externalOpenGLTexture = true;\n    }\n  };\n  publicAPI.delete = chain(() => {\n    if (model._openGLRenderWindow) {\n      unregisterGraphicsResources(model._openGLRenderWindow);\n    }\n  }, publicAPI.delete);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  VBOBuildTime: {},\n  VBOBuildString: null,\n  haveSeenDepthRequest: false,\n  lastHaveSeenDepthRequest: false,\n  lastIndependentComponents: false,\n  lastTextureComponents: 0,\n  lastSlabThickness: 0,\n  lastSlabTrapezoidIntegration: 0,\n  lastSlabType: -1,\n  openGLTexture: null,\n  colorTextureString: null,\n  pwfTextureString: null,\n  resliceGeom: null,\n  resliceGeomUpdateString: null,\n  tris: null,\n  colorTexture: null,\n  pwfTexture: null,\n  _externalOpenGLTexture: false\n  // _scalars: null,\n  // _colorTransferFunc: null,\n  // _pwFunc: null,\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  vtkReplacementShaderMapper.implementReplaceShaderCoincidentOffset(publicAPI, model, initialValues);\n  vtkReplacementShaderMapper.implementBuildShadersWithReplacements(publicAPI, model, initialValues);\n  model.tris = vtkHelper.newInstance();\n  model.openGLTexture = null;\n  model.colorTexture = null;\n  model.pwfTexture = null;\n  model.VBOBuildTime = {};\n  obj(model.VBOBuildTime);\n  model.tmpMat4 = mat4.identity(new Float64Array(16));\n\n  // Implicit plane to polydata related cache:\n  model.outlineFilter = vtkImageDataOutlineFilter.newInstance();\n  model.outlineFilter.setGenerateFaces(true);\n  model.outlineFilter.setGenerateLines(false);\n  model.cubePolyData = vtkPolyData.newInstance();\n  model.cutter = vtkCutter.newInstance();\n  model.lineToSurfaceFilter = vtkClosedPolyLineToSurfaceFilter.newInstance();\n  model.transform = vtkTransform.newInstance();\n  get(publicAPI, model, ['openGLTexture']);\n\n  // Object methods\n  vtkOpenGLImageResliceMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkOpenGLImageResliceMapper');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageResliceMapper = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkImageResliceMapper', newInstance);\n\nexport { vtkImageResliceMapper as default, extend, newInstance };\n","const SlicingMode = {\n  NONE: -1,\n  I: 0,\n  J: 1,\n  K: 2,\n  X: 3,\n  Y: 4,\n  Z: 5\n};\nvar Constants = {\n  SlicingMode\n};\n\nexport { SlicingMode, Constants as default };\n","import { mat4, mat3 } from 'gl-matrix';\nimport Constants from '../Core/ImageMapper/Constants.js';\nimport { n as newInstance$1, e as setGet, o as obj, r as vtkErrorMacro$1, h as chain, c as macro } from '../../macros2.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport { VtkDataTypes } from '../../Common/Core/DataArray/Constants.js';\nimport vtkHelper from './Helper.js';\nimport { u as uninitializeBounds } from '../../Common/Core/Math/index.js';\nimport vtkOpenGLTexture from './Texture.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { Representation } from '../Core/Property/Constants.js';\nimport { Filter, Wrap } from './Texture/Constants.js';\nimport { InterpolationType } from '../Core/ImageProperty/Constants.js';\nimport { getTransferFunctionHash } from './RenderWindow/resourceSharingHelper.js';\nimport { v as vtkPolyDataVS } from './glsl/vtkPolyDataVS.glsl.js';\nimport { v as vtkPolyDataFS } from './glsl/vtkPolyDataFS.glsl.js';\nimport vtkReplacementShaderMapper from './ReplacementShaderMapper.js';\nimport '../Core/Mapper/CoincidentTopologyHelper.js';\nimport { registerOverride } from './ViewNodeFactory.js';\nimport { Resolve } from '../Core/Mapper/Static.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\nconst {\n  SlicingMode\n} = Constants;\n\n// ----------------------------------------------------------------------------\n// helper methods\n// ----------------------------------------------------------------------------\n\nfunction splitStringOnEnter(inputString) {\n  // Split the input string into an array of lines based on \"Enter\" (newline) characters\n  // Remove any leading or trailing whitespace from each line and filter out empty lines\n  const lines = inputString.split('\\n');\n  const trimmedLines = [];\n  for (let i = 0; i < lines.length; ++i) {\n    const trimmedLine = lines[i].trim();\n    if (trimmedLine.length > 0) {\n      trimmedLines.push(trimmedLine);\n    }\n  }\n  return trimmedLines;\n}\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLImageMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLImageMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLImageMapper');\n  function unregisterGraphicsResources(renderWindow) {\n    // The openGLTexture is not shared\n    model.openGLTexture.releaseGraphicsResources(renderWindow);\n    // All these other resources are shared\n    [model._colorTransferFunc, model._pwFunc, model._labelOutlineThicknessArray].forEach(coreObject => renderWindow.unregisterGraphicsResourceUser(coreObject, publicAPI));\n  }\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model.currentRenderPass = null;\n      model.openGLImageSlice = publicAPI.getFirstAncestorOfType('vtkOpenGLImageSlice');\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      const oldOglRenderWindow = model._openGLRenderWindow;\n      model._openGLRenderWindow = model._openGLRenderer.getLastAncestorOfType('vtkOpenGLRenderWindow');\n      if (oldOglRenderWindow && !oldOglRenderWindow.isDeleted() && oldOglRenderWindow !== model._openGLRenderWindow) {\n        // Unregister the mapper when the render window changes\n        unregisterGraphicsResources(oldOglRenderWindow);\n      }\n      model.context = model._openGLRenderWindow.getContext();\n      model.tris.setOpenGLRenderWindow(model._openGLRenderWindow);\n      const ren = model._openGLRenderer.getRenderable();\n      model.openGLCamera = model._openGLRenderer.getViewNodeFor(ren.getActiveCamera());\n      // is slice set by the camera\n      if (model.renderable.isA('vtkImageMapper') && model.renderable.getSliceAtFocalPoint()) {\n        model.renderable.setSliceFromCamera(ren.getActiveCamera());\n      }\n    }\n  };\n  publicAPI.translucentPass = (prepass, renderPass) => {\n    if (prepass) {\n      model.currentRenderPass = renderPass;\n      publicAPI.render();\n    }\n  };\n  publicAPI.zBufferPass = prepass => {\n    if (prepass) {\n      model.haveSeenDepthRequest = true;\n      model.renderDepth = true;\n      publicAPI.render();\n      model.renderDepth = false;\n    }\n  };\n  publicAPI.opaqueZBufferPass = prepass => publicAPI.zBufferPass(prepass);\n  publicAPI.opaquePass = prepass => {\n    if (prepass) {\n      publicAPI.render();\n    }\n  };\n  publicAPI.getCoincidentParameters = (ren, actor) => {\n    if (\n    // backwards compat with code that (errorneously) set this to boolean\n    // eslint-disable-next-line eqeqeq\n    model.renderable.getResolveCoincidentTopology() == Resolve.PolygonOffset) {\n      return model.renderable.getCoincidentTopologyPolygonOffsetParameters();\n    }\n    return null;\n  };\n\n  // Renders myself\n  publicAPI.render = () => {\n    const actor = model.openGLImageSlice.getRenderable();\n    const ren = model._openGLRenderer.getRenderable();\n    publicAPI.renderPiece(ren, actor);\n  };\n  publicAPI.getShaderTemplate = (shaders, ren, actor) => {\n    shaders.Vertex = vtkPolyDataVS;\n    shaders.Fragment = vtkPolyDataFS;\n    shaders.Geometry = '';\n  };\n  publicAPI.replaceShaderValues = (shaders, ren, actor) => {\n    let VSSource = shaders.Vertex;\n    let FSSource = shaders.Fragment;\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', ['uniform mat4 MCPCMatrix;']).result;\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Impl', ['  gl_Position = MCPCMatrix * vertexMC;']).result;\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Impl', 'tcoordVCVSOutput = tcoordMC;').result;\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Dec', 'attribute vec2 tcoordMC; varying vec2 tcoordVCVSOutput;').result;\n    const tNumComp = model.openGLTexture.getComponents();\n    const iComps = actor.getProperty().getIndependentComponents();\n    let tcoordDec = ['varying vec2 tcoordVCVSOutput;',\n    // color shift and scale\n    'uniform float cshift0;', 'uniform float cscale0;',\n    // pwf shift and scale\n    'uniform float pwfshift0;', 'uniform float pwfscale0;', 'uniform sampler2D texture1;', 'uniform sampler2D colorTexture1;', 'uniform sampler2D pwfTexture1;', 'uniform sampler2D labelOutlineTexture1;', 'uniform float opacity;', 'uniform float outlineOpacity;'];\n    if (iComps) {\n      for (let comp = 1; comp < tNumComp; comp++) {\n        tcoordDec = tcoordDec.concat([\n        // color shift and scale\n        `uniform float cshift${comp};`, `uniform float cscale${comp};`,\n        // weighting shift and scale\n        `uniform float pwfshift${comp};`, `uniform float pwfscale${comp};`]);\n      }\n      // the heights defined below are the locations\n      // for the up to four components of the tfuns\n      // the tfuns have a height of 2XnumComps pixels so the\n      // values are computed to hit the middle of the two rows\n      // for that component\n      switch (tNumComp) {\n        case 1:\n          tcoordDec = tcoordDec.concat(['uniform float mix0;', '#define height0 0.5']);\n          break;\n        case 2:\n          tcoordDec = tcoordDec.concat(['uniform float mix0;', 'uniform float mix1;', '#define height0 0.25', '#define height1 0.75']);\n          break;\n        case 3:\n          tcoordDec = tcoordDec.concat(['uniform float mix0;', 'uniform float mix1;', 'uniform float mix2;', '#define height0 0.17', '#define height1 0.5', '#define height2 0.83']);\n          break;\n        case 4:\n          tcoordDec = tcoordDec.concat(['uniform float mix0;', 'uniform float mix1;', 'uniform float mix2;', 'uniform float mix3;', '#define height0 0.125', '#define height1 0.375', '#define height2 0.625', '#define height3 0.875']);\n          break;\n        default:\n          vtkErrorMacro('Unsupported number of independent coordinates.');\n      }\n    }\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Dec', tcoordDec).result;\n\n    // check for the outline thickness and opacity\n    const vtkImageLabelOutline = actor.getProperty().getUseLabelOutline();\n    if (vtkImageLabelOutline === true) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::LabelOutline::Dec', ['uniform int outlineThickness;', 'uniform float vpWidth;', 'uniform float vpHeight;', 'uniform float vpOffsetX;', 'uniform float vpOffsetY;', 'uniform mat4 PCWCMatrix;', 'uniform mat4 vWCtoIDX;', 'uniform ivec3 imageDimensions;', 'uniform int sliceAxis;']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ImageLabelOutlineOn', '#define vtkImageLabelOutlineOn').result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::LabelOutlineHelperFunction', ['#ifdef vtkImageLabelOutlineOn', 'vec3 fragCoordToIndexSpace(vec4 fragCoord) {', '  vec4 pcPos = vec4(', '    (fragCoord.x / vpWidth - vpOffsetX - 0.5) * 2.0,', '    (fragCoord.y / vpHeight - vpOffsetY - 0.5) * 2.0,', '    (fragCoord.z - 0.5) * 2.0,', '    1.0);', '', '  vec4 worldCoord = PCWCMatrix * pcPos;', '  vec4 vertex = (worldCoord/worldCoord.w);', '', '  vec3 index = (vWCtoIDX * vertex).xyz;', '', '  // half voxel fix for labelmapOutline', '  return (index + vec3(0.5)) / vec3(imageDimensions);', '}', 'vec2 getSliceCoords(vec3 coord, int axis) {', '  if (axis == 0) return coord.yz;', '  if (axis == 1) return coord.xz;', '  if (axis == 2) return coord.xy;', '}', '#endif']).result;\n    }\n    if (iComps) {\n      const rgba = ['r', 'g', 'b', 'a'];\n      let tcoordImpl = ['vec4 tvalue = texture2D(texture1, tcoordVCVSOutput);'];\n      for (let comp = 0; comp < tNumComp; comp++) {\n        tcoordImpl = tcoordImpl.concat([`vec3 tcolor${comp} = mix${comp} * texture2D(colorTexture1, vec2(tvalue.${rgba[comp]} * cscale${comp} + cshift${comp}, height${comp})).rgb;`, `float compWeight${comp} = mix${comp} * texture2D(pwfTexture1, vec2(tvalue.${rgba[comp]} * pwfscale${comp} + pwfshift${comp}, height${comp})).r;`]);\n      }\n      switch (tNumComp) {\n        case 1:\n          tcoordImpl = tcoordImpl.concat(['gl_FragData[0] = vec4(tcolor0.rgb, opacity);']);\n          break;\n        case 2:\n          tcoordImpl = tcoordImpl.concat(['float weightSum = compWeight0 + compWeight1;', 'gl_FragData[0] = vec4(vec3((tcolor0.rgb * (compWeight0 / weightSum)) + (tcolor1.rgb * (compWeight1 / weightSum))), opacity);']);\n          break;\n        case 3:\n          tcoordImpl = tcoordImpl.concat(['float weightSum = compWeight0 + compWeight1 + compWeight2;', 'gl_FragData[0] = vec4(vec3((tcolor0.rgb * (compWeight0 / weightSum)) + (tcolor1.rgb * (compWeight1 / weightSum)) + (tcolor2.rgb * (compWeight2 / weightSum))), opacity);']);\n          break;\n        case 4:\n          tcoordImpl = tcoordImpl.concat(['float weightSum = compWeight0 + compWeight1 + compWeight2 + compWeight3;', 'gl_FragData[0] = vec4(vec3((tcolor0.rgb * (compWeight0 / weightSum)) + (tcolor1.rgb * (compWeight1 / weightSum)) + (tcolor2.rgb * (compWeight2 / weightSum)) + (tcolor3.rgb * (compWeight3 / weightSum))), opacity);']);\n          break;\n        default:\n          vtkErrorMacro('Unsupported number of independent coordinates.');\n      }\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', tcoordImpl).result;\n    } else {\n      // dependent components\n      switch (tNumComp) {\n        case 1:\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', [...splitStringOnEnter(`\n                #ifdef vtkImageLabelOutlineOn\n                  vec3 centerPosIS = fragCoordToIndexSpace(gl_FragCoord);\n                  float centerValue = texture2D(texture1, getSliceCoords(centerPosIS, sliceAxis)).r;\n                  bool pixelOnBorder = false;\n                  vec3 tColor = texture2D(colorTexture1, vec2(centerValue * cscale0 + cshift0, 0.5)).rgb;\n                  float scalarOpacity = texture2D(pwfTexture1, vec2(centerValue * pwfscale0 + pwfshift0, 0.5)).r;\n                  float opacityToUse = scalarOpacity * opacity;\n                  int segmentIndex = int(centerValue * 255.0);\n                  float textureCoordinate = float(segmentIndex - 1) / 1024.0;\n                  float textureValue = texture2D(labelOutlineTexture1, vec2(textureCoordinate, 0.5)).r;\n                  int actualThickness = int(textureValue * 255.0);\n\n                  if (segmentIndex == 0){\n                    gl_FragData[0] = vec4(0.0, 0.0, 0.0, 0.0);\n                    return;\n                  }\n\n                  for (int i = -actualThickness; i <= actualThickness; i++) {\n                    for (int j = -actualThickness; j <= actualThickness; j++) {\n                      if (i == 0 || j == 0) {\n                        continue;\n                      }\n                      vec4 neighborPixelCoord = vec4(gl_FragCoord.x + float(i),\n                        gl_FragCoord.y + float(j),\n                        gl_FragCoord.z, gl_FragCoord.w);\n                      vec3 neighborPosIS = fragCoordToIndexSpace(neighborPixelCoord);\n                      float value = texture2D(texture1, getSliceCoords(neighborPosIS, sliceAxis)).r;\n                      if (value != centerValue) {\n                        pixelOnBorder = true;\n                        break;\n                      }\n                    }\n                    if (pixelOnBorder == true) {\n                      break;\n                    }\n                  }\n                  if (pixelOnBorder == true) {\n                    gl_FragData[0] = vec4(tColor, outlineOpacity);\n                  }\n                  else {\n                    gl_FragData[0] = vec4(tColor, opacityToUse);\n                  }\n                #else\n                  float intensity = texture2D(texture1, tcoordVCVSOutput).r;\n                  vec3 tcolor = texture2D(colorTexture1, vec2(intensity * cscale0 + cshift0, 0.5)).rgb;\n                  float scalarOpacity = texture2D(pwfTexture1, vec2(intensity * pwfscale0 + pwfshift0, 0.5)).r;\n                  gl_FragData[0] = vec4(tcolor, scalarOpacity * opacity);\n                #endif\n                `)]).result;\n          break;\n        case 2:\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['vec4 tcolor = texture2D(texture1, tcoordVCVSOutput);', 'float intensity = tcolor.r*cscale0 + cshift0;', 'gl_FragData[0] = vec4(texture2D(colorTexture1, vec2(intensity, 0.5)).rgb, pwfscale0*tcolor.g + pwfshift0);']).result;\n          break;\n        case 3:\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['vec4 tcolor = cscale0*texture2D(texture1, tcoordVCVSOutput.st) + cshift0;', 'gl_FragData[0] = vec4(texture2D(colorTexture1, vec2(tcolor.r,0.5)).r,', '  texture2D(colorTexture1, vec2(tcolor.g,0.5)).r,', '  texture2D(colorTexture1, vec2(tcolor.b,0.5)).r, opacity);']).result;\n          break;\n        default:\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['vec4 tcolor = cscale0*texture2D(texture1, tcoordVCVSOutput.st) + cshift0;', 'gl_FragData[0] = vec4(texture2D(colorTexture1, vec2(tcolor.r,0.5)).r,', '  texture2D(colorTexture1, vec2(tcolor.g,0.5)).r,', '  texture2D(colorTexture1, vec2(tcolor.b,0.5)).r, tcolor.a);']).result;\n      }\n    }\n    if (model.haveSeenDepthRequest) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Dec', 'uniform int depthRequest;').result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Impl', ['if (depthRequest == 1) {', 'float iz = floor(gl_FragCoord.z*65535.0 + 0.1);', 'float rf = floor(iz/256.0)/255.0;', 'float gf = mod(iz,256.0)/255.0;', 'gl_FragData[0] = vec4(rf, gf, 0.0, 1.0); }']).result;\n    }\n    shaders.Vertex = VSSource;\n    shaders.Fragment = FSSource;\n    publicAPI.replaceShaderClip(shaders, ren, actor);\n    publicAPI.replaceShaderCoincidentOffset(shaders, ren, actor);\n  };\n  publicAPI.replaceShaderClip = (shaders, ren, actor) => {\n    let VSSource = shaders.Vertex;\n    let FSSource = shaders.Fragment;\n    if (model.renderable.getNumberOfClippingPlanes()) {\n      let numClipPlanes = model.renderable.getNumberOfClippingPlanes();\n      if (numClipPlanes > 6) {\n        vtkErrorMacro$1('OpenGL has a limit of 6 clipping planes');\n        numClipPlanes = 6;\n      }\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Clip::Dec', ['uniform int numClipPlanes;', 'uniform vec4 clipPlanes[6];', 'varying float clipDistancesVSOutput[6];']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Clip::Impl', ['for (int planeNum = 0; planeNum < 6; planeNum++)', '    {', '    if (planeNum >= numClipPlanes)', '        {', '        break;', '        }', '    clipDistancesVSOutput[planeNum] = dot(clipPlanes[planeNum], vertexMC);', '    }']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Clip::Dec', ['uniform int numClipPlanes;', 'varying float clipDistancesVSOutput[6];']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Clip::Impl', ['for (int planeNum = 0; planeNum < 6; planeNum++)', '    {', '    if (planeNum >= numClipPlanes)', '        {', '        break;', '        }', '    if (clipDistancesVSOutput[planeNum] < 0.0) discard;', '    }']).result;\n    }\n    shaders.Vertex = VSSource;\n    shaders.Fragment = FSSource;\n  };\n  publicAPI.getNeedToRebuildShaders = (cellBO, ren, actor) => {\n    // has something changed that would require us to recreate the shader?\n    // candidates are\n    // property modified (representation interpolation and lighting)\n    // input modified\n    // light complexity changed\n    // render pass shader replacement changed\n\n    const tNumComp = model.openGLTexture.getComponents();\n    const iComp = actor.getProperty().getIndependentComponents();\n\n    // has the render pass shader replacement changed? Two options\n    let needRebuild = false;\n    if (!model.currentRenderPass && model.lastRenderPassShaderReplacement || model.currentRenderPass && model.currentRenderPass.getShaderReplacement() !== model.lastRenderPassShaderReplacement) {\n      needRebuild = true;\n    }\n    if (needRebuild || model.lastHaveSeenDepthRequest !== model.haveSeenDepthRequest || cellBO.getProgram()?.getHandle() === 0 || model.lastTextureComponents !== tNumComp || model.lastIndependentComponents !== iComp) {\n      model.lastHaveSeenDepthRequest = model.haveSeenDepthRequest;\n      model.lastTextureComponents = tNumComp;\n      model.lastIndependentComponents = iComp;\n      return true;\n    }\n    return false;\n  };\n  publicAPI.updateShaders = (cellBO, ren, actor) => {\n    model.lastBoundBO = cellBO;\n\n    // has something changed that would require us to recreate the shader?\n    if (publicAPI.getNeedToRebuildShaders(cellBO, ren, actor)) {\n      const shaders = {\n        Vertex: null,\n        Fragment: null,\n        Geometry: null\n      };\n      publicAPI.buildShaders(shaders, ren, actor);\n\n      // compile and bind the program if needed\n      const newShader = model._openGLRenderWindow.getShaderCache().readyShaderProgramArray(shaders.Vertex, shaders.Fragment, shaders.Geometry);\n\n      // if the shader changed reinitialize the VAO\n      if (newShader !== cellBO.getProgram()) {\n        cellBO.setProgram(newShader);\n        // reset the VAO as the shader has changed\n        cellBO.getVAO().releaseGraphicsResources();\n      }\n      cellBO.getShaderSourceTime().modified();\n    } else {\n      model._openGLRenderWindow.getShaderCache().readyShaderProgram(cellBO.getProgram());\n    }\n    cellBO.getVAO().bind();\n    publicAPI.setMapperShaderParameters(cellBO, ren, actor);\n    publicAPI.setCameraShaderParameters(cellBO, ren, actor);\n    publicAPI.setPropertyShaderParameters(cellBO, ren, actor);\n  };\n  publicAPI.setMapperShaderParameters = (cellBO, ren, actor) => {\n    // Now to update the VAO too, if necessary.\n\n    if (cellBO.getCABO().getElementCount() && (model.VBOBuildTime > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime())) {\n      if (cellBO.getProgram().isAttributeUsed('vertexMC')) {\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'vertexMC', cellBO.getCABO().getVertexOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, model.context.FALSE)) {\n          vtkErrorMacro('Error setting vertexMC in shader VAO.');\n        }\n      }\n      if (cellBO.getProgram().isAttributeUsed('tcoordMC') && cellBO.getCABO().getTCoordOffset()) {\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'tcoordMC', cellBO.getCABO().getTCoordOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, cellBO.getCABO().getTCoordComponents(), model.context.FALSE)) {\n          vtkErrorMacro('Error setting tcoordMC in shader VAO.');\n        }\n      }\n      cellBO.getAttributeUpdateTime().modified();\n    }\n    const texUnit = model.openGLTexture.getTextureUnit();\n    cellBO.getProgram().setUniformi('texture1', texUnit);\n    const numComp = model.openGLTexture.getComponents();\n    const iComps = actor.getProperty().getIndependentComponents();\n    if (iComps) {\n      for (let i = 0; i < numComp; i++) {\n        cellBO.getProgram().setUniformf(`mix${i}`, actor.getProperty().getComponentWeight(i));\n      }\n    }\n    const oglShiftScale = model.openGLTexture.getShiftAndScale();\n\n    // three levels of shift scale combined into one\n    // for performance in the fragment shader\n    for (let i = 0; i < numComp; i++) {\n      let cw = actor.getProperty().getColorWindow();\n      let cl = actor.getProperty().getColorLevel();\n      const target = iComps ? i : 0;\n      const cfun = actor.getProperty().getRGBTransferFunction(target);\n      if (cfun && actor.getProperty().getUseLookupTableScalarRange()) {\n        const cRange = cfun.getRange();\n        cw = cRange[1] - cRange[0];\n        cl = 0.5 * (cRange[1] + cRange[0]);\n      }\n      const scale = oglShiftScale.scale / cw;\n      const shift = (oglShiftScale.shift - cl) / cw + 0.5;\n      cellBO.getProgram().setUniformf(`cshift${i}`, shift);\n      cellBO.getProgram().setUniformf(`cscale${i}`, scale);\n    }\n\n    // pwf shift/scale\n    for (let i = 0; i < numComp; i++) {\n      let pwfScale = 1.0;\n      let pwfShift = 0.0;\n      const target = iComps ? i : 0;\n      const pwfun = actor.getProperty().getPiecewiseFunction(target);\n      if (pwfun) {\n        const pwfRange = pwfun.getRange();\n        const length = pwfRange[1] - pwfRange[0];\n        const mid = 0.5 * (pwfRange[0] + pwfRange[1]);\n        pwfScale = oglShiftScale.scale / length;\n        pwfShift = (oglShiftScale.shift - mid) / length + 0.5;\n      }\n      cellBO.getProgram().setUniformf(`pwfshift${i}`, pwfShift);\n      cellBO.getProgram().setUniformf(`pwfscale${i}`, pwfScale);\n    }\n    if (model.haveSeenDepthRequest) {\n      cellBO.getProgram().setUniformi('depthRequest', model.renderDepth ? 1 : 0);\n    }\n\n    // handle coincident\n    if (cellBO.getProgram().isUniformUsed('coffset')) {\n      const cp = publicAPI.getCoincidentParameters(ren, actor);\n      cellBO.getProgram().setUniformf('coffset', cp.offset);\n      // cfactor isn't always used when coffset is.\n      if (cellBO.getProgram().isUniformUsed('cfactor')) {\n        cellBO.getProgram().setUniformf('cfactor', cp.factor);\n      }\n    }\n    const texColorUnit = model.colorTexture.getTextureUnit();\n    cellBO.getProgram().setUniformi('colorTexture1', texColorUnit);\n    const texOpacityUnit = model.pwfTexture.getTextureUnit();\n    cellBO.getProgram().setUniformi('pwfTexture1', texOpacityUnit);\n    const outlineThicknessUnit = model.labelOutlineThicknessTexture.getTextureUnit();\n    cellBO.getProgram().setUniformi('labelOutlineTexture1', outlineThicknessUnit);\n    if (model.renderable.getNumberOfClippingPlanes()) {\n      // add all the clipping planes\n      let numClipPlanes = model.renderable.getNumberOfClippingPlanes();\n      if (numClipPlanes > 6) {\n        vtkErrorMacro$1('OpenGL has a limit of 6 clipping planes');\n        numClipPlanes = 6;\n      }\n      const shiftScaleEnabled = cellBO.getCABO().getCoordShiftAndScaleEnabled();\n      const inverseShiftScaleMatrix = shiftScaleEnabled ? cellBO.getCABO().getInverseShiftAndScaleMatrix() : null;\n      const mat = inverseShiftScaleMatrix ? mat4.copy(model.imagematinv, actor.getMatrix()) : actor.getMatrix();\n      if (inverseShiftScaleMatrix) {\n        mat4.transpose(mat, mat);\n        mat4.multiply(mat, mat, inverseShiftScaleMatrix);\n        mat4.transpose(mat, mat);\n      }\n\n      // transform crop plane normal with transpose(inverse(worldToIndex))\n      mat4.transpose(model.imagemat, model.currentInput.getIndexToWorld());\n      mat4.multiply(model.imagematinv, mat, model.imagemat);\n      const planeEquations = [];\n      for (let i = 0; i < numClipPlanes; i++) {\n        const planeEquation = [];\n        model.renderable.getClippingPlaneInDataCoords(model.imagematinv, i, planeEquation);\n        for (let j = 0; j < 4; j++) {\n          planeEquations.push(planeEquation[j]);\n        }\n      }\n      cellBO.getProgram().setUniformi('numClipPlanes', numClipPlanes);\n      cellBO.getProgram().setUniform4fv('clipPlanes', planeEquations);\n    }\n\n    // outline thickness and opacity\n    const vtkImageLabelOutline = actor.getProperty().getUseLabelOutline();\n    if (vtkImageLabelOutline === true) {\n      const outlineOpacity = actor.getProperty().getLabelOutlineOpacity();\n      cellBO.getProgram().setUniformf('outlineOpacity', outlineOpacity);\n    }\n  };\n  publicAPI.setCameraShaderParameters = (cellBO, ren, actor) => {\n    const program = cellBO.getProgram();\n    const actMats = model.openGLImageSlice.getKeyMatrices();\n    const image = model.currentInput;\n    const i2wmat4 = image.getIndexToWorld();\n    mat4.multiply(model.imagemat, actMats.mcwc, i2wmat4);\n    const keyMats = model.openGLCamera.getKeyMatrices(ren);\n    mat4.multiply(model.imagemat, keyMats.wcpc, model.imagemat);\n    if (cellBO.getCABO().getCoordShiftAndScaleEnabled()) {\n      const inverseShiftScaleMat = cellBO.getCABO().getInverseShiftAndScaleMatrix();\n      mat4.multiply(model.imagemat, model.imagemat, inverseShiftScaleMat);\n    }\n    program.setUniformMatrix('MCPCMatrix', model.imagemat);\n    const vtkImageLabelOutline = actor.getProperty().getUseLabelOutline();\n    if (vtkImageLabelOutline === true) {\n      const worldToIndex = image.getWorldToIndex();\n      const imageDimensions = image.getDimensions();\n      let sliceAxis = model.renderable.getClosestIJKAxis().ijkMode;\n\n      // SlicingMode.NONE equates to SlicingMode.K\n      if (sliceAxis === SlicingMode.NONE) {\n        sliceAxis = SlicingMode.K;\n      }\n      program.setUniform3i('imageDimensions', imageDimensions[0], imageDimensions[1], imageDimensions[2]);\n      program.setUniformi('sliceAxis', sliceAxis);\n      program.setUniformMatrix('vWCtoIDX', worldToIndex);\n      const labelOutlineKeyMats = model.openGLCamera.getKeyMatrices(ren);\n\n      // Get the projection coordinate to world coordinate transformation matrix.\n      mat4.invert(model.projectionToWorld, labelOutlineKeyMats.wcpc);\n      model.openGLCamera.getKeyMatrices(ren);\n      program.setUniformMatrix('PCWCMatrix', model.projectionToWorld);\n      const size = publicAPI.getRenderTargetSize();\n      program.setUniformf('vpWidth', size[0]);\n      program.setUniformf('vpHeight', size[1]);\n      const offset = publicAPI.getRenderTargetOffset();\n      program.setUniformf('vpOffsetX', offset[0] / size[0]);\n      program.setUniformf('vpOffsetY', offset[1] / size[1]);\n    }\n  };\n  publicAPI.setPropertyShaderParameters = (cellBO, ren, actor) => {\n    const program = cellBO.getProgram();\n    const ppty = actor.getProperty();\n    const opacity = ppty.getOpacity();\n    program.setUniformf('opacity', opacity);\n  };\n  publicAPI.renderPieceStart = (ren, actor) => {\n    // make sure the BOs are up to date\n    publicAPI.updateBufferObjects(ren, actor);\n\n    // Bind the OpenGL, this is shared between the different primitive/cell types.\n    model.lastBoundBO = null;\n  };\n  publicAPI.renderPieceDraw = (ren, actor) => {\n    const gl = model.context;\n\n    // activate the texture\n    model.openGLTexture.activate();\n    model.colorTexture.activate();\n    model.labelOutlineThicknessTexture.activate();\n    model.pwfTexture.activate();\n\n    // draw polygons\n    if (model.tris.getCABO().getElementCount()) {\n      // First we do the triangles, update the shader, set uniforms, etc.\n      publicAPI.updateShaders(model.tris, ren, actor);\n      gl.drawArrays(gl.TRIANGLES, 0, model.tris.getCABO().getElementCount());\n      model.tris.getVAO().release();\n    }\n    model.openGLTexture.deactivate();\n    model.colorTexture.deactivate();\n    model.labelOutlineThicknessTexture.deactivate();\n    model.pwfTexture.deactivate();\n  };\n  publicAPI.renderPieceFinish = (ren, actor) => {};\n  publicAPI.renderPiece = (ren, actor) => {\n    // Make sure that we have been properly initialized.\n    // if (ren.getRenderWindow().checkAbortStatus()) {\n    //   return;\n    // }\n\n    publicAPI.invokeEvent({\n      type: 'StartEvent'\n    });\n    model.renderable.update();\n    model.currentInput = model.renderable.getCurrentImage();\n    publicAPI.invokeEvent({\n      type: 'EndEvent'\n    });\n    if (!model.currentInput) {\n      vtkErrorMacro('No input!');\n      return;\n    }\n    publicAPI.renderPieceStart(ren, actor);\n    publicAPI.renderPieceDraw(ren, actor);\n    publicAPI.renderPieceFinish(ren, actor);\n  };\n  publicAPI.computeBounds = (ren, actor) => {\n    if (!publicAPI.getInput()) {\n      uninitializeBounds(model.bounds);\n      return;\n    }\n    model.bounds = publicAPI.getInput().getBounds();\n  };\n  publicAPI.updateBufferObjects = (ren, actor) => {\n    // Rebuild buffers if needed\n    if (publicAPI.getNeedToRebuildBufferObjects(ren, actor)) {\n      publicAPI.buildBufferObjects(ren, actor);\n    }\n  };\n  publicAPI.getNeedToRebuildBufferObjects = (ren, actor) => model.VBOBuildTime.getMTime() < publicAPI.getMTime() || model.VBOBuildTime.getMTime() < actor.getMTime() || model.VBOBuildTime.getMTime() < model.renderable.getMTime() || model.VBOBuildTime.getMTime() < actor.getProperty().getMTime() || model.VBOBuildTime.getMTime() < model.currentInput.getMTime() || !model.openGLTexture?.getHandle() || !model.colorTexture?.getHandle() || !model.labelOutlineThicknessTexture?.getHandle() || !model.pwfTexture?.getHandle();\n  publicAPI.buildBufferObjects = (ren, actor) => {\n    const image = model.currentInput;\n    if (!image) {\n      return;\n    }\n    const imgScalars = image.getPointData() && image.getPointData().getScalars();\n    if (!imgScalars) {\n      return;\n    }\n    const dataType = imgScalars.getDataType();\n    const numComp = imgScalars.getNumberOfComponents();\n    const actorProperty = actor.getProperty();\n    const iType = actorProperty.getInterpolationType();\n    const iComps = actorProperty.getIndependentComponents();\n    const numIComps = iComps ? numComp : 1;\n    const textureHeight = iComps ? 2 * numIComps : 1;\n    const colorTransferFunc = actorProperty.getRGBTransferFunction();\n    const cfunToString = getTransferFunctionHash(colorTransferFunc, iComps, numIComps);\n    const cTex = model._openGLRenderWindow.getGraphicsResourceForObject(colorTransferFunc);\n    const reBuildC = !cTex?.oglObject?.getHandle() || cTex?.hash !== cfunToString;\n    if (reBuildC) {\n      model.colorTexture = vtkOpenGLTexture.newInstance({\n        resizable: true\n      });\n      model.colorTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      const cWidth = 1024;\n      const cSize = cWidth * textureHeight * 3;\n      const cTable = new Uint8ClampedArray(cSize);\n      // set interpolation on the texture based on property setting\n      if (iType === InterpolationType.NEAREST) {\n        model.colorTexture.setMinificationFilter(Filter.NEAREST);\n        model.colorTexture.setMagnificationFilter(Filter.NEAREST);\n      } else {\n        model.colorTexture.setMinificationFilter(Filter.LINEAR);\n        model.colorTexture.setMagnificationFilter(Filter.LINEAR);\n      }\n      if (colorTransferFunc) {\n        const tmpTable = new Float32Array(cWidth * 3);\n        for (let c = 0; c < numIComps; c++) {\n          const cfun = actorProperty.getRGBTransferFunction(c);\n          const cRange = cfun.getRange();\n          cfun.getTable(cRange[0], cRange[1], cWidth, tmpTable, 1);\n          if (iComps) {\n            for (let i = 0; i < cWidth * 3; i++) {\n              cTable[c * cWidth * 6 + i] = 255.0 * tmpTable[i];\n              cTable[c * cWidth * 6 + i + cWidth * 3] = 255.0 * tmpTable[i];\n            }\n          } else {\n            for (let i = 0; i < cWidth * 3; i++) {\n              cTable[c * cWidth * 6 + i] = 255.0 * tmpTable[i];\n            }\n          }\n        }\n        model.colorTexture.resetFormatAndType();\n        model.colorTexture.create2DFromRaw(cWidth, textureHeight, 3, VtkDataTypes.UNSIGNED_CHAR, cTable);\n      } else {\n        for (let i = 0; i < cWidth * 3; ++i) {\n          cTable[i] = 255.0 * i / ((cWidth - 1) * 3);\n          cTable[i + 1] = 255.0 * i / ((cWidth - 1) * 3);\n          cTable[i + 2] = 255.0 * i / ((cWidth - 1) * 3);\n        }\n        model.colorTexture.create2DFromRaw(cWidth, 1, 3, VtkDataTypes.UNSIGNED_CHAR, cTable);\n      }\n      if (colorTransferFunc) {\n        model._openGLRenderWindow.setGraphicsResourceForObject(colorTransferFunc, model.colorTexture, cfunToString);\n        if (colorTransferFunc !== model._colorTransferFunc) {\n          model._openGLRenderWindow.registerGraphicsResourceUser(colorTransferFunc, publicAPI);\n          model._openGLRenderWindow.unregisterGraphicsResourceUser(model._colorTransferFunc, publicAPI);\n        }\n        model._colorTransferFunc = colorTransferFunc;\n      }\n    } else {\n      model.colorTexture = cTex.oglObject;\n    }\n\n    // Build piecewise function buffer.  This buffer is used either\n    // for component weighting or opacity, depending on whether we're\n    // rendering components independently or not.\n    const pwFunc = actorProperty.getPiecewiseFunction();\n    const pwfunToString = getTransferFunctionHash(pwFunc, iComps, numIComps);\n    const pwfTex = model._openGLRenderWindow.getGraphicsResourceForObject(pwFunc);\n    // rebuild opacity tfun?\n    const reBuildPwf = !pwfTex?.oglObject?.getHandle() || pwfTex?.hash !== pwfunToString;\n    if (reBuildPwf) {\n      const pwfWidth = 1024;\n      const pwfSize = pwfWidth * textureHeight;\n      const pwfTable = new Uint8ClampedArray(pwfSize);\n      model.pwfTexture = vtkOpenGLTexture.newInstance({\n        resizable: true\n      });\n      model.pwfTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      // set interpolation on the texture based on property setting\n      if (iType === InterpolationType.NEAREST) {\n        model.pwfTexture.setMinificationFilter(Filter.NEAREST);\n        model.pwfTexture.setMagnificationFilter(Filter.NEAREST);\n      } else {\n        model.pwfTexture.setMinificationFilter(Filter.LINEAR);\n        model.pwfTexture.setMagnificationFilter(Filter.LINEAR);\n      }\n      if (pwFunc) {\n        const pwfFloatTable = new Float32Array(pwfSize);\n        const tmpTable = new Float32Array(pwfWidth);\n        for (let c = 0; c < numIComps; ++c) {\n          const pwfun = actorProperty.getPiecewiseFunction(c);\n          if (pwfun === null) {\n            // Piecewise constant max if no function supplied for this component\n            pwfFloatTable.fill(1.0);\n          } else {\n            const pwfRange = pwfun.getRange();\n            pwfun.getTable(pwfRange[0], pwfRange[1], pwfWidth, tmpTable, 1);\n            // adjust for sample distance etc\n            if (iComps) {\n              for (let i = 0; i < pwfWidth; i++) {\n                pwfFloatTable[c * pwfWidth * 2 + i] = tmpTable[i];\n                pwfFloatTable[c * pwfWidth * 2 + i + pwfWidth] = tmpTable[i];\n              }\n            } else {\n              for (let i = 0; i < pwfWidth; i++) {\n                pwfFloatTable[c * pwfWidth * 2 + i] = tmpTable[i];\n              }\n            }\n          }\n        }\n        model.pwfTexture.resetFormatAndType();\n        model.pwfTexture.create2DFromRaw(pwfWidth, textureHeight, 1, VtkDataTypes.FLOAT, pwfFloatTable);\n      } else {\n        // default is opaque\n        pwfTable.fill(255.0);\n        model.pwfTexture.create2DFromRaw(pwfWidth, 1, 1, VtkDataTypes.UNSIGNED_CHAR, pwfTable);\n      }\n      if (pwFunc) {\n        model._openGLRenderWindow.setGraphicsResourceForObject(pwFunc, model.pwfTexture, pwfunToString);\n        if (pwFunc !== model._pwFunc) {\n          model._openGLRenderWindow.registerGraphicsResourceUser(pwFunc, publicAPI);\n          model._openGLRenderWindow.unregisterGraphicsResourceUser(model._pwFunc, publicAPI);\n        }\n        model._pwFunc = pwFunc;\n      }\n    } else {\n      model.pwfTexture = pwfTex.oglObject;\n    }\n\n    // Build outline thickness buffer\n    publicAPI.updatelabelOutlineThicknessTexture(actor);\n\n    // Find what IJK axis and what direction to slice along\n    const {\n      ijkMode\n    } = model.renderable.getClosestIJKAxis();\n\n    // Find the IJK slice\n    let slice = model.renderable.getSlice();\n    if (ijkMode !== model.renderable.getSlicingMode()) {\n      // If not IJK slicing, get the IJK slice from the XYZ position/slice\n      slice = model.renderable.getSliceAtPosition(slice);\n    }\n\n    // Use sub-Slice number/offset if mapper being used is vtkImageArrayMapper,\n    // since this mapper uses a collection of vtkImageData (and not just a single vtkImageData).\n    const nSlice = model.renderable.isA('vtkImageArrayMapper') ? model.renderable.getSubSlice() // get subSlice of the current (possibly multi-frame) image\n    : Math.round(slice);\n\n    // Find sliceOffset\n    const ext = image.getExtent();\n    let sliceOffset;\n    if (ijkMode === SlicingMode.I) {\n      sliceOffset = nSlice - ext[0];\n    }\n    if (ijkMode === SlicingMode.J) {\n      sliceOffset = nSlice - ext[2];\n    }\n    if (ijkMode === SlicingMode.K || ijkMode === SlicingMode.NONE) {\n      sliceOffset = nSlice - ext[4];\n    }\n\n    // rebuild the VBO if the data has changed\n    const toString = `${slice}A${image.getMTime()}A${imgScalars.getMTime()}B${publicAPI.getMTime()}C${model.renderable.getSlicingMode()}D${actor.getProperty().getInterpolationType()}`;\n    if (model.VBOBuildString !== toString) {\n      // Build the VBOs\n      const dims = image.getDimensions();\n      if (!model.openGLTexture) {\n        model.openGLTexture = vtkOpenGLTexture.newInstance({\n          resizable: true\n        });\n      }\n      model.openGLTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      // Use norm16 for scalar texture if the extension is available\n      model.openGLTexture.setOglNorm16Ext(model.context.getExtension('EXT_texture_norm16'));\n      if (iType === InterpolationType.NEAREST) {\n        if (new Set([1, 3, 4]).has(numComp) && dataType === VtkDataTypes.UNSIGNED_CHAR && !iComps) {\n          model.openGLTexture.setGenerateMipmap(true);\n          model.openGLTexture.setMinificationFilter(Filter.NEAREST);\n        } else {\n          model.openGLTexture.setMinificationFilter(Filter.NEAREST);\n        }\n        model.openGLTexture.setMagnificationFilter(Filter.NEAREST);\n      } else {\n        if (numComp === 4 && dataType === VtkDataTypes.UNSIGNED_CHAR && !iComps) {\n          model.openGLTexture.setGenerateMipmap(true);\n          model.openGLTexture.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\n        } else {\n          model.openGLTexture.setMinificationFilter(Filter.LINEAR);\n        }\n        model.openGLTexture.setMagnificationFilter(Filter.LINEAR);\n      }\n      model.openGLTexture.setWrapS(Wrap.CLAMP_TO_EDGE);\n      model.openGLTexture.setWrapT(Wrap.CLAMP_TO_EDGE);\n      const sliceSize = dims[0] * dims[1] * numComp;\n      const ptsArray = new Float32Array(12);\n      const tcoordArray = new Float32Array(8);\n      for (let i = 0; i < 4; i++) {\n        tcoordArray[i * 2] = i % 2 ? 1.0 : 0.0;\n        tcoordArray[i * 2 + 1] = i > 1 ? 1.0 : 0.0;\n      }\n\n      // Determine depth position of the slicing plane in the scene.\n      // Slicing modes X, Y, and Z use a continuous axis position, whereas\n      // slicing modes I, J, and K should use discrete positions.\n      const sliceDepth = [SlicingMode.X, SlicingMode.Y, SlicingMode.Z].includes(model.renderable.getSlicingMode()) ? slice : nSlice;\n      const spatialExt = image.getSpatialExtent();\n      const basicScalars = imgScalars.getData();\n      let scalars = null;\n      // Get right scalars according to slicing mode\n      if (ijkMode === SlicingMode.I) {\n        scalars = new basicScalars.constructor(dims[2] * dims[1] * numComp);\n        let id = 0;\n        for (let k = 0; k < dims[2]; k++) {\n          for (let j = 0; j < dims[1]; j++) {\n            let bsIdx = (sliceOffset + j * dims[0] + k * dims[0] * dims[1]) * numComp;\n            id = (k * dims[1] + j) * numComp;\n            const end = bsIdx + numComp;\n            while (bsIdx < end) {\n              scalars[id++] = basicScalars[bsIdx++];\n            }\n          }\n        }\n        dims[0] = dims[1];\n        dims[1] = dims[2];\n        ptsArray[0] = sliceDepth;\n        ptsArray[1] = spatialExt[2];\n        ptsArray[2] = spatialExt[4];\n        ptsArray[3] = sliceDepth;\n        ptsArray[4] = spatialExt[3];\n        ptsArray[5] = spatialExt[4];\n        ptsArray[6] = sliceDepth;\n        ptsArray[7] = spatialExt[2];\n        ptsArray[8] = spatialExt[5];\n        ptsArray[9] = sliceDepth;\n        ptsArray[10] = spatialExt[3];\n        ptsArray[11] = spatialExt[5];\n      } else if (ijkMode === SlicingMode.J) {\n        scalars = new basicScalars.constructor(dims[2] * dims[0] * numComp);\n        let id = 0;\n        for (let k = 0; k < dims[2]; k++) {\n          for (let i = 0; i < dims[0]; i++) {\n            let bsIdx = (i + sliceOffset * dims[0] + k * dims[0] * dims[1]) * numComp;\n            id = (k * dims[0] + i) * numComp;\n            const end = bsIdx + numComp;\n            while (bsIdx < end) {\n              scalars[id++] = basicScalars[bsIdx++];\n            }\n          }\n        }\n        dims[1] = dims[2];\n        ptsArray[0] = spatialExt[0];\n        ptsArray[1] = sliceDepth;\n        ptsArray[2] = spatialExt[4];\n        ptsArray[3] = spatialExt[1];\n        ptsArray[4] = sliceDepth;\n        ptsArray[5] = spatialExt[4];\n        ptsArray[6] = spatialExt[0];\n        ptsArray[7] = sliceDepth;\n        ptsArray[8] = spatialExt[5];\n        ptsArray[9] = spatialExt[1];\n        ptsArray[10] = sliceDepth;\n        ptsArray[11] = spatialExt[5];\n      } else if (ijkMode === SlicingMode.K || ijkMode === SlicingMode.NONE) {\n        scalars = basicScalars.subarray(sliceOffset * sliceSize, (sliceOffset + 1) * sliceSize);\n        ptsArray[0] = spatialExt[0];\n        ptsArray[1] = spatialExt[2];\n        ptsArray[2] = sliceDepth;\n        ptsArray[3] = spatialExt[1];\n        ptsArray[4] = spatialExt[2];\n        ptsArray[5] = sliceDepth;\n        ptsArray[6] = spatialExt[0];\n        ptsArray[7] = spatialExt[3];\n        ptsArray[8] = sliceDepth;\n        ptsArray[9] = spatialExt[1];\n        ptsArray[10] = spatialExt[3];\n        ptsArray[11] = sliceDepth;\n      } else {\n        vtkErrorMacro('Reformat slicing not yet supported.');\n      }\n\n      // Don't share this resource as `scalars` is created in this function\n      // so it is impossible to share\n      model.openGLTexture.resetFormatAndType();\n      model.openGLTexture.create2DFilterableFromRaw(dims[0], dims[1], numComp, imgScalars.getDataType(), scalars, model.renderable.getPreferSizeOverAccuracy?.());\n      model.openGLTexture.activate();\n      model.openGLTexture.sendParameters();\n      model.openGLTexture.deactivate();\n      const points = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        values: ptsArray\n      });\n      points.setName('points');\n      const tcoords = vtkDataArray.newInstance({\n        numberOfComponents: 2,\n        values: tcoordArray\n      });\n      tcoords.setName('tcoords');\n      const cellArray = new Uint16Array(8);\n      cellArray[0] = 3;\n      cellArray[1] = 0;\n      cellArray[2] = 1;\n      cellArray[3] = 3;\n      cellArray[4] = 3;\n      cellArray[5] = 0;\n      cellArray[6] = 3;\n      cellArray[7] = 2;\n      const cells = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        values: cellArray\n      });\n      model.tris.getCABO().createVBO(cells, 'polys', Representation.SURFACE, {\n        points,\n        tcoords,\n        cellOffset: 0\n      });\n      model.VBOBuildTime.modified();\n      model.VBOBuildString = toString;\n    }\n  };\n  publicAPI.updatelabelOutlineThicknessTexture = image => {\n    const labelOutlineThicknessArray = image.getProperty().getLabelOutlineThicknessByReference();\n    const lTex = model._openGLRenderWindow.getGraphicsResourceForObject(labelOutlineThicknessArray);\n\n    // compute the join of the labelOutlineThicknessArray so that\n    // we can use it to decide whether to rebuild the labelOutlineThicknessTexture\n    // or not\n    const toString = `${labelOutlineThicknessArray.join('-')}`;\n    const reBuildL = !lTex?.oglObject?.getHandle() || lTex?.hash !== toString;\n    if (reBuildL) {\n      const lWidth = 1024;\n      const lHeight = 1;\n      const lSize = lWidth * lHeight;\n      const lTable = new Uint8Array(lSize);\n\n      // Assuming labelOutlineThicknessArray contains the thickness for each segment\n      for (let i = 0; i < lWidth; ++i) {\n        // Retrieve the thickness value for the current segment index.\n        // If the value is undefined, use the first element's value as a default, otherwise use the value (even if 0)\n        const thickness = typeof labelOutlineThicknessArray[i] !== 'undefined' ? labelOutlineThicknessArray[i] : labelOutlineThicknessArray[0];\n        lTable[i] = thickness;\n      }\n      model.labelOutlineThicknessTexture = vtkOpenGLTexture.newInstance({\n        resizable: false\n      });\n      model.labelOutlineThicknessTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.labelOutlineThicknessTexture.resetFormatAndType();\n      model.labelOutlineThicknessTexture.setMinificationFilter(Filter.NEAREST);\n      model.labelOutlineThicknessTexture.setMagnificationFilter(Filter.NEAREST);\n\n      // Create a 2D texture (acting as 1D) from the raw data\n      model.labelOutlineThicknessTexture.create2DFromRaw(lWidth, lHeight, 1, VtkDataTypes.UNSIGNED_CHAR, lTable);\n      if (labelOutlineThicknessArray) {\n        model._openGLRenderWindow.setGraphicsResourceForObject(labelOutlineThicknessArray, model.labelOutlineThicknessTexture, toString);\n        if (labelOutlineThicknessArray !== model._labelOutlineThicknessArray) {\n          model._openGLRenderWindow.registerGraphicsResourceUser(labelOutlineThicknessArray, publicAPI);\n          model._openGLRenderWindow.unregisterGraphicsResourceUser(model._labelOutlineThicknessArray, publicAPI);\n        }\n        model._labelOutlineThicknessArray = labelOutlineThicknessArray;\n      }\n    } else {\n      model.labelOutlineThicknessTexture = lTex.oglObject;\n    }\n  };\n  publicAPI.getRenderTargetSize = () => {\n    if (model._useSmallViewport) {\n      return [model._smallViewportWidth, model._smallViewportHeight];\n    }\n    const {\n      usize,\n      vsize\n    } = model._openGLRenderer.getTiledSizeAndOrigin();\n    return [usize, vsize];\n  };\n  publicAPI.getRenderTargetOffset = () => {\n    const {\n      lowerLeftU,\n      lowerLeftV\n    } = model._openGLRenderer.getTiledSizeAndOrigin();\n    return [lowerLeftU, lowerLeftV];\n  };\n  publicAPI.delete = chain(() => {\n    if (model._openGLRenderWindow) {\n      unregisterGraphicsResources(model._openGLRenderWindow);\n    }\n  }, publicAPI.delete);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  VBOBuildTime: 0,\n  VBOBuildString: null,\n  openGLTexture: null,\n  tris: null,\n  imagemat: null,\n  imagematinv: null,\n  colorTexture: null,\n  pwfTexture: null,\n  labelOutlineThicknessTexture: null,\n  labelOutlineThicknessTextureString: null,\n  lastHaveSeenDepthRequest: false,\n  haveSeenDepthRequest: false,\n  lastTextureComponents: 0\n  // _scalars: null,\n  // _colorTransferFunc: null,\n  // _pwFunc: null,\n  // _labelOutlineThicknessArray: null,\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  vtkReplacementShaderMapper.implementReplaceShaderCoincidentOffset(publicAPI, model, initialValues);\n  vtkReplacementShaderMapper.implementBuildShadersWithReplacements(publicAPI, model, initialValues);\n  model.tris = vtkHelper.newInstance();\n  model.imagemat = mat4.identity(new Float64Array(16));\n  model.imagematinv = mat4.identity(new Float64Array(16));\n  model.projectionToWorld = mat4.identity(new Float64Array(16));\n  model.idxToView = mat4.identity(new Float64Array(16));\n  model.idxNormalMatrix = mat3.identity(new Float64Array(9));\n  model.modelToView = mat4.identity(new Float64Array(16));\n  model.projectionToView = mat4.identity(new Float64Array(16));\n\n  // Build VTK API\n  setGet(publicAPI, model, []);\n  model.VBOBuildTime = {};\n  obj(model.VBOBuildTime);\n\n  // Object methods\n  vtkOpenGLImageMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkOpenGLImageMapper');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageMapper = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkAbstractImageMapper', newInstance);\n\nexport { vtkImageMapper as default, extend, newInstance };\n","const ProjectionMode = {\n  MAX: 0,\n  MIN: 1,\n  AVERAGE: 2\n};\nvar Constants = {\n  ProjectionMode\n};\n\nexport { ProjectionMode, Constants as default };\n","import { m as macro } from '../../macros2.js';\nimport { mat4, vec3 } from 'gl-matrix';\nimport { Filter } from './Texture/Constants.js';\nimport { InterpolationType } from '../Core/ImageProperty/Constants.js';\nimport { ProjectionMode } from '../Core/ImageCPRMapper/Constants.js';\nimport { Representation } from '../Core/Property/Constants.js';\nimport { VtkDataTypes } from '../../Common/Core/DataArray/Constants.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkHelper from './Helper.js';\nimport vtkOpenGLTexture from './Texture.js';\nimport vtkReplacementShaderMapper from './ReplacementShaderMapper.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { getImageDataHash, getTransferFunctionHash } from './RenderWindow/resourceSharingHelper.js';\nimport { v as vtkPolyDataVS } from './glsl/vtkPolyDataVS.glsl.js';\nimport { v as vtkPolyDataFS } from './glsl/vtkPolyDataFS.glsl.js';\nimport { registerOverride } from './ViewNodeFactory.js';\nimport '../Core/Mapper/CoincidentTopologyHelper.js';\nimport { Resolve } from '../Core/Mapper/Static.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLImageCPRMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLImageCPRMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLImageCPRMapper');\n  function unregisterGraphicsResources(renderWindow) {\n    [model._scalars, model._colorTransferFunc, model._pwFunc].forEach(coreObject => renderWindow.unregisterGraphicsResourceUser(coreObject, publicAPI));\n  }\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model.currentRenderPass = null;\n      model.openGLImageSlice = publicAPI.getFirstAncestorOfType('vtkOpenGLImageSlice');\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      const oldOglRenderWindow = model._openGLRenderWindow;\n      model._openGLRenderWindow = model._openGLRenderer.getLastAncestorOfType('vtkOpenGLRenderWindow');\n      if (oldOglRenderWindow && !oldOglRenderWindow.isDeleted() && oldOglRenderWindow !== model._openGLRenderWindow) {\n        unregisterGraphicsResources(oldOglRenderWindow);\n      }\n      model.context = model._openGLRenderWindow.getContext();\n      model.openGLCamera = model._openGLRenderer.getViewNodeFor(model._openGLRenderer.getRenderable().getActiveCamera());\n      model.tris.setOpenGLRenderWindow(model._openGLRenderWindow);\n    }\n  };\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    if (prepass) {\n      model.currentRenderPass = renderPass;\n      publicAPI.render();\n    }\n  };\n  publicAPI.opaqueZBufferPass = prepass => {\n    if (prepass) {\n      model.haveSeenDepthRequest = true;\n      model.renderDepth = true;\n      publicAPI.render();\n      model.renderDepth = false;\n    }\n  };\n  publicAPI.getCoincidentParameters = (ren, actor) => {\n    if (model.renderable.getResolveCoincidentTopology() === Resolve.PolygonOffset) {\n      return model.renderable.getCoincidentTopologyPolygonOffsetParameters();\n    }\n    return null;\n  };\n  publicAPI.render = () => {\n    const prop = model.openGLImageSlice.getRenderable();\n    const ren = model._openGLRenderer.getRenderable();\n    publicAPI.renderPiece(ren, prop);\n  };\n  publicAPI.renderPiece = (ren, prop) => {\n    publicAPI.invokeEvent({\n      type: 'StartEvent'\n    });\n    model.renderable.update();\n    publicAPI.invokeEvent({\n      type: 'EndEvent'\n    });\n\n    // Check if the ImageCPRMapper has everything it needs to render\n    if (!model.renderable.preRenderCheck()) {\n      return;\n    }\n    model.currentImageDataInput = model.renderable.getInputData(0);\n    model.currentCenterlineInput = model.renderable.getOrientedCenterline();\n    publicAPI.renderPieceStart(ren, prop);\n    publicAPI.renderPieceDraw(ren, prop);\n    publicAPI.renderPieceFinish(ren, prop);\n  };\n  publicAPI.renderPieceStart = (ren, actor) => {\n    // make sure the BOs are up to date\n    publicAPI.updateBufferObjects(ren, actor);\n  };\n  publicAPI.renderPieceDraw = (ren, actor) => {\n    const gl = model.context;\n\n    // activate the texture\n    model.volumeTexture.activate();\n    model.colorTexture.activate();\n    model.pwfTexture.activate();\n\n    // draw polygons\n    if (model.tris.getCABO().getElementCount()) {\n      // First we do the triangles, update the shader, set uniforms, etc.\n      publicAPI.updateShaders(model.tris, ren, actor);\n      gl.drawArrays(gl.TRIANGLES, 0, model.tris.getCABO().getElementCount());\n      model.tris.getVAO().release();\n    }\n    model.volumeTexture.deactivate();\n    model.colorTexture.deactivate();\n    model.pwfTexture.deactivate();\n  };\n  publicAPI.renderPieceFinish = (ren, actor) => {};\n  publicAPI.updateBufferObjects = (ren, actor) => {\n    // Rebuild buffers if needed\n    if (publicAPI.getNeedToRebuildBufferObjects(ren, actor)) {\n      publicAPI.buildBufferObjects(ren, actor);\n    }\n    // Set interpolation on the texture based on property setting\n    const actorProperty = actor.getProperty();\n    if (actorProperty.getInterpolationType() === InterpolationType.NEAREST) {\n      model.volumeTexture.setMinificationFilter(Filter.NEAREST);\n      model.volumeTexture.setMagnificationFilter(Filter.NEAREST);\n      model.colorTexture.setMinificationFilter(Filter.NEAREST);\n      model.colorTexture.setMagnificationFilter(Filter.NEAREST);\n      model.pwfTexture.setMinificationFilter(Filter.NEAREST);\n      model.pwfTexture.setMagnificationFilter(Filter.NEAREST);\n    } else {\n      model.volumeTexture.setMinificationFilter(Filter.LINEAR);\n      model.volumeTexture.setMagnificationFilter(Filter.LINEAR);\n      model.colorTexture.setMinificationFilter(Filter.LINEAR);\n      model.colorTexture.setMagnificationFilter(Filter.LINEAR);\n      model.pwfTexture.setMinificationFilter(Filter.LINEAR);\n      model.pwfTexture.setMagnificationFilter(Filter.LINEAR);\n    }\n  };\n  publicAPI.getNeedToRebuildBufferObjects = (ren, actor) => {\n    // first do a coarse check\n    // Note that the actor's mtime includes it's properties mtime\n    const vmtime = model.VBOBuildTime.getMTime();\n    return vmtime < publicAPI.getMTime() || vmtime < model.renderable.getMTime() || vmtime < actor.getMTime() || vmtime < model.currentImageDataInput.getMTime() || vmtime < model.currentCenterlineInput.getMTime() || !model.volumeTexture?.getHandle();\n  };\n  publicAPI.buildBufferObjects = (ren, actor) => {\n    const image = model.currentImageDataInput;\n    const centerline = model.currentCenterlineInput;\n\n    // Rebuild the volumeTexture if the data has changed\n    const scalars = image?.getPointData()?.getScalars();\n    if (!scalars) {\n      return;\n    }\n    const cachedScalarsEntry = model._openGLRenderWindow.getGraphicsResourceForObject(scalars);\n    const volumeTextureHash = getImageDataHash(image, scalars);\n    const reBuildTex = !cachedScalarsEntry?.oglObject?.getHandle() || cachedScalarsEntry?.hash !== volumeTextureHash;\n    if (reBuildTex) {\n      model.volumeTexture = vtkOpenGLTexture.newInstance();\n      model.volumeTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      // Build the textures\n      const dims = image.getDimensions();\n      // Use norm16 for scalar texture if the extension is available\n      model.volumeTexture.setOglNorm16Ext(model.context.getExtension('EXT_texture_norm16'));\n      model.volumeTexture.resetFormatAndType();\n      model.volumeTexture.create3DFilterableFromDataArray(dims[0], dims[1], dims[2], scalars, model.renderable.getPreferSizeOverAccuracy());\n      model._openGLRenderWindow.setGraphicsResourceForObject(scalars, model.volumeTexture, volumeTextureHash);\n      if (scalars !== model._scalars) {\n        model._openGLRenderWindow.registerGraphicsResourceUser(scalars, publicAPI);\n        model._openGLRenderWindow.unregisterGraphicsResourceUser(model._scalars, publicAPI);\n      }\n      model._scalars = scalars;\n    } else {\n      model.volumeTexture = cachedScalarsEntry.oglObject;\n    }\n\n    // Rebuild the color texture if needed\n    const numComp = scalars.getNumberOfComponents();\n    const ppty = actor.getProperty();\n    const iComps = ppty.getIndependentComponents();\n    const numIComps = iComps ? numComp : 1;\n    const textureHeight = iComps ? 2 * numIComps : 1;\n    const colorTransferFunc = ppty.getRGBTransferFunction();\n    const colorTextureHash = getTransferFunctionHash(colorTransferFunc, iComps, numIComps);\n    const cachedColorEntry = model._openGLRenderWindow.getGraphicsResourceForObject(colorTransferFunc);\n    const reBuildColorTexture = !cachedColorEntry?.oglObject?.getHandle() || cachedColorEntry?.hash !== colorTextureHash;\n    if (reBuildColorTexture) {\n      const cWidth = 1024;\n      const cSize = cWidth * textureHeight * 3;\n      const cTable = new Uint8ClampedArray(cSize);\n      model.colorTexture = vtkOpenGLTexture.newInstance();\n      model.colorTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      if (colorTransferFunc) {\n        const tmpTable = new Float32Array(cWidth * 3);\n        for (let c = 0; c < numIComps; c++) {\n          const cfun = ppty.getRGBTransferFunction(c);\n          const cRange = cfun.getRange();\n          cfun.getTable(cRange[0], cRange[1], cWidth, tmpTable, 1);\n          if (iComps) {\n            for (let i = 0; i < cWidth * 3; i++) {\n              cTable[c * cWidth * 6 + i] = 255.0 * tmpTable[i];\n              cTable[c * cWidth * 6 + i + cWidth * 3] = 255.0 * tmpTable[i];\n            }\n          } else {\n            for (let i = 0; i < cWidth * 3; i++) {\n              cTable[c * cWidth * 6 + i] = 255.0 * tmpTable[i];\n            }\n          }\n        }\n        model.colorTexture.resetFormatAndType();\n        model.colorTexture.create2DFromRaw(cWidth, textureHeight, 3, VtkDataTypes.UNSIGNED_CHAR, cTable);\n      } else {\n        for (let i = 0; i < cWidth * 3; ++i) {\n          cTable[i] = 255.0 * i / ((cWidth - 1) * 3);\n          cTable[i + 1] = 255.0 * i / ((cWidth - 1) * 3);\n          cTable[i + 2] = 255.0 * i / ((cWidth - 1) * 3);\n        }\n        model.colorTexture.resetFormatAndType();\n        model.colorTexture.create2DFromRaw(cWidth, 1, 3, VtkDataTypes.UNSIGNED_CHAR, cTable);\n      }\n      if (colorTransferFunc) {\n        model._openGLRenderWindow.setGraphicsResourceForObject(colorTransferFunc, model.colorTexture, colorTextureHash);\n        if (colorTransferFunc !== model._colorTransferFunc) {\n          model._openGLRenderWindow.registerGraphicsResourceUser(colorTransferFunc, publicAPI);\n          model._openGLRenderWindow.unregisterGraphicsResourceUser(model._colorTransferFunc, publicAPI);\n        }\n        model._colorTransferFunc = colorTransferFunc;\n      }\n    } else {\n      model.colorTexture = cachedColorEntry.oglObject;\n    }\n\n    // Build piecewise function buffer.  This buffer is used either\n    // for component weighting or opacity, depending on whether we're\n    // rendering components independently or not.\n    const pwFunc = ppty.getPiecewiseFunction();\n    const pwfTextureHash = getTransferFunctionHash(pwFunc, iComps, numIComps);\n    const cachedPwfEntry = model._openGLRenderWindow.getGraphicsResourceForObject(pwFunc);\n    const reBuildPwf = !cachedPwfEntry?.oglObject?.getHandle() || cachedPwfEntry?.hash !== pwfTextureHash;\n    if (reBuildPwf) {\n      const pwfWidth = 1024;\n      const pwfSize = pwfWidth * textureHeight;\n      const pwfTable = new Uint8ClampedArray(pwfSize);\n      model.pwfTexture = vtkOpenGLTexture.newInstance();\n      model.pwfTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      if (pwFunc) {\n        const pwfFloatTable = new Float32Array(pwfSize);\n        const tmpTable = new Float32Array(pwfWidth);\n        for (let c = 0; c < numIComps; ++c) {\n          const pwfun = ppty.getPiecewiseFunction(c);\n          if (pwfun === null) {\n            // Piecewise constant max if no function supplied for this component\n            pwfFloatTable.fill(1.0);\n          } else {\n            const pwfRange = pwfun.getRange();\n            pwfun.getTable(pwfRange[0], pwfRange[1], pwfWidth, tmpTable, 1);\n            // adjust for sample distance etc\n            if (iComps) {\n              for (let i = 0; i < pwfWidth; i++) {\n                pwfFloatTable[c * pwfWidth * 2 + i] = tmpTable[i];\n                pwfFloatTable[c * pwfWidth * 2 + i + pwfWidth] = tmpTable[i];\n              }\n            } else {\n              for (let i = 0; i < pwfWidth; i++) {\n                pwfFloatTable[c * pwfWidth * 2 + i] = tmpTable[i];\n              }\n            }\n          }\n        }\n        model.pwfTexture.resetFormatAndType();\n        model.pwfTexture.create2DFromRaw(pwfWidth, textureHeight, 1, VtkDataTypes.FLOAT, pwfFloatTable);\n      } else {\n        // default is opaque\n        pwfTable.fill(255.0);\n        model.pwfTexture.resetFormatAndType();\n        model.pwfTexture.create2DFromRaw(pwfWidth, 1, 1, VtkDataTypes.UNSIGNED_CHAR, pwfTable);\n      }\n      if (pwFunc) {\n        model._openGLRenderWindow.setGraphicsResourceForObject(pwFunc, model.pwfTexture, pwfTextureHash);\n        if (pwFunc !== model._pwFunc) {\n          model._openGLRenderWindow.registerGraphicsResourceUser(pwFunc, publicAPI);\n          model._openGLRenderWindow.unregisterGraphicsResourceUser(model._pwFunc, publicAPI);\n        }\n        model._pwFunc = pwFunc;\n      }\n    } else {\n      model.pwfTexture = cachedPwfEntry.oglObject;\n    }\n\n    // Rebuild the image vertices if needed\n    if (model.VBOBuildTime.getMTime() < model.renderable.getMTime() || model.VBOBuildTime.getMTime() < centerline.getMTime()) {\n      const nPoints = centerline.getNumberOfPoints();\n      const nLines = nPoints <= 1 ? 0 : nPoints - 1;\n      const distances = centerline.getDistancesToFirstPoint();\n      const totalHeight = model.renderable.getHeight();\n      const nPts = 4 * nLines;\n\n      // Create the array of point: 4 points per segment\n      const ptsArray = new Float32Array(3 * nPts);\n      const widthMC = model.renderable.getWidth();\n      for (let lineIdx = 0, offset = 0; lineIdx < nLines; ++lineIdx) {\n        // Use model coordinates\n        // See \"setCameraShaderParameters\" to see how MCPCMatrix is built\n\n        // Top left\n        ptsArray.set([0, totalHeight - distances[lineIdx], 0], offset);\n        offset += 3;\n        // Top right\n        ptsArray.set([widthMC, totalHeight - distances[lineIdx], 0], offset);\n        offset += 3;\n        // Bottom right\n        ptsArray.set([widthMC, totalHeight - distances[lineIdx + 1], 0], offset);\n        offset += 3;\n        // Bottom left\n        ptsArray.set([0, totalHeight - distances[lineIdx + 1], 0], offset);\n        offset += 3;\n      }\n      const points = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        values: ptsArray\n      });\n      points.setName('points');\n\n      // Create the array of cells: a quad per segment\n      const cellArray = new Uint16Array(5 * nLines);\n      for (let lineIdx = 0, offset = 0, ptIdx = 0; lineIdx < nLines; ++lineIdx) {\n        cellArray.set([4, ptIdx + 3, ptIdx + 2, ptIdx + 1, ptIdx], offset);\n        offset += 5;\n        ptIdx += 4;\n      }\n      const cells = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        values: cellArray\n      });\n\n      // Create the array of centerline positions (VBO custom attribute)\n      const pointsDataArray = centerline.getPoints();\n      const centerlinePositionArray = new Float32Array(3 * nPts);\n      const pa = new Array(3);\n      const pb = new Array(3);\n      for (let lineIdx = 0, offset = 0; lineIdx < nLines; ++lineIdx) {\n        pointsDataArray.getPoint(lineIdx, pa);\n        pointsDataArray.getPoint(lineIdx + 1, pb);\n\n        // Top left\n        centerlinePositionArray.set(pa, offset);\n        offset += 3;\n        // Top right\n        centerlinePositionArray.set(pa, offset);\n        offset += 3;\n        // Bottom right\n        centerlinePositionArray.set(pb, offset);\n        offset += 3;\n        // Bottom left\n        centerlinePositionArray.set(pb, offset);\n        offset += 3;\n      }\n      const centerlinePosition = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        values: centerlinePositionArray,\n        name: 'centerlinePosition'\n      });\n\n      // Create the array of quad index:\n      //   0 ____ 1\n      //    |    |\n      //    |____|\n      //   2      3\n      const quadIndexArray = new Float32Array(nPts);\n      for (let lineIdx = 0, offset = 0; lineIdx < nLines; ++lineIdx) {\n        quadIndexArray.set([0,\n        // Top left\n        1,\n        // Top right\n        3,\n        // Bottom right\n        2 // Bottom left\n        ], offset);\n        offset += 4;\n      }\n      const quadIndex = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        values: quadIndexArray,\n        name: 'quadIndex'\n      });\n      const customAttributes = [centerlinePosition, quadIndex];\n      if (!model.renderable.getUseUniformOrientation()) {\n        // For each quad (i.e. centerline segment), a top and bottom quaternion give the orientation\n        // Send both quaternions to each vertex and use flat interpolation to get them \"as is\" in the fragment shader\n        // The interpolation of the quaternions will occur in the fragment shader (slerp)\n        const orientationQuats = model.renderable.getOrientedCenterline().getOrientations() ?? [];\n        const centerlineTopOrientationArray = new Float32Array(4 * nPts);\n        const centerlineBotOrientationArray = new Float32Array(4 * nPts);\n        for (let quadIdx = 0; quadIdx < nLines; ++quadIdx) {\n          // All vertices of a given quad have the same topDir and botDir\n          // Polyline goes from top to bottom\n          const topQuat = orientationQuats[quadIdx];\n          const botQuat = orientationQuats[quadIdx + 1];\n          for (let pointInQuadIdx = 0; pointInQuadIdx < 4; ++pointInQuadIdx) {\n            const pointIdx = pointInQuadIdx + 4 * quadIdx;\n            const quaternionArrayOffset = 4 * pointIdx;\n            centerlineTopOrientationArray.set(topQuat, quaternionArrayOffset);\n            centerlineBotOrientationArray.set(botQuat, quaternionArrayOffset);\n          }\n        }\n        const centerlineTopOrientation = vtkDataArray.newInstance({\n          numberOfComponents: 4,\n          values: centerlineTopOrientationArray,\n          name: 'centerlineTopOrientation'\n        });\n        const centerlineBotOrientation = vtkDataArray.newInstance({\n          numberOfComponents: 4,\n          values: centerlineBotOrientationArray,\n          name: 'centerlineBotOrientation'\n        });\n        customAttributes.push(centerlineTopOrientation, centerlineBotOrientation);\n      }\n      model.tris.getCABO().createVBO(cells, 'polys', Representation.SURFACE, {\n        points,\n        customAttributes\n      });\n      model.VBOBuildTime.modified();\n    }\n  };\n  publicAPI.getNeedToRebuildShaders = (cellBO, ren, actor) => {\n    // has something changed that would require us to recreate the shader?\n    // candidates are\n    // presence of centerPoint\n    // value of useUniformOrientation\n    // property modified (representation interpolation and lighting)\n    // input modified\n    // light complexity changed\n    // render pass shader replacement changed\n\n    const tNumComp = model.volumeTexture.getComponents();\n    const iComp = actor.getProperty().getIndependentComponents();\n    const useCenterPoint = !!model.renderable.getCenterPoint();\n    const useUniformOrientation = model.renderable.getUseUniformOrientation();\n    const projectionMode = model.renderable.isProjectionEnabled() && model.renderable.getProjectionMode();\n    if (cellBO.getProgram() === 0 || model.lastUseCenterPoint !== useCenterPoint || model.lastUseUniformOrientation !== useUniformOrientation || model.lastProjectionMode !== projectionMode || model.lastHaveSeenDepthRequest !== model.haveSeenDepthRequest || model.lastTextureComponents !== tNumComp || model.lastIndependentComponents !== iComp) {\n      model.lastUseCenterPoint = useCenterPoint;\n      model.lastUseUniformOrientation = useUniformOrientation;\n      model.lastProjectionMode = projectionMode;\n      model.lastHaveSeenDepthRequest = model.haveSeenDepthRequest;\n      model.lastTextureComponents = tNumComp;\n      model.lastIndependentComponents = iComp;\n      return true;\n    }\n    return false;\n  };\n  publicAPI.buildShaders = (shaders, ren, actor) => {\n    publicAPI.getShaderTemplate(shaders, ren, actor);\n    publicAPI.replaceShaderValues(shaders, ren, actor);\n  };\n  publicAPI.replaceShaderValues = (shaders, ren, actor) => {\n    let VSSource = shaders.Vertex;\n    let FSSource = shaders.Fragment;\n\n    // https://glmatrix.net/docs/vec3.js.html#line522\n    const applyQuaternionToVecShaderFunction = ['vec3 applyQuaternionToVec(vec4 q, vec3 v) {', '  float uvx = q.y * v.z - q.z * v.y;', '  float uvy = q.z * v.x - q.x * v.z;', '  float uvz = q.x * v.y - q.y * v.x;', '  float uuvx = q.y * uvz - q.z * uvy;', '  float uuvy = q.z * uvx - q.x * uvz;', '  float uuvz = q.x * uvy - q.y * uvx;', '  float w2 = q.w * 2.0;', '  uvx *= w2;', '  uvy *= w2;', '  uvz *= w2;', '  uuvx *= 2.0;', '  uuvy *= 2.0;', '  uuvz *= 2.0;', '  return vec3(v.x + uvx + uuvx, v.y + uvy + uuvy, v.z + uvz + uuvz);', '}'];\n\n    // Vertex shader main replacements\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', ['uniform mat4 MCPCMatrix;']).result;\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Impl', ['  gl_Position = MCPCMatrix * vertexMC;']).result;\n    const vsColorDec = ['attribute vec3 centerlinePosition;', 'attribute float quadIndex;', 'uniform float width;', 'out vec2 quadOffsetVSOutput;', 'out vec3 centerlinePosVSOutput;'];\n    const useProjection = model.renderable.isProjectionEnabled();\n    const isDirectionUniform = model.renderable.getUseUniformOrientation();\n    if (isDirectionUniform) {\n      vsColorDec.push('out vec3 samplingDirVSOutput;', 'uniform vec4 centerlineOrientation;', 'uniform vec3 tangentDirection;', ...applyQuaternionToVecShaderFunction);\n      if (useProjection) {\n        vsColorDec.push('out vec3 projectionDirVSOutput;', 'uniform vec3 bitangentDirection;');\n      }\n    } else {\n      vsColorDec.push('out vec4 centerlineTopOrientationVSOutput;', 'out vec4 centerlineBotOrientationVSOutput;', 'attribute vec4 centerlineTopOrientation;', 'attribute vec4 centerlineBotOrientation;');\n    }\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Color::Dec', vsColorDec).result;\n    const vsColorImpl = [\n    // quadOffsetVSOutput.x: left = -0.5* width; right = 0.5 * width\n    // quadOffsetVSOutput.y: bottom = 0.0; top = 1.0;\n    'quadOffsetVSOutput = vec2(width * (mod(quadIndex, 2.0) == 0.0 ? -0.5 : 0.5), quadIndex > 1.0 ? 0.0 : 1.0);', 'centerlinePosVSOutput = centerlinePosition;'];\n    if (isDirectionUniform) {\n      vsColorImpl.push('samplingDirVSOutput = applyQuaternionToVec(centerlineOrientation, tangentDirection);');\n      if (useProjection) {\n        vsColorImpl.push('projectionDirVSOutput = applyQuaternionToVec(centerlineOrientation, bitangentDirection);');\n      }\n    } else {\n      vsColorImpl.push('centerlineTopOrientationVSOutput = centerlineTopOrientation;', 'centerlineBotOrientationVSOutput = centerlineBotOrientation;');\n    }\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Color::Impl', vsColorImpl).result;\n\n    // Fragment shader main replacements\n    const tNumComp = model.volumeTexture.getComponents();\n    const iComps = actor.getProperty().getIndependentComponents();\n    let tcoordFSDec = [\n    // used to compute texture coordinates of the sample\n    'uniform mat4 MCTCMatrix; // Model coordinates to texture coordinates', 'in vec2 quadOffsetVSOutput;', 'in vec3 centerlinePosVSOutput;',\n    // volume texture\n    'uniform highp sampler3D volumeTexture;',\n    // color and pwf textures\n    'uniform sampler2D colorTexture1;', 'uniform sampler2D pwfTexture1;',\n    // opacity\n    'uniform float opacity;',\n    // background color (out of volume samples)\n    'uniform vec4 backgroundColor;',\n    // color shift and scale\n    `uniform float cshift0;`, `uniform float cscale0;`,\n    // weighting shift and scale\n    `uniform float pwfshift0;`, `uniform float pwfscale0;`];\n    if (useProjection) {\n      tcoordFSDec.push('uniform vec3 volumeSizeMC;', 'uniform int projectionSlabNumberOfSamples;', 'uniform float projectionConstantOffset;', 'uniform float projectionStepLength;');\n    }\n    if (isDirectionUniform) {\n      tcoordFSDec.push('in vec3 samplingDirVSOutput;');\n      if (useProjection) {\n        tcoordFSDec.push('in vec3 projectionDirVSOutput;');\n      }\n    } else {\n      tcoordFSDec.push('uniform vec3 tangentDirection;', 'in vec4 centerlineTopOrientationVSOutput;', 'in vec4 centerlineBotOrientationVSOutput;', ...applyQuaternionToVecShaderFunction);\n      if (useProjection) {\n        tcoordFSDec.push('uniform vec3 bitangentDirection;');\n      }\n    }\n    const centerPoint = model.renderable.getCenterPoint();\n    if (centerPoint) {\n      tcoordFSDec.push('uniform vec3 globalCenterPoint;');\n    }\n    if (iComps) {\n      for (let comp = 1; comp < tNumComp; comp++) {\n        tcoordFSDec = tcoordFSDec.concat([\n        // color shift and scale\n        `uniform float cshift${comp};`, `uniform float cscale${comp};`,\n        // weighting shift and scale\n        `uniform float pwfshift${comp};`, `uniform float pwfscale${comp};`]);\n      }\n      // the heights defined below are the locations\n      // for the up to four components of the tfuns\n      // the tfuns have a height of 2XnumComps pixels so the\n      // values are computed to hit the middle of the two rows\n      // for that component\n      switch (tNumComp) {\n        case 1:\n          tcoordFSDec = tcoordFSDec.concat(['uniform float mix0;', '#define height0 0.5']);\n          break;\n        case 2:\n          tcoordFSDec = tcoordFSDec.concat(['uniform float mix0;', 'uniform float mix1;', '#define height0 0.25', '#define height1 0.75']);\n          break;\n        case 3:\n          tcoordFSDec = tcoordFSDec.concat(['uniform float mix0;', 'uniform float mix1;', 'uniform float mix2;', '#define height0 0.17', '#define height1 0.5', '#define height2 0.83']);\n          break;\n        case 4:\n          tcoordFSDec = tcoordFSDec.concat(['uniform float mix0;', 'uniform float mix1;', 'uniform float mix2;', 'uniform float mix3;', '#define height0 0.125', '#define height1 0.375', '#define height2 0.625', '#define height3 0.875']);\n          break;\n        default:\n          vtkErrorMacro('Unsupported number of independent coordinates.');\n      }\n    }\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Dec', tcoordFSDec).result;\n    let tcoordFSImpl = [];\n    if (isDirectionUniform) {\n      tcoordFSImpl.push('vec3 samplingDirection = samplingDirVSOutput;');\n      if (useProjection) {\n        tcoordFSImpl.push('vec3 projectionDirection = projectionDirVSOutput;');\n      }\n    } else {\n      // Slerp or lerp between centerlineTopDirVSOutput and centerlineBotDirVSOutput\n      // We use quadOffsetVSOutput.y: bottom = 0.0; top = 1.0;\n      tcoordFSImpl.push(\n      // Slerp / Lerp\n      'vec4 q0 = centerlineBotOrientationVSOutput;', 'vec4 q1 = centerlineTopOrientationVSOutput;', 'float qCosAngle = dot(q0, q1);', 'vec4 interpolatedOrientation;', 'if (qCosAngle > 0.999 || qCosAngle < -0.999) {', '  // Use LERP instead of SLERP when the two quaternions are close or opposite', '  interpolatedOrientation = normalize(mix(q0, q1, quadOffsetVSOutput.y));', '} else {', '  float omega = acos(qCosAngle);', '  interpolatedOrientation = normalize(sin((1.0 - quadOffsetVSOutput.y) * omega) * q0 + sin(quadOffsetVSOutput.y * omega) * q1);', '}', 'vec3 samplingDirection = applyQuaternionToVec(interpolatedOrientation, tangentDirection);');\n      if (useProjection) {\n        tcoordFSImpl.push('vec3 projectionDirection = applyQuaternionToVec(interpolatedOrientation, bitangentDirection);');\n      }\n    }\n    if (centerPoint) {\n      tcoordFSImpl.push('float baseOffset = dot(samplingDirection, globalCenterPoint - centerlinePosVSOutput);', 'float horizontalOffset = quadOffsetVSOutput.x + baseOffset;');\n    } else {\n      tcoordFSImpl.push('float horizontalOffset = quadOffsetVSOutput.x;');\n    }\n    tcoordFSImpl.push('vec3 volumePosMC = centerlinePosVSOutput + horizontalOffset * samplingDirection;', 'vec3 volumePosTC = (MCTCMatrix * vec4(volumePosMC, 1.0)).xyz;', 'if (any(lessThan(volumePosTC, vec3(0.0))) || any(greaterThan(volumePosTC, vec3(1.0))))', '{', '  // set the background color and exit', '  gl_FragData[0] = backgroundColor;', '  return;', '}');\n    if (useProjection) {\n      const projectionMode = model.renderable.getProjectionMode();\n      switch (projectionMode) {\n        case ProjectionMode.MIN:\n          tcoordFSImpl.push('const vec4 initialProjectionTextureValue = vec4(1.0);');\n          break;\n        case ProjectionMode.MAX:\n        case ProjectionMode.AVERAGE:\n        default:\n          tcoordFSImpl.push('const vec4 initialProjectionTextureValue = vec4(0.0);');\n          break;\n      }\n\n      // Loop on all the samples of the projection\n      tcoordFSImpl.push('vec3 projectionScaledDirection = projectionDirection / volumeSizeMC;', 'vec3 projectionStep = projectionStepLength * projectionScaledDirection;', 'vec3 projectionStartPosition = volumePosTC + projectionConstantOffset * projectionScaledDirection;', 'vec4 tvalue = initialProjectionTextureValue;', 'for (int projectionSampleIdx = 0; projectionSampleIdx < projectionSlabNumberOfSamples; ++projectionSampleIdx) {', '  vec3 projectionSamplePosition = projectionStartPosition + float(projectionSampleIdx) * projectionStep;', '  vec4 sampledTextureValue = texture(volumeTexture, projectionSamplePosition);');\n      switch (projectionMode) {\n        case ProjectionMode.MAX:\n          tcoordFSImpl.push('  tvalue = max(tvalue, sampledTextureValue);');\n          break;\n        case ProjectionMode.MIN:\n          tcoordFSImpl.push('  tvalue = min(tvalue, sampledTextureValue);');\n          break;\n        case ProjectionMode.AVERAGE:\n        default:\n          tcoordFSImpl.push('  tvalue = tvalue + sampledTextureValue;');\n          break;\n      }\n      tcoordFSImpl.push('}');\n\n      // Process the total if needed\n      if (projectionMode === ProjectionMode.AVERAGE) {\n        tcoordFSImpl.push('tvalue = tvalue / float(projectionSlabNumberOfSamples);');\n      }\n    } else {\n      tcoordFSImpl.push('vec4 tvalue = texture(volumeTexture, volumePosTC);');\n    }\n    if (iComps) {\n      const rgba = ['r', 'g', 'b', 'a'];\n      for (let comp = 0; comp < tNumComp; ++comp) {\n        tcoordFSImpl = tcoordFSImpl.concat([`vec3 tcolor${comp} = mix${comp} * texture2D(colorTexture1, vec2(tvalue.${rgba[comp]} * cscale${comp} + cshift${comp}, height${comp})).rgb;`, `float compWeight${comp} = mix${comp} * texture2D(pwfTexture1, vec2(tvalue.${rgba[comp]} * pwfscale${comp} + pwfshift${comp}, height${comp})).r;`]);\n      }\n      switch (tNumComp) {\n        case 1:\n          tcoordFSImpl = tcoordFSImpl.concat(['gl_FragData[0] = vec4(tcolor0.rgb, compWeight0 * opacity);']);\n          break;\n        case 2:\n          tcoordFSImpl = tcoordFSImpl.concat(['float weightSum = compWeight0 + compWeight1;', 'gl_FragData[0] = vec4(vec3((tcolor0.rgb * (compWeight0 / weightSum)) + (tcolor1.rgb * (compWeight1 / weightSum))), opacity);']);\n          break;\n        case 3:\n          tcoordFSImpl = tcoordFSImpl.concat(['float weightSum = compWeight0 + compWeight1 + compWeight2;', 'gl_FragData[0] = vec4(vec3((tcolor0.rgb * (compWeight0 / weightSum)) + (tcolor1.rgb * (compWeight1 / weightSum)) + (tcolor2.rgb * (compWeight2 / weightSum))), opacity);']);\n          break;\n        case 4:\n          tcoordFSImpl = tcoordFSImpl.concat(['float weightSum = compWeight0 + compWeight1 + compWeight2 + compWeight3;', 'gl_FragData[0] = vec4(vec3((tcolor0.rgb * (compWeight0 / weightSum)) + (tcolor1.rgb * (compWeight1 / weightSum)) + (tcolor2.rgb * (compWeight2 / weightSum)) + (tcolor3.rgb * (compWeight3 / weightSum))), opacity);']);\n          break;\n        default:\n          vtkErrorMacro('Unsupported number of independent coordinates.');\n      }\n    } else {\n      // dependent components\n      switch (tNumComp) {\n        case 1:\n          tcoordFSImpl = tcoordFSImpl.concat(['// Dependent components', 'float intensity = tvalue.r;', 'vec3 tcolor = texture2D(colorTexture1, vec2(intensity * cscale0 + cshift0, 0.5)).rgb;', 'float scalarOpacity = texture2D(pwfTexture1, vec2(intensity * pwfscale0 + pwfshift0, 0.5)).r;', 'gl_FragData[0] = vec4(tcolor, scalarOpacity * opacity);']);\n          break;\n        case 2:\n          tcoordFSImpl = tcoordFSImpl.concat(['float intensity = tvalue.r*cscale0 + cshift0;', 'gl_FragData[0] = vec4(texture2D(colorTexture1, vec2(intensity, 0.5)).rgb, pwfscale0*tvalue.g + pwfshift0);']);\n          break;\n        case 3:\n          tcoordFSImpl = tcoordFSImpl.concat(['vec4 tcolor = cscale0*tvalue + cshift0;', 'gl_FragData[0] = vec4(texture2D(colorTexture1, vec2(tcolor.r,0.5)).r,', '  texture2D(colorTexture1, vec2(tcolor.g,0.5)).r,', '  texture2D(colorTexture1, vec2(tcolor.b,0.5)).r, opacity);']);\n          break;\n        default:\n          tcoordFSImpl = tcoordFSImpl.concat(['vec4 tcolor = cscale0*tvalue + cshift0;', 'gl_FragData[0] = vec4(texture2D(colorTexture1, vec2(tcolor.r,0.5)).r,', '  texture2D(colorTexture1, vec2(tcolor.g,0.5)).r,', '  texture2D(colorTexture1, vec2(tcolor.b,0.5)).r, tcolor.a);']);\n      }\n    }\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', tcoordFSImpl).result;\n\n    // Picking shader replacements\n    if (model.haveSeenDepthRequest) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Dec', 'uniform int depthRequest;').result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Impl', ['if (depthRequest == 1) {', 'float iz = floor(gl_FragCoord.z*65535.0 + 0.1);', 'float rf = floor(iz/256.0)/255.0;', 'float gf = mod(iz,256.0)/255.0;', 'gl_FragData[0] = vec4(rf, gf, 0.0, 1.0); }']).result;\n    }\n    shaders.Vertex = VSSource;\n    shaders.Fragment = FSSource;\n    publicAPI.replaceShaderClip(shaders, ren, actor);\n    publicAPI.replaceShaderCoincidentOffset(shaders, ren, actor);\n  };\n  publicAPI.replaceShaderClip = (shaders, ren, actor) => {\n    let VSSource = shaders.Vertex;\n    let FSSource = shaders.Fragment;\n    if (model.renderable.getNumberOfClippingPlanes()) {\n      let numClipPlanes = model.renderable.getNumberOfClippingPlanes();\n      if (numClipPlanes > 6) {\n        macro.vtkErrorMacro('OpenGL has a limit of 6 clipping planes');\n        numClipPlanes = 6;\n      }\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Clip::Dec', ['uniform int numClipPlanes;', 'uniform vec4 clipPlanes[6];', 'varying float clipDistancesVSOutput[6];']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Clip::Impl', ['for (int planeNum = 0; planeNum < 6; planeNum++)', '    {', '    if (planeNum >= numClipPlanes)', '        {', '        break;', '        }', '    clipDistancesVSOutput[planeNum] = dot(clipPlanes[planeNum], vertexMC);', '    }']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Clip::Dec', ['uniform int numClipPlanes;', 'varying float clipDistancesVSOutput[6];']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Clip::Impl', ['for (int planeNum = 0; planeNum < 6; planeNum++)', '    {', '    if (planeNum >= numClipPlanes)', '        {', '        break;', '        }', '    if (clipDistancesVSOutput[planeNum] < 0.0) discard;', '    }']).result;\n    }\n    shaders.Vertex = VSSource;\n    shaders.Fragment = FSSource;\n  };\n  publicAPI.getShaderTemplate = (shaders, ren, actor) => {\n    shaders.Vertex = vtkPolyDataVS;\n    shaders.Fragment = vtkPolyDataFS;\n    shaders.Geometry = '';\n  };\n  publicAPI.setMapperShaderParameters = (cellBO, ren, actor) => {\n    const program = cellBO.getProgram();\n    const cellArrayBufferObject = cellBO.getCABO();\n    if (cellArrayBufferObject.getElementCount() && (model.VBOBuildTime.getMTime() > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime())) {\n      if (program.isAttributeUsed('vertexMC')) {\n        if (!cellBO.getVAO().addAttributeArray(program, cellArrayBufferObject, 'vertexMC', cellArrayBufferObject.getVertexOffset(), cellArrayBufferObject.getStride(), model.context.FLOAT, 3, model.context.FALSE)) {\n          vtkErrorMacro('Error setting vertexMC in shader VAO.');\n        }\n      }\n      // Custom data of the CABO (centerlinePosition, centerlineTopDirection,\n      // centerlineBotDirection, quadIndex and user defined custom data)\n      cellBO.getCABO().getCustomData().forEach(data => {\n        if (data && program.isAttributeUsed(data.name) && !cellBO.getVAO().addAttributeArray(program, cellArrayBufferObject, data.name, data.offset, cellArrayBufferObject.getStride(), model.context.FLOAT, data.components, model.context.FALSE)) {\n          vtkErrorMacro(`Error setting ${data.name} in shader VAO.`);\n        }\n      });\n      cellBO.getAttributeUpdateTime().modified();\n    }\n    const texUnit = model.volumeTexture.getTextureUnit();\n    program.setUniformi('volumeTexture', texUnit);\n    program.setUniformf('width', model.renderable.getWidth());\n    cellBO.getProgram().setUniform4fv('backgroundColor', model.renderable.getBackgroundColor());\n    if (program.isUniformUsed('tangentDirection')) {\n      const tangentDirection = model.renderable.getTangentDirection();\n      cellBO.getProgram().setUniform3fArray('tangentDirection', tangentDirection);\n    }\n    if (program.isUniformUsed('bitangentDirection')) {\n      const bitangentDirection = model.renderable.getBitangentDirection();\n      cellBO.getProgram().setUniform3fArray('bitangentDirection', bitangentDirection);\n    }\n    if (program.isUniformUsed('centerlineOrientation')) {\n      const uniformOrientation = model.renderable.getUniformOrientation();\n      cellBO.getProgram().setUniform4fv('centerlineOrientation', uniformOrientation);\n    }\n    if (program.isUniformUsed('globalCenterPoint')) {\n      const centerPoint = model.renderable.getCenterPoint();\n      program.setUniform3fArray('globalCenterPoint', centerPoint);\n    }\n    // Projection uniforms\n    if (model.renderable.isProjectionEnabled()) {\n      const image = model.currentImageDataInput;\n      const spacing = image.getSpacing();\n      const dimensions = image.getDimensions();\n      const projectionSlabThickness = model.renderable.getProjectionSlabThickness();\n      const projectionSlabNumberOfSamples = model.renderable.getProjectionSlabNumberOfSamples();\n      const volumeSize = vec3.mul([], spacing, dimensions);\n      program.setUniform3fArray('volumeSizeMC', volumeSize);\n      program.setUniformi('projectionSlabNumberOfSamples', projectionSlabNumberOfSamples);\n      const constantOffset = -0.5 * projectionSlabThickness;\n      program.setUniformf('projectionConstantOffset', constantOffset);\n      const stepLength = projectionSlabThickness / (projectionSlabNumberOfSamples - 1);\n      program.setUniformf('projectionStepLength', stepLength);\n    }\n\n    // Model coordinates to image space\n    // getWorldToIndex is badly named and is in fact modelToIndex\n    // MCIC -> Model coordinates to index coordinates\n    // MCTC -> Model coordinates to texture coordinates\n    const image = model.currentImageDataInput;\n    const MCICMatrix = image.getWorldToIndex();\n    const ICTCMatrix = mat4.fromScaling(new Float32Array(16), vec3.inverse([], image.getDimensions()));\n    const MCTCMatrix = mat4.mul(ICTCMatrix, ICTCMatrix, MCICMatrix);\n    program.setUniformMatrix('MCTCMatrix', MCTCMatrix);\n    if (model.haveSeenDepthRequest) {\n      cellBO.getProgram().setUniformi('depthRequest', model.renderDepth ? 1 : 0);\n    }\n    if (model.renderable.getNumberOfClippingPlanes()) {\n      // add all the clipping planes\n      let numClipPlanes = model.renderable.getNumberOfClippingPlanes();\n      if (numClipPlanes > 6) {\n        macro.vtkErrorMacro('OpenGL has a limit of 6 clipping planes');\n        numClipPlanes = 6;\n      }\n      const shiftScaleEnabled = cellArrayBufferObject.getCoordShiftAndScaleEnabled();\n      const inverseShiftScaleMatrix = shiftScaleEnabled ? cellArrayBufferObject.getInverseShiftAndScaleMatrix() : null;\n      const mat = inverseShiftScaleMatrix ? mat4.copy(model.imagematinv, actor.getMatrix()) : actor.getMatrix();\n      if (inverseShiftScaleMatrix) {\n        mat4.transpose(mat, mat);\n        mat4.multiply(mat, mat, inverseShiftScaleMatrix);\n        mat4.transpose(mat, mat);\n      }\n\n      // transform crop plane normal with transpose(inverse(worldToIndex))\n      mat4.transpose(model.imagemat, model.currentImageDataInput.getIndexToWorld());\n      mat4.multiply(model.imagematinv, mat, model.imagemat);\n      const planeEquations = [];\n      for (let i = 0; i < numClipPlanes; i++) {\n        const planeEquation = [];\n        model.renderable.getClippingPlaneInDataCoords(model.imagematinv, i, planeEquation);\n        for (let j = 0; j < 4; j++) {\n          planeEquations.push(planeEquation[j]);\n        }\n      }\n      program.setUniformi('numClipPlanes', numClipPlanes);\n      program.setUniform4fv('clipPlanes', planeEquations);\n    }\n\n    // handle coincident\n    if (program.isUniformUsed('coffset')) {\n      const cp = publicAPI.getCoincidentParameters(ren, actor);\n      program.setUniformf('coffset', cp.offset);\n      // cfactor isn't always used when coffset is.\n      if (program.isUniformUsed('cfactor')) {\n        program.setUniformf('cfactor', cp.factor);\n      }\n    }\n  };\n  publicAPI.setCameraShaderParameters = (cellBO, ren, actor) => {\n    const MCWCMatrix = model.openGLImageSlice.getKeyMatrices().mcwc;\n    const WCPCMatrix = model.openGLCamera.getKeyMatrices(ren).wcpc;\n    mat4.multiply(model.imagemat, WCPCMatrix, MCWCMatrix);\n    if (cellBO.getCABO().getCoordShiftAndScaleEnabled()) {\n      const inverseShiftScaleMat = cellBO.getCABO().getInverseShiftAndScaleMatrix();\n      mat4.multiply(model.imagemat, model.imagemat, inverseShiftScaleMat);\n    }\n    cellBO.getProgram().setUniformMatrix('MCPCMatrix', model.imagemat);\n  };\n  publicAPI.setPropertyShaderParameters = (cellBO, ren, actor) => {\n    const program = cellBO.getProgram();\n    const ppty = actor.getProperty();\n    const opacity = ppty.getOpacity();\n    program.setUniformf('opacity', opacity);\n\n    // Component mix\n    // Independent components: Mixed according to component weights\n    // Dependent components: Mixed using the following logic:\n    //    - 2 comps => LA\n    //    - 3 comps => RGB + opacity from pwf\n    //    - 4 comps => RGBA\n    const numComp = model.volumeTexture.getComponents();\n    const iComps = ppty.getIndependentComponents();\n    if (iComps) {\n      for (let i = 0; i < numComp; ++i) {\n        program.setUniformf(`mix${i}`, ppty.getComponentWeight(i));\n      }\n    }\n\n    // Color opacity map\n    const volInfo = model.volumeTexture.getVolumeInfo();\n\n    // three levels of shift scale combined into one\n    // for performance in the fragment shader\n    for (let i = 0; i < numComp; i++) {\n      let cw = ppty.getColorWindow();\n      let cl = ppty.getColorLevel();\n      const target = iComps ? i : 0;\n      const cfun = ppty.getRGBTransferFunction(target);\n      if (cfun && ppty.getUseLookupTableScalarRange()) {\n        const cRange = cfun.getRange();\n        cw = cRange[1] - cRange[0];\n        cl = 0.5 * (cRange[1] + cRange[0]);\n      }\n      const scale = volInfo.scale[i] / cw;\n      const shift = (volInfo.offset[i] - cl) / cw + 0.5;\n      program.setUniformf(`cshift${i}`, shift);\n      program.setUniformf(`cscale${i}`, scale);\n    }\n    const texColorUnit = model.colorTexture.getTextureUnit(); // TODO\n    program.setUniformi('colorTexture1', texColorUnit);\n\n    // pwf shift/scale\n    for (let i = 0; i < numComp; i++) {\n      let pwfScale = 1.0;\n      let pwfShift = 0.0;\n      const target = iComps ? i : 0;\n      const pwfun = ppty.getPiecewiseFunction(target);\n      if (pwfun) {\n        const pwfRange = pwfun.getRange();\n        const length = pwfRange[1] - pwfRange[0];\n        const mid = 0.5 * (pwfRange[0] + pwfRange[1]);\n        pwfScale = volInfo.scale[i] / length;\n        pwfShift = (volInfo.offset[i] - mid) / length + 0.5;\n      }\n      program.setUniformf(`pwfshift${i}`, pwfShift);\n      program.setUniformf(`pwfscale${i}`, pwfScale);\n    }\n    const texOpacityUnit = model.pwfTexture.getTextureUnit(); // TODO\n    program.setUniformi('pwfTexture1', texOpacityUnit);\n  };\n  publicAPI.updateShaders = (cellBO, ren, actor) => {\n    // has something changed that would require us to recreate the shader?\n    if (publicAPI.getNeedToRebuildShaders(cellBO, ren, actor)) {\n      const shaders = {\n        Vertex: null,\n        Fragment: null,\n        Geometry: null\n      };\n      publicAPI.buildShaders(shaders, ren, actor);\n\n      // compile and bind the program if needed\n      const newShader = model._openGLRenderWindow.getShaderCache().readyShaderProgramArray(shaders.Vertex, shaders.Fragment, shaders.Geometry);\n\n      // if the shader changed reinitialize the VAO\n      if (newShader !== cellBO.getProgram()) {\n        cellBO.setProgram(newShader);\n        // reset the VAO as the shader has changed\n        cellBO.getVAO().releaseGraphicsResources();\n      }\n      cellBO.getShaderSourceTime().modified();\n    } else {\n      model._openGLRenderWindow.getShaderCache().readyShaderProgram(cellBO.getProgram());\n    }\n    cellBO.getVAO().bind();\n    publicAPI.setMapperShaderParameters(cellBO, ren, actor);\n    publicAPI.setCameraShaderParameters(cellBO, ren, actor);\n    publicAPI.setPropertyShaderParameters(cellBO, ren, actor);\n  };\n  publicAPI.delete = macro.chain(() => {\n    if (model._openGLRenderWindow) {\n      unregisterGraphicsResources(model._openGLRenderWindow);\n    }\n  }, publicAPI.delete);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  currentRenderPass: null,\n  volumeTexture: null,\n  colorTexture: null,\n  pwfTexture: null,\n  tris: null,\n  lastHaveSeenDepthRequest: false,\n  haveSeenDepthRequest: false,\n  lastTextureComponents: 0,\n  lastIndependentComponents: 0,\n  imagemat: null,\n  imagematinv: null\n  // _scalars: null,\n  // _colorTransferFunc: null,\n  // _pwFunc: null,\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  vtkReplacementShaderMapper.implementReplaceShaderCoincidentOffset(publicAPI, model, initialValues);\n\n  // Two inputs: one for the ImageData/Texture and one for the PolyData (centerline)\n  macro.algo(publicAPI, model, 2, 0);\n  model.tris = vtkHelper.newInstance();\n  model.volumeTexture = null;\n  model.colorTexture = null;\n  model.pwfTexture = null;\n  model.imagemat = mat4.identity(new Float64Array(16));\n  model.imagematinv = mat4.identity(new Float64Array(16));\n  model.VBOBuildTime = {};\n  macro.obj(model.VBOBuildTime, {\n    mtime: 0\n  });\n\n  // Object methods\n  vtkOpenGLImageCPRMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkOpenGLImageCPRMapper');\nconst STATIC = {};\n\n// ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance,\n  extend,\n  ...STATIC\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkImageCPRMapper', newInstance);\n\nexport { STATIC, index as default, extend, newInstance };\n","import { mat4 } from 'gl-matrix';\nimport { n as newInstance$1, o as obj, e as setGet } from '../../macros2.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLImageSlice methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLImageSlice(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLImageSlice');\n\n  // Builds myself.\n  publicAPI.buildPass = prepass => {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n      model._openGLRenderWindow = publicAPI.getLastAncestorOfType('vtkOpenGLRenderWindow');\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model.context = model._openGLRenderWindow.getContext();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n  publicAPI.traverseZBufferPass = renderPass => {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    model.children.forEach(child => {\n      child.traverse(renderPass);\n    });\n    publicAPI.apply(renderPass, false);\n  };\n  publicAPI.traverseOpaqueZBufferPass = renderPass => publicAPI.traverseOpaquePass(renderPass);\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseOpaquePass = renderPass => {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    model.children.forEach(child => {\n      child.traverse(renderPass);\n    });\n    publicAPI.apply(renderPass, false);\n  };\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseTranslucentPass = renderPass => {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    model.children.forEach(child => {\n      child.traverse(renderPass);\n    });\n    publicAPI.apply(renderPass, false);\n  };\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n      if (model.renderable.getIsOpaque()) {\n        renderPass.incrementOpaqueActorCount();\n      } else {\n        renderPass.incrementTranslucentActorCount();\n      }\n    }\n  };\n  publicAPI.zBufferPass = (prepass, renderPass) => publicAPI.opaquePass(prepass, renderPass);\n  publicAPI.opaqueZBufferPass = (prepass, renderPass) => publicAPI.opaquePass(prepass, renderPass);\n\n  // Renders myself\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    if (prepass) {\n      model.context.depthMask(true);\n    }\n  };\n\n  // Renders myself\n  publicAPI.translucentPass = (prepass, renderPass) => {\n    model.context.depthMask(!prepass);\n  };\n  publicAPI.getKeyMatrices = () => {\n    // has the actor changed?\n    if (model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {\n      mat4.copy(model.keyMatrices.mcwc, model.renderable.getMatrix());\n      mat4.transpose(model.keyMatrices.mcwc, model.keyMatrices.mcwc);\n      model.keyMatrixTime.modified();\n    }\n    return model.keyMatrices;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  keyMatrixTime: null,\n  keyMatrices: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatrixTime = {};\n  obj(model.keyMatrixTime, {\n    mtime: 0\n  });\n  model.keyMatrices = {\n    mcwc: mat4.identity(new Float64Array(16))\n  };\n\n  // Build VTK API\n  setGet(publicAPI, model, ['context']);\n\n  // Object methods\n  vtkOpenGLImageSlice(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkOpenGLImageSlice');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageSlice = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkImageSlice', newInstance);\n\nexport { vtkImageSlice as default, extend, newInstance };\n","import { mat4, mat3 } from 'gl-matrix';\nimport { n as newInstance$1, o as obj, e as setGet } from '../../macros2.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLVolume methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLVolume(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLVolume');\n\n  // Builds myself.\n  publicAPI.buildPass = prepass => {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n    if (prepass) {\n      model._openGLRenderWindow = publicAPI.getLastAncestorOfType('vtkOpenGLRenderWindow');\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model.context = model._openGLRenderWindow.getContext();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n      renderPass.incrementVolumeCount();\n    }\n  };\n  publicAPI.traverseVolumePass = renderPass => {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    model.children[0].traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  };\n\n  // Renders myself\n  publicAPI.volumePass = prepass => {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n    model.context.depthMask(!prepass);\n  };\n  publicAPI.getKeyMatrices = () => {\n    // has the actor changed?\n    if (model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {\n      model.renderable.computeMatrix();\n      mat4.copy(model.MCWCMatrix, model.renderable.getMatrix());\n      mat4.transpose(model.MCWCMatrix, model.MCWCMatrix);\n      if (model.renderable.getIsIdentity()) {\n        mat3.identity(model.normalMatrix);\n      } else {\n        mat3.fromMat4(model.normalMatrix, model.MCWCMatrix);\n        mat3.invert(model.normalMatrix, model.normalMatrix);\n        mat3.transpose(model.normalMatrix, model.normalMatrix);\n      }\n      model.keyMatrixTime.modified();\n    }\n    return {\n      mcwc: model.MCWCMatrix,\n      normalMatrix: model.normalMatrix\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // context: null,\n  // keyMatrixTime: null,\n  // normalMatrix: null,\n  // MCWCMatrix: null,\n  // _openGLRenderWindow: null,\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatrixTime = {};\n  obj(model.keyMatrixTime, {\n    mtime: 0\n  });\n  // always set by getter\n  model.normalMatrix = new Float64Array(9);\n  model.MCWCMatrix = new Float64Array(16);\n\n  // Build VTK API\n  setGet(publicAPI, model, ['context']);\n\n  // Object methods\n  vtkOpenGLVolume(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkOpenGLVolume');\n\n// ----------------------------------------------------------------------------\n\nvar vtkVolume = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkVolume', newInstance);\n\nexport { vtkVolume as default, extend, newInstance };\n","import { n as newInstance$1, o as obj, r as vtkErrorMacro, k as getArray } from '../../macros2.js';\nimport vtkOpenGLTexture from './Texture.js';\nimport { VtkDataTypes } from '../../Common/Core/DataArray/Constants.js';\nimport { Filter } from './Texture/Constants.js';\n\n// ----------------------------------------------------------------------------\n// vtkFramebuffer methods\n// ----------------------------------------------------------------------------\nfunction vtkFramebuffer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkFramebuffer');\n  publicAPI.getBothMode = () => model.context.FRAMEBUFFER;\n  // publicAPI.getDrawMode = () => model.context.DRAW_FRAMEBUFFER;\n  // publicAPI.getReadMode = () => model.context.READ_FRAMEBUFFER;\n\n  publicAPI.saveCurrentBindingsAndBuffers = modeIn => {\n    const mode = typeof modeIn !== 'undefined' ? modeIn : publicAPI.getBothMode();\n    publicAPI.saveCurrentBindings(mode);\n    publicAPI.saveCurrentBuffers(mode);\n  };\n  publicAPI.saveCurrentBindings = modeIn => {\n    if (!model.context) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling saveCurrentBindings');\n      return;\n    }\n    const gl = model.context;\n    model.previousDrawBinding = gl.getParameter(model.context.FRAMEBUFFER_BINDING);\n    model.previousActiveFramebuffer = model._openGLRenderWindow.getActiveFramebuffer();\n  };\n  publicAPI.saveCurrentBuffers = modeIn => {\n    // noop on webgl 1\n  };\n  publicAPI.restorePreviousBindingsAndBuffers = modeIn => {\n    const mode = typeof modeIn !== 'undefined' ? modeIn : publicAPI.getBothMode();\n    publicAPI.restorePreviousBindings(mode);\n    publicAPI.restorePreviousBuffers(mode);\n  };\n  publicAPI.restorePreviousBindings = modeIn => {\n    if (!model.context) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling restorePreviousBindings');\n      return;\n    }\n    const gl = model.context;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, model.previousDrawBinding);\n    model._openGLRenderWindow.setActiveFramebuffer(model.previousActiveFramebuffer);\n  };\n  publicAPI.restorePreviousBuffers = modeIn => {\n    // currently a noop on webgl1\n  };\n  publicAPI.bind = function () {\n    let modeArg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let mode = modeArg;\n    if (mode === null) {\n      mode = model.context.FRAMEBUFFER;\n    }\n    model.context.bindFramebuffer(mode, model.glFramebuffer);\n    for (let i = 0; i < model.colorBuffers.length; i++) {\n      model.colorBuffers[i].bind();\n    }\n    model._openGLRenderWindow.setActiveFramebuffer(publicAPI);\n  };\n  publicAPI.create = (width, height) => {\n    if (!model.context) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling create');\n      return;\n    }\n    model.glFramebuffer = model.context.createFramebuffer();\n    model.glFramebuffer.width = width;\n    model.glFramebuffer.height = height;\n  };\n  publicAPI.setColorBuffer = function (texture) {\n    let attachment = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const gl = model.context;\n    if (!gl) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling setColorBuffer');\n      return;\n    }\n    let glAttachment = gl.COLOR_ATTACHMENT0;\n    if (attachment > 0) {\n      if (model._openGLRenderWindow.getWebgl2()) {\n        glAttachment += attachment;\n      } else {\n        vtkErrorMacro('Using multiple framebuffer attachments requires WebGL 2');\n        return;\n      }\n    }\n    model.colorBuffers[attachment] = texture;\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, glAttachment, gl.TEXTURE_2D, texture.getHandle(), 0);\n  };\n  publicAPI.removeColorBuffer = function () {\n    let attachment = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    const gl = model.context;\n    if (!gl) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling removeColorBuffer');\n      return;\n    }\n    let glAttachment = gl.COLOR_ATTACHMENT0;\n    if (attachment > 0) {\n      if (model._openGLRenderWindow.getWebgl2()) {\n        glAttachment += attachment;\n      } else {\n        vtkErrorMacro('Using multiple framebuffer attachments requires WebGL 2');\n        return;\n      }\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, glAttachment, gl.TEXTURE_2D, null, 0);\n    model.colorBuffers = model.colorBuffers.splice(attachment, 1);\n  };\n  publicAPI.setDepthBuffer = texture => {\n    if (!model.context) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling setDepthBuffer');\n      return;\n    }\n    if (model._openGLRenderWindow.getWebgl2()) {\n      const gl = model.context;\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, texture.getHandle(), 0);\n    } else {\n      vtkErrorMacro('Attaching depth buffer textures to fbo requires WebGL 2');\n    }\n  };\n  publicAPI.removeDepthBuffer = () => {\n    if (!model.context) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling removeDepthBuffer');\n      return;\n    }\n    if (model._openGLRenderWindow.getWebgl2()) {\n      const gl = model.context;\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, null, 0);\n    } else {\n      vtkErrorMacro('Attaching depth buffer textures to framebuffers requires WebGL 2');\n    }\n  };\n  publicAPI.getGLFramebuffer = () => model.glFramebuffer;\n  publicAPI.setOpenGLRenderWindow = rw => {\n    if (model._openGLRenderWindow === rw) {\n      return;\n    }\n    publicAPI.releaseGraphicsResources();\n    model._openGLRenderWindow = rw;\n    model.context = null;\n    if (rw) {\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n  publicAPI.releaseGraphicsResources = () => {\n    if (model.glFramebuffer) {\n      model.context.deleteFramebuffer(model.glFramebuffer);\n    }\n  };\n  publicAPI.getSize = () => {\n    if (model.glFramebuffer == null) return null;\n    return [model.glFramebuffer.width, model.glFramebuffer.height];\n  };\n  publicAPI.populateFramebuffer = () => {\n    if (!model.context) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling populateFrameBuffer');\n      return;\n    }\n    publicAPI.bind();\n    const gl = model.context;\n    const texture = vtkOpenGLTexture.newInstance();\n    texture.setOpenGLRenderWindow(model._openGLRenderWindow);\n    texture.setMinificationFilter(Filter.LINEAR);\n    texture.setMagnificationFilter(Filter.LINEAR);\n    texture.create2DFromRaw(model.glFramebuffer.width, model.glFramebuffer.height, 4, VtkDataTypes.UNSIGNED_CHAR, null);\n    publicAPI.setColorBuffer(texture);\n\n    // for now do not count on having a depth buffer texture\n    // as they are not standard webgl 1\n    model.depthTexture = gl.createRenderbuffer();\n    gl.bindRenderbuffer(gl.RENDERBUFFER, model.depthTexture);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, model.glFramebuffer.width, model.glFramebuffer.height);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, model.depthTexture);\n  };\n\n  // For backwards compatibility. Use getColorBuffers()[0] going forward.\n  publicAPI.getColorTexture = () => model.colorBuffers[0];\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\nconst DEFAULT_VALUES = {\n  // _openGLRenderWindow: null,\n  glFramebuffer: null,\n  colorBuffers: null,\n  depthTexture: null,\n  previousDrawBinding: 0,\n  previousReadBinding: 0,\n  previousDrawBuffer: 0,\n  previousReadBuffer: 0,\n  previousActiveFramebuffer: null\n};\n\n// ----------------------------------------------------------------------------\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  obj(publicAPI, model);\n  if (model.colorBuffers) {\n    vtkErrorMacro('you cannot initialize colorBuffers through the constructor. You should call setColorBuffer() instead.');\n  }\n  model.colorBuffers = [];\n  getArray(publicAPI, model, ['colorBuffers']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n  vtkFramebuffer(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\nconst newInstance = newInstance$1(extend, 'vtkFramebuffer');\n\n// ----------------------------------------------------------------------------\nvar vtkOpenGLFramebuffer = {\n  newInstance,\n  extend\n};\n\nexport { vtkOpenGLFramebuffer as default, extend, newInstance };\n","const InterpolationType = {\n  NEAREST: 0,\n  LINEAR: 1,\n  FAST_LINEAR: 2\n};\nconst OpacityMode = {\n  FRACTIONAL: 0,\n  PROPORTIONAL: 1\n};\nconst ColorMixPreset = {\n  CUSTOM: 0,\n  ADDITIVE: 1,\n  COLORIZE: 2\n};\nvar Constants = {\n  InterpolationType,\n  OpacityMode,\n  ColorMixPreset\n};\n\nexport { ColorMixPreset, InterpolationType, OpacityMode, Constants as default };\n","const BlendMode = {\n  COMPOSITE_BLEND: 0,\n  MAXIMUM_INTENSITY_BLEND: 1,\n  MINIMUM_INTENSITY_BLEND: 2,\n  AVERAGE_INTENSITY_BLEND: 3,\n  ADDITIVE_INTENSITY_BLEND: 4,\n  RADON_TRANSFORM_BLEND: 5,\n  LABELMAP_EDGE_PROJECTION_BLEND: 6\n};\nconst FilterMode = {\n  OFF: 0,\n  NORMALIZED: 1,\n  RAW: 2\n};\nvar Constants = {\n  BlendMode,\n  FilterMode\n};\n\nexport { BlendMode, FilterMode, Constants as default };\n","var vtkVolumeVS = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkPolyDataVS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n\\nattribute vec4 vertexDC;\\n\\nvarying vec3 vertexVCVSOutput;\\nuniform mat4 PCVCMatrix;\\n\\nuniform float dcxmin;\\nuniform float dcxmax;\\nuniform float dcymin;\\nuniform float dcymax;\\n\\nvoid main()\\n{\\n  // dcsmall is the device coords reduced to the\\n  // x y area covered by the volume\\n  vec4 dcsmall = vec4(\\n    dcxmin + 0.5 * (vertexDC.x + 1.0) * (dcxmax - dcxmin),\\n    dcymin + 0.5 * (vertexDC.y + 1.0) * (dcymax - dcymin),\\n    vertexDC.z,\\n    vertexDC.w);\\n  vec4 vcpos = PCVCMatrix * dcsmall;\\n  vertexVCVSOutput = vcpos.xyz/vcpos.w;\\n  gl_Position = dcsmall;\\n}\\n\";\n\nexport { vtkVolumeVS as v };\n","var vtkVolumeFS = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkVolumeFS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n// Template for the volume mappers fragment shader\\n\\n// the output of this shader\\n//VTK::Output::Dec\\n\\nvarying vec3 vertexVCVSOutput;\\n\\n// first declare the settings from the mapper\\n// that impact the code paths in here\\n\\n// always set vtkNumComponents 1,2,3,4\\n//VTK::NumComponents\\n\\n// possibly define vtkTrilinearOn\\n//VTK::TrilinearOn\\n\\n// possibly define UseIndependentComponents\\n//VTK::IndependentComponentsOn\\n\\n// possibly define vtkCustomComponentsColorMix\\n//VTK::CustomComponentsColorMixOn\\n\\n// possibly define any \\\"proportional\\\" components\\n//VTK::vtkProportionalComponents\\n\\n// possibly define any components that are forced to nearest interpolation\\n//VTK::vtkForceNearestComponents\\n\\n// Define the blend mode to use\\n#define vtkBlendMode //VTK::BlendMode\\n\\n// Possibly define vtkImageLabelOutlineOn\\n//VTK::ImageLabelOutlineOn\\n\\n// Possibly define vtkLabelEdgeProjectionOn\\n//VTK::LabelEdgeProjectionOn\\n\\n\\n#ifdef vtkImageLabelOutlineOn\\n  uniform float outlineOpacity;\\n  uniform float vpWidth;\\n  uniform float vpHeight;\\n  uniform float vpOffsetX;\\n  uniform float vpOffsetY;\\n  uniform mat4 PCWCMatrix;\\n  uniform mat4 vWCtoIDX;\\n\\n  const int MAX_SEGMENT_INDEX = 256; // Define as per expected maximum\\n  // bool seenSegmentsByOriginalPos[MAX_SEGMENT_INDEX];\\n  #define MAX_SEGMENTS 256\\n  #define UINT_SIZE 32\\n  #define BITMASK_SIZE ((MAX_SEGMENTS + UINT_SIZE - 1) / UINT_SIZE)\\n\\n  uint bitmask[BITMASK_SIZE];\\n\\n  // Set the corresponding bit in the bitmask\\n  void setBit(int segmentIndex) {\\n    int index = segmentIndex / UINT_SIZE;\\n    int bitIndex = segmentIndex % UINT_SIZE;\\n    bitmask[index] |= 1u << bitIndex;\\n  }\\n\\n  // Check if a bit is set in the bitmask\\n  bool isBitSet(int segmentIndex) {\\n    int index = segmentIndex / UINT_SIZE;\\n    int bitIndex = segmentIndex % UINT_SIZE;\\n    return ((bitmask[index] & (1u << bitIndex)) != 0u);\\n  }\\n#endif\\n\\n// define vtkLightComplexity\\n//VTK::LightComplexity\\n#if vtkLightComplexity > 0\\nuniform float vSpecularPower;\\nuniform float vAmbient;\\nuniform float vDiffuse;\\nuniform float vSpecular;\\n//VTK::Light::Dec\\n#endif\\n\\n//VTK::VolumeShadowOn\\n//VTK::SurfaceShadowOn\\n//VTK::localAmbientOcclusionOn\\n//VTK::LAO::Dec\\n//VTK::VolumeShadow::Dec\\n\\n// define vtkComputeNormalFromOpacity\\n//VTK::vtkComputeNormalFromOpacity\\n\\n// possibly define vtkGradientOpacityOn\\n//VTK::GradientOpacityOn\\n#ifdef vtkGradientOpacityOn\\nuniform float goscale0;\\nuniform float goshift0;\\nuniform float gomin0;\\nuniform float gomax0;\\n#ifdef UseIndependentComponents\\n#if vtkNumComponents > 1\\nuniform float goscale1;\\nuniform float goshift1;\\nuniform float gomin1;\\nuniform float gomax1;\\n#if vtkNumComponents > 2\\nuniform float goscale2;\\nuniform float goshift2;\\nuniform float gomin2;\\nuniform float gomax2;\\n#if vtkNumComponents > 3\\nuniform float goscale3;\\nuniform float goshift3;\\nuniform float gomin3;\\nuniform float gomax3;\\n#endif\\n#endif\\n#endif\\n#endif\\n#endif\\n\\n// if you want to see the raw tiled\\n// data in webgl1 uncomment the following line\\n// #define debugtile\\n\\n// camera values\\nuniform float camThick;\\nuniform float camNear;\\nuniform float camFar;\\nuniform int cameraParallel;\\n\\n// values describing the volume geometry\\nuniform vec3 vOriginVC;\\nuniform vec3 vSpacing;\\nuniform ivec3 volumeDimensions; // 3d texture dimensions\\nuniform vec3 vPlaneNormal0;\\nuniform float vPlaneDistance0;\\nuniform vec3 vPlaneNormal1;\\nuniform float vPlaneDistance1;\\nuniform vec3 vPlaneNormal2;\\nuniform float vPlaneDistance2;\\nuniform vec3 vPlaneNormal3;\\nuniform float vPlaneDistance3;\\nuniform vec3 vPlaneNormal4;\\nuniform float vPlaneDistance4;\\nuniform vec3 vPlaneNormal5;\\nuniform float vPlaneDistance5;\\n\\n//VTK::ClipPlane::Dec\\n\\n// opacity and color textures\\nuniform sampler2D otexture;\\nuniform float oshift0;\\nuniform float oscale0;\\nuniform sampler2D ctexture;\\nuniform float cshift0;\\nuniform float cscale0;\\n\\n#if vtkNumComponents >= 2\\nuniform float oshift1;\\nuniform float oscale1;\\nuniform float cshift1;\\nuniform float cscale1;\\n#endif\\n#if vtkNumComponents >= 3\\nuniform float oshift2;\\nuniform float oscale2;\\nuniform float cshift2;\\nuniform float cscale2;\\n#endif\\n#if vtkNumComponents >= 4\\nuniform float oshift3;\\nuniform float oscale3;\\nuniform float cshift3;\\nuniform float cscale3;\\n#endif\\n\\n// jitter texture\\nuniform sampler2D jtexture;\\nuniform sampler2D ttexture;\\n\\n\\n// some 3D texture values\\nuniform float sampleDistance;\\nuniform vec3 vVCToIJK;\\nuniform vec3 volumeSpacings; // spacing in the world coorindates\\n\\n\\n// the heights defined below are the locations\\n// for the up to four components of the tfuns\\n// the tfuns have a height of 2XnumComps pixels so the\\n// values are computed to hit the middle of the two rows\\n// for that component\\n#ifdef UseIndependentComponents\\n#if vtkNumComponents == 1\\nuniform float mix0;\\n#define height0 0.5\\n#endif\\n#if vtkNumComponents == 2\\nuniform float mix0;\\nuniform float mix1;\\n#define height0 0.25\\n#define height1 0.75\\n#endif\\n#if vtkNumComponents == 3\\nuniform float mix0;\\nuniform float mix1;\\nuniform float mix2;\\n#define height0 0.17\\n#define height1 0.5\\n#define height2 0.83\\n#endif\\n#if vtkNumComponents == 4\\nuniform float mix0;\\nuniform float mix1;\\nuniform float mix2;\\nuniform float mix3;\\n#define height0 0.125\\n#define height1 0.375\\n#define height2 0.625\\n#define height3 0.875\\n#endif\\n#endif\\n\\nuniform vec4 ipScalarRangeMin;\\nuniform vec4 ipScalarRangeMax;\\n\\n// declaration for intermixed geometry\\n//VTK::ZBuffer::Dec\\n\\n//=======================================================================\\n// global and custom variables (a temporary section before photorealistics rendering module is complete)\\nvec3 rayDirVC;\\nfloat sampleDistanceISVS;\\nfloat sampleDistanceIS;\\n\\n#define SQRT3    1.7321\\n#define INV4PI   0.0796\\n#define EPSILON  0.001\\n#define PI       3.1415\\n#define PI2      9.8696\\n\\n//=======================================================================\\n// Webgl2 specific version of functions\\n#if __VERSION__ == 300\\n\\nuniform highp sampler3D texture1;\\n\\nvec4 getTextureValue(vec3 pos)\\n{\\n  vec4 tmp = texture(texture1, pos);\\n\\n  #if defined(vtkComponent0ForceNearest) || \\\\\\n      defined(vtkComponent1ForceNearest) || \\\\\\n      defined(vtkComponent2ForceNearest) || \\\\\\n      defined(vtkComponent3ForceNearest)\\n    vec3 nearestPos = (floor(pos * vec3(volumeDimensions)) + 0.5) / vec3(volumeDimensions);\\n    vec4 nearestValue = texture(texture1, nearestPos);\\n    #ifdef vtkComponent0ForceNearest\\n      tmp[0] = nearestValue[0];\\n    #endif\\n    #ifdef vtkComponent1ForceNearest\\n      tmp[1] = nearestValue[1];\\n    #endif\\n    #ifdef vtkComponent2ForceNearest\\n      tmp[2] = nearestValue[2];\\n    #endif\\n    #ifdef vtkComponent3ForceNearest\\n      tmp[3] = nearestValue[3];\\n    #endif\\n  #endif\\n\\n  #ifndef UseIndependentComponents\\n    #if vtkNumComponents == 1\\n      tmp.a = tmp.r;\\n    #endif\\n    #if vtkNumComponents == 2\\n      tmp.a = tmp.g;\\n    #endif\\n    #if vtkNumComponents == 3\\n      tmp.a = length(tmp.rgb);\\n    #endif\\n  #endif\\n\\n  return tmp;\\n}\\n\\n//=======================================================================\\n// WebGL1 specific version of functions\\n#else\\n\\nuniform sampler2D texture1;\\n\\nuniform float texWidth;\\nuniform float texHeight;\\nuniform int xreps;\\nuniform int xstride;\\nuniform int ystride;\\n\\n// if computing trilinear values from multiple z slices\\n#ifdef vtkTrilinearOn\\nvec4 getTextureValue(vec3 ijk)\\n{\\n  float zoff = 1.0/float(volumeDimensions.z);\\n  vec4 val1 = getOneTextureValue(ijk);\\n  vec4 val2 = getOneTextureValue(vec3(ijk.xy, ijk.z + zoff));\\n\\n  float indexZ = float(volumeDimensions)*ijk.z;\\n  float zmix =  indexZ - floor(indexZ);\\n\\n  return mix(val1, val2, zmix);\\n}\\n\\nvec4 getOneTextureValue(vec3 ijk)\\n#else // nearest or fast linear\\nvec4 getTextureValue(vec3 ijk)\\n#endif\\n{\\n  vec3 tdims = vec3(volumeDimensions);\\n\\n#ifdef debugtile\\n  vec2 tpos = vec2(ijk.x, ijk.y);\\n  vec4 tmp = texture2D(texture1, tpos);\\n  tmp.a = 1.0;\\n\\n#else\\n  int z = int(ijk.z * tdims.z);\\n  int yz = z / xreps;\\n  int xz = z - yz*xreps;\\n\\n  int tileWidth = volumeDimensions.x/xstride;\\n  int tileHeight = volumeDimensions.y/ystride;\\n\\n  xz *= tileWidth;\\n  yz *= tileHeight;\\n\\n  float ni = float(xz) + (ijk.x*float(tileWidth));\\n  float nj = float(yz) + (ijk.y*float(tileHeight));\\n\\n  vec2 tpos = vec2(ni/texWidth, nj/texHeight);\\n\\n  vec4 tmp = texture2D(texture1, tpos);\\n\\n#if vtkNumComponents == 1\\n  tmp.a = tmp.r;\\n#endif\\n#if vtkNumComponents == 2\\n  tmp.g = tmp.a;\\n#endif\\n#if vtkNumComponents == 3\\n  tmp.a = length(tmp.rgb);\\n#endif\\n#endif\\n\\n  return tmp;\\n}\\n\\n// End of Webgl1 specific code\\n//=======================================================================\\n#endif\\n\\n//=======================================================================\\n// transformation between VC and IS space\\n\\n// convert vector position from idx to vc\\n#if (vtkLightComplexity > 0) || (defined vtkClippingPlanesOn)\\nvec3 IStoVC(vec3 posIS){\\n  vec3 posVC = posIS / vVCToIJK;\\n  return posVC.x * vPlaneNormal0 +\\n         posVC.y * vPlaneNormal2 +\\n         posVC.z * vPlaneNormal4 +\\n         vOriginVC;\\n}\\n\\n// convert vector position from vc to idx\\nvec3 VCtoIS(vec3 posVC){\\n  posVC = posVC - vOriginVC;\\n  posVC = vec3(\\n    dot(posVC, vPlaneNormal0),\\n    dot(posVC, vPlaneNormal2),\\n    dot(posVC, vPlaneNormal4));\\n  return posVC * vVCToIJK;\\n}\\n#endif\\n\\n//Rotate vector to view coordinate\\n#if (vtkLightComplexity > 0) || (defined vtkGradientOpacityOn)\\nvoid rotateToViewCoord(inout vec3 dirIS){\\n  dirIS.xyz =\\n    dirIS.x * vPlaneNormal0 +\\n    dirIS.y * vPlaneNormal2 +\\n    dirIS.z * vPlaneNormal4;\\n}\\n\\n//Rotate vector to idx coordinate\\nvec3 rotateToIDX(vec3 dirVC){\\n  vec3 dirIS;\\n  dirIS.xyz = vec3(\\n    dot(dirVC, vPlaneNormal0),\\n    dot(dirVC, vPlaneNormal2),\\n    dot(dirVC, vPlaneNormal4));\\n  return dirIS;\\n}\\n#endif\\n\\n//=======================================================================\\n// Given a normal compute the gradient opacity factors\\nfloat computeGradientOpacityFactor(\\n  float normalMag, float goscale, float goshift, float gomin, float gomax)\\n{\\n  return clamp(normalMag * goscale + goshift, gomin, gomax);\\n}\\n\\n//=======================================================================\\n// compute the normal and gradient magnitude for a position, uses forward difference\\n#if (vtkLightComplexity > 0) || (defined vtkGradientOpacityOn)\\n  #ifdef vtkClippingPlanesOn\\n    void adjustClippedVoxelValues(vec3 pos, vec3 texPos[3], inout vec3 g1)\\n    {\\n      vec3 g1VC[3];\\n      for (int i = 0; i < 3; ++i)\\n      {\\n        g1VC[i] = IStoVC(texPos[i]);\\n      }\\n      vec3 posVC = IStoVC(pos);\\n      for (int i = 0; i < clip_numPlanes; ++i)\\n      {\\n        for (int j = 0; j < 3; ++j)\\n        {\\n          if(dot(vec3(vClipPlaneOrigins[i] - g1VC[j].xyz), vClipPlaneNormals[i]) > 0.0)\\n          {\\n            g1[j] = 0.0;\\n          }\\n        }\\n      }\\n    }\\n  #endif\\n\\n  #ifdef vtkComputeNormalFromOpacity\\n    vec4 computeDensityNormal(vec3 opacityUCoords[2], float opactityTextureHeight, float gradientOpacity) {\\n      vec3 opacityG1, opacityG2;\\n      opacityG1.x = texture2D(otexture, vec2(opacityUCoords[0].x, opactityTextureHeight)).r;\\n      opacityG1.y = texture2D(otexture, vec2(opacityUCoords[0].y, opactityTextureHeight)).r;\\n      opacityG1.z = texture2D(otexture, vec2(opacityUCoords[0].z, opactityTextureHeight)).r;\\n      opacityG2.x = texture2D(otexture, vec2(opacityUCoords[1].x, opactityTextureHeight)).r;\\n      opacityG2.y = texture2D(otexture, vec2(opacityUCoords[1].y, opactityTextureHeight)).r;\\n      opacityG2.z = texture2D(otexture, vec2(opacityUCoords[1].z, opactityTextureHeight)).r;\\n      opacityG1.xyz *= gradientOpacity;\\n      opacityG2.xyz *= gradientOpacity;\\n\\n      vec4 opacityG = vec4(opacityG1 - opacityG2, 1.0f);\\n      // divide by spacing\\n      opacityG.xyz /= vSpacing;\\n      opacityG.w = length(opacityG.xyz);\\n      // rotate to View Coords\\n      rotateToViewCoord(opacityG.xyz);\\n      if (!all(equal(opacityG.xyz, vec3(0.0)))) {\\n        return vec4(normalize(opacityG.xyz),opacityG.w);\\n      } else {\\n        return vec4(0.0);\\n      }\\n    }\\n\\n    vec4 computeNormalForDensity(vec3 pos, vec3 tstep, out vec3 scalarInterp[2], const int opacityComponent)\\n    {\\n      vec3 xvec = vec3(tstep.x, 0.0, 0.0);\\n      vec3 yvec = vec3(0.0, tstep.y, 0.0);\\n      vec3 zvec = vec3(0.0, 0.0, tstep.z);\\n      vec3 texPosPVec[3];\\n      texPosPVec[0] = pos + xvec;\\n      texPosPVec[1] = pos + yvec;\\n      texPosPVec[2] = pos + zvec;\\n      vec3 texPosNVec[3];\\n      texPosNVec[0] = pos - xvec;\\n      texPosNVec[1] = pos - yvec;\\n      texPosNVec[2] = pos - zvec;\\n      vec3 g1, g2;\\n\\n      scalarInterp[0].x = getTextureValue(texPosPVec[0])[opacityComponent];\\n      scalarInterp[0].y = getTextureValue(texPosPVec[1])[opacityComponent];\\n      scalarInterp[0].z = getTextureValue(texPosPVec[2])[opacityComponent];\\n      scalarInterp[1].x = getTextureValue(texPosNVec[0])[opacityComponent];\\n      scalarInterp[1].y = getTextureValue(texPosNVec[1])[opacityComponent];\\n      scalarInterp[1].z = getTextureValue(texPosNVec[2])[opacityComponent];\\n\\n      #ifdef vtkClippingPlanesOn\\n        adjustClippedVoxelValues(pos, texPosPVec, scalarInterp[0]);\\n        adjustClippedVoxelValues(pos, texPosNVec, scalarInterp[1]);\\n      #endif\\n      vec4 result;\\n      result.x = scalarInterp[0].x - scalarInterp[1].x;\\n      result.y = scalarInterp[0].y - scalarInterp[1].y;\\n      result.z = scalarInterp[0].z - scalarInterp[1].z;\\n      // divide by spacing\\n      result.xyz /= vSpacing;\\n      result.w = length(result.xyz);\\n      // rotate to View Coords\\n      rotateToViewCoord(result.xyz);\\n      if (length(result.xyz) > 0.0) {\\n        return vec4(normalize(result.xyz),result.w);\\n      } else {\\n        return vec4(0.0);\\n      }\\n    }\\n  #endif\\n\\n  // only works with dependent components\\n  vec4 computeNormal(vec3 pos, vec3 tstep)\\n  {\\n    vec3 xvec = vec3(tstep.x, 0.0, 0.0);\\n    vec3 yvec = vec3(0.0, tstep.y, 0.0);\\n    vec3 zvec = vec3(0.0, 0.0, tstep.z);\\n    vec3 texPosPVec[3];\\n    texPosPVec[0] = pos + xvec;\\n    texPosPVec[1] = pos + yvec;\\n    texPosPVec[2] = pos + zvec;\\n    vec3 texPosNVec[3];\\n    texPosNVec[0] = pos - xvec;\\n    texPosNVec[1] = pos - yvec;\\n    texPosNVec[2] = pos - zvec;\\n    vec3 g1, g2;\\n    g1.x = getTextureValue(texPosPVec[0]).a;\\n    g1.y = getTextureValue(texPosPVec[1]).a;\\n    g1.z = getTextureValue(texPosPVec[2]).a;\\n    g2.x = getTextureValue(texPosNVec[0]).a;\\n    g2.y = getTextureValue(texPosNVec[1]).a;\\n    g2.z = getTextureValue(texPosNVec[2]).a;\\n    #ifdef vtkClippingPlanesOn\\n      adjustClippedVoxelValues(pos, texPosPVec, g1);\\n      adjustClippedVoxelValues(pos, texPosNVec, g2);\\n    #endif\\n    vec4 result;\\n    result = vec4(g1 - g2, -1.0);\\n    // divide by spacing\\n    result.xyz /= vSpacing;\\n    result.w = length(result.xyz);\\n    if (result.w > 0.0){\\n      // rotate to View Coords\\n      rotateToViewCoord(result.xyz);\\n      return vec4(normalize(result.xyz),result.w);\\n    } else {\\n      return vec4(0.0);\\n    }\\n  }\\n#endif\\n\\n\\n#ifdef vtkImageLabelOutlineOn\\n  vec4 fragCoordToPCPos(vec4 fragCoord) {\\n    return vec4(\\n      (fragCoord.x / vpWidth - vpOffsetX - 0.5) * 2.0,\\n      (fragCoord.y / vpHeight - vpOffsetY - 0.5) * 2.0,\\n      (fragCoord.z - 0.5) * 2.0,\\n      1.0);\\n  }\\n\\n  vec4 pcPosToWorldCoord(vec4 pcPos) {\\n    return PCWCMatrix * pcPos;\\n  }\\n\\n  vec3 fragCoordToIndexSpace(vec4 fragCoord) {\\n    vec4 pcPos = fragCoordToPCPos(fragCoord);\\n    vec4 worldCoord = pcPosToWorldCoord(pcPos);\\n    vec4 vertex = (worldCoord / worldCoord.w);\\n\\n    vec3 index = (vWCtoIDX * vertex).xyz;\\n\\n    // half voxel fix for labelmapOutline\\n    return (index + vec3(0.5)) / vec3(volumeDimensions);\\n  }\\n\\n  vec3 fragCoordToWorld(vec4 fragCoord) {\\n    vec4 pcPos = fragCoordToPCPos(fragCoord);\\n    vec4 worldCoord = pcPosToWorldCoord(pcPos);\\n    return worldCoord.xyz;\\n  }\\n#endif\\n\\n//=======================================================================\\n// compute the normals and gradient magnitudes for a position\\n// for independent components\\nmat4 computeMat4Normal(vec3 pos, vec4 tValue, vec3 tstep)\\n{\\n  mat4 result;\\n  vec4 distX = getTextureValue(pos + vec3(tstep.x, 0.0, 0.0)) - tValue;\\n  vec4 distY = getTextureValue(pos + vec3(0.0, tstep.y, 0.0)) - tValue;\\n  vec4 distZ = getTextureValue(pos + vec3(0.0, 0.0, tstep.z)) - tValue;\\n\\n  // divide by spacing\\n  distX /= vSpacing.x;\\n  distY /= vSpacing.y;\\n  distZ /= vSpacing.z;\\n\\n  mat3 rot;\\n  rot[0] = vPlaneNormal0;\\n  rot[1] = vPlaneNormal2;\\n  rot[2] = vPlaneNormal4;\\n\\n#if !defined(vtkComponent0Proportional)\\n  result[0].xyz = vec3(distX.r, distY.r, distZ.r);\\n  result[0].a = length(result[0].xyz);\\n  result[0].xyz *= rot;\\n  if (result[0].w > 0.0)\\n  {\\n    result[0].xyz /= result[0].w;\\n  }\\n#endif\\n\\n// optionally compute the 2nd component\\n#if vtkNumComponents >= 2 && !defined(vtkComponent1Proportional)\\n  result[1].xyz = vec3(distX.g, distY.g, distZ.g);\\n  result[1].a = length(result[1].xyz);\\n  result[1].xyz *= rot;\\n  if (result[1].w > 0.0)\\n  {\\n    result[1].xyz /= result[1].w;\\n  }\\n#endif\\n\\n// optionally compute the 3rd component\\n#if vtkNumComponents >= 3 && !defined(vtkComponent2Proportional)\\n  result[2].xyz = vec3(distX.b, distY.b, distZ.b);\\n  result[2].a = length(result[2].xyz);\\n  result[2].xyz *= rot;\\n  if (result[2].w > 0.0)\\n  {\\n    result[2].xyz /= result[2].w;\\n  }\\n#endif\\n\\n// optionally compute the 4th component\\n#if vtkNumComponents >= 4 && !defined(vtkComponent3Proportional)\\n  result[3].xyz = vec3(distX.a, distY.a, distZ.a);\\n  result[3].a = length(result[3].xyz);\\n  result[3].xyz *= rot;\\n  if (result[3].w > 0.0)\\n  {\\n    result[3].xyz /= result[3].w;\\n  }\\n#endif\\n\\n  return result;\\n}\\n\\n//=======================================================================\\n// global shadow - secondary ray\\n#if defined(VolumeShadowOn) || defined(localAmbientOcclusionOn)\\nfloat random()\\n{\\n  float rand = fract(sin(dot(gl_FragCoord.xy,vec2(12.9898,78.233)))*43758.5453123);\\n  float jitter=texture2D(jtexture,gl_FragCoord.xy/32.).r;\\n  uint pcg_state = floatBitsToUint(jitter);\\n  uint state = pcg_state;\\n  pcg_state = pcg_state * uint(747796405) + uint(2891336453);\\n  uint word = ((state >> ((state >> uint(28)) + uint(4))) ^ state) * uint(277803737);\\n  return (float((((word >> uint(22)) ^ word) >> 1 ))/float(2147483647) + rand)/2.0;\\n}\\n#endif\\n\\n#ifdef VolumeShadowOn\\n// henyey greenstein phase function\\nfloat phase_function(float cos_angle)\\n{\\n  // divide by 2.0 instead of 4pi to increase intensity\\n  return ((1.0-anisotropy2)/pow(1.0+anisotropy2-2.0*anisotropy*cos_angle, 1.5))/2.0;\\n}\\n\\n// Computes the intersection between a ray and a box\\nstruct Hit\\n{\\n  float tmin;\\n  float tmax;\\n};\\n\\nstruct Ray\\n{\\n  vec3 origin;\\n  vec3 dir;\\n  vec3 invDir;\\n};\\n\\nbool BBoxIntersect(vec3 boundMin, vec3 boundMax, const Ray r, out Hit hit)\\n{\\n  vec3 tbot = r.invDir * (boundMin - r.origin);\\n  vec3 ttop = r.invDir * (boundMax - r.origin);\\n  vec3 tmin = min(ttop, tbot);\\n  vec3 tmax = max(ttop, tbot);\\n  vec2 t = max(tmin.xx, tmin.yz);\\n  float t0 = max(t.x, t.y);\\n  t = min(tmax.xx, tmax.yz);\\n  float t1 = min(t.x, t.y);\\n  hit.tmin = t0;\\n  hit.tmax = t1;\\n  return t1 > max(t0,0.0);\\n}\\n\\n// As BBoxIntersect requires the inverse of the ray coords,\\n// this function is used to avoid numerical issues\\nvoid safe_0_vector(inout Ray ray)\\n{\\n  if(abs(ray.dir.x) < EPSILON) ray.dir.x = sign(ray.dir.x) * EPSILON;\\n  if(abs(ray.dir.y) < EPSILON) ray.dir.y = sign(ray.dir.y) * EPSILON;\\n  if(abs(ray.dir.z) < EPSILON) ray.dir.z = sign(ray.dir.z) * EPSILON;\\n}\\n\\nfloat volume_shadow(vec3 posIS, vec3 lightDirNormIS)\\n{\\n  float shadow = 1.0;\\n  float opacity = 0.0;\\n\\n  // modify sample distance with a random number between 1.5 and 3.0\\n  float sampleDistanceISVS_jitter = sampleDistanceISVS * mix(1.5, 3.0, random());\\n  float opacityPrev = texture2D(otexture, vec2(getTextureValue(posIS).r * oscale0 + oshift0, 0.5)).r;\\n\\n  // in case the first sample near surface has a very tiled light ray, we need to offset start position\\n  posIS += sampleDistanceISVS_jitter * lightDirNormIS;\\n\\n  // compute the start and end points for the ray\\n  Ray ray;\\n  Hit hit;\\n  ray.origin = posIS;\\n  ray.dir = lightDirNormIS;\\n  safe_0_vector(ray);\\n  ray.invDir = 1.0/ray.dir;\\n\\n  if(!BBoxIntersect(vec3(0.0),vec3(1.0), ray, hit))\\n  {\\n    return 1.0;\\n  }\\n  float maxdist = hit.tmax;\\n\\n  // interpolate shadow ray length between: 1 unit of sample distance in IS to SQRT3, based on globalIlluminationReach\\n  float maxgi = mix(sampleDistanceISVS_jitter,SQRT3,giReach);\\n  maxdist = min(maxdist,maxgi);\\n  if(maxdist < EPSILON) {\\n    return 1.0;\\n  }\\n\\n  float current_dist = 0.0;\\n  float current_step = length(sampleDistanceISVS_jitter * lightDirNormIS);\\n  float clamped_step = 0.0;\\n\\n  vec4 scalar = vec4(0.0);\\n  while(current_dist < maxdist)\\n  {\\n#ifdef vtkClippingPlanesOn\\n    vec3 posVC = IStoVC(posIS);\\n    for (int i = 0; i < clip_numPlanes; ++i)\\n    {\\n      if (dot(vec3(vClipPlaneOrigins[i] - posVC), vClipPlaneNormals[i]) > 0.0)\\n      {\\n        current_dist = maxdist;\\n      }\\n    }\\n#endif\\n    scalar = getTextureValue(posIS);\\n    opacity = texture2D(otexture, vec2(scalar.r * oscale0 + oshift0, 0.5)).r;\\n    #if defined(vtkGradientOpacityOn) && !defined(UseIndependentComponents)\\n      vec4 normal = computeNormal(posIS, vec3(1.0/vec3(volumeDimensions)));\\n      opacity *= computeGradientOpacityFactor(normal.w, goscale0, goshift0, gomin0, gomax0);\\n    #endif\\n    shadow *= 1.0 - opacity;\\n\\n    // optimization: early termination\\n    if (shadow < EPSILON){\\n      return 0.0;\\n    }\\n\\n    clamped_step = min(maxdist - current_dist, current_step);\\n    posIS += clamped_step * lightDirNormIS;\\n    current_dist += current_step;\\n  }\\n\\n  return shadow;\\n}\\n\\nvec3 applyShadowRay(vec3 tColor, vec3 posIS, vec3 viewDirectionVC)\\n{\\n  vec3 vertLight = vec3(0.0);\\n  vec3 secondary_contrib = vec3(0.0);\\n  // here we assume only positional light, no effect of cones\\n  for (int i = 0; i < lightNum; i++)\\n  {\\n    #if(vtkLightComplexity==3)\\n      if (lightPositional[i] == 1){\\n        vertLight = lightPositionVC[i] - IStoVC(posIS);\\n      }else{\\n        vertLight = - lightDirectionVC[i];\\n      }\\n    #else\\n      vertLight = - lightDirectionVC[i];\\n    #endif\\n    // here we assume achromatic light, only intensity\\n    float dDotL = dot(viewDirectionVC, normalize(vertLight));\\n    // isotropic scatter returns 0.5 instead of 1/4pi to increase intensity\\n    float phase_attenuation = 0.5;\\n    if (abs(anisotropy) > EPSILON){\\n      phase_attenuation = phase_function(dDotL);\\n    }\\n    float vol_shadow = volume_shadow(posIS, normalize(rotateToIDX(vertLight)));\\n    secondary_contrib += tColor * vDiffuse * lightColor[i] * vol_shadow * phase_attenuation;\\n    secondary_contrib += tColor * vAmbient;\\n  }\\n  return secondary_contrib;\\n}\\n#endif\\n\\n//=======================================================================\\n// local ambient occlusion\\n#ifdef localAmbientOcclusionOn\\nvec3 sample_direction_uniform(int i)\\n{\\n  float rand = random() * 0.5;\\n  float theta = PI2 * (kernelSample[i][0] + rand);\\n  float phi = acos(2.0 * (kernelSample[i][1] + rand) -1.0) / 2.5;\\n  return normalize(vec3(cos(theta)*sin(phi), sin(theta)*sin(phi), cos(phi)));\\n}\\n\\n// return a matrix that transform startDir into z axis; startDir should be normalized\\nmat3 zBaseRotationalMatrix(vec3 startDir){\\n  vec3 axis = cross(startDir, vec3(0.0,0.0,1.0));\\n  float cosA = startDir.z;\\n  float k = 1.0 / (1.0 + cosA);\\n  mat3 matrix = mat3((axis.x * axis.x * k) + cosA, (axis.y * axis.x * k) - axis.z, (axis.z * axis.x * k) + axis.y,\\n              (axis.x * axis.y * k) + axis.z, (axis.y * axis.y * k) + cosA, (axis.z * axis.y * k) - axis.x,\\n              (axis.x * axis.z * k) - axis.y, (axis.y * axis.z * k) + axis.x, (axis.z * axis.z * k) + cosA);\\n  return matrix;\\n}\\n\\nfloat computeLAO(vec3 posIS, float op, vec3 lightDir, vec4 normal){\\n  // apply LAO only at selected locations, otherwise return full brightness\\n  if (normal.w > 0.0 && op > 0.05){\\n    float total_transmittance = 0.0;\\n    mat3 inverseRotateBasis = inverse(zBaseRotationalMatrix(normalize(-normal.xyz)));\\n    vec3 currPos, randomDirStep;\\n    float weight, transmittance, opacity;\\n    for (int i = 0; i < kernelSize; i++)\\n    {\\n      randomDirStep = inverseRotateBasis * sample_direction_uniform(i) * sampleDistanceIS;\\n      weight = 1.0 - dot(normalize(lightDir), normalize(randomDirStep));\\n      currPos = posIS;\\n      transmittance = 1.0;\\n      for (int j = 0; j < kernelRadius ; j++){\\n        currPos += randomDirStep;\\n        // check if it's at clipping plane, if so return full brightness\\n        if (all(greaterThan(currPos, vec3(EPSILON))) && all(lessThan(currPos,vec3(1.0-EPSILON)))){\\n          opacity = texture2D(otexture, vec2(getTextureValue(currPos).r * oscale0 + oshift0, 0.5)).r;\\n          #ifdef vtkGradientOpacityOn\\n             opacity *= computeGradientOpacityFactor(normal.w, goscale0, goshift0, gomin0, gomax0);\\n          #endif\\n          transmittance *= 1.0 - opacity;\\n        }\\n        else{\\n          break;\\n        }\\n      }\\n      total_transmittance += transmittance / float(kernelRadius) * weight;\\n\\n      // early termination if fully translucent\\n      if (total_transmittance > 1.0 - EPSILON){\\n        return 1.0;\\n      }\\n    }\\n    // average transmittance and reduce variance\\n    return clamp(total_transmittance / float(kernelSize), 0.3, 1.0);\\n  } else {\\n    return 1.0;\\n  }\\n}\\n#endif\\n\\n//=======================================================================\\n// surface light contribution\\n#if vtkLightComplexity > 0\\n  void applyLighting(inout vec3 tColor, vec4 normal)\\n  {\\n    vec3 diffuse = vec3(0.0, 0.0, 0.0);\\n    vec3 specular = vec3(0.0, 0.0, 0.0);\\n    float df, sf = 0.0;\\n    for (int i = 0; i < lightNum; i++){\\n        df = abs(dot(normal.rgb, -lightDirectionVC[i]));\\n        diffuse += df * lightColor[i];\\n        sf = pow( abs(dot(lightHalfAngleVC[i],normal.rgb)), vSpecularPower);\\n        specular += sf * lightColor[i];\\n    }\\n    tColor.rgb = tColor.rgb*(diffuse*vDiffuse + vAmbient) + specular*vSpecular;\\n  }\\n  #ifdef SurfaceShadowOn\\n  #if vtkLightComplexity < 3\\n    vec3 applyLightingDirectional(vec3 posIS, vec4 tColor, vec4 normal)\\n    {\\n      // everything in VC\\n      vec3 diffuse = vec3(0.0);\\n      vec3 specular = vec3(0.0);\\n      #ifdef localAmbientOcclusionOn\\n        vec3 ambient = vec3(0.0);\\n      #endif\\n      vec3 vertLightDirection;\\n      for (int i = 0; i < lightNum; i++){\\n        float ndotL,vdotR;\\n        vertLightDirection = lightDirectionVC[i];\\n        ndotL = dot(normal.xyz, vertLightDirection);\\n        if (ndotL < 0.0 && twoSidedLighting)\\n        {\\n          ndotL = -ndotL;\\n        }\\n        if (ndotL > 0.0)\\n        {\\n          diffuse += ndotL * lightColor[i];\\n          //specular\\n          vdotR = dot(-rayDirVC, normalize(2.0 * ndotL * -normal.xyz + vertLightDirection));\\n          if (vdotR > 0.0)\\n          {\\n            specular += pow(vdotR, vSpecularPower) * lightColor[i];\\n          }\\n        }\\n        #ifdef localAmbientOcclusionOn\\n            ambient += computeLAO(posIS, tColor.a, vertLightDirection, normal);\\n        #endif\\n      }\\n      #ifdef localAmbientOcclusionOn\\n        return tColor.rgb * (diffuse * vDiffuse + vAmbient * ambient) + specular*vSpecular;\\n      #else\\n        return tColor.rgb * (diffuse * vDiffuse + vAmbient) + specular*vSpecular;\\n      #endif\\n    }\\n  #else\\n    vec3 applyLightingPositional(vec3 posIS, vec4 tColor, vec4 normal, vec3 posVC)\\n    {\\n      // everything in VC\\n      vec3 diffuse = vec3(0.0);\\n      vec3 specular = vec3(0.0);\\n      #ifdef localAmbientOcclusionOn\\n        vec3 ambient = vec3(0.0);\\n      #endif\\n      vec3 vertLightDirection;\\n      for (int i = 0; i < lightNum; i++){\\n        float distance,attenuation,ndotL,vdotR;\\n        vec3 lightDir;\\n        if (lightPositional[i] == 1){\\n          lightDir = lightDirectionVC[i];\\n          vertLightDirection = posVC - lightPositionVC[i];\\n          distance = length(vertLightDirection);\\n          vertLightDirection = normalize(vertLightDirection);\\n          attenuation = 1.0 / (lightAttenuation[i].x\\n                              + lightAttenuation[i].y * distance\\n                              + lightAttenuation[i].z * distance * distance);\\n          // per OpenGL standard cone angle is 90 or less for a spot light\\n          if (lightConeAngle[i] <= 90.0){\\n            float coneDot = dot(vertLightDirection, lightDir);\\n            if (coneDot >= cos(radians(lightConeAngle[i]))){  // if inside cone\\n              attenuation = attenuation * pow(coneDot, lightExponent[i]);\\n            }\\n            else {\\n              attenuation = 0.0;\\n            }\\n          }\\n          ndotL = dot(normal.xyz, vertLightDirection);\\n          if (ndotL < 0.0 && twoSidedLighting)\\n          {\\n            ndotL = -ndotL;\\n          }\\n          if (ndotL > 0.0)\\n          {\\n            diffuse += ndotL * attenuation * lightColor[i];\\n            //specular\\n            vdotR = dot(-rayDirVC, normalize(2.0 * ndotL * -normal.xyz + vertLightDirection));\\n            if (vdotR > 0.0)\\n            {\\n              specular += pow(vdotR, vSpecularPower) * attenuation * lightColor[i];\\n            }\\n          }\\n          #ifdef localAmbientOcclusionOn\\n            ambient += computeLAO(posIS, tColor.a, vertLightDirection, normal);\\n          #endif\\n        } else {\\n          vertLightDirection = lightDirectionVC[i];\\n          ndotL = dot(normal.xyz, vertLightDirection);\\n          if (ndotL < 0.0 && twoSidedLighting)\\n          {\\n            ndotL = -ndotL;\\n          }\\n          if (ndotL > 0.0)\\n          {\\n            diffuse += ndotL * lightColor[i];\\n            //specular\\n            vdotR = dot(-rayDirVC, normalize(2.0 * ndotL * -normal.xyz + vertLightDirection));\\n            if (vdotR > 0.0)\\n            {\\n              specular += pow(vdotR, vSpecularPower) * lightColor[i];\\n            }\\n          }\\n          #ifdef localAmbientOcclusionOn\\n            ambient += computeLAO(posIS, tColor.a, vertLightDirection, normal);\\n          #endif\\n        }\\n      }\\n      #ifdef localAmbientOcclusionOn\\n        return tColor.rgb * (diffuse * vDiffuse + vAmbient * ambient) + specular*vSpecular;\\n      #else\\n        return tColor.rgb * (diffuse * vDiffuse + vAmbient) + specular*vSpecular;\\n      #endif\\n    }\\n  #endif\\n  #endif\\n#endif\\n\\n// LAO of surface shadows and volume shadows only work with dependent components\\nvec3 applyAllLightning(vec3 tColor, float alpha, vec3 posIS, vec4 normalLight) {\\n  #if vtkLightComplexity > 0\\n    // surface shadows if needed\\n    #ifdef SurfaceShadowOn\\n      #if vtkLightComplexity < 3\\n        vec3 tColorS = applyLightingDirectional(posIS, vec4(tColor, alpha), normalLight);\\n      #else\\n        vec3 tColorS = applyLightingPositional(posIS, vec4(tColor, alpha), normalLight, IStoVC(posIS));\\n      #endif\\n    #endif\\n\\n    // volume shadows if needed\\n    #ifdef VolumeShadowOn\\n      vec3 tColorVS = applyShadowRay(tColor, posIS, rayDirVC);\\n    #endif\\n\\n    // merge\\n    #ifdef VolumeShadowOn\\n      #ifdef SurfaceShadowOn\\n        // surface shadows + volumetric shadows\\n        float vol_coef = volumetricScatteringBlending * (1.0 - alpha / 2.0) * (1.0 - atan(normalLight.w) * INV4PI);\\n        tColor = (1.0-vol_coef) * tColorS + vol_coef * tColorVS;\\n      #else\\n        // volumetric shadows only\\n        tColor = tColorVS;\\n      #endif\\n    #else\\n      #ifdef SurfaceShadowOn\\n        // surface shadows only\\n        tColor = tColorS;\\n      #else\\n        // no shadows\\n        applyLighting(tColor, normal3);\\n      #endif\\n    #endif\\n  #endif\\n  return tColor;\\n}\\n\\n  \\nvec4 getColorForValue(vec4 tValue, vec3 posIS, vec3 tstep)\\n{\\n\\n// If labeloutline and not the edge labelmap, since in the edge labelmap blend\\n// we need the underlying data to sample through\\n#if defined(vtkImageLabelOutlineOn) && !defined(vtkLabelEdgeProjectionOn)\\n  vec3 centerPosIS = fragCoordToIndexSpace(gl_FragCoord); // pos in texture space\\n  vec4 centerValue = getTextureValue(centerPosIS);\\n  bool pixelOnBorder = false;\\n  vec4 tColor = texture2D(ctexture, vec2(centerValue.r * cscale0 + cshift0, 0.5));\\n\\n  // Get alpha of segment from opacity function.\\n  tColor.a = texture2D(otexture, vec2(centerValue.r * oscale0 + oshift0, 0.5)).r;\\n\\n  int segmentIndex = int(centerValue.r * 255.0);\\n  \\n  // Use texture sampling for outlineThickness\\n  float textureCoordinate = float(segmentIndex - 1) / 1024.0;\\n  float textureValue = texture2D(ttexture, vec2(textureCoordinate, 0.5)).r;\\n\\n  int actualThickness = int(textureValue * 255.0);\\n\\n\\n  // If it is the background (segment index 0), we should quickly bail out. \\n  // Previously, this was determined by tColor.a, which was incorrect as it\\n  // prevented the outline from appearing when the fill is 0.\\n  if (segmentIndex == 0){\\n    return vec4(0, 0, 0, 0);\\n  }\\n\\n  // Only perform outline check on fragments rendering voxels that aren't invisible.\\n  // Saves a bunch of needless checks on the background.\\n  // TODO define epsilon when building shader?\\n  for (int i = -actualThickness; i <= actualThickness; i++) {\\n    for (int j = -actualThickness; j <= actualThickness; j++) {\\n      if (i == 0 || j == 0) {\\n        continue;\\n      }\\n\\n      vec4 neighborPixelCoord = vec4(gl_FragCoord.x + float(i),\\n        gl_FragCoord.y + float(j),\\n        gl_FragCoord.z, gl_FragCoord.w);\\n\\n      vec3 neighborPosIS = fragCoordToIndexSpace(neighborPixelCoord);\\n      vec4 value = getTextureValue(neighborPosIS);\\n\\n      // If any of my neighbours are not the same value as I\\n      // am, this means I am on the border of the segment.\\n      // We can break the loops\\n      if (any(notEqual(value, centerValue))) {\\n        pixelOnBorder = true;\\n        break;\\n      }\\n    }\\n\\n    if (pixelOnBorder == true) {\\n      break;\\n    }\\n  }\\n\\n  // If I am on the border, I am displayed at full opacity\\n  if (pixelOnBorder == true) {\\n    tColor.a = outlineOpacity;\\n  }\\n\\n  return tColor;\\n\\n#else\\n  // compute the normal and gradient magnitude if needed\\n  // We compute it as a vec4 if possible otherwise a mat4\\n\\n  #ifdef UseIndependentComponents\\n\\n    // sample textures\\n    vec3 tColor0 = texture2D(ctexture, vec2(tValue.r * cscale0 + cshift0, height0)).rgb;\\n    float pwfValue0 = texture2D(otexture, vec2(tValue.r * oscale0 + oshift0, height0)).r;\\n\\n    #if vtkNumComponents > 1\\n      vec3 tColor1 = texture2D(ctexture, vec2(tValue.g * cscale1 + cshift1, height1)).rgb;\\n      float pwfValue1 = texture2D(otexture, vec2(tValue.g * oscale1 + oshift1, height1)).r;\\n\\n      #if vtkNumComponents > 2\\n        vec3 tColor2 = texture2D(ctexture, vec2(tValue.b * cscale2 + cshift2, height2)).rgb;\\n        float pwfValue2 = texture2D(otexture, vec2(tValue.b * oscale2 + oshift2, height2)).r;\\n\\n        #if vtkNumComponents > 3\\n          vec3 tColor3 = texture2D(ctexture, vec2(tValue.a * cscale3 + cshift3, height3)).rgb;\\n          float pwfValue3 = texture2D(otexture, vec2(tValue.a * oscale3 + oshift3, height3)).r;\\n        #endif\\n      #endif\\n    #endif\\n\\n    #if !defined(vtkCustomComponentsColorMix)\\n      // default path for component color mix\\n\\n      // compute the normal vectors as needed\\n      #if (vtkLightComplexity > 0) || defined(vtkGradientOpacityOn)\\n        mat4 normalMat = computeMat4Normal(posIS, tValue, tstep);\\n      #endif\\n\\n      // compute gradient opacity factors as needed\\n      vec4 goFactor = vec4(1.0, 1.0 ,1.0 ,1.0);\\n      #if defined(vtkGradientOpacityOn)\\n        #if !defined(vtkComponent0Proportional)\\n          goFactor.x =\\n            computeGradientOpacityFactor(normalMat[0].a, goscale0, goshift0, gomin0, gomax0);\\n        #endif\\n        #if vtkNumComponents > 1\\n          #if !defined(vtkComponent1Proportional)\\n            goFactor.y =\\n              computeGradientOpacityFactor(normalMat[1].a, goscale1, goshift1, gomin1, gomax1);\\n          #endif\\n          #if vtkNumComponents > 2\\n            #if !defined(vtkComponent2Proportional)\\n              goFactor.z =\\n                computeGradientOpacityFactor(normalMat[2].a, goscale2, goshift2, gomin2, gomax2);\\n            #endif\\n            #if vtkNumComponents > 3\\n              #if !defined(vtkComponent3Proportional)\\n                goFactor.w =\\n                  computeGradientOpacityFactor(normalMat[3].a, goscale3, goshift3, gomin3, gomax3);\\n              #endif\\n            #endif\\n          #endif\\n        #endif\\n      #endif\\n\\n      // process color and opacity for each component\\n      #if !defined(vtkComponent0Proportional)\\n        float alpha = goFactor.x*mix0*pwfValue0;\\n        #if vtkLightComplexity > 0\\n          applyLighting(tColor0, normalMat[0]);\\n        #endif\\n      #else\\n        tColor0 *= pwfValue0;\\n        float alpha = mix(pwfValue0, 1.0, (1.0 - mix0));\\n      #endif\\n\\n      #if vtkNumComponents > 1\\n        #if !defined(vtkComponent1Proportional)\\n          alpha += goFactor.y*mix1*pwfValue1;\\n          #if vtkLightComplexity > 0\\n            applyLighting(tColor1, normalMat[1]);\\n          #endif\\n        #else\\n          tColor1 *= pwfValue1;\\n          alpha *= mix(pwfValue1, 1.0, (1.0 - mix1));\\n        #endif\\n\\n        #if vtkNumComponents > 2\\n          #if !defined(vtkComponent2Proportional)\\n            alpha += goFactor.z*mix2*pwfValue2;\\n            #if vtkLightComplexity > 0\\n              applyLighting(tColor2, normalMat[2]);\\n            #endif\\n          #else\\n            tColor2 *= pwfValue2;\\n            alpha *= mix(pwfValue2, 1.0, (1.0 - mix2));\\n          #endif\\n        #endif\\n\\n        #if vtkNumComponents > 3\\n          #if !defined(vtkComponent3Proportional)\\n            alpha += goFactor.w*mix3*pwfValue3;\\n            #if vtkLightComplexity > 0\\n              applyLighting(tColor3, normalMat[3]);\\n            #endif\\n          #else\\n            tColor3 *= pwfValue3;\\n            alpha *= mix(pwfValue3, 1.0, (1.0 - mix3));\\n          #endif\\n        #endif\\n      #endif\\n\\n      // perform final independent blend\\n      vec3 tColor = mix0 * tColor0;\\n      #if vtkNumComponents > 1\\n        tColor += mix1 * tColor1;\\n        #if vtkNumComponents > 2\\n          tColor += mix2 * tColor2;\\n          #if vtkNumComponents > 3\\n            tColor += mix3 * tColor3;\\n          #endif\\n        #endif\\n      #endif\\n\\n      return vec4(tColor, alpha);\\n    #else\\n      /*\\n       * Mix the color information from all the independent components to get a single rgba output\\n       * Gradient opactity factors and normals are not computed\\n       *\\n       * You can compute these using:\\n       * - computeMat4Normal: always available, compute normal only for non proportional components, used by default independent component mix\\n       * - computeDensityNormal & computeNormalForDensity: available if ((LightComplexity > 0) || GradientOpacityOn) && ComputeNormalFromOpacity),\\n       *                                                   used by dependent component color mix, see code for Additive preset in OpenGl/VolumeMapper\\n       * - computeGradientOpacityFactor: always available, used in a lot of places\\n       *\\n       * Using applyAllLightning() is advised for shading but some features don't work well with it (volume shadows, LAO)\\n       * mix0, mix1, ... are defined for each component that is used and correspond to the componentWeight\\n       */\\n      //VTK::CustomComponentsColorMix::Impl\\n    #endif\\n  #else\\n    // dependent components\\n\\n    // compute normal if needed\\n    #if (vtkLightComplexity > 0) || defined(vtkGradientOpacityOn)\\n      // use component 3 of the opacity texture as getTextureValue() sets alpha to the opacity value\\n      #ifdef vtkComputeNormalFromOpacity\\n        vec3 scalarInterp[2];\\n        vec4 normal0 = computeNormalForDensity(posIS, tstep, scalarInterp, 3);\\n      #else\\n        vec4 normal0 = computeNormal(posIS, tstep);\\n      #endif\\n    #endif\\n\\n    // compute gradient opacity factor enabled\\n    #if defined(vtkGradientOpacityOn)\\n      float gradientOpacity = computeGradientOpacityFactor(normal0.a, goscale0, goshift0, gomin0, gomax0);\\n    #else\\n      const float gradientOpacity = 1.0;\\n    #endif\\n\\n    // get color and opacity\\n    #if vtkNumComponents == 1\\n      vec3 tColor = texture2D(ctexture, vec2(tValue.r * cscale0 + cshift0, 0.5)).rgb;\\n      float alpha = gradientOpacity*texture2D(otexture, vec2(tValue.r * oscale0 + oshift0, 0.5)).r;\\n      if (alpha < EPSILON){\\n        return vec4(0.0);\\n      }\\n    #endif\\n    #if vtkNumComponents == 2\\n      vec3 tColor = vec3(tValue.r * cscale0 + cshift0);\\n      float alpha = gradientOpacity*texture2D(otexture, vec2(tValue.a * oscale1 + oshift1, 0.5)).r;\\n    #endif\\n    #if vtkNumComponents == 3\\n      vec3 tColor;\\n      tColor.r = tValue.r * cscale0 + cshift0;\\n      tColor.g = tValue.g * cscale1 + cshift1;\\n      tColor.b = tValue.b * cscale2 + cshift2;\\n      float alpha = gradientOpacity*texture2D(otexture, vec2(tValue.a * oscale0 + oshift0, 0.5)).r;\\n    #endif\\n    #if vtkNumComponents == 4\\n      vec3 tColor;\\n      tColor.r = tValue.r * cscale0 + cshift0;\\n      tColor.g = tValue.g * cscale1 + cshift1;\\n      tColor.b = tValue.b * cscale2 + cshift2;\\n      float alpha = gradientOpacity*texture2D(otexture, vec2(tValue.a * oscale3 + oshift3, 0.5)).r;\\n    #endif\\n\\n    // lighting\\n    #if (vtkLightComplexity > 0)\\n      #ifdef vtkComputeNormalFromOpacity\\n        vec4 normalLight;\\n        if (!all(equal(normal0, vec4(0.0)))) {\\n          scalarInterp[0] = scalarInterp[0] * oscale0 + oshift0;\\n          scalarInterp[1] = scalarInterp[1] * oscale0 + oshift0;\\n          normalLight = computeDensityNormal(scalarInterp, 0.5, gradientOpacity);\\n          if (all(equal(normalLight, vec4(0.0)))) {\\n            normalLight = normal0;\\n          }\\n        }\\n      #else\\n        vec4 normalLight = normal0;\\n      #endif\\n      tColor = applyAllLightning(tColor, alpha, posIS, normalLight);\\n    #endif\\n\\n    return vec4(tColor, alpha);\\n  #endif // dependent\\n#endif\\n}\\n\\nbool valueWithinScalarRange(vec4 val, vec4 min, vec4 max) {\\n  bool withinRange = false;\\n  #if vtkNumComponents == 1\\n    if (val.r >= min.r && val.r <= max.r) {\\n      withinRange = true;\\n    }\\n  #else\\n    #ifdef UseIndependentComponents\\n      #if vtkNumComponents == 2\\n        if (val.r >= min.r && val.r <= max.r &&\\n            val.g >= min.g && val.g <= max.g) {\\n          withinRange = true;\\n        }\\n      #else\\n        if (all(greaterThanEqual(val, ipScalarRangeMin)) &&\\n            all(lessThanEqual(val, ipScalarRangeMax))) {\\n          withinRange = true;\\n        }\\n      #endif\\n    #endif\\n  #endif\\n  return withinRange;\\n}\\n\\n#if vtkBlendMode == 6 \\nbool checkOnEdgeForNeighbor(int i, int j, int s, vec3 stepIS) {\\n    vec4 neighborPixelCoord = vec4(gl_FragCoord.x + float(i), gl_FragCoord.y + float(j), gl_FragCoord.z, gl_FragCoord.w);\\n    vec3 originalNeighborPosIS = fragCoordToIndexSpace(neighborPixelCoord);\\n\\n    bool justSawIt = false;\\n\\n    vec3 neighborPosIS = originalNeighborPosIS;\\n\\n    float stepsTraveled = 0.0;\\n\\n\\n    // float neighborValue;\\n    for (int k = 0; k < //VTK::MaximumSamplesValue /2 ; ++k) {\\n        ivec3 texCoord = ivec3(neighborPosIS * vec3(volumeDimensions));\\n        vec4 texValue = texelFetch(texture1, texCoord, 0);\\n\\n        if (int(texValue.g) == s) {\\n            justSawIt = true;\\n            break;\\n        }\\n        neighborPosIS += stepIS;\\n    }\\n\\n    if (justSawIt){\\n      return false;\\n    }\\n\\n   \\n    neighborPosIS = originalNeighborPosIS;\\n    for (int k = 0; k < //VTK::MaximumSamplesValue /2 ; ++k) {\\n        ivec3 texCoord = ivec3(neighborPosIS * vec3(volumeDimensions));\\n        vec4 texValue = texelFetch(texture1, texCoord, 0);\\n\\n        if (int(texValue.g) == s) {\\n            justSawIt = true;\\n            break;\\n        }\\n        neighborPosIS -= stepIS;\\n    }\\n\\n\\n    if (!justSawIt) {\\n        // onedge\\n        vec3 tColorSegment = texture2D(ctexture, vec2(float(s) * cscale1 + cshift1, height1)).rgb;\\n        float pwfValueSegment = texture2D(otexture, vec2(float(s) * oscale1 + oshift1, height1)).r;\\n        gl_FragData[0] = vec4(tColorSegment, pwfValueSegment);\\n        return true;\\n    }\\n\\n    // not on edge\\n    return false;\\n}\\n\\n#endif\\n\\n\\n//=======================================================================\\n// Apply the specified blend mode operation along the ray's path.\\n//\\nvoid applyBlend(vec3 posIS, vec3 endIS, vec3 tdims)\\n{\\n  vec3 tstep = 1.0/tdims;\\n\\n  // start slightly inside and apply some jitter\\n  vec3 delta = endIS - posIS;\\n  vec3 stepIS = normalize(delta)*sampleDistanceIS;\\n  float raySteps = length(delta)/sampleDistanceIS;\\n\\n  // Initialize arrays to false\\n  // avoid 0.0 jitter\\n  float jitter = 0.01 + 0.99*texture2D(jtexture, gl_FragCoord.xy/32.0).r;\\n  float stepsTraveled = jitter;\\n\\n  // local vars for the loop\\n  vec4 color = vec4(0.0, 0.0, 0.0, 0.0);\\n  vec4 tValue;\\n  vec4 tColor;\\n\\n  // if we have less than one step then pick the middle point\\n  // as our value\\n  // if (raySteps <= 1.0)\\n  // {\\n  //   posIS = (posIS + endIS)*0.5;\\n  // }\\n\\n  // Perform initial step at the volume boundary\\n  // compute the scalar\\n  tValue = getTextureValue(posIS);\\n  \\n  #if vtkBlendMode == 6 \\n    if (raySteps <= 1.0)\\n    {\\n      gl_FragData[0] = getColorForValue(tValue, posIS, tstep);\\n      return;\\n    }\\n\\n    vec4 value = tValue;\\n    posIS += (jitter*stepIS);\\n    vec3 maxPosIS = posIS; // Store the position of the max value\\n    int segmentIndex = int(value.g);\\n    bool originalPosHasSeenNonZero = false;\\n\\n    uint bitmask = 0u;\\n\\n    if (segmentIndex != 0) {\\n      // Tried using the segment index in an boolean array but reading \\n      // from the array by dynamic indexing was horrondously slow\\n      // so use bit masking instead and assign 1 to the bit corresponding to the segment index\\n      // and later check if the bit is set via bit operations\\n      setBit(segmentIndex);\\n    }\\n    \\n    // Sample along the ray until MaximumSamplesValue,\\n    // ending slightly inside the total distance\\n    for (int i = 0; i < //VTK::MaximumSamplesValue ; ++i)\\n    {\\n      // If we have reached the last step, break\\n      if (stepsTraveled + 1.0 >= raySteps) { break; }\\n\\n      // compute the scalar\\n      tValue = getTextureValue(posIS);\\n      segmentIndex = int(tValue.g);\\n\\n      if (segmentIndex != 0) {\\n        originalPosHasSeenNonZero = true;\\n        setBit(segmentIndex);\\n      }\\n\\n      if (tValue.r > value.r) {\\n        value =  tValue; // Update the max value\\n        maxPosIS = posIS; // Update the position where max occurred\\n      }\\n\\n      // Otherwise, continue along the ray\\n      stepsTraveled++;\\n      posIS += stepIS;\\n    }\\n\\n    // Perform the last step along the ray using the\\n    // residual distance\\n    posIS = endIS;\\n    tValue = getTextureValue(posIS);\\n\\n    if (tValue.r > value.r) {\\n      value = tValue; // Update the max value\\n      maxPosIS = posIS; // Update the position where max occurred\\n    }  \\n\\n    // If we have not seen any non-zero segments, we can return early\\n    // and grab color from the actual center value first component (image)\\n    if (!originalPosHasSeenNonZero) {\\n      gl_FragData[0] = getColorForValue(value, maxPosIS, tstep);\\n      return;\\n    }\\n\\n    // probably we can make this configurable but for now we will use the same\\n    // sample distance as the original sample distance\\n    float neighborSampleDistanceIS = sampleDistanceIS;\\n\\n    vec3 neighborRayStepsIS = stepIS;\\n    float neighborRaySteps = raySteps;\\n    bool shouldLookInAllNeighbors = false;\\n\\n    float minVoxelSpacing = min(volumeSpacings[0], min(volumeSpacings[1], volumeSpacings[2]));\\n    vec4 base = vec4(gl_FragCoord.x, gl_FragCoord.y, gl_FragCoord.z, gl_FragCoord.w);\\n\\n    vec4 baseXPlus = vec4(gl_FragCoord.x + 1.0, gl_FragCoord.y, gl_FragCoord.z, gl_FragCoord.w);\\n    vec4 baseYPlus = vec4(gl_FragCoord.x, gl_FragCoord.y + 1.0, gl_FragCoord.z, gl_FragCoord.w);\\n\\n    vec3 baseWorld = fragCoordToWorld(base);\\n    vec3 baseXPlusWorld = fragCoordToWorld(baseXPlus);\\n    vec3 baseYPlusWorld = fragCoordToWorld(baseYPlus);\\n\\n    float XPlusDiff = length(baseXPlusWorld - baseWorld);\\n    float YPlusDiff = length(baseYPlusWorld - baseWorld);\\n\\n    float minFragSpacingWorld = min(XPlusDiff, YPlusDiff);\\n\\n    for (int s = 1; s < MAX_SEGMENT_INDEX; s++) {\\n      // bail out quickly if the segment index has not \\n      // been seen by the center segment\\n      if (!isBitSet(s)) {\\n       continue;\\n      }\\n\\n      // Use texture sampling for outlineThickness so that we can have \\n      // per segment thickness\\n      float textureCoordinate = float(s - 1) / 1024.0;\\n      float textureValue = texture2D(ttexture, vec2(textureCoordinate, 0.5)).r;\\n\\n      int actualThickness = int(textureValue * 255.0);\\n\\n      // check the extreme points in the neighborhood since there is a better\\n      // chance of finding the edge there, so that we can bail out \\n      // faster if we find the edge\\n      bool onEdge =\\n          checkOnEdgeForNeighbor(-actualThickness, -actualThickness, s, stepIS) ||\\n          checkOnEdgeForNeighbor(actualThickness, actualThickness, s, stepIS) ||\\n          checkOnEdgeForNeighbor(actualThickness, -actualThickness, s, stepIS) ||\\n          checkOnEdgeForNeighbor(-actualThickness, +actualThickness, s, stepIS);\\n\\n      if (onEdge) {\\n        return;\\n      }\\n\\n      // since the next step is computationally expensive, we need to perform\\n      // some optimizations to avoid it if possible. One of the optimizations\\n      // is to check the whether the minimum of the voxel spacing is greater than \\n      // the 2 * the thickness of the outline segment. If that is the case\\n      // then we can safely skip the next step since we can be sure that the\\n      // the previous 4 checks on the extreme points would caught the entirety \\n      // of the all the fragments inside. i.e., this happens when we zoom out, \\n      if (minVoxelSpacing > (2.0 * float(actualThickness) - 1.0) * minFragSpacingWorld) {\\n        continue;\\n      }\\n      \\n      // Loop through the rest, skipping the processed extremes and the center\\n      for (int i = -actualThickness; i <= actualThickness; i++) {\\n            for (int j = -actualThickness; j <= actualThickness; j++) {\\n                if (i == 0 && j == 0) continue; // Skip the center\\n                if (abs(i) == actualThickness && abs(j) == actualThickness) continue; // Skip corners\\n                if (checkOnEdgeForNeighbor(i, j, s, stepIS )) {\\n                    return;\\n                }\\n          }\\n      }\\n    }\\n\\n    vec3 tColor0 = texture2D(ctexture, vec2(value.r * cscale0 + cshift0, height0)).rgb;\\n    float pwfValue0 = texture2D(otexture, vec2(value.r * oscale0 + oshift0, height0)).r;\\n    gl_FragData[0] = vec4(tColor0, pwfValue0);\\n  #endif\\n  #if vtkBlendMode == 0 // COMPOSITE_BLEND\\n    // now map through opacity and color\\n    tColor = getColorForValue(tValue, posIS, tstep);\\n\\n    // handle very thin volumes\\n    if (raySteps <= 1.0)\\n    {\\n      tColor.a = 1.0 - pow(1.0 - tColor.a, raySteps);\\n      gl_FragData[0] = tColor;\\n      return;\\n    }\\n\\n    tColor.a = 1.0 - pow(1.0 - tColor.a, jitter);\\n    color = vec4(tColor.rgb*tColor.a, tColor.a);\\n    posIS += (jitter*stepIS);\\n\\n    for (int i = 0; i < //VTK::MaximumSamplesValue ; ++i)\\n    {\\n      if (stepsTraveled + 1.0 >= raySteps) { break; }\\n\\n      // compute the scalar\\n      tValue = getTextureValue(posIS);\\n\\n      // now map through opacity and color\\n      tColor = getColorForValue(tValue, posIS, tstep);\\n\\n      float mix = (1.0 - color.a);\\n\\n      // this line should not be needed but nvidia seems to not handle\\n      // the break correctly on windows/chrome 58 angle\\n      //mix = mix * sign(max(raySteps - stepsTraveled - 1.0, 0.0));\\n\\n      color = color + vec4(tColor.rgb*tColor.a, tColor.a)*mix;\\n      stepsTraveled++;\\n      posIS += stepIS;\\n      if (color.a > 0.99) { color.a = 1.0; break; }\\n    }\\n\\n    if (color.a < 0.99 && (raySteps - stepsTraveled) > 0.0)\\n    {\\n      posIS = endIS;\\n\\n      // compute the scalar\\n      tValue = getTextureValue(posIS);\\n\\n      // now map through opacity and color\\n      tColor = getColorForValue(tValue, posIS, tstep);\\n      tColor.a = 1.0 - pow(1.0 - tColor.a, raySteps - stepsTraveled);\\n\\n      float mix = (1.0 - color.a);\\n      color = color + vec4(tColor.rgb*tColor.a, tColor.a)*mix;\\n    }\\n\\n    gl_FragData[0] = vec4(color.rgb/color.a, color.a);\\n  #endif\\n  #if vtkBlendMode == 1 || vtkBlendMode == 2\\n    // MAXIMUM_INTENSITY_BLEND || MINIMUM_INTENSITY_BLEND\\n    // Find maximum/minimum intensity along the ray.\\n\\n    // Define the operation we will use (min or max)\\n    #if vtkBlendMode == 1\\n    #define OP max\\n    #else\\n    #define OP min\\n    #endif\\n\\n    // If the clipping range is shorter than the sample distance\\n    // we can skip the sampling loop along the ray.\\n    if (raySteps <= 1.0)\\n    {\\n      gl_FragData[0] = getColorForValue(tValue, posIS, tstep);\\n      return;\\n    }\\n\\n    vec4 value = tValue;\\n    posIS += (jitter*stepIS);\\n\\n    // Sample along the ray until MaximumSamplesValue,\\n    // ending slightly inside the total distance\\n    for (int i = 0; i < //VTK::MaximumSamplesValue ; ++i)\\n    {\\n      // If we have reached the last step, break\\n      if (stepsTraveled + 1.0 >= raySteps) { break; }\\n\\n      // compute the scalar\\n      tValue = getTextureValue(posIS);\\n\\n      // Update the maximum value if necessary\\n      value = OP(tValue, value);\\n\\n      // Otherwise, continue along the ray\\n      stepsTraveled++;\\n      posIS += stepIS;\\n    }\\n\\n    // Perform the last step along the ray using the\\n    // residual distance\\n    posIS = endIS;\\n    tValue = getTextureValue(posIS);\\n    value = OP(tValue, value);\\n\\n    // Now map through opacity and color\\n    gl_FragData[0] = getColorForValue(value, posIS, tstep);\\n  #endif\\n  #if vtkBlendMode == 3 || vtkBlendMode == 4 //AVERAGE_INTENSITY_BLEND || ADDITIVE_BLEND\\n    vec4 sum = vec4(0.);\\n\\n    if (valueWithinScalarRange(tValue, ipScalarRangeMin, ipScalarRangeMax)) {\\n      sum += tValue;\\n    }\\n\\n    if (raySteps <= 1.0) {\\n      gl_FragData[0] = getColorForValue(sum, posIS, tstep);\\n      return;\\n    }\\n\\n    posIS += (jitter*stepIS);\\n\\n    // Sample along the ray until MaximumSamplesValue,\\n    // ending slightly inside the total distance\\n    for (int i = 0; i < //VTK::MaximumSamplesValue ; ++i)\\n    {\\n      // If we have reached the last step, break\\n      if (stepsTraveled + 1.0 >= raySteps) { break; }\\n\\n      // compute the scalar\\n      tValue = getTextureValue(posIS);\\n\\n      // One can control the scalar range by setting the AverageIPScalarRange to disregard scalar values, not in the range of interest, from the average computation.\\n      // Notes:\\n      // - We are comparing all values in the texture to see if any of them\\n      //   are outside of the scalar range. In the future we might want to allow\\n      //   scalar ranges for each component.\\n      if (valueWithinScalarRange(tValue, ipScalarRangeMin, ipScalarRangeMax)) {\\n        // Sum the values across each step in the path\\n        sum += tValue;\\n      }\\n      stepsTraveled++;\\n      posIS += stepIS;\\n    }\\n\\n    // Perform the last step along the ray using the\\n    // residual distance\\n    posIS = endIS;\\n\\n    // compute the scalar\\n    tValue = getTextureValue(posIS);\\n\\n    // One can control the scalar range by setting the IPScalarRange to disregard scalar values, not in the range of interest, from the average computation\\n    if (valueWithinScalarRange(tValue, ipScalarRangeMin, ipScalarRangeMax)) {\\n      sum += tValue;\\n\\n      stepsTraveled++;\\n    }\\n\\n    #if vtkBlendMode == 3 // Average\\n      sum /= vec4(stepsTraveled, stepsTraveled, stepsTraveled, 1.0);\\n    #endif\\n\\n    gl_FragData[0] = getColorForValue(sum, posIS, tstep);\\n  #endif\\n  #if vtkBlendMode == 5 // RADON\\n    float normalizedRayIntensity = 1.0;\\n\\n    // handle very thin volumes\\n    if (raySteps <= 1.0)\\n    {\\n      tValue = getTextureValue(posIS);\\n      normalizedRayIntensity = normalizedRayIntensity - sampleDistance*texture2D(otexture, vec2(tValue.r * oscale0 + oshift0, 0.5)).r;\\n      gl_FragData[0] = texture2D(ctexture, vec2(normalizedRayIntensity, 0.5));\\n      return;\\n    }\\n\\n    posIS += (jitter*stepIS);\\n\\n    for (int i = 0; i < //VTK::MaximumSamplesValue ; ++i)\\n    {\\n      if (stepsTraveled + 1.0 >= raySteps) { break; }\\n\\n      // compute the scalar value\\n      tValue = getTextureValue(posIS);\\n\\n      // Convert scalar value to normalizedRayIntensity coefficient and accumulate normalizedRayIntensity\\n      normalizedRayIntensity = normalizedRayIntensity - sampleDistance*texture2D(otexture, vec2(tValue.r * oscale0 + oshift0, 0.5)).r;\\n\\n      posIS += stepIS;\\n      stepsTraveled++;\\n    }\\n\\n    // map normalizedRayIntensity to color\\n    gl_FragData[0] = texture2D(ctexture, vec2(normalizedRayIntensity , 0.5));\\n\\n  #endif\\n}\\n\\n//=======================================================================\\n// Compute a new start and end point for a given ray based\\n// on the provided bounded clipping plane (aka a rectangle)\\nvoid getRayPointIntersectionBounds(\\n  vec3 rayPos, vec3 rayDir,\\n  vec3 planeDir, float planeDist,\\n  inout vec2 tbounds, vec3 vPlaneX, vec3 vPlaneY,\\n  float vSize1, float vSize2)\\n{\\n  float result = dot(rayDir, planeDir);\\n  if (abs(result) < 1e-6)\\n  {\\n    return;\\n  }\\n  result = -1.0 * (dot(rayPos, planeDir) + planeDist) / result;\\n  vec3 xposVC = rayPos + rayDir*result;\\n  vec3 vxpos = xposVC - vOriginVC;\\n  vec2 vpos = vec2(\\n    dot(vxpos, vPlaneX),\\n    dot(vxpos, vPlaneY));\\n\\n  // on some apple nvidia systems this does not work\\n  // if (vpos.x < 0.0 || vpos.x > vSize1 ||\\n  //     vpos.y < 0.0 || vpos.y > vSize2)\\n  // even just\\n  // if (vpos.x < 0.0 || vpos.y < 0.0)\\n  // fails\\n  // so instead we compute a value that represents in and out\\n  //and then compute the return using this value\\n  float xcheck = max(0.0, vpos.x * (vpos.x - vSize1)); //  0 means in bounds\\n  float check = sign(max(xcheck, vpos.y * (vpos.y - vSize2))); //  0 means in bounds, 1 = out\\n\\n  tbounds = mix(\\n   vec2(min(tbounds.x, result), max(tbounds.y, result)), // in value\\n   tbounds, // out value\\n   check);  // 0 in 1 out\\n}\\n\\n//=======================================================================\\n// given a\\n// - ray direction (rayDir)\\n// - starting point (vertexVCVSOutput)\\n// - bounding planes of the volume\\n// - optionally depth buffer values\\n// - far clipping plane\\n// compute the start/end distances of the ray we need to cast\\nvec2 computeRayDistances(vec3 rayDir, vec3 tdims)\\n{\\n  vec2 dists = vec2(100.0*camFar, -1.0);\\n\\n  vec3 vSize = vSpacing*tdims;\\n\\n  // all this is in View Coordinates\\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\\n    vPlaneNormal0, vPlaneDistance0, dists, vPlaneNormal2, vPlaneNormal4,\\n    vSize.y, vSize.z);\\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\\n    vPlaneNormal1, vPlaneDistance1, dists, vPlaneNormal2, vPlaneNormal4,\\n    vSize.y, vSize.z);\\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\\n    vPlaneNormal2, vPlaneDistance2, dists, vPlaneNormal0, vPlaneNormal4,\\n    vSize.x, vSize.z);\\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\\n    vPlaneNormal3, vPlaneDistance3, dists, vPlaneNormal0, vPlaneNormal4,\\n    vSize.x, vSize.z);\\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\\n    vPlaneNormal4, vPlaneDistance4, dists, vPlaneNormal0, vPlaneNormal2,\\n    vSize.x, vSize.y);\\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\\n    vPlaneNormal5, vPlaneDistance5, dists, vPlaneNormal0, vPlaneNormal2,\\n    vSize.x, vSize.y);\\n\\n  //VTK::ClipPlane::Impl\\n\\n  // do not go behind front clipping plane\\n  dists.x = max(0.0,dists.x);\\n\\n  // do not go PAST far clipping plane\\n  float farDist = -camThick/rayDir.z;\\n  dists.y = min(farDist,dists.y);\\n\\n  // Do not go past the zbuffer value if set\\n  // This is used for intermixing opaque geometry\\n  //VTK::ZBuffer::Impl\\n\\n  return dists;\\n}\\n\\n//=======================================================================\\n// Compute the index space starting position (pos) and end\\n// position\\n//\\nvoid computeIndexSpaceValues(out vec3 pos, out vec3 endPos, vec3 rayDir, vec2 dists)\\n{\\n  // compute starting and ending values in volume space\\n  pos = vertexVCVSOutput + dists.x*rayDir;\\n  pos = pos - vOriginVC;\\n  // convert to volume basis and origin\\n  pos = vec3(\\n    dot(pos, vPlaneNormal0),\\n    dot(pos, vPlaneNormal2),\\n    dot(pos, vPlaneNormal4));\\n\\n  endPos = vertexVCVSOutput + dists.y*rayDir;\\n  endPos = endPos - vOriginVC;\\n  endPos = vec3(\\n    dot(endPos, vPlaneNormal0),\\n    dot(endPos, vPlaneNormal2),\\n    dot(endPos, vPlaneNormal4));\\n\\n  float delta = length(endPos - pos);\\n\\n  pos *= vVCToIJK;\\n  endPos *= vVCToIJK;\\n\\n  float delta2 = length(endPos - pos);\\n  sampleDistanceIS = sampleDistance*delta2/delta;\\n  #ifdef VolumeShadowOn\\n    sampleDistanceISVS = sampleDistanceIS * volumeShadowSamplingDistFactor;\\n  #endif\\n}\\n\\nvoid main()\\n{\\n\\n  if (cameraParallel == 1)\\n  {\\n    // Camera is parallel, so the rayDir is just the direction of the camera.\\n    rayDirVC = vec3(0.0, 0.0, -1.0);\\n  } else {\\n    // camera is at 0,0,0 so rayDir for perspective is just the vc coord\\n    rayDirVC = normalize(vertexVCVSOutput);\\n  }\\n\\n  vec3 tdims = vec3(volumeDimensions);\\n\\n  // compute the start and end points for the ray\\n  vec2 rayStartEndDistancesVC = computeRayDistances(rayDirVC, tdims);\\n\\n  // do we need to composite? aka does the ray have any length\\n  // If not, bail out early\\n  if (rayStartEndDistancesVC.y <= rayStartEndDistancesVC.x)\\n  {\\n    discard;\\n  }\\n\\n  // IS = Index Space\\n  vec3 posIS;\\n  vec3 endIS;\\n  computeIndexSpaceValues(posIS, endIS, rayDirVC, rayStartEndDistancesVC);\\n\\n  // Perform the blending operation along the ray\\n  applyBlend(posIS, endIS, tdims);\\n}\\n\";\n\nexport { vtkVolumeFS as v };\n","import { n as newInstance$1, o as obj, e as setGet, h as chain, c as macro } from '../../macros2.js';\nimport DeepEqual from 'fast-deep-equal';\nimport { mat4, mat3, vec3 } from 'gl-matrix';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport { VtkDataTypes } from '../../Common/Core/DataArray/Constants.js';\nimport vtkHelper from './Helper.js';\nimport { u as uninitializeBounds } from '../../Common/Core/Math/index.js';\nimport vtkOpenGLFramebuffer from './Framebuffer.js';\nimport vtkOpenGLTexture from './Texture.js';\nimport vtkReplacementShaderMapper from './ReplacementShaderMapper.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport vtkVertexArrayObject from './VertexArrayObject.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { Representation } from '../Core/Property/Constants.js';\nimport { Wrap, Filter } from './Texture/Constants.js';\nimport { InterpolationType, OpacityMode, ColorMixPreset } from '../Core/VolumeProperty/Constants.js';\nimport { BlendMode } from '../Core/VolumeMapper/Constants.js';\nimport { getTransferFunctionHash, getImageDataHash } from './RenderWindow/resourceSharingHelper.js';\nimport { v as vtkVolumeVS } from './glsl/vtkVolumeVS.glsl.js';\nimport { v as vtkVolumeFS } from './glsl/vtkVolumeFS.glsl.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nconst {\n  vtkWarningMacro,\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// helper methods\n// ----------------------------------------------------------------------------\n\nfunction getColorCodeFromPreset(colorMixPreset) {\n  switch (colorMixPreset) {\n    case ColorMixPreset.CUSTOM:\n      return '//VTK::CustomColorMix';\n    case ColorMixPreset.ADDITIVE:\n      return `\n        // compute normals\n        mat4 normalMat = computeMat4Normal(posIS, tValue, tstep);\n        #if (vtkLightComplexity > 0) && defined(vtkComputeNormalFromOpacity)\n          vec3 scalarInterp0[2];\n          vec4 normalLight0 = computeNormalForDensity(posIS, tstep, scalarInterp0, 0);\n          scalarInterp0[0] = scalarInterp0[0] * oscale0 + oshift0;\n          scalarInterp0[1] = scalarInterp0[1] * oscale0 + oshift0;\n          normalLight0 = computeDensityNormal(scalarInterp0, height0, 1.0);\n\n          vec3 scalarInterp1[2];\n          vec4 normalLight1 = computeNormalForDensity(posIS, tstep, scalarInterp1, 1);\n          scalarInterp1[0] = scalarInterp1[0] * oscale1 + oshift1;\n          scalarInterp1[1] = scalarInterp1[1] * oscale1 + oshift1;\n          normalLight1 = computeDensityNormal(scalarInterp1, height1, 1.0);\n        #else\n          vec4 normalLight0 = normalMat[0];\n          vec4 normalLight1 = normalMat[1];\n        #endif\n\n        // compute opacities\n        float opacity0 = pwfValue0;\n        float opacity1 = pwfValue1;\n        #ifdef vtkGradientOpacityOn\n          float gof0 = computeGradientOpacityFactor(normalMat[0].a, goscale0, goshift0, gomin0, gomax0);\n          opacity0 *= gof0;\n          float gof1 = computeGradientOpacityFactor(normalMat[1].a, goscale1, goshift1, gomin1, gomax1);\n          opacity1 *= gof1;\n        #endif\n        float opacitySum = opacity0 + opacity1;\n        if (opacitySum <= 0.0) {\n          return vec4(0.0);\n        }\n\n        // mix the colors and opacities\n        tColor0 = applyAllLightning(tColor0, opacity0, posIS, normalLight0);\n        tColor1 = applyAllLightning(tColor1, opacity1, posIS, normalLight1);\n        vec3 mixedColor = (opacity0 * tColor0 + opacity1 * tColor1) / opacitySum;\n        return vec4(mixedColor, min(1.0, opacitySum));\n`;\n    case ColorMixPreset.COLORIZE:\n      return `\n        // compute normals\n        mat4 normalMat = computeMat4Normal(posIS, tValue, tstep);\n        #if (vtkLightComplexity > 0) && defined(vtkComputeNormalFromOpacity)\n          vec3 scalarInterp0[2];\n          vec4 normalLight0 = computeNormalForDensity(posIS, tstep, scalarInterp0, 0);\n          scalarInterp0[0] = scalarInterp0[0] * oscale0 + oshift0;\n          scalarInterp0[1] = scalarInterp0[1] * oscale0 + oshift0;\n          normalLight0 = computeDensityNormal(scalarInterp0, height0, 1.0);\n        #else\n          vec4 normalLight0 = normalMat[0];\n        #endif\n\n        // compute opacities\n        float opacity0 = pwfValue0;\n        #ifdef vtkGradientOpacityOn\n          float gof0 = computeGradientOpacityFactor(normalMat[0].a, goscale0, goshift0, gomin0, gomax0);\n          opacity0 *= gof0;\n        #endif\n\n        // mix the colors and opacities\n        vec3 color = tColor0 * mix(vec3(1.0), tColor1, pwfValue1);\n        color = applyAllLightning(color, opacity0, posIS, normalLight0);\n        return vec4(color, opacity0);\n`;\n    default:\n      return null;\n  }\n}\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLVolumeMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLVolumeMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLVolumeMapper');\n  function unregisterGraphicsResources(renderWindow) {\n    [model._scalars, model._scalarOpacityFunc, model._colorTransferFunc, model._labelOutlineThicknessArray].forEach(coreObject => renderWindow.unregisterGraphicsResourceUser(coreObject, publicAPI));\n  }\n  publicAPI.buildPass = () => {\n    model.zBufferTexture = null;\n  };\n\n  // ohh someone is doing a zbuffer pass, use that for\n  // intermixed volume rendering\n  publicAPI.zBufferPass = (prepass, renderPass) => {\n    if (prepass) {\n      const zbt = renderPass.getZBufferTexture();\n      if (zbt !== model.zBufferTexture) {\n        model.zBufferTexture = zbt;\n      }\n    }\n  };\n  publicAPI.opaqueZBufferPass = (prepass, renderPass) => publicAPI.zBufferPass(prepass, renderPass);\n\n  // Renders myself\n  publicAPI.volumePass = (prepass, renderPass) => {\n    if (prepass) {\n      const oldOglRenderWindow = model._openGLRenderWindow;\n      model._openGLRenderWindow = publicAPI.getLastAncestorOfType('vtkOpenGLRenderWindow');\n      if (oldOglRenderWindow && !oldOglRenderWindow.isDeleted() && oldOglRenderWindow !== model._openGLRenderWindow) {\n        // Unregister the mapper when the render window changes\n        unregisterGraphicsResources(oldOglRenderWindow);\n      }\n      model.context = model._openGLRenderWindow.getContext();\n      model.tris.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.jitterTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.framebuffer.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.openGLVolume = publicAPI.getFirstAncestorOfType('vtkOpenGLVolume');\n      const actor = model.openGLVolume.getRenderable();\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      const ren = model._openGLRenderer.getRenderable();\n      model.openGLCamera = model._openGLRenderer.getViewNodeFor(ren.getActiveCamera());\n      publicAPI.renderPiece(ren, actor);\n    }\n  };\n  publicAPI.getShaderTemplate = (shaders, ren, actor) => {\n    shaders.Vertex = vtkVolumeVS;\n    shaders.Fragment = vtkVolumeFS;\n    shaders.Geometry = '';\n  };\n  publicAPI.useIndependentComponents = actorProperty => {\n    const iComps = actorProperty.getIndependentComponents();\n    const image = model.currentInput;\n    const numComp = image?.getPointData()?.getScalars()?.getNumberOfComponents();\n    const colorMixPreset = actorProperty.getColorMixPreset();\n    return iComps && numComp >= 2 || !!colorMixPreset;\n  };\n  publicAPI.replaceShaderValues = (shaders, ren, actor) => {\n    const actorProps = actor.getProperty();\n    let FSSource = shaders.Fragment;\n\n    // define some values in the shader\n    const iType = actorProps.getInterpolationType();\n    if (iType === InterpolationType.LINEAR) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TrilinearOn', '#define vtkTrilinearOn').result;\n    }\n    const vtkImageLabelOutline = publicAPI.isLabelmapOutlineRequired(actor);\n    if (vtkImageLabelOutline === true) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ImageLabelOutlineOn', '#define vtkImageLabelOutlineOn').result;\n    }\n    const LabelEdgeProjection = model.renderable.getBlendMode() === BlendMode.LABELMAP_EDGE_PROJECTION_BLEND;\n    if (LabelEdgeProjection) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::LabelEdgeProjectionOn', '#define vtkLabelEdgeProjectionOn').result;\n    }\n    const numComp = model.scalarTexture.getComponents();\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::NumComponents', `#define vtkNumComponents ${numComp}`).result;\n    const useIndependentComps = publicAPI.useIndependentComponents(actorProps);\n    if (useIndependentComps) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::IndependentComponentsOn', '#define UseIndependentComponents').result;\n    }\n\n    // Define any proportional components\n    const proportionalComponents = [];\n    const forceNearestComponents = [];\n    for (let nc = 0; nc < numComp; nc++) {\n      if (actorProps.getOpacityMode(nc) === OpacityMode.PROPORTIONAL) {\n        proportionalComponents.push(`#define vtkComponent${nc}Proportional`);\n      }\n      if (actorProps.getForceNearestInterpolation(nc)) {\n        forceNearestComponents.push(`#define vtkComponent${nc}ForceNearest`);\n      }\n    }\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::vtkProportionalComponents', proportionalComponents.join('\\n')).result;\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::vtkForceNearestComponents', forceNearestComponents.join('\\n')).result;\n    const colorMixPreset = actorProps.getColorMixPreset();\n    const colorMixCode = getColorCodeFromPreset(colorMixPreset);\n    if (colorMixCode) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::CustomComponentsColorMixOn', '#define vtkCustomComponentsColorMix').result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::CustomComponentsColorMix::Impl', colorMixCode).result;\n    }\n\n    // WebGL only supports loops over constants\n    // and does not support while loops so we\n    // have to hard code how many steps/samples to take\n    // We do a break so most systems will gracefully\n    // early terminate, but it is always possible\n    // a system will execute every step regardless\n    const ext = model.currentInput.getSpatialExtent();\n    const spc = model.currentInput.getSpacing();\n    const vsize = new Float64Array(3);\n    vec3.set(vsize, (ext[1] - ext[0]) * spc[0], (ext[3] - ext[2]) * spc[1], (ext[5] - ext[4]) * spc[2]);\n    const maxSamples = vec3.length(vsize) / publicAPI.getCurrentSampleDistance(ren);\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::MaximumSamplesValue', `${Math.ceil(maxSamples)}`).result;\n\n    // set light complexity\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::LightComplexity', `#define vtkLightComplexity ${model.lightComplexity}`).result;\n\n    // set shadow blending flag\n    if (model.lightComplexity > 0) {\n      if (model.renderable.getVolumetricScatteringBlending() > 0.0) {\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::VolumeShadowOn', `#define VolumeShadowOn`).result;\n      }\n      if (model.renderable.getVolumetricScatteringBlending() < 1.0) {\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::SurfaceShadowOn', `#define SurfaceShadowOn`).result;\n      }\n      if (model.renderable.getLocalAmbientOcclusion() && actorProps.getAmbient() > 0.0) {\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::localAmbientOcclusionOn', `#define localAmbientOcclusionOn`).result;\n      }\n    }\n\n    // if using gradient opacity define that\n    const numIComps = useIndependentComps ? numComp : 1;\n    model.gopacity = false;\n    for (let nc = 0; !model.gopacity && nc < numIComps; ++nc) {\n      model.gopacity ||= actorProps.getUseGradientOpacity(nc);\n    }\n    if (model.gopacity) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::GradientOpacityOn', '#define vtkGradientOpacityOn').result;\n    }\n\n    // set normal from density\n    if (model.renderable.getComputeNormalFromOpacity()) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::vtkComputeNormalFromOpacity', `#define vtkComputeNormalFromOpacity`).result;\n    }\n\n    // if we have a ztexture then declare it and use it\n    if (model.zBufferTexture !== null) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Dec', ['uniform sampler2D zBufferTexture;', 'uniform float vpZWidth;', 'uniform float vpZHeight;']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Impl', ['vec4 depthVec = texture2D(zBufferTexture, vec2(gl_FragCoord.x / vpZWidth, gl_FragCoord.y/vpZHeight));', 'float zdepth = (depthVec.r*256.0 + depthVec.g)/257.0;', 'zdepth = zdepth * 2.0 - 1.0;', 'if (cameraParallel == 0) {', 'zdepth = -2.0 * camFar * camNear / (zdepth*(camFar-camNear)-(camFar+camNear)) - camNear;}', 'else {', 'zdepth = (zdepth + 1.0) * 0.5 * (camFar - camNear);}\\n', 'zdepth = -zdepth/rayDir.z;', 'dists.y = min(zdepth,dists.y);']).result;\n    }\n\n    // Set the BlendMode approach\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::BlendMode', `${model.renderable.getBlendMode()}`).result;\n    shaders.Fragment = FSSource;\n    publicAPI.replaceShaderLight(shaders, ren, actor);\n    publicAPI.replaceShaderClippingPlane(shaders, ren, actor);\n  };\n  publicAPI.replaceShaderLight = (shaders, ren, actor) => {\n    if (model.lightComplexity === 0) {\n      return;\n    }\n    let FSSource = shaders.Fragment;\n    // check for shadow maps - not implemented yet, skip\n    // const shadowFactor = '';\n\n    // to-do: single out the case when complexity = 1\n\n    // only account for lights that are switched on\n    let lightNum = 0;\n    ren.getLights().forEach(light => {\n      if (light.getSwitch()) {\n        lightNum += 1;\n      }\n    });\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Dec', [`uniform int lightNum;`, `uniform bool twoSidedLighting;`, `uniform vec3 lightColor[${lightNum}];`, `uniform vec3 lightDirectionVC[${lightNum}]; // normalized`, `uniform vec3 lightHalfAngleVC[${lightNum}];`, '//VTK::Light::Dec'], false).result;\n    // support any number of lights\n    if (model.lightComplexity === 3) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Dec', [`uniform vec3 lightPositionVC[${lightNum}];`, `uniform vec3 lightAttenuation[${lightNum}];`, `uniform float lightConeAngle[${lightNum}];`, `uniform float lightExponent[${lightNum}];`, `uniform int lightPositional[${lightNum}];`], false).result;\n    }\n    if (model.renderable.getVolumetricScatteringBlending() > 0.0) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::VolumeShadow::Dec', [`uniform float volumetricScatteringBlending;`, `uniform float giReach;`, `uniform float volumeShadowSamplingDistFactor;`, `uniform float anisotropy;`, `uniform float anisotropy2;`], false).result;\n    }\n    if (model.renderable.getLocalAmbientOcclusion() && actor.getProperty().getAmbient() > 0.0) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::LAO::Dec', [`uniform int kernelRadius;`, `uniform vec2 kernelSample[${model.renderable.getLAOKernelRadius()}];`, `uniform int kernelSize;`], false).result;\n    }\n    shaders.Fragment = FSSource;\n  };\n  publicAPI.replaceShaderClippingPlane = (shaders, ren, actor) => {\n    let FSSource = shaders.Fragment;\n    if (model.renderable.getClippingPlanes().length > 0) {\n      const clipPlaneSize = model.renderable.getClippingPlanes().length;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ClipPlane::Dec', [`uniform vec3 vClipPlaneNormals[6];`, `uniform float vClipPlaneDistances[6];`, `uniform vec3 vClipPlaneOrigins[6];`, `uniform int clip_numPlanes;`, '//VTK::ClipPlane::Dec', '#define vtkClippingPlanesOn'], false).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ClipPlane::Impl', [`for(int i = 0; i < ${clipPlaneSize}; i++) {`, '  float rayDirRatio = dot(rayDir, vClipPlaneNormals[i]);', '  float equationResult = dot(vertexVCVSOutput, vClipPlaneNormals[i]) + vClipPlaneDistances[i];', '  if (rayDirRatio == 0.0)', '  {', '    if (equationResult < 0.0) dists.x = dists.y;', '    continue;', '  }', '  float result = -1.0 * equationResult / rayDirRatio;', '  if (rayDirRatio < 0.0) dists.y = min(dists.y, result);', '  else dists.x = max(dists.x, result);', '}', '//VTK::ClipPlane::Impl'], false).result;\n    }\n    shaders.Fragment = FSSource;\n  };\n  const recomputeLightComplexity = (actor, lights) => {\n    // do we need lighting?\n    let lightComplexity = 0;\n    if (actor.getProperty().getShade() && model.renderable.getBlendMode() === BlendMode.COMPOSITE_BLEND) {\n      // consider the lighting complexity to determine which case applies\n      // simple headlight, Light Kit, the whole feature set of VTK\n      lightComplexity = 0;\n      model.numberOfLights = 0;\n      lights.forEach(light => {\n        const status = light.getSwitch();\n        if (status > 0) {\n          model.numberOfLights++;\n          if (lightComplexity === 0) {\n            lightComplexity = 1;\n          }\n        }\n        if (lightComplexity === 1 && (model.numberOfLights > 1 || light.getIntensity() !== 1.0 || !light.lightTypeIsHeadLight())) {\n          lightComplexity = 2;\n        }\n        if (lightComplexity < 3 && light.getPositional()) {\n          lightComplexity = 3;\n        }\n      });\n    }\n    if (lightComplexity !== model.lightComplexity) {\n      model.lightComplexity = lightComplexity;\n      publicAPI.modified();\n    }\n  };\n  publicAPI.getNeedToRebuildShaders = (cellBO, ren, actor) => {\n    const actorProps = actor.getProperty();\n    recomputeLightComplexity(actor, ren.getLights());\n    const numComp = model.scalarTexture.getComponents();\n    const opacityModes = [];\n    const forceNearestInterps = [];\n    for (let nc = 0; nc < numComp; nc++) {\n      opacityModes.push(actorProps.getOpacityMode(nc));\n      forceNearestInterps.push(actorProps.getForceNearestInterpolation(nc));\n    }\n    const ext = model.currentInput.getSpatialExtent();\n    const spc = model.currentInput.getSpacing();\n    const vsize = new Float64Array(3);\n    vec3.set(vsize, (ext[1] - ext[0]) * spc[0], (ext[3] - ext[2]) * spc[1], (ext[5] - ext[4]) * spc[2]);\n    const maxSamples = vec3.length(vsize) / publicAPI.getCurrentSampleDistance(ren);\n    const hasZBufferTexture = !!model.zBufferTexture;\n    const state = {\n      iComps: actorProps.getIndependentComponents(),\n      colorMixPreset: actorProps.getColorMixPreset(),\n      interpolationType: actorProps.getInterpolationType(),\n      useLabelOutline: publicAPI.isLabelmapOutlineRequired(actor),\n      numComp,\n      maxSamples,\n      useGradientOpacity: actorProps.getUseGradientOpacity(0),\n      blendMode: model.renderable.getBlendMode(),\n      hasZBufferTexture,\n      opacityModes,\n      forceNearestInterps\n    };\n\n    // We need to rebuild the shader if one of these variables has changed,\n    // since they are used in the shader template replacement step.\n    // We also need to rebuild if the shader source time is outdated.\n    if (cellBO.getProgram()?.getHandle() === 0 || cellBO.getShaderSourceTime().getMTime() < publicAPI.getMTime() || cellBO.getShaderSourceTime().getMTime() < model.renderable.getMTime() || !model.previousState || !DeepEqual(model.previousState, state)) {\n      model.previousState = state;\n      return true;\n    }\n    return false;\n  };\n  publicAPI.updateShaders = (cellBO, ren, actor) => {\n    // has something changed that would require us to recreate the shader?\n    if (publicAPI.getNeedToRebuildShaders(cellBO, ren, actor)) {\n      const shaders = {\n        Vertex: null,\n        Fragment: null,\n        Geometry: null\n      };\n      publicAPI.buildShaders(shaders, ren, actor);\n\n      // compile and bind the program if needed\n      const newShader = model._openGLRenderWindow.getShaderCache().readyShaderProgramArray(shaders.Vertex, shaders.Fragment, shaders.Geometry);\n\n      // if the shader changed reinitialize the VAO\n      if (newShader !== cellBO.getProgram()) {\n        cellBO.setProgram(newShader);\n        // reset the VAO as the shader has changed\n        cellBO.getVAO().releaseGraphicsResources();\n      }\n      cellBO.getShaderSourceTime().modified();\n    } else {\n      model._openGLRenderWindow.getShaderCache().readyShaderProgram(cellBO.getProgram());\n    }\n    cellBO.getVAO().bind();\n    publicAPI.setMapperShaderParameters(cellBO, ren, actor);\n    publicAPI.setCameraShaderParameters(cellBO, ren, actor);\n    publicAPI.setPropertyShaderParameters(cellBO, ren, actor);\n    publicAPI.getClippingPlaneShaderParameters(cellBO, ren, actor);\n  };\n  publicAPI.setMapperShaderParameters = (cellBO, ren, actor) => {\n    // Now to update the VAO too, if necessary.\n    const program = cellBO.getProgram();\n    if (cellBO.getCABO().getElementCount() && (model.VBOBuildTime.getMTime() > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime())) {\n      if (program.isAttributeUsed('vertexDC')) {\n        if (!cellBO.getVAO().addAttributeArray(program, cellBO.getCABO(), 'vertexDC', cellBO.getCABO().getVertexOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, model.context.FALSE)) {\n          vtkErrorMacro('Error setting vertexDC in shader VAO.');\n        }\n      }\n      cellBO.getAttributeUpdateTime().modified();\n    }\n    program.setUniformi('texture1', model.scalarTexture.getTextureUnit());\n    program.setUniformf('sampleDistance', publicAPI.getCurrentSampleDistance(ren));\n    const volInfo = model.scalarTexture.getVolumeInfo();\n    const ipScalarRange = model.renderable.getIpScalarRange();\n\n    // In some situations, we might not have computed the scale and offset\n    // for the data range, or it might not be needed.\n    if (volInfo?.dataComputedScale?.length) {\n      const minVals = [];\n      const maxVals = [];\n      for (let i = 0; i < 4; i++) {\n        // convert iprange from 0-1 into data range values\n        minVals[i] = ipScalarRange[0] * volInfo.dataComputedScale[i] + volInfo.dataComputedOffset[i];\n        maxVals[i] = ipScalarRange[1] * volInfo.dataComputedScale[i] + volInfo.dataComputedOffset[i];\n        // convert data ranges into texture values\n        minVals[i] = (minVals[i] - volInfo.offset[i]) / volInfo.scale[i];\n        maxVals[i] = (maxVals[i] - volInfo.offset[i]) / volInfo.scale[i];\n      }\n      program.setUniform4f('ipScalarRangeMin', minVals[0], minVals[1], minVals[2], minVals[3]);\n      program.setUniform4f('ipScalarRangeMax', maxVals[0], maxVals[1], maxVals[2], maxVals[3]);\n    }\n\n    // if we have a zbuffer texture then set it\n    if (model.zBufferTexture !== null) {\n      program.setUniformi('zBufferTexture', model.zBufferTexture.getTextureUnit());\n      const size = model._useSmallViewport ? [model._smallViewportWidth, model._smallViewportHeight] : model._openGLRenderWindow.getFramebufferSize();\n      program.setUniformf('vpZWidth', size[0]);\n      program.setUniformf('vpZHeight', size[1]);\n    }\n  };\n  publicAPI.setCameraShaderParameters = (cellBO, ren, actor) => {\n    // // [WMVP]C == {world, model, view, projection} coordinates\n    // // E.g., WCPC == world to projection coordinate transformation\n    const keyMats = model.openGLCamera.getKeyMatrices(ren);\n    const actMats = model.openGLVolume.getKeyMatrices();\n    mat4.multiply(model.modelToView, keyMats.wcvc, actMats.mcwc);\n    const program = cellBO.getProgram();\n    const cam = model.openGLCamera.getRenderable();\n    const crange = cam.getClippingRange();\n    program.setUniformf('camThick', crange[1] - crange[0]);\n    program.setUniformf('camNear', crange[0]);\n    program.setUniformf('camFar', crange[1]);\n    const bounds = model.currentInput.getBounds();\n    const dims = model.currentInput.getDimensions();\n\n    // compute the viewport bounds of the volume\n    // we will only render those fragments.\n    const pos = new Float64Array(3);\n    const dir = new Float64Array(3);\n    let dcxmin = 1.0;\n    let dcxmax = -1.0;\n    let dcymin = 1.0;\n    let dcymax = -1.0;\n    for (let i = 0; i < 8; ++i) {\n      vec3.set(pos, bounds[i % 2], bounds[2 + Math.floor(i / 2) % 2], bounds[4 + Math.floor(i / 4)]);\n      vec3.transformMat4(pos, pos, model.modelToView);\n      if (!cam.getParallelProjection()) {\n        vec3.normalize(dir, pos);\n\n        // now find the projection of this point onto a\n        // nearZ distance plane. Since the camera is at 0,0,0\n        // in VC the ray is just t*pos and\n        // t is -nearZ/dir.z\n        // intersection becomes pos.x/pos.z\n        const t = -crange[0] / pos[2];\n        vec3.scale(pos, dir, t);\n      }\n      // now convert to DC\n      vec3.transformMat4(pos, pos, keyMats.vcpc);\n      dcxmin = Math.min(pos[0], dcxmin);\n      dcxmax = Math.max(pos[0], dcxmax);\n      dcymin = Math.min(pos[1], dcymin);\n      dcymax = Math.max(pos[1], dcymax);\n    }\n    program.setUniformf('dcxmin', dcxmin);\n    program.setUniformf('dcxmax', dcxmax);\n    program.setUniformf('dcymin', dcymin);\n    program.setUniformf('dcymax', dcymax);\n    if (program.isUniformUsed('cameraParallel')) {\n      program.setUniformi('cameraParallel', cam.getParallelProjection());\n    }\n    const ext = model.currentInput.getSpatialExtent();\n    const spc = model.currentInput.getSpacing();\n    const vsize = new Float64Array(3);\n    vec3.set(vsize, (ext[1] - ext[0]) * spc[0], (ext[3] - ext[2]) * spc[1], (ext[5] - ext[4]) * spc[2]);\n    program.setUniform3f('vSpacing', spc[0], spc[1], spc[2]);\n    vec3.set(pos, ext[0], ext[2], ext[4]);\n    model.currentInput.indexToWorldVec3(pos, pos);\n    vec3.transformMat4(pos, pos, model.modelToView);\n    program.setUniform3f('vOriginVC', pos[0], pos[1], pos[2]);\n\n    // apply the image directions\n    const i2wmat4 = model.currentInput.getIndexToWorld();\n    mat4.multiply(model.idxToView, model.modelToView, i2wmat4);\n    mat3.multiply(model.idxNormalMatrix, keyMats.normalMatrix, actMats.normalMatrix);\n    mat3.multiply(model.idxNormalMatrix, model.idxNormalMatrix, model.currentInput.getDirectionByReference());\n    const maxSamples = vec3.length(vsize) / publicAPI.getCurrentSampleDistance(ren);\n    if (maxSamples > model.renderable.getMaximumSamplesPerRay()) {\n      vtkWarningMacro(`The number of steps required ${Math.ceil(maxSamples)} is larger than the\n        specified maximum number of steps ${model.renderable.getMaximumSamplesPerRay()}.\n        Please either change the\n        volumeMapper sampleDistance or its maximum number of samples.`);\n    }\n    const vctoijk = new Float64Array(3);\n    vec3.set(vctoijk, 1.0, 1.0, 1.0);\n    vec3.divide(vctoijk, vctoijk, vsize);\n    program.setUniform3f('vVCToIJK', vctoijk[0], vctoijk[1], vctoijk[2]);\n    program.setUniform3i('volumeDimensions', dims[0], dims[1], dims[2]);\n    program.setUniform3f('volumeSpacings', spc[0], spc[1], spc[2]);\n    if (!model._openGLRenderWindow.getWebgl2()) {\n      const volInfo = model.scalarTexture.getVolumeInfo();\n      program.setUniformf('texWidth', model.scalarTexture.getWidth());\n      program.setUniformf('texHeight', model.scalarTexture.getHeight());\n      program.setUniformi('xreps', volInfo.xreps);\n      program.setUniformi('xstride', volInfo.xstride);\n      program.setUniformi('ystride', volInfo.ystride);\n    }\n\n    // map normals through normal matrix\n    // then use a point on the plane to compute the distance\n    const normal = new Float64Array(3);\n    const pos2 = new Float64Array(3);\n    for (let i = 0; i < 6; ++i) {\n      switch (i) {\n        case 1:\n          vec3.set(normal, -1.0, 0.0, 0.0);\n          vec3.set(pos2, ext[0], ext[2], ext[4]);\n          break;\n        case 2:\n          vec3.set(normal, 0.0, 1.0, 0.0);\n          vec3.set(pos2, ext[1], ext[3], ext[5]);\n          break;\n        case 3:\n          vec3.set(normal, 0.0, -1.0, 0.0);\n          vec3.set(pos2, ext[0], ext[2], ext[4]);\n          break;\n        case 4:\n          vec3.set(normal, 0.0, 0.0, 1.0);\n          vec3.set(pos2, ext[1], ext[3], ext[5]);\n          break;\n        case 5:\n          vec3.set(normal, 0.0, 0.0, -1.0);\n          vec3.set(pos2, ext[0], ext[2], ext[4]);\n          break;\n        case 0:\n        default:\n          vec3.set(normal, 1.0, 0.0, 0.0);\n          vec3.set(pos2, ext[1], ext[3], ext[5]);\n          break;\n      }\n      vec3.transformMat3(normal, normal, model.idxNormalMatrix);\n      vec3.transformMat4(pos2, pos2, model.idxToView);\n      const dist = -1.0 * vec3.dot(pos2, normal);\n\n      // we have the plane in view coordinates\n      // specify the planes in view coordinates\n      program.setUniform3f(`vPlaneNormal${i}`, normal[0], normal[1], normal[2]);\n      program.setUniformf(`vPlaneDistance${i}`, dist);\n    }\n    if (publicAPI.isLabelmapOutlineRequired(actor)) {\n      const image = model.currentInput;\n      const worldToIndex = image.getWorldToIndex();\n      program.setUniformMatrix('vWCtoIDX', worldToIndex);\n      const camera = ren.getActiveCamera();\n      const [cRange0, cRange1] = camera.getClippingRange();\n      const distance = camera.getDistance();\n\n      // set the clipping range to be model.distance and model.distance + 0.1\n      // since we use the in the keyMats.wcpc (world to projection) matrix\n      // the projection matrix calculation relies on the clipping range to be\n      // set correctly. This is done inside the interactorStyleMPRSlice which\n      // limits use cases where the interactor style is not used.\n\n      camera.setClippingRange(distance, distance + 0.1);\n      const labelOutlineKeyMats = model.openGLCamera.getKeyMatrices(ren);\n\n      // Get the projection coordinate to world coordinate transformation matrix.\n      mat4.invert(model.projectionToWorld, labelOutlineKeyMats.wcpc);\n\n      // reset the clipping range since the keyMats are cached\n      camera.setClippingRange(cRange0, cRange1);\n\n      // to re compute the matrices for the current camera and cache them\n      model.openGLCamera.getKeyMatrices(ren);\n      program.setUniformMatrix('PCWCMatrix', model.projectionToWorld);\n      const size = publicAPI.getRenderTargetSize();\n      program.setUniformf('vpWidth', size[0]);\n      program.setUniformf('vpHeight', size[1]);\n      const offset = publicAPI.getRenderTargetOffset();\n      program.setUniformf('vpOffsetX', offset[0] / size[0]);\n      program.setUniformf('vpOffsetY', offset[1] / size[1]);\n    }\n    mat4.invert(model.projectionToView, keyMats.vcpc);\n    program.setUniformMatrix('PCVCMatrix', model.projectionToView);\n\n    // handle lighting values\n    if (model.lightComplexity === 0) {\n      return;\n    }\n    let lightNum = 0;\n    const lightColor = [];\n    const lightDir = [];\n    const halfAngle = [];\n    ren.getLights().forEach(light => {\n      const status = light.getSwitch();\n      if (status > 0) {\n        const dColor = light.getColor();\n        const intensity = light.getIntensity();\n        lightColor[0 + lightNum * 3] = dColor[0] * intensity;\n        lightColor[1 + lightNum * 3] = dColor[1] * intensity;\n        lightColor[2 + lightNum * 3] = dColor[2] * intensity;\n        const ldir = light.getDirection();\n        vec3.set(normal, ldir[0], ldir[1], ldir[2]);\n        vec3.transformMat3(normal, normal, keyMats.normalMatrix); // in view coordinat\n        vec3.normalize(normal, normal);\n        lightDir[0 + lightNum * 3] = normal[0];\n        lightDir[1 + lightNum * 3] = normal[1];\n        lightDir[2 + lightNum * 3] = normal[2];\n        // camera DOP is 0,0,-1.0 in VC\n        halfAngle[0 + lightNum * 3] = -0.5 * normal[0];\n        halfAngle[1 + lightNum * 3] = -0.5 * normal[1];\n        halfAngle[2 + lightNum * 3] = -0.5 * (normal[2] - 1.0);\n        lightNum++;\n      }\n    });\n    program.setUniformi('twoSidedLighting', ren.getTwoSidedLighting());\n    program.setUniformi('lightNum', lightNum);\n    program.setUniform3fv('lightColor', lightColor);\n    program.setUniform3fv('lightDirectionVC', lightDir);\n    program.setUniform3fv('lightHalfAngleVC', halfAngle);\n    if (model.lightComplexity === 3) {\n      lightNum = 0;\n      const lightPositionVC = [];\n      const lightAttenuation = [];\n      const lightConeAngle = [];\n      const lightExponent = [];\n      const lightPositional = [];\n      ren.getLights().forEach(light => {\n        const status = light.getSwitch();\n        if (status > 0) {\n          const attenuation = light.getAttenuationValues();\n          lightAttenuation[0 + lightNum * 3] = attenuation[0];\n          lightAttenuation[1 + lightNum * 3] = attenuation[1];\n          lightAttenuation[2 + lightNum * 3] = attenuation[2];\n          lightExponent[lightNum] = light.getExponent();\n          lightConeAngle[lightNum] = light.getConeAngle();\n          lightPositional[lightNum] = light.getPositional();\n          const lp = light.getTransformedPosition();\n          vec3.transformMat4(lp, lp, model.modelToView);\n          lightPositionVC[0 + lightNum * 3] = lp[0];\n          lightPositionVC[1 + lightNum * 3] = lp[1];\n          lightPositionVC[2 + lightNum * 3] = lp[2];\n          lightNum += 1;\n        }\n      });\n      program.setUniform3fv('lightPositionVC', lightPositionVC);\n      program.setUniform3fv('lightAttenuation', lightAttenuation);\n      program.setUniformfv('lightConeAngle', lightConeAngle);\n      program.setUniformfv('lightExponent', lightExponent);\n      program.setUniformiv('lightPositional', lightPositional);\n    }\n    if (model.renderable.getVolumetricScatteringBlending() > 0.0) {\n      program.setUniformf('giReach', model.renderable.getGlobalIlluminationReach());\n      program.setUniformf('volumetricScatteringBlending', model.renderable.getVolumetricScatteringBlending());\n      program.setUniformf('volumeShadowSamplingDistFactor', model.renderable.getVolumeShadowSamplingDistFactor());\n      program.setUniformf('anisotropy', model.renderable.getAnisotropy());\n      program.setUniformf('anisotropy2', model.renderable.getAnisotropy() ** 2.0);\n    }\n    if (model.renderable.getLocalAmbientOcclusion() && actor.getProperty().getAmbient() > 0.0) {\n      const ks = model.renderable.getLAOKernelSize();\n      program.setUniformi('kernelSize', ks);\n      const kernelSample = [];\n      for (let i = 0; i < ks; i++) {\n        kernelSample[i * 2] = Math.random() * 0.5;\n        kernelSample[i * 2 + 1] = Math.random() * 0.5;\n      }\n      program.setUniform2fv('kernelSample', kernelSample);\n      program.setUniformi('kernelRadius', model.renderable.getLAOKernelRadius());\n    }\n  };\n  publicAPI.setPropertyShaderParameters = (cellBO, ren, actor) => {\n    const program = cellBO.getProgram();\n    program.setUniformi('ctexture', model.colorTexture.getTextureUnit());\n    program.setUniformi('otexture', model.opacityTexture.getTextureUnit());\n    program.setUniformi('jtexture', model.jitterTexture.getTextureUnit());\n    program.setUniformi('ttexture', model.labelOutlineThicknessTexture.getTextureUnit());\n    const volInfo = model.scalarTexture.getVolumeInfo();\n    const vprop = actor.getProperty();\n\n    // set the component mix when independent\n    const numComp = model.scalarTexture.getComponents();\n    const useIndependentComps = publicAPI.useIndependentComponents(vprop);\n    if (useIndependentComps) {\n      for (let i = 0; i < numComp; i++) {\n        program.setUniformf(`mix${i}`, actor.getProperty().getComponentWeight(i));\n      }\n    }\n\n    // three levels of shift scale combined into one\n    // for performance in the fragment shader\n    for (let i = 0; i < numComp; i++) {\n      const target = useIndependentComps ? i : 0;\n      const sscale = volInfo.scale[i];\n      const ofun = vprop.getScalarOpacity(target);\n      const oRange = ofun.getRange();\n      const oscale = sscale / (oRange[1] - oRange[0]);\n      const oshift = (volInfo.offset[i] - oRange[0]) / (oRange[1] - oRange[0]);\n      program.setUniformf(`oshift${i}`, oshift);\n      program.setUniformf(`oscale${i}`, oscale);\n      const cfun = vprop.getRGBTransferFunction(target);\n      const cRange = cfun.getRange();\n      const cshift = (volInfo.offset[i] - cRange[0]) / (cRange[1] - cRange[0]);\n      const cScale = sscale / (cRange[1] - cRange[0]);\n      program.setUniformf(`cshift${i}`, cshift);\n      program.setUniformf(`cscale${i}`, cScale);\n    }\n    if (model.gopacity) {\n      if (useIndependentComps) {\n        for (let nc = 0; nc < numComp; ++nc) {\n          const sscale = volInfo.scale[nc];\n          const useGO = vprop.getUseGradientOpacity(nc);\n          if (useGO) {\n            const gomin = vprop.getGradientOpacityMinimumOpacity(nc);\n            const gomax = vprop.getGradientOpacityMaximumOpacity(nc);\n            program.setUniformf(`gomin${nc}`, gomin);\n            program.setUniformf(`gomax${nc}`, gomax);\n            const goRange = [vprop.getGradientOpacityMinimumValue(nc), vprop.getGradientOpacityMaximumValue(nc)];\n            program.setUniformf(`goscale${nc}`, sscale * (gomax - gomin) / (goRange[1] - goRange[0]));\n            program.setUniformf(`goshift${nc}`, -goRange[0] * (gomax - gomin) / (goRange[1] - goRange[0]) + gomin);\n          } else {\n            program.setUniformf(`gomin${nc}`, 1.0);\n            program.setUniformf(`gomax${nc}`, 1.0);\n            program.setUniformf(`goscale${nc}`, 0.0);\n            program.setUniformf(`goshift${nc}`, 1.0);\n          }\n        }\n      } else {\n        const sscale = volInfo.scale[numComp - 1];\n        const gomin = vprop.getGradientOpacityMinimumOpacity(0);\n        const gomax = vprop.getGradientOpacityMaximumOpacity(0);\n        program.setUniformf('gomin0', gomin);\n        program.setUniformf('gomax0', gomax);\n        const goRange = [vprop.getGradientOpacityMinimumValue(0), vprop.getGradientOpacityMaximumValue(0)];\n        program.setUniformf('goscale0', sscale * (gomax - gomin) / (goRange[1] - goRange[0]));\n        program.setUniformf('goshift0', -goRange[0] * (gomax - gomin) / (goRange[1] - goRange[0]) + gomin);\n      }\n    }\n    const vtkImageLabelOutline = publicAPI.isLabelmapOutlineRequired(actor);\n    if (vtkImageLabelOutline === true) {\n      const labelOutlineOpacity = actor.getProperty().getLabelOutlineOpacity();\n      program.setUniformf('outlineOpacity', labelOutlineOpacity);\n    }\n    if (model.lightComplexity > 0) {\n      program.setUniformf('vAmbient', vprop.getAmbient());\n      program.setUniformf('vDiffuse', vprop.getDiffuse());\n      program.setUniformf('vSpecular', vprop.getSpecular());\n      program.setUniformf('vSpecularPower', vprop.getSpecularPower());\n    }\n  };\n  publicAPI.getClippingPlaneShaderParameters = (cellBO, ren, actor) => {\n    if (model.renderable.getClippingPlanes().length > 0) {\n      const keyMats = model.openGLCamera.getKeyMatrices(ren);\n      const clipPlaneNormals = [];\n      const clipPlaneDistances = [];\n      const clipPlaneOrigins = [];\n      const clipPlanes = model.renderable.getClippingPlanes();\n      const clipPlaneSize = clipPlanes.length;\n      for (let i = 0; i < clipPlaneSize; ++i) {\n        const clipPlaneNormal = clipPlanes[i].getNormal();\n        const clipPlanePos = clipPlanes[i].getOrigin();\n        vec3.transformMat3(clipPlaneNormal, clipPlaneNormal, keyMats.normalMatrix);\n        vec3.transformMat4(clipPlanePos, clipPlanePos, keyMats.wcvc);\n        const clipPlaneDist = -1.0 * vec3.dot(clipPlanePos, clipPlaneNormal);\n        clipPlaneNormals.push(clipPlaneNormal[0]);\n        clipPlaneNormals.push(clipPlaneNormal[1]);\n        clipPlaneNormals.push(clipPlaneNormal[2]);\n        clipPlaneDistances.push(clipPlaneDist);\n        clipPlaneOrigins.push(clipPlanePos[0]);\n        clipPlaneOrigins.push(clipPlanePos[1]);\n        clipPlaneOrigins.push(clipPlanePos[2]);\n      }\n      const program = cellBO.getProgram();\n      program.setUniform3fv(`vClipPlaneNormals`, clipPlaneNormals);\n      program.setUniformfv(`vClipPlaneDistances`, clipPlaneDistances);\n      program.setUniform3fv(`vClipPlaneOrigins`, clipPlaneOrigins);\n      program.setUniformi(`clip_numPlanes`, clipPlaneSize);\n    }\n  };\n\n  // unsubscribe from our listeners\n  publicAPI.delete = chain(() => {\n    if (model._animationRateSubscription) {\n      model._animationRateSubscription.unsubscribe();\n      model._animationRateSubscription = null;\n    }\n  }, () => {\n    if (model._openGLRenderWindow) {\n      unregisterGraphicsResources(model._openGLRenderWindow);\n    }\n  }, publicAPI.delete);\n  publicAPI.getRenderTargetSize = () => {\n    if (model._useSmallViewport) {\n      return [model._smallViewportWidth, model._smallViewportHeight];\n    }\n    const {\n      usize,\n      vsize\n    } = model._openGLRenderer.getTiledSizeAndOrigin();\n    return [usize, vsize];\n  };\n  publicAPI.getRenderTargetOffset = () => {\n    const {\n      lowerLeftU,\n      lowerLeftV\n    } = model._openGLRenderer.getTiledSizeAndOrigin();\n    return [lowerLeftU, lowerLeftV];\n  };\n  publicAPI.getCurrentSampleDistance = ren => {\n    const rwi = ren.getVTKWindow().getInteractor();\n    const baseSampleDistance = model.renderable.getSampleDistance();\n    if (rwi.isAnimating()) {\n      const factor = model.renderable.getInteractionSampleDistanceFactor();\n      return baseSampleDistance * factor;\n    }\n    return baseSampleDistance;\n  };\n  publicAPI.renderPieceStart = (ren, actor) => {\n    const rwi = ren.getVTKWindow().getInteractor();\n    if (!model._lastScale) {\n      model._lastScale = model.renderable.getInitialInteractionScale();\n    }\n    model._useSmallViewport = false;\n    if (rwi.isAnimating() && model._lastScale > 1.5) {\n      model._useSmallViewport = true;\n    }\n    if (!model._animationRateSubscription) {\n      // when the animation frame rate changes recompute the scale factor\n      model._animationRateSubscription = rwi.onAnimationFrameRateUpdate(() => {\n        if (model.renderable.getAutoAdjustSampleDistances()) {\n          const frate = rwi.getRecentAnimationFrameRate();\n          const adjustment = rwi.getDesiredUpdateRate() / frate;\n\n          // only change if we are off by 15%\n          if (adjustment > 1.15 || adjustment < 0.85) {\n            model._lastScale *= adjustment;\n          }\n          // clamp scale to some reasonable values.\n          // Below 1.5 we will just be using full resolution as that is close enough\n          // Above 400 seems like a lot so we limit to that 1/20th per axis\n          if (model._lastScale > 400) {\n            model._lastScale = 400;\n          }\n          if (model._lastScale < 1.5) {\n            model._lastScale = 1.5;\n          }\n        } else {\n          model._lastScale = model.renderable.getImageSampleDistance() * model.renderable.getImageSampleDistance();\n        }\n      });\n    }\n\n    // use/create/resize framebuffer if needed\n    if (model._useSmallViewport) {\n      const size = model._openGLRenderWindow.getFramebufferSize();\n      const scaleFactor = 1 / Math.sqrt(model._lastScale);\n      model._smallViewportWidth = Math.ceil(scaleFactor * size[0]);\n      model._smallViewportHeight = Math.ceil(scaleFactor * size[1]);\n\n      // adjust viewportSize to always be at most the dest fo size\n      if (model._smallViewportHeight > size[1]) {\n        model._smallViewportHeight = size[1];\n      }\n      if (model._smallViewportWidth > size[0]) {\n        model._smallViewportWidth = size[0];\n      }\n      model.framebuffer.saveCurrentBindingsAndBuffers();\n      if (model.framebuffer.getGLFramebuffer() === null) {\n        model.framebuffer.create(size[0], size[1]);\n        model.framebuffer.populateFramebuffer();\n      } else {\n        const fbSize = model.framebuffer.getSize();\n        if (!fbSize || fbSize[0] !== size[0] || fbSize[1] !== size[1]) {\n          model.framebuffer.create(size[0], size[1]);\n          model.framebuffer.populateFramebuffer();\n        }\n      }\n      model.framebuffer.bind();\n      const gl = model.context;\n      gl.clearColor(0.0, 0.0, 0.0, 0.0);\n      gl.colorMask(true, true, true, true);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      gl.viewport(0, 0, model._smallViewportWidth, model._smallViewportHeight);\n      model.fvp = [model._smallViewportWidth / size[0], model._smallViewportHeight / size[1]];\n    }\n    model.context.disable(model.context.DEPTH_TEST);\n\n    // make sure the BOs are up to date\n    publicAPI.updateBufferObjects(ren, actor);\n\n    // set interpolation on the texture based on property setting\n    const iType = actor.getProperty().getInterpolationType();\n    if (iType === InterpolationType.NEAREST) {\n      model.scalarTexture.setMinificationFilter(Filter.NEAREST);\n      model.scalarTexture.setMagnificationFilter(Filter.NEAREST);\n    } else {\n      model.scalarTexture.setMinificationFilter(Filter.LINEAR);\n      model.scalarTexture.setMagnificationFilter(Filter.LINEAR);\n    }\n\n    // if we have a zbuffer texture then activate it\n    if (model.zBufferTexture !== null) {\n      model.zBufferTexture.activate();\n    }\n  };\n  publicAPI.renderPieceDraw = (ren, actor) => {\n    const gl = model.context;\n\n    // render the texture\n    model.scalarTexture.activate();\n    model.opacityTexture.activate();\n    model.labelOutlineThicknessTexture.activate();\n    model.colorTexture.activate();\n    model.jitterTexture.activate();\n    publicAPI.updateShaders(model.tris, ren, actor);\n\n    // First we do the triangles, update the shader, set uniforms, etc.\n    // for (let i = 0; i < 11; ++i) {\n    //   gl.drawArrays(gl.TRIANGLES, 66 * i, 66);\n    // }\n    gl.drawArrays(gl.TRIANGLES, 0, model.tris.getCABO().getElementCount());\n    model.tris.getVAO().release();\n    model.scalarTexture.deactivate();\n    model.colorTexture.deactivate();\n    model.opacityTexture.deactivate();\n    model.labelOutlineThicknessTexture.deactivate();\n    model.jitterTexture.deactivate();\n  };\n  publicAPI.renderPieceFinish = (ren, actor) => {\n    // if we have a zbuffer texture then deactivate it\n    if (model.zBufferTexture !== null) {\n      model.zBufferTexture.deactivate();\n    }\n    if (model._useSmallViewport) {\n      // now copy the framebuffer with the volume into the\n      // regular buffer\n      model.framebuffer.restorePreviousBindingsAndBuffers();\n      if (model.copyShader === null) {\n        model.copyShader = model._openGLRenderWindow.getShaderCache().readyShaderProgramArray(['//VTK::System::Dec', 'attribute vec4 vertexDC;', 'uniform vec2 tfactor;', 'varying vec2 tcoord;', 'void main() { tcoord = vec2(vertexDC.x*0.5 + 0.5, vertexDC.y*0.5 + 0.5) * tfactor; gl_Position = vertexDC; }'].join('\\n'), ['//VTK::System::Dec', '//VTK::Output::Dec', 'uniform sampler2D texture1;', 'varying vec2 tcoord;', 'void main() { gl_FragData[0] = texture2D(texture1,tcoord); }'].join('\\n'), '');\n        const program = model.copyShader;\n        model.copyVAO = vtkVertexArrayObject.newInstance();\n        model.copyVAO.setOpenGLRenderWindow(model._openGLRenderWindow);\n        model.tris.getCABO().bind();\n        if (!model.copyVAO.addAttributeArray(program, model.tris.getCABO(), 'vertexDC', model.tris.getCABO().getVertexOffset(), model.tris.getCABO().getStride(), model.context.FLOAT, 3, model.context.FALSE)) {\n          vtkErrorMacro('Error setting vertexDC in copy shader VAO.');\n        }\n      } else {\n        model._openGLRenderWindow.getShaderCache().readyShaderProgram(model.copyShader);\n      }\n      const size = model._openGLRenderWindow.getFramebufferSize();\n      model.context.viewport(0, 0, size[0], size[1]);\n\n      // activate texture\n      const tex = model.framebuffer.getColorTexture();\n      tex.activate();\n      model.copyShader.setUniformi('texture', tex.getTextureUnit());\n      model.copyShader.setUniform2f('tfactor', model.fvp[0], model.fvp[1]);\n      const gl = model.context;\n      gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n      // render quad\n      model.context.drawArrays(model.context.TRIANGLES, 0, model.tris.getCABO().getElementCount());\n      tex.deactivate();\n      gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    }\n  };\n  publicAPI.renderPiece = (ren, actor) => {\n    publicAPI.invokeEvent({\n      type: 'StartEvent'\n    });\n    model.renderable.update();\n    model.currentInput = model.renderable.getInputData();\n    publicAPI.invokeEvent({\n      type: 'EndEvent'\n    });\n    if (!model.currentInput) {\n      vtkErrorMacro('No input!');\n      return;\n    }\n    publicAPI.renderPieceStart(ren, actor);\n    publicAPI.renderPieceDraw(ren, actor);\n    publicAPI.renderPieceFinish(ren, actor);\n  };\n  publicAPI.computeBounds = (ren, actor) => {\n    if (!publicAPI.getInput()) {\n      uninitializeBounds(model.Bounds);\n      return;\n    }\n    model.bounds = publicAPI.getInput().getBounds();\n  };\n  publicAPI.updateBufferObjects = (ren, actor) => {\n    // Rebuild buffers if needed\n    if (publicAPI.getNeedToRebuildBufferObjects(ren, actor)) {\n      publicAPI.buildBufferObjects(ren, actor);\n    }\n  };\n  publicAPI.getNeedToRebuildBufferObjects = (ren, actor) => {\n    // first do a coarse check\n    if (model.VBOBuildTime.getMTime() < publicAPI.getMTime() || model.VBOBuildTime.getMTime() < actor.getMTime() || model.VBOBuildTime.getMTime() < model.renderable.getMTime() || model.VBOBuildTime.getMTime() < actor.getProperty().getMTime() || model.VBOBuildTime.getMTime() < model.currentInput.getMTime() || !model.scalarTexture?.getHandle() || !model.colorTexture?.getHandle() || !model.labelOutlineThicknessTexture?.getHandle()) {\n      return true;\n    }\n    return false;\n  };\n  publicAPI.buildBufferObjects = (ren, actor) => {\n    const image = model.currentInput;\n    if (!image) {\n      return;\n    }\n    const scalars = image.getPointData() && image.getPointData().getScalars();\n    if (!scalars) {\n      return;\n    }\n    const vprop = actor.getProperty();\n    if (!model.jitterTexture.getHandle()) {\n      const oTable = new Uint8Array(32 * 32);\n      for (let i = 0; i < 32 * 32; ++i) {\n        oTable[i] = 255.0 * Math.random();\n      }\n      model.jitterTexture.setMinificationFilter(Filter.LINEAR);\n      model.jitterTexture.setMagnificationFilter(Filter.LINEAR);\n      model.jitterTexture.create2DFromRaw(32, 32, 1, VtkDataTypes.UNSIGNED_CHAR, oTable);\n    }\n    const numComp = scalars.getNumberOfComponents();\n    const useIndependentComps = publicAPI.useIndependentComponents(vprop);\n    const numIComps = useIndependentComps ? numComp : 1;\n    const scalarOpacityFunc = vprop.getScalarOpacity();\n    const opTex = model._openGLRenderWindow.getGraphicsResourceForObject(scalarOpacityFunc);\n    let toString = getTransferFunctionHash(scalarOpacityFunc, useIndependentComps, numIComps);\n    const reBuildOp = !opTex?.oglObject || opTex.hash !== toString;\n    if (reBuildOp) {\n      model.opacityTexture = vtkOpenGLTexture.newInstance();\n      model.opacityTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      // rebuild opacity tfun?\n      const oWidth = 1024;\n      const oSize = oWidth * 2 * numIComps;\n      const ofTable = new Float32Array(oSize);\n      const tmpTable = new Float32Array(oWidth);\n      for (let c = 0; c < numIComps; ++c) {\n        const ofun = vprop.getScalarOpacity(c);\n        const opacityFactor = publicAPI.getCurrentSampleDistance(ren) / vprop.getScalarOpacityUnitDistance(c);\n        const oRange = ofun.getRange();\n        ofun.getTable(oRange[0], oRange[1], oWidth, tmpTable, 1);\n        // adjust for sample distance etc\n        for (let i = 0; i < oWidth; ++i) {\n          ofTable[c * oWidth * 2 + i] = 1.0 - (1.0 - tmpTable[i]) ** opacityFactor;\n          ofTable[c * oWidth * 2 + i + oWidth] = ofTable[c * oWidth * 2 + i];\n        }\n      }\n      model.opacityTexture.resetFormatAndType();\n      model.opacityTexture.setMinificationFilter(Filter.LINEAR);\n      model.opacityTexture.setMagnificationFilter(Filter.LINEAR);\n\n      // use float texture where possible because we really need the resolution\n      // for this table. Errors in low values of opacity accumulate to\n      // visible artifacts. High values of opacity quickly terminate without\n      // artifacts.\n      if (model._openGLRenderWindow.getWebgl2() || model.context.getExtension('OES_texture_float') && model.context.getExtension('OES_texture_float_linear')) {\n        model.opacityTexture.create2DFromRaw(oWidth, 2 * numIComps, 1, VtkDataTypes.FLOAT, ofTable);\n      } else {\n        const oTable = new Uint8ClampedArray(oSize);\n        for (let i = 0; i < oSize; ++i) {\n          oTable[i] = 255.0 * ofTable[i];\n        }\n        model.opacityTexture.create2DFromRaw(oWidth, 2 * numIComps, 1, VtkDataTypes.UNSIGNED_CHAR, oTable);\n      }\n      if (scalarOpacityFunc) {\n        model._openGLRenderWindow.setGraphicsResourceForObject(scalarOpacityFunc, model.opacityTexture, toString);\n        if (scalarOpacityFunc !== model._scalarOpacityFunc) {\n          model._openGLRenderWindow.registerGraphicsResourceUser(scalarOpacityFunc, publicAPI);\n          model._openGLRenderWindow.unregisterGraphicsResourceUser(model._scalarOpacityFunc, publicAPI);\n        }\n        model._scalarOpacityFunc = scalarOpacityFunc;\n      }\n    } else {\n      model.opacityTexture = opTex.oglObject;\n    }\n\n    // rebuild color tfun?\n    const colorTransferFunc = vprop.getRGBTransferFunction();\n    toString = getTransferFunctionHash(colorTransferFunc, useIndependentComps, numIComps);\n    const cTex = model._openGLRenderWindow.getGraphicsResourceForObject(colorTransferFunc);\n    const reBuildC = !cTex?.oglObject?.getHandle() || cTex?.hash !== toString;\n    if (reBuildC) {\n      model.colorTexture = vtkOpenGLTexture.newInstance();\n      model.colorTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      const cWidth = 1024;\n      const cSize = cWidth * 2 * numIComps * 3;\n      const cTable = new Uint8ClampedArray(cSize);\n      const tmpTable = new Float32Array(cWidth * 3);\n      for (let c = 0; c < numIComps; ++c) {\n        const cfun = vprop.getRGBTransferFunction(c);\n        const cRange = cfun.getRange();\n        cfun.getTable(cRange[0], cRange[1], cWidth, tmpTable, 1);\n        for (let i = 0; i < cWidth * 3; ++i) {\n          cTable[c * cWidth * 6 + i] = 255.0 * tmpTable[i];\n          cTable[c * cWidth * 6 + i + cWidth * 3] = 255.0 * tmpTable[i];\n        }\n      }\n      model.colorTexture.resetFormatAndType();\n      model.colorTexture.setMinificationFilter(Filter.LINEAR);\n      model.colorTexture.setMagnificationFilter(Filter.LINEAR);\n      model.colorTexture.create2DFromRaw(cWidth, 2 * numIComps, 3, VtkDataTypes.UNSIGNED_CHAR, cTable);\n      if (colorTransferFunc) {\n        model._openGLRenderWindow.setGraphicsResourceForObject(colorTransferFunc, model.colorTexture, toString);\n        if (colorTransferFunc !== model._colorTransferFunc) {\n          model._openGLRenderWindow.registerGraphicsResourceUser(colorTransferFunc, publicAPI);\n          model._openGLRenderWindow.unregisterGraphicsResourceUser(model._colorTransferFunc, publicAPI);\n        }\n        model._colorTransferFunc = colorTransferFunc;\n      }\n    } else {\n      model.colorTexture = cTex.oglObject;\n    }\n    publicAPI.updateLabelOutlineThicknessTexture(actor);\n    const tex = model._openGLRenderWindow.getGraphicsResourceForObject(scalars);\n    // rebuild the scalarTexture if the data has changed\n    toString = getImageDataHash(image, scalars);\n    const reBuildTex = !tex?.oglObject?.getHandle() || tex?.hash !== toString;\n    if (reBuildTex) {\n      model.scalarTexture = vtkOpenGLTexture.newInstance();\n      model.scalarTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      // Build the textures\n      const dims = image.getDimensions();\n      // Use norm16 for scalar texture if the extension is available\n      model.scalarTexture.setOglNorm16Ext(model.context.getExtension('EXT_texture_norm16'));\n      model.scalarTexture.resetFormatAndType();\n      model.scalarTexture.create3DFilterableFromDataArray(dims[0], dims[1], dims[2], scalars, model.renderable.getPreferSizeOverAccuracy());\n      if (scalars) {\n        model._openGLRenderWindow.setGraphicsResourceForObject(scalars, model.scalarTexture, toString);\n        if (scalars !== model._scalars) {\n          model._openGLRenderWindow.registerGraphicsResourceUser(scalars, publicAPI);\n          model._openGLRenderWindow.unregisterGraphicsResourceUser(model._scalars, publicAPI);\n        }\n        model._scalars = scalars;\n      }\n    } else {\n      model.scalarTexture = tex.oglObject;\n    }\n    if (!model.tris.getCABO().getElementCount()) {\n      // build the CABO\n      const ptsArray = new Float32Array(12);\n      for (let i = 0; i < 4; i++) {\n        ptsArray[i * 3] = i % 2 * 2 - 1.0;\n        ptsArray[i * 3 + 1] = i > 1 ? 1.0 : -1.0;\n        ptsArray[i * 3 + 2] = -1.0;\n      }\n      const cellArray = new Uint16Array(8);\n      cellArray[0] = 3;\n      cellArray[1] = 0;\n      cellArray[2] = 1;\n      cellArray[3] = 3;\n      cellArray[4] = 3;\n      cellArray[5] = 0;\n      cellArray[6] = 3;\n      cellArray[7] = 2;\n\n      // const dim = 12.0;\n      // const ptsArray = new Float32Array(3 * dim * dim);\n      // for (let i = 0; i < dim; i++) {\n      //   for (let j = 0; j < dim; j++) {\n      //     const offset = ((i * dim) + j) * 3;\n      //     ptsArray[offset] = (2.0 * (i / (dim - 1.0))) - 1.0;\n      //     ptsArray[offset + 1] = (2.0 * (j / (dim - 1.0))) - 1.0;\n      //     ptsArray[offset + 2] = -1.0;\n      //   }\n      // }\n\n      // const cellArray = new Uint16Array(8 * (dim - 1) * (dim - 1));\n      // for (let i = 0; i < dim - 1; i++) {\n      //   for (let j = 0; j < dim - 1; j++) {\n      //     const offset = 8 * ((i * (dim - 1)) + j);\n      //     cellArray[offset] = 3;\n      //     cellArray[offset + 1] = (i * dim) + j;\n      //     cellArray[offset + 2] = (i * dim) + 1 + j;\n      //     cellArray[offset + 3] = ((i + 1) * dim) + 1 + j;\n      //     cellArray[offset + 4] = 3;\n      //     cellArray[offset + 5] = (i * dim) + j;\n      //     cellArray[offset + 6] = ((i + 1) * dim) + 1 + j;\n      //     cellArray[offset + 7] = ((i + 1) * dim) + j;\n      //   }\n      // }\n\n      const points = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        values: ptsArray\n      });\n      points.setName('points');\n      const cells = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        values: cellArray\n      });\n      model.tris.getCABO().createVBO(cells, 'polys', Representation.SURFACE, {\n        points,\n        cellOffset: 0\n      });\n    }\n    model.VBOBuildTime.modified();\n  };\n  publicAPI.updateLabelOutlineThicknessTexture = volume => {\n    const labelOutlineThicknessArray = volume.getProperty().getLabelOutlineThickness();\n    const lTex = model._openGLRenderWindow.getGraphicsResourceForObject(labelOutlineThicknessArray);\n\n    // compute the join of the labelOutlineThicknessArray so that\n    // we can use it to decide whether to rebuild the labelOutlineThicknessTexture\n    // or not\n    const toString = `${labelOutlineThicknessArray.join('-')}`;\n    const reBuildL = !lTex?.oglObject?.getHandle() || lTex?.hash !== toString;\n    if (reBuildL) {\n      model.labelOutlineThicknessTexture = vtkOpenGLTexture.newInstance();\n      model.labelOutlineThicknessTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      const lWidth = 1024;\n      const lHeight = 1;\n      const lSize = lWidth * lHeight;\n      const lTable = new Uint8Array(lSize);\n\n      // Assuming labelOutlineThicknessArray contains the thickness for each segment\n      for (let i = 0; i < lWidth; ++i) {\n        // Retrieve the thickness value for the current segment index.\n        // If the value is undefined, use the first element's value as a default, otherwise use the value (even if 0)\n        const thickness = typeof labelOutlineThicknessArray[i] !== 'undefined' ? labelOutlineThicknessArray[i] : labelOutlineThicknessArray[0];\n        lTable[i] = thickness;\n      }\n      model.labelOutlineThicknessTexture.resetFormatAndType();\n      model.labelOutlineThicknessTexture.setMinificationFilter(Filter.NEAREST);\n      model.labelOutlineThicknessTexture.setMagnificationFilter(Filter.NEAREST);\n\n      // Create a 2D texture (acting as 1D) from the raw data\n      model.labelOutlineThicknessTexture.create2DFromRaw(lWidth, lHeight, 1, VtkDataTypes.UNSIGNED_CHAR, lTable);\n      if (labelOutlineThicknessArray) {\n        model._openGLRenderWindow.setGraphicsResourceForObject(labelOutlineThicknessArray, model.labelOutlineThicknessTexture, toString);\n        if (labelOutlineThicknessArray !== model._labelOutlineThicknessArray) {\n          model._openGLRenderWindow.registerGraphicsResourceUser(labelOutlineThicknessArray, publicAPI);\n          model._openGLRenderWindow.unregisterGraphicsResourceUser(model._labelOutlineThicknessArray, publicAPI);\n        }\n        model._labelOutlineThicknessArray = labelOutlineThicknessArray;\n      }\n    } else {\n      model.labelOutlineThicknessTexture = lTex.oglObject;\n    }\n  };\n  publicAPI.isLabelmapOutlineRequired = actor => {\n    const prop = actor.getProperty();\n    const renderable = model.renderable;\n    return prop.getUseLabelOutline() || renderable.getBlendMode() === BlendMode.LABELMAP_EDGE_PROJECTION_BLEND;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  VBOBuildTime: null,\n  scalarTexture: null,\n  opacityTexture: null,\n  opacityTextureString: null,\n  colorTexture: null,\n  colorTextureString: null,\n  jitterTexture: null,\n  labelOutlineThicknessTexture: null,\n  labelOutlineThicknessTextureString: null,\n  tris: null,\n  framebuffer: null,\n  copyShader: null,\n  copyVAO: null,\n  lastXYF: 1.0,\n  targetXYF: 1.0,\n  zBufferTexture: null,\n  lastZBufferTexture: null,\n  lightComplexity: 0,\n  fullViewportTime: 1.0,\n  idxToView: null,\n  idxNormalMatrix: null,\n  modelToView: null,\n  projectionToView: null,\n  avgWindowArea: 0.0,\n  avgFrameTime: 0.0\n  // _scalars: null,\n  // _scalarOpacityFunc: null,\n  // _colorTransferFunc: null,\n  // _labelOutlineThicknessArray: null,\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  vtkReplacementShaderMapper.implementBuildShadersWithReplacements(publicAPI, model, initialValues);\n  model.VBOBuildTime = {};\n  obj(model.VBOBuildTime, {\n    mtime: 0\n  });\n  model.tris = vtkHelper.newInstance();\n  model.jitterTexture = vtkOpenGLTexture.newInstance();\n  model.jitterTexture.setWrapS(Wrap.REPEAT);\n  model.jitterTexture.setWrapT(Wrap.REPEAT);\n  model.framebuffer = vtkOpenGLFramebuffer.newInstance();\n  model.idxToView = mat4.identity(new Float64Array(16));\n  model.idxNormalMatrix = mat3.identity(new Float64Array(9));\n  model.modelToView = mat4.identity(new Float64Array(16));\n  model.projectionToView = mat4.identity(new Float64Array(16));\n  model.projectionToWorld = mat4.identity(new Float64Array(16));\n\n  // Build VTK API\n  setGet(publicAPI, model, ['context']);\n\n  // Object methods\n  vtkOpenGLVolumeMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkOpenGLVolumeMapper');\n\n// ----------------------------------------------------------------------------\n\nvar vtkVolumeMapper = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkVolumeMapper', newInstance);\n\nexport { vtkVolumeMapper as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkDataSet from '../../Common/DataModel/DataSet.js';\n\nconst {\n  FieldAssociations\n} = vtkDataSet;\n\n// ----------------------------------------------------------------------------\n// vtkHardwareSelector methods\n// ----------------------------------------------------------------------------\n\nfunction vtkHardwareSelector(publicAPI, model) {\n  model.classHierarchy.push('vtkHardwareSelector');\n\n  // get the source data that is used for generating a selection. This\n  // must be called at least once before calling generateSelection. In\n  // raster based backends this method will capture the buffers. You can\n  // call this once and then make multiple calls to generateSelection.\n  publicAPI.getSourceDataAsync = async (renderer, fx1, fy1, fx2, fy2) => {};\n  publicAPI.selectAsync = async (renderer, fx1, fy1, fx2, fy2) => {\n    const srcData = await publicAPI.getSourceDataAsync(renderer, fx1, fy1, fx2, fy2);\n    if (srcData) {\n      return srcData.generateSelection(fx1, fy1, fx2, fy2);\n    }\n    return [];\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  fieldAssociation: FieldAssociations.FIELD_ASSOCIATION_CELLS,\n  captureZValues: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['fieldAssociation', 'captureZValues']);\n\n  // Object methods\n  vtkHardwareSelector(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkHardwareSelector');\n\n// ----------------------------------------------------------------------------\n\nvar vtkHardwareSelector$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkHardwareSelector$1 as default, extend, newInstance };\n","/**\n * The (primary) property that describes the content of a selection\n * node's data. Other auxiliary description properties follow.\n * GLOBALIDS means that the selection list contains values from the\n * vtkDataSetAttribute array of the same name.\n * PEDIGREEIDS means that the selection list contains values from the\n * vtkDataSetAttribute array of the same name.\n * VALUES means the the selection list contains values from an\n * arbitrary attribute array (ignores any globalids attribute)\n * INDICES means that the selection list contains indexes into the\n * cell or point arrays.\n * FRUSTUM means the set of points and cells inside a frustum\n * LOCATIONS means the set of points and cells near a set of positions\n * THRESHOLDS means the points and cells with values within a set of ranges\n * getContentType() returns -1 if the content type is not set.\n */\n\n// Specify how data arrays can be used by data objects\nconst SelectionContent = {\n  GLOBALIDS: 0,\n  PEDIGREEIDS: 1,\n  VALUES: 2,\n  INDICES: 3,\n  FRUSTUM: 4,\n  LOCATIONS: 5,\n  THRESHOLDS: 6,\n  BLOCKS: 7,\n  QUERY: 8\n};\nconst SelectionField = {\n  CELL: 0,\n  POINT: 1,\n  FIELD: 2,\n  VERTEX: 3,\n  EDGE: 4,\n  ROW: 5\n};\nvar Constants = {\n  SelectionContent,\n  SelectionField\n};\n\nexport { SelectionContent, SelectionField, Constants as default };\n","import { m as macro } from '../../macros2.js';\nimport Constants from './SelectionNode/Constants.js';\n\n// ----------------------------------------------------------------------------\n// vtkSelectionNode methods\n// ----------------------------------------------------------------------------\n\nfunction vtkSelectionNode(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkSelectionNode');\n  publicAPI.getBounds = () => model.points.getBounds();\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  contentType: -1,\n  fieldType: -1,\n  properties: null,\n  selectionList: []\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  macro.obj(publicAPI, model);\n  model.properties = {};\n  macro.setGet(publicAPI, model, ['contentType', 'fieldType', 'properties', 'selectionList']);\n\n  // Object specific methods\n  vtkSelectionNode(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkSelectionNode');\n\n// ----------------------------------------------------------------------------\n\nvar vtkSelectionNode$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkSelectionNode$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport Constants from './HardwareSelector/Constants.js';\nimport vtkHardwareSelector$1 from '../Core/HardwareSelector.js';\nimport vtkOpenGLFramebuffer from './Framebuffer.js';\nimport vtkSelectionNode from '../../Common/DataModel/SelectionNode.js';\nimport vtkDataSet from '../../Common/DataModel/DataSet.js';\n\nconst {\n  PassTypes\n} = Constants;\nconst {\n  SelectionContent,\n  SelectionField\n} = vtkSelectionNode;\nconst {\n  FieldAssociations\n} = vtkDataSet;\nconst {\n  vtkErrorMacro\n} = macro;\nconst idOffset = 1;\nfunction getInfoHash(info) {\n  return `${info.propID} ${info.compositeID}`;\n}\nfunction getAlpha(xx, yy, pb, area) {\n  if (!pb) {\n    return 0;\n  }\n  const offset = (yy * (area[2] - area[0] + 1) + xx) * 4;\n  return pb[offset + 3];\n}\nfunction convert(xx, yy, pb, area) {\n  if (!pb) {\n    return 0;\n  }\n  const offset = (yy * (area[2] - area[0] + 1) + xx) * 4;\n  const r = pb[offset];\n  const g = pb[offset + 1];\n  const b = pb[offset + 2];\n  return (b * 256 + g) * 256 + r;\n}\nfunction getID(low24, high8) {\n  /* eslint-disable no-bitwise */\n  let val = high8;\n  val <<= 24;\n  val |= low24;\n  return val;\n  /* eslint-enable no-bitwise */\n}\n\nfunction getPixelInformationWithData(buffdata, inDisplayPosition, maxDistance, outSelectedPosition) {\n  // Base case\n  const maxDist = maxDistance < 0 ? 0 : maxDistance;\n  if (maxDist === 0) {\n    outSelectedPosition[0] = inDisplayPosition[0];\n    outSelectedPosition[1] = inDisplayPosition[1];\n    if (inDisplayPosition[0] < buffdata.area[0] || inDisplayPosition[0] > buffdata.area[2] || inDisplayPosition[1] < buffdata.area[1] || inDisplayPosition[1] > buffdata.area[3]) {\n      return null;\n    }\n\n    // offset inDisplayPosition based on the lower-left-corner of the Area.\n    const displayPosition = [inDisplayPosition[0] - buffdata.area[0], inDisplayPosition[1] - buffdata.area[1]];\n    const actorid = convert(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.ACTOR_PASS], buffdata.area);\n    if (actorid <= 0 || actorid - idOffset >= buffdata.props.length) {\n      // the pixel did not hit any actor.\n      return null;\n    }\n    const info = {};\n    info.valid = true;\n    info.propID = actorid - idOffset;\n    info.prop = buffdata.props[info.propID];\n    let compositeID = convert(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.COMPOSITE_INDEX_PASS], buffdata.area);\n    if (compositeID < 0 || compositeID > 0xffffff) {\n      compositeID = 0;\n    }\n    info.compositeID = compositeID - idOffset;\n    if (buffdata.captureZValues) {\n      const offset = (displayPosition[1] * (buffdata.area[2] - buffdata.area[0] + 1) + displayPosition[0]) * 4;\n      info.zValue = (256 * buffdata.zBuffer[offset] + buffdata.zBuffer[offset + 1]) / 65535.0;\n      info.displayPosition = inDisplayPosition;\n    }\n    if (buffdata.pixBuffer[PassTypes.ID_LOW24]) {\n      if (getAlpha(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.ID_LOW24], buffdata.area) === 0.0) {\n        return info;\n      }\n    }\n    const low24 = convert(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.ID_LOW24], buffdata.area);\n    const high24 = convert(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.ID_HIGH24], buffdata.area);\n    info.attributeID = getID(low24, high24);\n    return info;\n  }\n\n  // Iterate over successively growing boxes.\n  // They recursively call the base case to handle single pixels.\n  const dispPos = [inDisplayPosition[0], inDisplayPosition[1]];\n  const curPos = [0, 0];\n  let info = getPixelInformationWithData(buffdata, inDisplayPosition, 0, outSelectedPosition);\n  if (info && info.valid) {\n    return info;\n  }\n  for (let dist = 1; dist < maxDist; ++dist) {\n    // Vertical sides of box.\n    for (let y = dispPos[1] > dist ? dispPos[1] - dist : 0; y <= dispPos[1] + dist; ++y) {\n      curPos[1] = y;\n      if (dispPos[0] >= dist) {\n        curPos[0] = dispPos[0] - dist;\n        info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\n        if (info && info.valid) {\n          return info;\n        }\n      }\n      curPos[0] = dispPos[0] + dist;\n      info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\n      if (info && info.valid) {\n        return info;\n      }\n    }\n    // Horizontal sides of box.\n    for (let x = dispPos[0] >= dist ? dispPos[0] - (dist - 1) : 0; x <= dispPos[0] + (dist - 1); ++x) {\n      curPos[0] = x;\n      if (dispPos[1] >= dist) {\n        curPos[1] = dispPos[1] - dist;\n        info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\n        if (info && info.valid) {\n          return info;\n        }\n      }\n      curPos[1] = dispPos[1] + dist;\n      info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\n      if (info && info.valid) {\n        return info;\n      }\n    }\n  }\n\n  // nothing hit.\n  outSelectedPosition[0] = inDisplayPosition[0];\n  outSelectedPosition[1] = inDisplayPosition[1];\n  return null;\n}\n\n//-----------------------------------------------------------------------------\nfunction convertSelection(fieldassociation, dataMap, captureZValues, renderer, openGLRenderWindow) {\n  const sel = [];\n  let count = 0;\n  dataMap.forEach((value, key) => {\n    const child = vtkSelectionNode.newInstance();\n    child.setContentType(SelectionContent.INDICES);\n    switch (fieldassociation) {\n      case FieldAssociations.FIELD_ASSOCIATION_CELLS:\n        child.setFieldType(SelectionField.CELL);\n        break;\n      case FieldAssociations.FIELD_ASSOCIATION_POINTS:\n        child.setFieldType(SelectionField.POINT);\n        break;\n      default:\n        vtkErrorMacro('Unknown field association');\n    }\n    child.getProperties().propID = value.info.propID;\n    child.getProperties().prop = value.info.prop;\n    child.getProperties().compositeID = value.info.compositeID;\n    child.getProperties().attributeID = value.info.attributeID;\n    child.getProperties().pixelCount = value.pixelCount;\n    if (captureZValues) {\n      child.getProperties().displayPosition = [value.info.displayPosition[0], value.info.displayPosition[1], value.info.zValue];\n      child.getProperties().worldPosition = openGLRenderWindow.displayToWorld(value.info.displayPosition[0], value.info.displayPosition[1], value.info.zValue, renderer);\n    }\n    child.setSelectionList(value.attributeIDs);\n    sel[count] = child;\n    count++;\n  });\n  return sel;\n}\n\n//----------------------------------------------------------------------------\nfunction generateSelectionWithData(buffdata, fx1, fy1, fx2, fy2) {\n  const x1 = Math.floor(fx1);\n  const y1 = Math.floor(fy1);\n  const x2 = Math.floor(fx2);\n  const y2 = Math.floor(fy2);\n  const dataMap = new Map();\n  const outSelectedPosition = [0, 0];\n  for (let yy = y1; yy <= y2; yy++) {\n    for (let xx = x1; xx <= x2; xx++) {\n      const pos = [xx, yy];\n      const info = getPixelInformationWithData(buffdata, pos, 0, outSelectedPosition);\n      if (info && info.valid) {\n        const hash = getInfoHash(info);\n        if (!dataMap.has(hash)) {\n          dataMap.set(hash, {\n            info,\n            pixelCount: 1,\n            attributeIDs: [info.attributeID]\n          });\n        } else {\n          const dmv = dataMap.get(hash);\n          dmv.pixelCount++;\n          if (buffdata.captureZValues) {\n            if (info.zValue < dmv.info.zValue) {\n              dmv.info = info;\n            }\n          }\n          if (dmv.attributeIDs.indexOf(info.attributeID) === -1) {\n            dmv.attributeIDs.push(info.attributeID);\n          }\n        }\n      }\n    }\n  }\n  return convertSelection(buffdata.fieldAssociation, dataMap, buffdata.captureZValues, buffdata.renderer, buffdata.openGLRenderWindow);\n}\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLHardwareSelector methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLHardwareSelector(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLHardwareSelector');\n\n  //----------------------------------------------------------------------------\n  publicAPI.releasePixBuffers = () => {\n    model.rawPixBuffer = [];\n    model.pixBuffer = [];\n    model.zBuffer = null;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.beginSelection = () => {\n    model._openGLRenderer = model._openGLRenderWindow.getViewNodeFor(model._renderer);\n    model.maxAttributeId = 0;\n    const size = model._openGLRenderWindow.getSize();\n    if (!model.framebuffer) {\n      model.framebuffer = vtkOpenGLFramebuffer.newInstance();\n      model.framebuffer.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.framebuffer.saveCurrentBindingsAndBuffers();\n      model.framebuffer.create(size[0], size[1]);\n      // this calls model.framebuffer.bind()\n      model.framebuffer.populateFramebuffer();\n    } else {\n      model.framebuffer.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.framebuffer.saveCurrentBindingsAndBuffers();\n      const fbSize = model.framebuffer.getSize();\n      if (!fbSize || fbSize[0] !== size[0] || fbSize[1] !== size[1]) {\n        model.framebuffer.create(size[0], size[1]);\n        // this calls model.framebuffer.bind()\n        model.framebuffer.populateFramebuffer();\n      } else {\n        model.framebuffer.bind();\n      }\n    }\n    model._openGLRenderer.clear();\n    model._openGLRenderer.setSelector(publicAPI);\n    model.hitProps = {};\n    model.propPixels = {};\n    model.props = [];\n    publicAPI.releasePixBuffers();\n    if (model.fieldAssociation === FieldAssociations.FIELD_ASSOCIATION_POINTS) {\n      const gl = model._openGLRenderWindow.getContext();\n      const originalBlending = gl.isEnabled(gl.BLEND);\n      gl.disable(gl.BLEND);\n      model._openGLRenderWindow.traverseAllPasses();\n      if (originalBlending) {\n        gl.enable(gl.BLEND);\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.endSelection = () => {\n    model.hitProps = {};\n    model._openGLRenderer.setSelector(null);\n    model.framebuffer.restorePreviousBindingsAndBuffers();\n  };\n  publicAPI.preCapturePass = () => {\n    const gl = model._openGLRenderWindow.getContext();\n    // Disable blending\n    model.originalBlending = gl.isEnabled(gl.BLEND);\n    gl.disable(gl.BLEND);\n  };\n  publicAPI.postCapturePass = () => {\n    const gl = model._openGLRenderWindow.getContext();\n    // Restore blending if it was enabled prior to the capture\n    if (model.originalBlending) {\n      gl.enable(gl.BLEND);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.select = () => {\n    let sel = null;\n    if (publicAPI.captureBuffers()) {\n      sel = publicAPI.generateSelection(model.area[0], model.area[1], model.area[2], model.area[3]);\n      publicAPI.releasePixBuffers();\n    }\n    return sel;\n  };\n  publicAPI.getSourceDataAsync = async (renderer, fx1, fy1, fx2, fy2) => {\n    // assign the renderer\n    model._renderer = renderer;\n\n    // set area to all if no arguments provided\n    if (fx1 === undefined) {\n      const size = model._openGLRenderWindow.getSize();\n      publicAPI.setArea(0, 0, size[0] - 1, size[1] - 1);\n    } else {\n      publicAPI.setArea(fx1, fy1, fx2, fy2);\n    }\n    // just do capture buffers and package up the result\n    if (!publicAPI.captureBuffers()) {\n      return false;\n    }\n    const result = {\n      area: [...model.area],\n      pixBuffer: [...model.pixBuffer],\n      captureZValues: model.captureZValues,\n      zBuffer: model.zBuffer,\n      props: [...model.props],\n      fieldAssociation: model.fieldAssociation,\n      renderer,\n      openGLRenderWindow: model._openGLRenderWindow\n    };\n    result.generateSelection = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return generateSelectionWithData(result, ...args);\n    };\n    return result;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.captureBuffers = () => {\n    if (!model._renderer || !model._openGLRenderWindow) {\n      vtkErrorMacro('Renderer and view must be set before calling Select.');\n      return false;\n    }\n    model._openGLRenderer = model._openGLRenderWindow.getViewNodeFor(model._renderer);\n\n    // todo revisit making selection part of core\n    // then we can do this in core\n    model._openGLRenderWindow.getRenderable().preRender();\n\n    // int rgba[4];\n    // rwin.getColorBufferSizes(rgba);\n    // if (rgba[0] < 8 || rgba[1] < 8 || rgba[2] < 8) {\n    //   vtkErrorMacro(\"Color buffer depth must be at least 8 bit. \"\n    //     \"Currently: \" << rgba[0] << \", \" << rgba[1] << \", \" <<rgba[2]);\n    //   return false;\n    // }\n    publicAPI.invokeEvent({\n      type: 'StartEvent'\n    });\n\n    // Initialize renderer for selection.\n    // change the renderer's background to black, which will indicate a miss\n    model.originalBackground = model._renderer.getBackgroundByReference();\n    model._renderer.setBackground(0.0, 0.0, 0.0, 0.0);\n    const rpasses = model._openGLRenderWindow.getRenderPasses();\n    publicAPI.beginSelection();\n    const pixelBufferSavedPasses = [];\n    for (model.currentPass = PassTypes.MIN_KNOWN_PASS; model.currentPass <= PassTypes.MAX_KNOWN_PASS; model.currentPass++) {\n      if (publicAPI.passRequired(model.currentPass)) {\n        publicAPI.preCapturePass(model.currentPass);\n        if (model.captureZValues && model.currentPass === PassTypes.ACTOR_PASS && typeof rpasses[0].requestDepth === 'function' && typeof rpasses[0].getFramebuffer === 'function') {\n          rpasses[0].requestDepth();\n          model._openGLRenderWindow.traverseAllPasses();\n        } else {\n          model._openGLRenderWindow.traverseAllPasses();\n        }\n        publicAPI.postCapturePass(model.currentPass);\n        publicAPI.savePixelBuffer(model.currentPass);\n        pixelBufferSavedPasses.push(model.currentPass);\n      }\n    }\n\n    // Process pixel buffers\n    pixelBufferSavedPasses.forEach(pass => {\n      model.currentPass = pass;\n      publicAPI.processPixelBuffers();\n    });\n    model.currentPass = PassTypes.MAX_KNOWN_PASS;\n    publicAPI.endSelection();\n\n    // restore original background\n    model._renderer.setBackground(model.originalBackground);\n    publicAPI.invokeEvent({\n      type: 'EndEvent'\n    });\n\n    // restore image, not needed?\n    // model._openGLRenderWindow.traverseAllPasses();\n    return true;\n  };\n  publicAPI.processPixelBuffers = () => {\n    model.props.forEach((prop, index) => {\n      if (publicAPI.isPropHit(index)) {\n        prop.processSelectorPixelBuffers(publicAPI, model.propPixels[index]);\n      }\n    });\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.passRequired = pass => {\n    if (pass === PassTypes.ID_HIGH24) {\n      if (model.fieldAssociation === FieldAssociations.FIELD_ASSOCIATION_POINTS) {\n        return model.maximumPointId > 0x00ffffff;\n      }\n      if (model.fieldAssociation === FieldAssociations.FIELD_ASSOCIATION_CELLS) {\n        return model.maximumCellId > 0x00ffffff;\n      }\n    }\n    return true;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.savePixelBuffer = passNo => {\n    model.pixBuffer[passNo] = model._openGLRenderWindow.getPixelData(model.area[0], model.area[1], model.area[2], model.area[3]);\n    if (!model.rawPixBuffer[passNo]) {\n      const size = (model.area[2] - model.area[0] + 1) * (model.area[3] - model.area[1] + 1) * 4;\n      model.rawPixBuffer[passNo] = new Uint8Array(size);\n      model.rawPixBuffer[passNo].set(model.pixBuffer[passNo]);\n    }\n    if (passNo === PassTypes.ACTOR_PASS) {\n      if (model.captureZValues) {\n        const rpasses = model._openGLRenderWindow.getRenderPasses();\n        if (typeof rpasses[0].requestDepth === 'function' && typeof rpasses[0].getFramebuffer === 'function') {\n          const fb = rpasses[0].getFramebuffer();\n          fb.saveCurrentBindingsAndBuffers();\n          fb.bind();\n          model.zBuffer = model._openGLRenderWindow.getPixelData(model.area[0], model.area[1], model.area[2], model.area[3]);\n          fb.restorePreviousBindingsAndBuffers();\n        }\n      }\n      publicAPI.buildPropHitList(model.rawPixBuffer[passNo]);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.buildPropHitList = pixelbuffer => {\n    let offset = 0;\n    for (let yy = 0; yy <= model.area[3] - model.area[1]; yy++) {\n      for (let xx = 0; xx <= model.area[2] - model.area[0]; xx++) {\n        let val = convert(xx, yy, pixelbuffer, model.area);\n        if (val > 0) {\n          val--;\n          if (!(val in model.hitProps)) {\n            model.hitProps[val] = true;\n            model.propPixels[val] = [];\n          }\n          model.propPixels[val].push(offset * 4);\n        }\n        ++offset;\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.renderProp = prop => {\n    if (model.currentPass === PassTypes.ACTOR_PASS) {\n      publicAPI.setPropColorValueFromInt(model.props.length + idOffset);\n      model.props.push(prop);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.renderCompositeIndex = index => {\n    if (model.currentPass === PassTypes.COMPOSITE_INDEX_PASS) {\n      publicAPI.setPropColorValueFromInt(index + idOffset);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  // TODO: make inline\n  publicAPI.renderAttributeId = attribid => {\n    if (attribid < 0) {\n      // negative attribid is valid. It happens when rendering higher order\n      // elements where new points are added for rendering smooth surfaces.\n      return;\n    }\n    model.maxAttributeId = attribid > model.maxAttributeId ? attribid : model.maxAttributeId;\n\n    // if (model.currentPass < PassTypes.ID_LOW24) {\n    //   return; // useless...\n    // }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.passTypeToString = type => macro.enumToString(PassTypes, type);\n\n  //----------------------------------------------------------------------------\n  publicAPI.isPropHit = id => Boolean(model.hitProps[id]);\n  publicAPI.setPropColorValueFromInt = val => {\n    model.propColorValue[0] = val % 256 / 255.0;\n    model.propColorValue[1] = Math.floor(val / 256) % 256 / 255.0;\n    model.propColorValue[2] = Math.floor(val / 65536) % 256 / 255.0;\n  };\n\n  // info has\n  //   valid\n  //   propId\n  //   prop\n  //   compositeID\n  //   attributeID\n\n  //----------------------------------------------------------------------------\n  publicAPI.getPixelInformation = (inDisplayPosition, maxDistance, outSelectedPosition) => {\n    // Base case\n    const maxDist = maxDistance < 0 ? 0 : maxDistance;\n    if (maxDist === 0) {\n      outSelectedPosition[0] = inDisplayPosition[0];\n      outSelectedPosition[1] = inDisplayPosition[1];\n      if (inDisplayPosition[0] < model.area[0] || inDisplayPosition[0] > model.area[2] || inDisplayPosition[1] < model.area[1] || inDisplayPosition[1] > model.area[3]) {\n        return null;\n      }\n\n      // offset inDisplayPosition based on the lower-left-corner of the Area.\n      const displayPosition = [inDisplayPosition[0] - model.area[0], inDisplayPosition[1] - model.area[1]];\n      const actorid = convert(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.ACTOR_PASS], model.area);\n      if (actorid <= 0 || actorid - idOffset >= model.props.length) {\n        // the pixel did not hit any actor.\n        return null;\n      }\n      const info = {};\n      info.valid = true;\n      info.propID = actorid - idOffset;\n      info.prop = model.props[info.propID];\n      let compositeID = convert(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.COMPOSITE_INDEX_PASS], model.area);\n      if (compositeID < 0 || compositeID > 0xffffff) {\n        compositeID = 0;\n      }\n      info.compositeID = compositeID - idOffset;\n      if (model.captureZValues) {\n        const offset = (displayPosition[1] * (model.area[2] - model.area[0] + 1) + displayPosition[0]) * 4;\n        info.zValue = (256 * model.zBuffer[offset] + model.zBuffer[offset + 1]) / 65535.0;\n        info.displayPosition = inDisplayPosition;\n      }\n\n      // Skip attribute ids if alpha is zero (missed)\n      if (model.pixBuffer[PassTypes.ID_LOW24]) {\n        if (getAlpha(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.ID_LOW24], model.area) === 0.0) {\n          return info;\n        }\n      }\n      const low24 = convert(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.ID_LOW24], model.area);\n      const high24 = convert(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.ID_HIGH24], model.area);\n      info.attributeID = getID(low24, high24);\n      return info;\n    }\n\n    // Iterate over successively growing boxes.\n    // They recursively call the base case to handle single pixels.\n    const dispPos = [inDisplayPosition[0], inDisplayPosition[1]];\n    const curPos = [0, 0];\n    let info = publicAPI.getPixelInformation(inDisplayPosition, 0, outSelectedPosition);\n    if (info && info.valid) {\n      return info;\n    }\n    for (let dist = 1; dist < maxDist; ++dist) {\n      // Vertical sides of box.\n      for (let y = dispPos[1] > dist ? dispPos[1] - dist : 0; y <= dispPos[1] + dist; ++y) {\n        curPos[1] = y;\n        if (dispPos[0] >= dist) {\n          curPos[0] = dispPos[0] - dist;\n          info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\n          if (info && info.valid) {\n            return info;\n          }\n        }\n        curPos[0] = dispPos[0] + dist;\n        info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\n        if (info && info.valid) {\n          return info;\n        }\n      }\n      // Horizontal sides of box.\n      for (let x = dispPos[0] >= dist ? dispPos[0] - (dist - 1) : 0; x <= dispPos[0] + (dist - 1); ++x) {\n        curPos[0] = x;\n        if (dispPos[1] >= dist) {\n          curPos[1] = dispPos[1] - dist;\n          info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\n          if (info && info.valid) {\n            return info;\n          }\n        }\n        curPos[1] = dispPos[1] + dist;\n        info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\n        if (info && info.valid) {\n          return info;\n        }\n      }\n    }\n\n    // nothing hit.\n    outSelectedPosition[0] = inDisplayPosition[0];\n    outSelectedPosition[1] = inDisplayPosition[1];\n    return null;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.generateSelection = (fx1, fy1, fx2, fy2) => {\n    const x1 = Math.floor(fx1);\n    const y1 = Math.floor(fy1);\n    const x2 = Math.floor(fx2);\n    const y2 = Math.floor(fy2);\n    const dataMap = new Map();\n    const outSelectedPosition = [0, 0];\n    for (let yy = y1; yy <= y2; yy++) {\n      for (let xx = x1; xx <= x2; xx++) {\n        const pos = [xx, yy];\n        const info = publicAPI.getPixelInformation(pos, 0, outSelectedPosition);\n        if (info && info.valid) {\n          const hash = getInfoHash(info);\n          if (!dataMap.has(hash)) {\n            dataMap.set(hash, {\n              info,\n              pixelCount: 1,\n              attributeIDs: [info.attributeID]\n            });\n          } else {\n            const dmv = dataMap.get(hash);\n            dmv.pixelCount++;\n            if (model.captureZValues) {\n              if (info.zValue < dmv.info.zValue) {\n                dmv.info = info;\n              }\n            }\n            if (dmv.attributeIDs.indexOf(info.attributeID) === -1) {\n              dmv.attributeIDs.push(info.attributeID);\n            }\n          }\n        }\n      }\n    }\n    return convertSelection(model.fieldAssociation, dataMap, model.captureZValues, model._renderer, model._openGLRenderWindow);\n  };\n  publicAPI.getRawPixelBuffer = passNo => model.rawPixBuffer[passNo];\n  publicAPI.getPixelBuffer = passNo => model.pixBuffer[passNo];\n\n  //----------------------------------------------------------------------------\n\n  publicAPI.attach = (openGLRenderWindow, renderer) => {\n    model._openGLRenderWindow = openGLRenderWindow;\n    model._renderer = renderer;\n  };\n\n  // override\n  const superSetArea = publicAPI.setArea;\n  publicAPI.setArea = function () {\n    if (superSetArea(...arguments)) {\n      model.area[0] = Math.floor(model.area[0]);\n      model.area[1] = Math.floor(model.area[1]);\n      model.area[2] = Math.floor(model.area[2]);\n      model.area[3] = Math.floor(model.area[3]);\n      return true;\n    }\n    return false;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  area: undefined,\n  // _renderer: null,\n  // _openGLRenderWindow: null,\n  // _openGLRenderer: null,\n  currentPass: -1,\n  propColorValue: null,\n  props: null,\n  maximumPointId: 0,\n  maximumCellId: 0,\n  idOffset: 1\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  vtkHardwareSelector$1.extend(publicAPI, model, initialValues);\n  model.propColorValue = [0, 0, 0];\n  model.props = [];\n  if (!model.area) {\n    model.area = [0, 0, 0, 0];\n  }\n  macro.setGetArray(publicAPI, model, ['area'], 4);\n  macro.setGet(publicAPI, model, ['_renderer', 'currentPass', '_openGLRenderWindow', 'maximumPointId', 'maximumCellId']);\n  macro.setGetArray(publicAPI, model, ['propColorValue'], 3);\n  macro.moveToProtected(publicAPI, model, ['renderer', 'openGLRenderWindow']);\n  macro.event(publicAPI, model, 'event');\n\n  // Object methods\n  vtkOpenGLHardwareSelector(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkOpenGLHardwareSelector');\n\n// ----------------------------------------------------------------------------\n\nvar vtkHardwareSelector = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkHardwareSelector as default, extend, newInstance };\n","import { mat3, mat4 } from 'gl-matrix';\nimport { n as newInstance$1, o as obj, c as macro } from '../../macros2.js';\nimport vtkBufferObject from './BufferObject.js';\nimport vtkHardwareSelector from './HardwareSelector.js';\nimport vtkProperty from '../Core/Property.js';\nimport vtkOpenGLPolyDataMapper from './PolyDataMapper.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\nconst {\n  Representation\n} = vtkProperty;\nconst {\n  ObjectType\n} = vtkBufferObject;\nconst {\n  PassTypes\n} = vtkHardwareSelector;\nconst StartEvent = {\n  type: 'StartEvent'\n};\nconst EndEvent = {\n  type: 'EndEvent'\n};\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLSphereMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLGlyph3DMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLGlyph3DMapper');\n\n  // Capture 'parentClass' api for internal use\n  const superClass = {\n    ...publicAPI\n  };\n  publicAPI.renderPiece = (ren, actor) => {\n    publicAPI.invokeEvent(StartEvent);\n    if (!model.renderable.getStatic()) {\n      model.renderable.update();\n    }\n    model.currentInput = model.renderable.getInputData(1);\n    publicAPI.invokeEvent(EndEvent);\n    if (!model.currentInput) {\n      vtkErrorMacro('No input!');\n      return;\n    }\n\n    // if there are no points then we are done\n    if (!model.currentInput.getPoints || !model.currentInput.getPoints().getNumberOfValues()) {\n      return;\n    }\n\n    // apply faceCulling\n    const gl = model.context;\n    if (model._openGLRenderWindow.getWebgl2()) {\n      model.hardwareSupport = true;\n      model.extension = null;\n    } else if (!model.extension) {\n      model.extension = model.context.getExtension('ANGLE_instanced_arrays');\n      model.hardwareSupport = !!model.extension;\n    }\n    // to test without extension support uncomment the next two lines\n    // model.extension = null;\n    // model.hardwareSupport = !!model.extension;\n\n    const backfaceCulling = actor.getProperty().getBackfaceCulling();\n    const frontfaceCulling = actor.getProperty().getFrontfaceCulling();\n    if (!backfaceCulling && !frontfaceCulling) {\n      model._openGLRenderWindow.disableCullFace();\n    } else if (frontfaceCulling) {\n      model._openGLRenderWindow.enableCullFace();\n      gl.cullFace(gl.FRONT);\n    } else {\n      model._openGLRenderWindow.enableCullFace();\n      gl.cullFace(gl.BACK);\n    }\n    publicAPI.renderPieceStart(ren, actor);\n    publicAPI.renderPieceDraw(ren, actor);\n    publicAPI.renderPieceFinish(ren, actor);\n  };\n  publicAPI.multiply4x4WithOffset = (out, a, b, off) => {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    const a30 = a[12];\n    const a31 = a[13];\n    const a32 = a[14];\n    const a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[off];\n    let b1 = b[off + 1];\n    let b2 = b[off + 2];\n    let b3 = b[off + 3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[off + 4];\n    b1 = b[off + 5];\n    b2 = b[off + 6];\n    b3 = b[off + 7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[off + 8];\n    b1 = b[off + 9];\n    b2 = b[off + 10];\n    b3 = b[off + 11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[off + 12];\n    b1 = b[off + 13];\n    b2 = b[off + 14];\n    b3 = b[off + 15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  };\n  publicAPI.replaceShaderNormal = (shaders, ren, actor) => {\n    if (model.hardwareSupport) {\n      const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n      if (lastLightComplexity > 0) {\n        let VSSource = shaders.Vertex;\n        if (model.lastBoundBO.getCABO().getNormalOffset()) {\n          VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Normal::Dec', ['attribute vec3 normalMC;', 'attribute mat3 gNormal;', 'uniform mat3 normalMatrix;', 'varying vec3 normalVCVSOutput;']).result;\n          VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Normal::Impl', ['normalVCVSOutput = normalMatrix * gNormal * normalMC;']).result;\n        }\n        shaders.Vertex = VSSource;\n      }\n    }\n    superClass.replaceShaderNormal(shaders, ren, actor);\n  };\n  publicAPI.replaceShaderColor = (shaders, ren, actor) => {\n    if (model.hardwareSupport && model.renderable.getColorArray()) {\n      let VSSource = shaders.Vertex;\n      let GSSource = shaders.Geometry;\n      let FSSource = shaders.Fragment;\n      const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n\n      // create the material/color property declarations, and VS implementation\n      // these are always defined\n      let colorDec = ['uniform float ambient;', 'uniform float diffuse;', 'uniform float specular;', 'uniform float opacityUniform; // the fragment opacity'];\n      // add more for specular\n      if (lastLightComplexity) {\n        colorDec = colorDec.concat(['uniform vec3 specularColorUniform;', 'uniform float specularPowerUniform;']);\n      }\n\n      // now handle the more complex fragment shader implementation\n      // the following are always defined variables.  We start\n      // by assigning a default value from the uniform\n      let colorImpl = ['vec3 ambientColor;', '  vec3 diffuseColor;', '  float opacity;'];\n      if (lastLightComplexity) {\n        colorImpl = colorImpl.concat(['  vec3 specularColor;', '  float specularPower;']);\n      }\n      colorImpl = colorImpl.concat(['  opacity = opacityUniform;']);\n      if (lastLightComplexity) {\n        colorImpl = colorImpl.concat(['  specularColor = specularColorUniform;', '  specularPower = specularPowerUniform;']);\n      }\n      if (!model.drawingEdges) {\n        colorDec = colorDec.concat(['varying vec4 vertexColorVSOutput;']);\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Color::Dec', ['attribute vec4 gColor;', 'varying vec4 vertexColorVSOutput;']).result;\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Color::Impl', ['vertexColorVSOutput = gColor;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Color::Dec', ['in vec4 vertexColorVSOutput[];', 'out vec4 vertexColorGSOutput;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Color::Impl', ['vertexColorGSOutput = vertexColorVSOutput[i];']).result;\n        colorImpl = colorImpl.concat(['  diffuseColor = vertexColorVSOutput.rgb;', '  ambientColor = vertexColorVSOutput.rgb;', '  opacity = opacity*vertexColorVSOutput.a;']);\n      }\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Impl', colorImpl).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Dec', colorDec).result;\n      shaders.Vertex = VSSource;\n      shaders.Geometry = GSSource;\n      shaders.Fragment = FSSource;\n    }\n    superClass.replaceShaderColor(shaders, ren, actor);\n  };\n  publicAPI.replaceShaderPositionVC = (shaders, ren, actor) => {\n    if (model.hardwareSupport) {\n      let VSSource = shaders.Vertex;\n\n      // do we need the vertex in the shader in View Coordinates\n      const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n      if (lastLightComplexity > 0) {\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Impl', ['vec4 gVertexMC = gMatrix * vertexMC;', 'vertexVCVSOutput = MCVCMatrix * gVertexMC;', '  gl_Position = MCPCMatrix * gVertexMC;']).result;\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', ['attribute mat4 gMatrix;', 'uniform mat4 MCPCMatrix;', 'uniform mat4 MCVCMatrix;']).result;\n      } else {\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', ['attribute mat4 gMatrix;', 'uniform mat4 MCPCMatrix;']).result;\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Impl', ['vec4 gVertexMC = gMatrix * vertexMC;', '  gl_Position = MCPCMatrix * gVertexMC;']).result;\n      }\n      shaders.Vertex = VSSource;\n    }\n    superClass.replaceShaderPositionVC(shaders, ren, actor);\n  };\n  publicAPI.replaceShaderPicking = (shaders, ren, actor) => {\n    if (model.hardwareSupport) {\n      let FSSource = shaders.Fragment;\n      let VSSource = shaders.Vertex;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Picking::Dec', ['attribute vec3 mapperIndexVS;', 'varying vec3 mapperIndexVSOutput;']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Picking::Impl', '  mapperIndexVSOutput = mapperIndexVS;').result;\n      shaders.Vertex = VSSource;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Dec', ['varying vec3 mapperIndexVSOutput;', 'uniform vec3 mapperIndex;', 'uniform int picking;']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Impl', ['  vec4 pickColor = picking == 2 ? vec4(mapperIndexVSOutput,1.0) : vec4(mapperIndex,1.0);', '  gl_FragData[0] = picking != 0 ? pickColor : gl_FragData[0];']).result;\n      shaders.Fragment = FSSource;\n    } else {\n      superClass.replaceShaderPicking(shaders, ren, actor);\n    }\n  };\n  publicAPI.updateGlyphShaderParameters = (normalMatrixUsed, mcvcMatrixUsed, cellBO, carray, garray, narray, p, selector) => {\n    const program = cellBO.getProgram();\n    if (normalMatrixUsed) {\n      const a = model.normalMatrix;\n      const b = narray;\n      const ofs = p * 9;\n      const out = model.tmpMat3;\n      const a00 = a[0];\n      const a01 = a[1];\n      const a02 = a[2];\n      const a10 = a[3];\n      const a11 = a[4];\n      const a12 = a[5];\n      const a20 = a[6];\n      const a21 = a[7];\n      const a22 = a[8];\n      const b00 = b[ofs];\n      const b01 = b[ofs + 1];\n      const b02 = b[ofs + 2];\n      const b10 = b[ofs + 3];\n      const b11 = b[ofs + 4];\n      const b12 = b[ofs + 5];\n      const b20 = b[ofs + 6];\n      const b21 = b[ofs + 7];\n      const b22 = b[ofs + 8];\n      out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n      out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n      out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n      out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n      out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n      out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n      out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n      out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n      out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n      program.setUniformMatrix3x3('normalMatrix', model.tmpMat3);\n    }\n    publicAPI.multiply4x4WithOffset(model.tmpMat4, model.mcpcMatrix, garray, p * 16);\n    program.setUniformMatrix('MCPCMatrix', model.tmpMat4);\n    if (mcvcMatrixUsed) {\n      publicAPI.multiply4x4WithOffset(model.tmpMat4, model.mcvcMatrix, garray, p * 16);\n      program.setUniformMatrix('MCVCMatrix', model.tmpMat4);\n    }\n\n    // set color\n    if (carray) {\n      const cdata = carray.getData();\n      model.tmpColor[0] = cdata[p * 4] / 255.0;\n      model.tmpColor[1] = cdata[p * 4 + 1] / 255.0;\n      model.tmpColor[2] = cdata[p * 4 + 2] / 255.0;\n      program.setUniform3fArray('ambientColorUniform', model.tmpColor);\n      program.setUniform3fArray('diffuseColorUniform', model.tmpColor);\n    }\n    if (selector) {\n      program.setUniform3fArray('mapperIndex', selector.getPropColorValue());\n    }\n  };\n  publicAPI.renderPieceDraw = (ren, actor) => {\n    const representation = actor.getProperty().getRepresentation();\n    const gl = model.context;\n    const drawSurfaceWithEdges = actor.getProperty().getEdgeVisibility() && representation === Representation.SURFACE;\n\n    // [WMVP]C == {world, model, view, projection} coordinates\n    // E.g., WCPC == world to projection coordinate transformation\n    const keyMats = model.openGLCamera.getKeyMatrices(ren);\n    const actMats = model.openGLActor.getKeyMatrices();\n\n    // precompute the actor+camera mats once\n    mat3.multiply(model.normalMatrix, keyMats.normalMatrix, actMats.normalMatrix);\n    mat4.multiply(model.mcpcMatrix, keyMats.wcpc, actMats.mcwc);\n    mat4.multiply(model.mcvcMatrix, keyMats.wcvc, actMats.mcwc);\n    const garray = model.renderable.getMatrixArray();\n    const narray = model.renderable.getNormalArray();\n    const carray = model.renderable.getColorArray();\n    const numPts = garray.length / 16;\n    let compositePass = false;\n    if (model._openGLRenderer.getSelector()) {\n      if (model._openGLRenderer.getSelector().getCurrentPass() === PassTypes.COMPOSITE_INDEX_PASS) {\n        compositePass = true;\n      }\n    }\n\n    // for every primitive type\n    for (let i = model.primTypes.Start; i < model.primTypes.End; i++) {\n      // if there are entries\n      const cabo = model.primitives[i].getCABO();\n      if (cabo.getElementCount()) {\n        // are we drawing edges\n        model.drawingEdges = drawSurfaceWithEdges && (i === model.primTypes.TrisEdges || i === model.primTypes.TriStripsEdges);\n        model.lastBoundBO = model.primitives[i];\n        model.primitives[i].updateShaders(ren, actor, publicAPI);\n        const program = model.primitives[i].getProgram();\n        const mode = model.primitives[i].getOpenGLMode(representation);\n        const normalMatrixUsed = program.isUniformUsed('normalMatrix');\n        const mcvcMatrixUsed = program.isUniformUsed('MCVCMatrix');\n        if (model.hardwareSupport) {\n          if (model.extension) {\n            model.extension.drawArraysInstancedANGLE(mode, 0, cabo.getElementCount(), numPts);\n          } else {\n            gl.drawArraysInstanced(mode, 0, cabo.getElementCount(), numPts);\n          }\n        } else {\n          // draw the array multiple times with different cam matrix\n          for (let p = 0; p < numPts; ++p) {\n            if (compositePass) {\n              model._openGLRenderer.getSelector().renderCompositeIndex(p);\n            }\n            publicAPI.updateGlyphShaderParameters(normalMatrixUsed, mcvcMatrixUsed, model.primitives[i], carray, garray, narray, p, compositePass ? model._openGLRenderer.getSelector() : null);\n            gl.drawArrays(mode, 0, cabo.getElementCount());\n          }\n        }\n      }\n    }\n  };\n  publicAPI.setMapperShaderParameters = (cellBO, ren, actor) => {\n    if (cellBO.getCABO().getElementCount() && (model.glyphBOBuildTime.getMTime() > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime())) {\n      if (cellBO.getProgram().isAttributeUsed('gMatrix')) {\n        if (!cellBO.getVAO().addAttributeMatrixWithDivisor(cellBO.getProgram(), model.matrixBuffer, 'gMatrix', 0, 64, model.context.FLOAT, 4, false, 1)) {\n          vtkErrorMacro('Error setting gMatrix in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('gMatrix');\n      }\n      if (cellBO.getProgram().isAttributeUsed('gNormal')) {\n        if (!cellBO.getVAO().addAttributeMatrixWithDivisor(cellBO.getProgram(), model.normalBuffer, 'gNormal', 0, 36, model.context.FLOAT, 3, false, 1)) {\n          vtkErrorMacro('Error setting gNormal in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('gNormal');\n      }\n      if (cellBO.getProgram().isAttributeUsed('gColor')) {\n        if (!cellBO.getVAO().addAttributeArrayWithDivisor(cellBO.getProgram(), model.colorBuffer, 'gColor', 0, 4, model.context.UNSIGNED_BYTE, 4, true, 1, false)) {\n          vtkErrorMacro('Error setting gColor in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('gColor');\n      }\n      if (cellBO.getProgram().isAttributeUsed('mapperIndexVS')) {\n        if (!cellBO.getVAO().addAttributeArrayWithDivisor(cellBO.getProgram(), model.pickBuffer, 'mapperIndexVS', 0, 4, model.context.UNSIGNED_BYTE, 4, true, 1, false)) {\n          vtkErrorMacro('Error setting mapperIndexVS in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('mapperIndexVS');\n      }\n      superClass.setMapperShaderParameters(cellBO, ren, actor);\n      cellBO.getAttributeUpdateTime().modified();\n      return;\n    }\n    superClass.setMapperShaderParameters(cellBO, ren, actor);\n  };\n  publicAPI.getNeedToRebuildBufferObjects = (ren, actor) => {\n    model.renderable.buildArrays();\n\n    // first do a coarse check\n    // Note that the actor's mtime includes it's properties mtime\n    const vmtime = model.VBOBuildTime.getMTime();\n    if (vmtime < model.renderable.getBuildTime().getMTime()) {\n      return true;\n    }\n    return superClass.getNeedToRebuildBufferObjects(ren, actor);\n  };\n  publicAPI.getNeedToRebuildShaders = (cellBO, ren, actor) => {\n    if (superClass.getNeedToRebuildShaders(cellBO, ren, actor) || cellBO.getShaderSourceTime().getMTime() < model.renderable.getMTime() || cellBO.getShaderSourceTime().getMTime() < model.currentInput.getMTime()) {\n      return true;\n    }\n    return false;\n  };\n  publicAPI.buildBufferObjects = (ren, actor) => {\n    if (model.hardwareSupport) {\n      // update the buffer objects if needed\n      const garray = model.renderable.getMatrixArray();\n      const narray = model.renderable.getNormalArray();\n      const carray = model.renderable.getColorArray();\n      if (!model.matrixBuffer) {\n        model.matrixBuffer = vtkBufferObject.newInstance();\n        model.matrixBuffer.setOpenGLRenderWindow(model._openGLRenderWindow);\n        model.normalBuffer = vtkBufferObject.newInstance();\n        model.normalBuffer.setOpenGLRenderWindow(model._openGLRenderWindow);\n        model.colorBuffer = vtkBufferObject.newInstance();\n        model.colorBuffer.setOpenGLRenderWindow(model._openGLRenderWindow);\n        model.pickBuffer = vtkBufferObject.newInstance();\n        model.pickBuffer.setOpenGLRenderWindow(model._openGLRenderWindow);\n      }\n      if (model.renderable.getBuildTime().getMTime() > model.glyphBOBuildTime.getMTime()) {\n        model.matrixBuffer.upload(garray, ObjectType.ARRAY_BUFFER);\n        model.normalBuffer.upload(narray, ObjectType.ARRAY_BUFFER);\n        if (carray) {\n          model.colorBuffer.upload(carray.getData(), ObjectType.ARRAY_BUFFER);\n        } else {\n          model.colorBuffer.releaseGraphicsResources();\n        }\n        const numPts = garray.length / 16;\n        const parray = new Uint8Array(4 * numPts);\n        for (let i = 0; i < numPts; ++i) {\n          let value = i + 1;\n          const offset = i * 4;\n          parray[offset] = value % 256;\n          value -= parray[offset];\n          value /= 256;\n          parray[offset + 1] = value % 256;\n          value -= parray[offset + 1];\n          value /= 256;\n          parray[offset + 2] = value % 256;\n          parray[offset + 3] = 255;\n        }\n        model.pickBuffer.upload(parray, ObjectType.ARRAY_BUFFER);\n        model.glyphBOBuildTime.modified();\n      }\n    }\n    return superClass.buildBufferObjects(ren, actor);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  normalMatrix: null,\n  mcpcMatrix: null,\n  mcwcMatrix: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkOpenGLPolyDataMapper.extend(publicAPI, model, initialValues);\n  model.tmpMat3 = mat3.identity(new Float64Array(9));\n  model.normalMatrix = mat3.identity(new Float64Array(9));\n  model.mcpcMatrix = mat4.identity(new Float64Array(16));\n  model.mcvcMatrix = mat4.identity(new Float64Array(16));\n  model.tmpColor = [];\n  model.glyphBOBuildTime = {};\n  obj(model.glyphBOBuildTime, {\n    mtime: 0\n  });\n\n  // Object methods\n  vtkOpenGLGlyph3DMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkOpenGLGlyph3DMapper');\n\n// ----------------------------------------------------------------------------\n\nvar vtkGlyph3DMapper = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkGlyph3DMapper', newInstance);\n\nexport { vtkGlyph3DMapper as default, extend, newInstance };\n","function identity(i) {\n  return i;\n}\nfunction toNativeType(str) {\n  if (str === null || str === 'null') {\n    return null;\n  }\n  if (str === 'true') {\n    return true;\n  }\n  if (str === 'false') {\n    return false;\n  }\n  if (str === undefined || str === 'undefined') {\n    return undefined;\n  }\n  if (str[0] === '[' && str[str.length - 1] === ']') {\n    return str.substring(1, str.length - 1).split(',').map(s => toNativeType(s.trim()));\n  }\n  if (str === '' || Number.isNaN(Number(str))) {\n    return str;\n  }\n  return Number(str);\n}\nfunction extractURLParameters() {\n  let castToNativeType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  let query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location.search;\n  const summary = {};\n  const convert = castToNativeType ? toNativeType : identity;\n  const params = new URLSearchParams(query);\n  params.forEach((value, key) => {\n    if (key) {\n      summary[key] = value ? convert(value) : true;\n    }\n  });\n  return summary;\n}\nvar vtkURLExtract = {\n  toNativeType,\n  extractURLParameters\n};\n\nexport { vtkURLExtract as default };\n","const ViewTypes = {\n  DEFAULT: 0,\n  GEOMETRY: 1,\n  SLICE: 2,\n  VOLUME: 3,\n  YZ_PLANE: 4,\n  // Sagittal\n  XZ_PLANE: 5,\n  // Coronal\n  XY_PLANE: 6 // Axial\n};\n\nconst RenderingTypes = {\n  PICKING_BUFFER: 0,\n  FRONT_BUFFER: 1\n};\nconst CaptureOn = {\n  MOUSE_MOVE: 0,\n  MOUSE_RELEASE: 1\n};\nvar WidgetManagerConst = {\n  ViewTypes,\n  RenderingTypes,\n  CaptureOn\n};\n\nexport { CaptureOn, RenderingTypes, ViewTypes, WidgetManagerConst as default };\n","import { m as macro } from '../../macros2.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkPiecewiseFunction methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPiecewiseFunction(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPiecewiseFunction');\n\n  // Return the number of points which specify this function\n  publicAPI.getSize = () => model.nodes.length;\n\n  // Return the type of function stored in object:\n  // Function Types:\n  //    0 : Constant        (No change in slope between end points)\n  //    1 : NonDecreasing   (Always increasing or zero slope)\n  //    2 : NonIncreasing   (Always decreasing or zero slope)\n  //    3 : Varied          (Contains both decreasing and increasing slopes)\n  //    4 : Unknown         (Error condition)\n  //\n  publicAPI.getType = () => {\n    let value;\n    let prevValue = 0.0;\n    let functionType = 0;\n    if (model.nodes.length > 0) {\n      prevValue = model.nodes[0].y;\n    }\n    for (let i = 1; i < model.nodes.length; i++) {\n      value = model.nodes[i].y;\n\n      // Do not change the function type if equal\n      if (value !== prevValue) {\n        if (value > prevValue) {\n          switch (functionType) {\n            case 0:\n            case 1:\n              // NonDecreasing\n              functionType = 1;\n              break;\n            case 2:\n            default:\n              // Varied\n              functionType = 3;\n              break;\n          }\n        } else {\n          // value < prev_value\n          switch (functionType) {\n            case 0:\n            case 2:\n              // NonIncreasing\n              functionType = 2;\n              break;\n            case 1:\n            default:\n              // Varied\n              functionType = 3;\n              break;\n          }\n        }\n      }\n      prevValue = value;\n\n      // Exit loop if we find a Varied function\n      if (functionType === 3) {\n        break;\n      }\n    }\n    switch (functionType) {\n      case 0:\n        return 'Constant';\n      case 1:\n        return 'NonDecreasing';\n      case 2:\n        return 'NonIncreasing';\n      case 3:\n      default:\n        return 'Varied';\n    }\n  };\n\n  // Since we no longer store the data in an array, we must\n  // copy out of the vector into an array. No modified check -\n  // could be added if performance is a problem\n  publicAPI.getDataPointer = () => {\n    const size = model.nodes.length;\n    model.function = null;\n    if (size > 0) {\n      model.function = [];\n      for (let i = 0; i < size; i++) {\n        model.function[2 * i] = model.nodes[i].x;\n        model.function[2 * i + 1] = model.nodes[i].y;\n      }\n    }\n    return model.function;\n  };\n\n  // Returns the first point location which starts a non-zero segment of the\n  // function. Note that the value at this point may be zero.\n  publicAPI.getFirstNonZeroValue = () => {\n    // Check if no points specified\n    if (model.nodes.length === 0) {\n      return 0;\n    }\n    let allZero = 1;\n    let x = 0.0;\n    let i = 0;\n    for (; i < model.nodes.length; i++) {\n      if (model.nodes[i].y !== 0.0) {\n        allZero = 0;\n        break;\n      }\n    }\n\n    // If every specified point has a zero value then return\n    // a large value\n    if (allZero) {\n      x = Number.MAX_VALUE;\n    } else if (i > 0) {\n      // A point was found with a non-zero value\n      // Return the value of the point that precedes this one\n      x = model.nodes[i - 1].x;\n    } else if (model.clamping) {\n      // If this is the first point in the function, return its\n      // value is clamping is off, otherwise VTK_DOUBLE_MIN if\n      // clamping is on.\n      x = -Number.MAX_VALUE;\n    } else {\n      x = model.nodes[0].x;\n    }\n    return x;\n  };\n\n  // For a specified index value, get the node parameters\n  publicAPI.getNodeValue = (index, val) => {\n    const size = model.nodes.length;\n    if (index < 0 || index >= size) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n    val[0] = model.nodes[index].x;\n    val[1] = model.nodes[index].y;\n    val[2] = model.nodes[index].midpoint;\n    val[3] = model.nodes[index].sharpness;\n    return 1;\n  };\n\n  // For a specified index value, get the node parameters\n  publicAPI.setNodeValue = (index, val) => {\n    const size = model.nodes.length;\n    if (index < 0 || index >= size) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n    const oldX = model.nodes[index].x;\n    model.nodes[index].x = val[0];\n    model.nodes[index].y = val[1];\n    model.nodes[index].midpoint = val[2];\n    model.nodes[index].sharpness = val[3];\n    if (oldX !== val[0]) {\n      // The point has been moved, the order of points or the range might have\n      // been modified.\n      publicAPI.sortAndUpdateRange();\n      // No need to call Modified() here because SortAndUpdateRange() has done it\n      // already.\n    } else {\n      publicAPI.modified();\n    }\n    return 1;\n  };\n\n  // Adds a point to the function. If a duplicate point is inserted\n  // then the function value at that location is set to the new value.\n  // This is the legacy version that assumes midpoint = 0.5 and\n  // sharpness = 0.0\n  publicAPI.addPoint = (x, y) => publicAPI.addPointLong(x, y, 0.5, 0.0);\n\n  // Adds a point to the function and returns the array index of the point.\n  publicAPI.addPointLong = (x, y, midpoint, sharpness) => {\n    // Error check\n    if (midpoint < 0.0 || midpoint > 1.0) {\n      vtkErrorMacro('Midpoint outside range [0.0, 1.0]');\n      return -1;\n    }\n    if (sharpness < 0.0 || sharpness > 1.0) {\n      vtkErrorMacro('Sharpness outside range [0.0, 1.0]');\n      return -1;\n    }\n\n    // remove any node already at this X location\n    if (!model.allowDuplicateScalars) {\n      publicAPI.removePoint(x);\n    }\n\n    // Create the new node\n    const node = {\n      x,\n      y,\n      midpoint,\n      sharpness\n    };\n\n    // Add it, then sort to get everything in order\n    model.nodes.push(node);\n    publicAPI.sortAndUpdateRange();\n\n    // Now find this node so we can return the index\n    let i;\n    for (i = 0; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n\n    // If we didn't find it, something went horribly wrong so\n    // return -1\n    if (i < model.nodes.length) {\n      return i;\n    }\n    return -1;\n  };\n  publicAPI.setNodes = nodes => {\n    if (model.nodes !== nodes) {\n      model.nodes = nodes;\n      publicAPI.sortAndUpdateRange();\n    }\n  };\n\n  // Sort the vector in increasing order, then fill in\n  // the Range\n  publicAPI.sortAndUpdateRange = () => {\n    model.nodes.sort((a, b) => a.x - b.x);\n    const modifiedInvoked = publicAPI.updateRange();\n    // If range is updated, Modified() has been called, don't call it again.\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.updateRange = () => {\n    const oldRange = model.range.slice();\n    const size = model.nodes.length;\n    if (size) {\n      model.range[0] = model.nodes[0].x;\n      model.range[1] = model.nodes[size - 1].x;\n    } else {\n      model.range[0] = 0;\n      model.range[1] = 0;\n    }\n    // If the rage is the same, then no need to call Modified()\n    if (oldRange[0] === model.range[0] && oldRange[1] === model.range[1]) {\n      return false;\n    }\n    publicAPI.modified();\n    return true;\n  };\n\n  // Removes a point from the function. If no point is found then function\n  // remains the same.\n  publicAPI.removePoint = x => {\n    // First find the node since we need to know its\n    // index as our return value\n    let i;\n    for (i = 0; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n\n    // If the node doesn't exist, we return -1\n    if (i >= model.nodes.length) {\n      return -1;\n    }\n    const retVal = i;\n\n    // If the first or last point has been removed, then we update the range\n    // No need to sort here as the order of points hasn't changed.\n    let modifiedInvoked = false;\n    model.nodes.splice(i, 1);\n    if (i === 0 || i === model.nodes.length) {\n      modifiedInvoked = publicAPI.updateRange();\n    }\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n    return retVal;\n  };\n\n  // Removes all points from the function.\n  publicAPI.removeAllPoints = () => {\n    model.nodes = [];\n    publicAPI.sortAndUpdateRange();\n  };\n\n  // Add in end points of line and remove any points between them\n  // Legacy method with no way to specify midpoint and sharpness\n  publicAPI.addSegment = (x1, y1, x2, y2) => {\n    // First, find all points in this range and remove them\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length;) {\n      if (model.nodes[i].x >= x1 && model.nodes[i].x <= x2) {\n        model.nodes.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n\n    // Now add the points\n    publicAPI.addPoint(x1, y1, 0.5, 0.0);\n    publicAPI.addPoint(x2, y2, 0.5, 0.0);\n  };\n\n  // Return the value of the function at a position\n  publicAPI.getValue = x => {\n    const table = [];\n    publicAPI.getTable(x, x, 1, table);\n    return table[0];\n  };\n\n  // Remove all points outside the range, and make sure a point\n  // exists at each end of the range. Used as a convenience method\n  // for transfer function editors\n  publicAPI.adjustRange = range => {\n    if (range.length < 2) {\n      return 0;\n    }\n    const functionRange = publicAPI.getRange();\n\n    // Make sure we have points at each end of the range\n    if (functionRange[0] < range[0]) {\n      publicAPI.addPoint(range[0], publicAPI.getValue(range[0]));\n    } else {\n      publicAPI.addPoint(range[0], publicAPI.getValue(functionRange[0]));\n    }\n    if (functionRange[1] > range[1]) {\n      publicAPI.addPoint(range[1], publicAPI.getValue(range[1]));\n    } else {\n      publicAPI.addPoint(range[1], publicAPI.getValue(functionRange[1]));\n    }\n\n    // Remove all points out-of-range\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length;) {\n      if (model.nodes[i].x >= range[0] && model.nodes[i].x <= range[1]) {\n        model.nodes.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n    publicAPI.sortAndUpdateRange();\n    return 1;\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.estimateMinNumberOfSamples = (x1, x2) => {\n    const d = publicAPI.findMinimumXDistance();\n    return Math.ceil((x2 - x1) / d);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.findMinimumXDistance = () => {\n    const size = model.nodes.length;\n    if (size < 2) {\n      return -1.0;\n    }\n    let distance = model.nodes[1].x - model.nodes[0].x;\n    for (let i = 0; i < size - 1; i++) {\n      const currentDist = model.nodes[i + 1].x - model.nodes[i].x;\n      if (currentDist < distance) {\n        distance = currentDist;\n      }\n    }\n    return distance;\n  };\n\n  // Returns a table of function values evaluated at regular intervals\n  /* eslint-disable prefer-destructuring */\n  /* eslint-disable no-continue */\n  publicAPI.getTable = function (xStart, xEnd, size, table) {\n    let stride = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n    let i;\n    let idx = 0;\n    const numNodes = model.nodes.length;\n\n    // Need to keep track of the last value so that\n    // we can fill in table locations past this with\n    // this value if Clamping is On.\n    let lastValue = 0.0;\n    if (numNodes !== 0) {\n      lastValue = model.nodes[numNodes - 1].y;\n    }\n    let x = 0.0;\n    let x1 = 0.0;\n    let x2 = 0.0;\n    let y1 = 0.0;\n    let y2 = 0.0;\n    let midpoint = 0.0;\n    let sharpness = 0.0;\n\n    // For each table entry\n    for (i = 0; i < size; i++) {\n      // Find our location in the table\n      const tidx = stride * i;\n\n      // Find our X location. If we are taking only 1 sample, make\n      // it halfway between start and end (usually start and end will\n      // be the same in this case)\n      if (size > 1) {\n        x = xStart + i / (size - 1.0) * (xEnd - xStart);\n      } else {\n        x = 0.5 * (xStart + xEnd);\n      }\n\n      // Do we need to move to the next node?\n      while (idx < numNodes && x > model.nodes[idx].x) {\n        idx++;\n        // If we are at a valid point index, fill in\n        // the value at this node, and the one before (the\n        // two that surround our current sample location)\n        // idx cannot be 0 since we just incremented it.\n        if (idx < numNodes) {\n          x1 = model.nodes[idx - 1].x;\n          x2 = model.nodes[idx].x;\n          y1 = model.nodes[idx - 1].y;\n          y2 = model.nodes[idx].y;\n\n          // We only need the previous midpoint and sharpness\n          // since these control this region\n          midpoint = model.nodes[idx - 1].midpoint;\n          sharpness = model.nodes[idx - 1].sharpness;\n\n          // Move midpoint away from extreme ends of range to avoid\n          // degenerate math\n          if (midpoint < 0.00001) {\n            midpoint = 0.00001;\n          }\n          if (midpoint > 0.99999) {\n            midpoint = 0.99999;\n          }\n        }\n      }\n\n      // Are we at the end? If so, just use the last value\n      if (idx >= numNodes) {\n        table[tidx] = model.clamping ? lastValue : 0.0;\n      } else if (idx === 0) {\n        // Are we before the first node? If so, duplicate this nodes values\n        table[tidx] = model.clamping ? model.nodes[0].y : 0.0;\n      } else {\n        // Otherwise, we are between two nodes - interpolate\n        // Our first attempt at a normalized location [0,1] -\n        // we will be modifying this based on midpoint and\n        // sharpness to get the curve shape we want and to have\n        // it pass through (y1+y2)/2 at the midpoint.\n        let s = (x - x1) / (x2 - x1);\n\n        // Readjust based on the midpoint - linear adjustment\n        if (s < midpoint) {\n          s = 0.5 * s / midpoint;\n        } else {\n          s = 0.5 + 0.5 * (s - midpoint) / (1.0 - midpoint);\n        }\n\n        // override for sharpness > 0.99\n        // In this case we just want piecewise constant\n        if (sharpness > 0.99) {\n          // Use the first value since we are below the midpoint\n          if (s < 0.5) {\n            table[tidx] = y1;\n            continue;\n          } else {\n            // Use the second value at or above the midpoint\n            table[tidx] = y2;\n            continue;\n          }\n        }\n\n        // Override for sharpness < 0.01\n        // In this case we want piecewise linear\n        if (sharpness < 0.01) {\n          // Simple linear interpolation\n          table[tidx] = (1 - s) * y1 + s * y2;\n          continue;\n        }\n\n        // We have a sharpness between [0.01, 0.99] - we will\n        // used a modified hermite curve interpolation where we\n        // derive the slope based on the sharpness, and we compress\n        // the curve non-linearly based on the sharpness\n\n        // First, we will adjust our position based on sharpness in\n        // order to make the curve sharper (closer to piecewise constant)\n        if (s < 0.5) {\n          s = 0.5 * (s * 2) ** (1.0 + 10 * sharpness);\n        } else if (s > 0.5) {\n          s = 1.0 - 0.5 * ((1.0 - s) * 2) ** (1 + 10 * sharpness);\n        }\n\n        // Compute some coefficients we will need for the hermite curve\n        const ss = s * s;\n        const sss = ss * s;\n        const h1 = 2 * sss - 3 * ss + 1;\n        const h2 = -2 * sss + 3 * ss;\n        const h3 = sss - 2 * ss + s;\n        const h4 = sss - ss;\n\n        // Use one slope for both end points\n        const slope = y2 - y1;\n        const t = (1.0 - sharpness) * slope;\n\n        // Compute the value\n        table[tidx] = h1 * y1 + h2 * y2 + h3 * t + h4 * t;\n\n        // Final error check to make sure we don't go outside\n        // the Y range\n        const min = y1 < y2 ? y1 : y2;\n        const max = y1 > y2 ? y1 : y2;\n        table[tidx] = table[tidx] < min ? min : table[tidx];\n        table[tidx] = table[tidx] > max ? max : table[tidx];\n      }\n    }\n  };\n}\n/* eslint-enable prefer-destructuring */\n/* eslint-enable no-continue */\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // model.function = NULL;\n  range: [0, 0],\n  clamping: true,\n  allowDuplicateScalars: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  macro.obj(publicAPI, model);\n\n  // Internal objects initialization\n  model.nodes = [];\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['allowDuplicateScalars', 'clamping']);\n  macro.setArray(publicAPI, model, ['range'], 2);\n\n  // Create get macros for array\n  macro.getArray(publicAPI, model, ['range']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkPiecewiseFunction(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkPiecewiseFunction');\n\n// ----------------------------------------------------------------------------\n\nvar vtkPiecewiseFunction$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkPiecewiseFunction$1 as default, extend, newInstance };\n","function funcToSource(fn, sourcemapArg) {\n    var sourcemap = sourcemapArg === undefined ? null : sourcemapArg;\n    var regex = /(['\"])__worker_loader_strict__(['\"])/g;\n    var lines = [];\n\n    // instead of extracting the function source code, just return the function as if it's being evaluated\n    // by the caller.\n    var source = fn.toString();\n    source = source.replace(regex, '$1use strict$2');\n    lines.push('(' + source + ')()');\n\n    if (sourcemap) {\n        lines.push('\\/\\/# sourceMappingURL=' + sourcemap + '\\n');\n    }\n    return lines;\n}\n\nexport { funcToSource as f };\n","import { f as funcToSource } from './rollup-plugin-web-worker-loader__helper__funcToSource.js';\n\nfunction createURL(fn, sourcemapArg) {\n    var lines = funcToSource(fn, sourcemapArg);\n    var blob = new Blob(lines, { type: 'application/javascript' });\n    return URL.createObjectURL(blob);\n}\n\nfunction createInlineWorkerFactory(fn, sourcemapArg) {\n    var url;\n    return function WorkerFactory(options) {\n        url = url || createURL(fn, sourcemapArg);\n        return new Worker(url, options);\n    };\n}\n\nexport { createInlineWorkerFactory as c };\n","import { c as createInlineWorkerFactory } from '../../../../rollup-plugin-web-worker-loader__helper__browser__createInlineWorkerFactory.js';\n\nvar WorkerFactory = createInlineWorkerFactory(/* rollup-plugin-web-worker-loader */function () {\n(function () {\n  '__worker_loader_strict__';\n\n  var register = {exports: {}};\n\n  var _createClass$1 = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck$1(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var TinyEmitter$1 = function () {\n    function TinyEmitter() {\n      _classCallCheck$1(this, TinyEmitter);\n\n      Object.defineProperty(this, '__listeners', {\n        value: {},\n        enumerable: false,\n        writable: false\n      });\n    }\n\n    _createClass$1(TinyEmitter, [{\n      key: 'emit',\n      value: function emit(eventName) {\n        if (!this.__listeners[eventName]) return this;\n\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.__listeners[eventName][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var handler = _step.value;\n\n            handler.apply(undefined, args);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return this;\n      }\n    }, {\n      key: 'once',\n      value: function once(eventName, handler) {\n        var _this = this;\n\n        var once = function once() {\n          _this.off(eventName, once);\n          handler.apply(undefined, arguments);\n        };\n\n        return this.on(eventName, once);\n      }\n    }, {\n      key: 'on',\n      value: function on(eventName, handler) {\n        if (!this.__listeners[eventName]) this.__listeners[eventName] = [];\n\n        this.__listeners[eventName].push(handler);\n\n        return this;\n      }\n    }, {\n      key: 'off',\n      value: function off(eventName, handler) {\n        if (handler) this.__listeners[eventName] = this.__listeners[eventName].filter(function (h) {\n          return h !== handler;\n        });else this.__listeners[eventName] = [];\n\n        return this;\n      }\n    }]);\n\n    return TinyEmitter;\n  }();\n\n  var tinyEmitter = TinyEmitter$1;\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var TinyEmitter = tinyEmitter;\n\n  var MESSAGE_RESULT = 0;\n  var MESSAGE_EVENT = 1;\n\n  var RESULT_ERROR = 0;\n  var RESULT_SUCCESS = 1;\n\n  var DEFAULT_HANDLER = 'main';\n\n  var isPromise = function isPromise(o) {\n    return (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object' && o !== null && typeof o.then === 'function' && typeof o.catch === 'function';\n  };\n\n  function RegisterPromise(fn) {\n    var handlers = _defineProperty({}, DEFAULT_HANDLER, fn);\n    var sendPostMessage = self.postMessage.bind(self);\n\n    var server = new (function (_TinyEmitter) {\n      _inherits(WorkerRegister, _TinyEmitter);\n\n      function WorkerRegister() {\n        _classCallCheck(this, WorkerRegister);\n\n        return _possibleConstructorReturn(this, (WorkerRegister.__proto__ || Object.getPrototypeOf(WorkerRegister)).apply(this, arguments));\n      }\n\n      _createClass(WorkerRegister, [{\n        key: 'emit',\n        value: function emit(eventName) {\n          for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          if (args.length == 1 && args[0] instanceof TransferableResponse) {\n            sendPostMessage({ eventName: eventName, args: args }, args[0].transferable);\n          } else {\n            sendPostMessage({ eventName: eventName, args: args });\n          }\n          return this;\n        }\n      }, {\n        key: 'emitLocally',\n        value: function emitLocally(eventName) {\n          var _get2;\n\n          for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n\n          (_get2 = _get(WorkerRegister.prototype.__proto__ || Object.getPrototypeOf(WorkerRegister.prototype), 'emit', this)).call.apply(_get2, [this, eventName].concat(args));\n        }\n      }, {\n        key: 'operation',\n        value: function operation(name, handler) {\n          handlers[name] = handler;\n          return this;\n        }\n      }]);\n\n      return WorkerRegister;\n    }(TinyEmitter))();\n\n    var run = function run(messageId, payload, handlerName) {\n\n      var onSuccess = function onSuccess(result) {\n        if (result && result instanceof TransferableResponse) {\n          sendResult(messageId, RESULT_SUCCESS, result.payload, result.transferable);\n        } else {\n          sendResult(messageId, RESULT_SUCCESS, result);\n        }\n      };\n\n      var onError = function onError(e) {\n        sendResult(messageId, RESULT_ERROR, {\n          message: e.message,\n          stack: e.stack\n        });\n      };\n\n      try {\n        var result = runFn(messageId, payload, handlerName);\n        if (isPromise(result)) {\n          result.then(onSuccess).catch(onError);\n        } else {\n          onSuccess(result);\n        }\n      } catch (e) {\n        onError(e);\n      }\n    };\n\n    var runFn = function runFn(messageId, payload, handlerName) {\n      var handler = handlers[handlerName || DEFAULT_HANDLER];\n      if (!handler) throw new Error('Not found handler for this request');\n\n      return handler(payload, sendEvent.bind(null, messageId));\n    };\n\n    var sendResult = function sendResult(messageId, success, payload) {\n      var transferable = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n      sendPostMessage([MESSAGE_RESULT, messageId, success, payload], transferable);\n    };\n\n    var sendEvent = function sendEvent(messageId, eventName, payload) {\n      if (!eventName) throw new Error('eventName is required');\n\n      if (typeof eventName !== 'string') throw new Error('eventName should be string');\n\n      sendPostMessage([MESSAGE_EVENT, messageId, eventName, payload]);\n    };\n\n    self.addEventListener('message', function (_ref) {\n      var data = _ref.data;\n\n      if (Array.isArray(data)) {\n        run.apply(undefined, _toConsumableArray(data));\n      } else if (data && data.eventName) {\n        server.emitLocally.apply(server, [data.eventName].concat(_toConsumableArray(data.args)));\n      }\n    });\n\n    return server;\n  }\n\n  var TransferableResponse = function TransferableResponse(payload, transferable) {\n    _classCallCheck(this, TransferableResponse);\n\n    this.payload = payload;\n    this.transferable = transferable;\n  };\n\n  register.exports = RegisterPromise;\n  register.exports.TransferableResponse = TransferableResponse;\n\n  var registerWebworker = register.exports;\n\n  /* eslint-disable */\n  // prettier-ignore\n  registerWebworker(function (message, emit) {\n    var array = message.array;\n    var min = message.min;\n    var max = message.max;\n    var offset = message.component || 0;\n    var step = message.numberOfComponents || 1;\n    var numberOfBins = message.numberOfBins;\n    var delta = max - min;\n    var histogram = new Float32Array(numberOfBins);\n    histogram.fill(0);\n    var len = array.length;\n    for (var i = offset; i < len; i += step) {\n      var idx = Math.floor((numberOfBins - 1) * (Number(array[i]) - min) / delta);\n      histogram[idx] += 1;\n    }\n    return Promise.resolve(new registerWebworker.TransferableResponse(histogram, [histogram.buffer]));\n  });\n\n})();\n}, null);\n/* eslint-enable */\n\nexport { WorkerFactory as W };\n","import { m as macro } from '../../macros2.js';\nimport { F as arrayRange } from '../../Common/Core/Math/index.js';\nimport WebworkerPromise from 'webworker-promise';\nimport { W as WorkerFactory } from '../../_virtual/rollup-plugin-worker-loader__module_Sources/Interaction/Widgets/PiecewiseGaussianWidget/ComputeHistogram.worker.js';\n\n/* eslint-disable no-continue */\n\n// ----------------------------------------------------------------------------\n// Global structures\n// ----------------------------------------------------------------------------\n\nconst MIN_GAUSSIAN_WIDTH = 0.001;\nconst ACTION_TO_CURSOR = {\n  adjustPosition: '-webkit-grab',\n  adjustHeight: 'row-resize',\n  adjustBias: 'crosshair',\n  adjustWidth: 'col-resize',\n  adjustZoom: 'col-resize'\n};\nconst TOUCH_CLICK = [];\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nconst ACTIONS = {\n  adjustPosition(x, y, _ref) {\n    let {\n      originalXY,\n      gaussian,\n      originalGaussian\n    } = _ref;\n    const xOffset = originalGaussian.position - originalXY[0];\n    gaussian.position = x + xOffset;\n    return true;\n  },\n  adjustHeight(x, y, _ref2) {\n    let {\n      model,\n      gaussian\n    } = _ref2;\n    gaussian.height = 1 - y;\n    gaussian.height = Math.min(1, Math.max(model.gaussianMinimumHeight, gaussian.height));\n    return true;\n  },\n  adjustBias(x, y, _ref3) {\n    let {\n      originalXY,\n      gaussian,\n      originalGaussian\n    } = _ref3;\n    gaussian.xBias = originalGaussian.xBias - (originalXY[0] - x) / gaussian.height;\n    gaussian.yBias = originalGaussian.yBias + 4 * (originalXY[1] - y) / gaussian.height;\n    // Clamps\n    gaussian.xBias = Math.max(-1, Math.min(1, gaussian.xBias));\n    gaussian.yBias = Math.max(0, Math.min(2, gaussian.yBias));\n    return true;\n  },\n  adjustWidth(x, y, _ref4) {\n    let {\n      originalXY,\n      gaussian,\n      originalGaussian,\n      gaussianSide\n    } = _ref4;\n    gaussian.width = gaussianSide < 0 ? originalGaussian.width - (originalXY[0] - x) : originalGaussian.width + (originalXY[0] - x);\n    if (gaussian.width < MIN_GAUSSIAN_WIDTH) {\n      gaussian.width = MIN_GAUSSIAN_WIDTH;\n    }\n    return true;\n  },\n  adjustZoom(x, y, _ref5) {\n    let {\n      rangeZoom,\n      publicAPI\n    } = _ref5;\n    const delta = rangeZoom[1] - rangeZoom[0];\n    const absNormX = (x - rangeZoom[0]) / delta;\n    const minDelta = Math.abs(absNormX - rangeZoom[0]);\n    const maxDelta = Math.abs(absNormX - rangeZoom[1]);\n    const meanDelta = Math.abs(absNormX - 0.5 * (rangeZoom[0] + rangeZoom[1]));\n    if (meanDelta < Math.min(minDelta, maxDelta)) {\n      const halfDelta = delta * 0.5;\n      rangeZoom[0] = Math.min(Math.max(absNormX - halfDelta, 0), rangeZoom[1] - 0.1);\n      rangeZoom[1] = Math.max(Math.min(absNormX + halfDelta, 1), rangeZoom[0] + 0.1);\n    } else if (minDelta < maxDelta) {\n      rangeZoom[0] = Math.min(Math.max(absNormX, 0), rangeZoom[1] - 0.1);\n    } else {\n      rangeZoom[1] = Math.max(Math.min(absNormX, 1), rangeZoom[0] + 0.1);\n    }\n    publicAPI.invokeZoomChange(rangeZoom);\n\n    // The opacity did not changed\n    return false;\n  }\n};\n\n// ----------------------------------------------------------------------------\n\nfunction computeOpacities(gaussians) {\n  let sampling = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 256;\n  const opacities = [];\n  while (opacities.length < sampling) {\n    opacities.push(0);\n  }\n  let count = gaussians.length;\n  while (count--) {\n    const {\n      position,\n      height,\n      width,\n      xBias,\n      yBias\n    } = gaussians[count];\n    for (let i = 0; i < sampling; i++) {\n      const x = i / (sampling - 1);\n\n      // clamp non-zero values to pos +/- width\n      if (x > position + width || x < position - width) {\n        if (opacities[i] < 0.0) {\n          opacities[i] = 0.0;\n        }\n        continue;\n      }\n\n      // non-zero width\n      const correctedWidth = width < MIN_GAUSSIAN_WIDTH ? MIN_GAUSSIAN_WIDTH : width;\n\n      // translate the original x to a new x based on the xbias\n      let x0 = 0;\n      if (xBias === 0 || x === position + xBias) {\n        x0 = x;\n      } else if (x > position + xBias) {\n        if (correctedWidth === xBias) {\n          x0 = position;\n        } else {\n          x0 = position + (x - position - xBias) * (correctedWidth / (correctedWidth - xBias));\n        }\n      } else if (-correctedWidth === xBias) {\n        // (x < pos+xBias)\n        x0 = position;\n      } else {\n        x0 = position - (x - position - xBias) * (correctedWidth / (correctedWidth + xBias));\n      }\n\n      // center around 0 and normalize to -1,1\n      const x1 = (x0 - position) / correctedWidth;\n\n      // do a linear interpolation between:\n      //    a gaussian and a parabola        if 0 < yBias <1\n      //    a parabola and a step function   if 1 < yBias <2\n      const h0a = Math.exp(-(4 * x1 * x1));\n      const h0b = 1.0 - x1 * x1;\n      const h0c = 1.0;\n      let h1;\n      if (yBias < 1) {\n        h1 = yBias * h0b + (1 - yBias) * h0a;\n      } else {\n        h1 = (2 - yBias) * h0b + (yBias - 1) * h0c;\n      }\n      const h2 = height * h1;\n\n      // perform the MAX over different gaussians, not the sum\n      if (h2 > opacities[i]) {\n        opacities[i] = h2;\n      }\n    }\n  }\n  return opacities;\n}\n\n// ----------------------------------------------------------------------------\n\nfunction applyGaussianToPiecewiseFunction(gaussians, sampling, rangeToUse, piecewiseFunction) {\n  const opacities = computeOpacities(gaussians, sampling);\n  const nodes = [];\n  const delta = (rangeToUse[1] - rangeToUse[0]) / (opacities.length - 1);\n  const midpoint = 0.5;\n  const sharpness = 0;\n  for (let index = 0; index < opacities.length; index++) {\n    const x = rangeToUse[0] + delta * index;\n    const y = opacities[index];\n    nodes.push({\n      x,\n      y,\n      midpoint,\n      sharpness\n    });\n  }\n  piecewiseFunction.setNodes(nodes);\n}\n\n// ----------------------------------------------------------------------------\n\nfunction drawChart(ctx, area, values) {\n  let style = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n    lineWidth: 1,\n    strokeStyle: '#000'\n  };\n  const verticalScale = area[3];\n  const horizontalScale = area[2] / (values.length - 1);\n  const fill = !!style.fillStyle;\n  const offset = verticalScale + area[1];\n  ctx.lineWidth = style.lineWidth;\n  ctx.strokeStyle = style.strokeStyle;\n  ctx.beginPath();\n  ctx.moveTo(area[0], area[1] + area[3]);\n  for (let index = 0; index < values.length; index++) {\n    ctx.lineTo(area[0] + index * horizontalScale, Math.max(area[1], offset - values[index] * verticalScale));\n  }\n  if (fill) {\n    ctx.fillStyle = style.fillStyle;\n    ctx.lineTo(area[0] + area[2], area[1] + area[3]);\n    if (style.clip) {\n      ctx.clip();\n      return;\n    }\n    ctx.fill();\n  }\n  ctx.stroke();\n}\n\n// ----------------------------------------------------------------------------\n\nfunction updateColorCanvas(colorTransferFunction, width, rangeToUse, canvas) {\n  const workCanvas = canvas || document.createElement('canvas');\n  workCanvas.setAttribute('width', width);\n  workCanvas.setAttribute('height', 256);\n  const ctx = workCanvas.getContext('2d');\n  const rgba = colorTransferFunction.getUint8Table(rangeToUse[0], rangeToUse[1], width, 4);\n  const pixelsArea = ctx.getImageData(0, 0, width, 256);\n  for (let lineIdx = 0; lineIdx < 256; lineIdx++) {\n    pixelsArea.data.set(rgba, lineIdx * 4 * width);\n  }\n  const nbValues = 256 * width * 4;\n  const lineSize = width * 4;\n  for (let i = 3; i < nbValues; i += 4) {\n    pixelsArea.data[i] = 255 - Math.floor(i / lineSize);\n  }\n  ctx.putImageData(pixelsArea, 0, 0);\n  return workCanvas;\n}\n\n// ----------------------------------------------------------------------------\n\nfunction updateColorCanvasFromImage(img, width, canvas) {\n  const workCanvas = canvas || document.createElement('canvas');\n  workCanvas.setAttribute('width', width);\n  workCanvas.setAttribute('height', 256);\n  const ctx = workCanvas.getContext('2d');\n  ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, width, 256);\n  return workCanvas;\n}\n\n// ----------------------------------------------------------------------------\n\nfunction normalizeCoordinates(x, y, subRectangeArea) {\n  let zoomRange = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [0, 1];\n  return [zoomRange[0] + (x - subRectangeArea[0]) / subRectangeArea[2] * (zoomRange[1] - zoomRange[0]), (y - subRectangeArea[1]) / subRectangeArea[3]];\n}\n\n// ----------------------------------------------------------------------------\n\nfunction findGaussian(x, gaussians) {\n  const distances = gaussians.map(g => Math.abs(g.position - x));\n  const min = Math.min(...distances);\n  return distances.indexOf(min);\n}\n\n// ----------------------------------------------------------------------------\n\nfunction createListener(callback) {\n  let preventDefault = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return e => {\n    const {\n      offsetX,\n      offsetY\n    } = e;\n    if (preventDefault) {\n      e.preventDefault();\n    }\n    callback(offsetX, offsetY);\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nfunction createTouchClickListener() {\n  const id = TOUCH_CLICK.length;\n  for (var _len = arguments.length, callbacks = new Array(_len), _key = 0; _key < _len; _key++) {\n    callbacks[_key] = arguments[_key];\n  }\n  TOUCH_CLICK.push({\n    callbacks,\n    timeout: 0,\n    deltaT: 200,\n    count: 0,\n    ready: false\n  });\n  return id;\n}\n\n// ----------------------------------------------------------------------------\n\nfunction processTouchClicks() {\n  TOUCH_CLICK.filter(t => t.ready).forEach(touchHandle => {\n    touchHandle.callbacks.forEach(callback => {\n      if (callback.touches === touchHandle.touches && callback.clicks === touchHandle.count) {\n        callback.action(...touchHandle.singleTouche);\n      }\n    });\n\n    // Clear state\n    touchHandle.ts = 0;\n    touchHandle.count = 0;\n    touchHandle.touches = 0;\n    touchHandle.ready = false;\n  });\n}\n\n// ----------------------------------------------------------------------------\n\nfunction createTouchListener(id, callback) {\n  let nbTouches = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let preventDefault = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  return e => {\n    const targetBounds = e.target.getBoundingClientRect();\n    const relativeTouches = Array.prototype.map.call(e.touches, t => [t.pageX - targetBounds.left, t.pageY - targetBounds.top]);\n    const singleTouche = relativeTouches.reduce((a, b) => [a[0] + b[0], a[1] + b[1]], [0, 0]).map(v => v / e.touches.length);\n    if (e.type === 'touchstart') {\n      clearTimeout(TOUCH_CLICK[id].timeout);\n      TOUCH_CLICK[id].ts = e.timeStamp;\n      TOUCH_CLICK[id].singleTouche = singleTouche;\n      TOUCH_CLICK[id].touches = e.touches.length;\n    } else if (e.type === 'touchmove') {\n      TOUCH_CLICK[id].ts = 0;\n      TOUCH_CLICK[id].count = 0;\n      TOUCH_CLICK[id].ready = false;\n    } else if (e.type === 'touchend') {\n      if (e.timeStamp - TOUCH_CLICK[id].ts < TOUCH_CLICK[id].deltaT) {\n        TOUCH_CLICK[id].count += 1;\n        TOUCH_CLICK[id].ready = true;\n        if (preventDefault) {\n          e.preventDefault();\n        }\n        TOUCH_CLICK[id].timeout = setTimeout(processTouchClicks, TOUCH_CLICK[id].deltaT);\n      } else {\n        TOUCH_CLICK[id].ready = false;\n      }\n    }\n    if (e.touches.length === nbTouches) {\n      callback(...singleTouche);\n      if (preventDefault) {\n        e.preventDefault();\n      }\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nfunction listenerSelector(condition, ok, ko) {\n  return e => condition() ? ok(e) : ko(e);\n}\n\n// ----------------------------------------------------------------------------\n\nfunction rescaleArray(array, focusArea) {\n  if (!focusArea) {\n    return array;\n  }\n  const maxIdx = array.length - 1;\n  const idxRange = focusArea.map(v => Math.round(v * maxIdx));\n  return array.slice(idxRange[0], idxRange[1] + 1);\n}\n\n// ----------------------------------------------------------------------------\n\nfunction rescaleValue(value, focusArea) {\n  if (!focusArea) {\n    return value;\n  }\n  return (value - focusArea[0]) / (focusArea[1] - focusArea[0]);\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst STATIC = {\n  applyGaussianToPiecewiseFunction,\n  computeOpacities,\n  createListener,\n  drawChart,\n  findGaussian,\n  listenerSelector,\n  normalizeCoordinates\n};\n\n// ----------------------------------------------------------------------------\n// vtkPiecewiseGaussianWidget methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPiecewiseGaussianWidget(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPiecewiseGaussianWidget');\n  if (!model.canvas) {\n    model.canvas = document.createElement('canvas');\n  }\n  publicAPI.setContainer = el => {\n    if (model.container && model.container !== el) {\n      model.container.removeChild(model.canvas);\n    }\n    if (model.container !== el) {\n      model.container = el;\n      if (model.container) {\n        model.container.appendChild(model.canvas);\n      }\n      publicAPI.modified();\n    }\n  };\n  publicAPI.setGaussians = gaussians => {\n    if (model.gaussians === gaussians) {\n      return;\n    }\n    model.gaussians = gaussians;\n    model.opacities = computeOpacities(model.gaussians, model.piecewiseSize);\n    publicAPI.invokeOpacityChange(publicAPI);\n    publicAPI.modified();\n  };\n  publicAPI.addGaussian = (position, height, width, xBias, yBias) => {\n    const nextIndex = model.gaussians.length;\n    model.gaussians.push({\n      position,\n      height,\n      width,\n      xBias,\n      yBias\n    });\n    model.opacities = computeOpacities(model.gaussians, model.piecewiseSize);\n    publicAPI.invokeOpacityChange(publicAPI);\n    publicAPI.modified();\n    return nextIndex;\n  };\n  publicAPI.removeGaussian = index => {\n    model.gaussians.splice(index, 1);\n    model.opacities = computeOpacities(model.gaussians, model.piecewiseSize);\n    publicAPI.invokeOpacityChange(publicAPI);\n    publicAPI.modified();\n  };\n  publicAPI.setSize = (width, height) => {\n    model.canvas.setAttribute('width', width);\n    model.canvas.setAttribute('height', height);\n    if (model.size[0] !== width || model.size[1] !== height) {\n      model.size = [width, height];\n      model.colorCanvasMTime = 0;\n      publicAPI.modified();\n    }\n  };\n  publicAPI.updateStyle = style => {\n    model.style = {\n      ...model.style,\n      ...style\n    };\n    publicAPI.modified();\n  };\n\n  // Method used to compute and show data distribution in the background.\n  // When an array with many components is used, you can provide additional\n  // information to choose which component you want to extract the histogram\n  // from.\n\n  publicAPI.setDataArray = function (array) {\n    let {\n      numberOfBinToConsiders = 1,\n      numberOfBinsToSkip = 1,\n      numberOfComponents = 1,\n      component = 0\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    model.histogram = null;\n    model.histogramArray = array;\n    model.dataRange = arrayRange(array, component, numberOfComponents);\n    const [min, max] = model.dataRange;\n    const maxNumberOfWorkers = 4;\n    let arrayStride = Math.floor(array.length / maxNumberOfWorkers) || 1;\n    arrayStride += arrayStride % numberOfComponents;\n    let arrayIndex = 0;\n    const workerChunks = [];\n    const workers = [];\n    while (arrayIndex < array.length) {\n      const worker = new WorkerFactory();\n      workers.push(worker);\n      const workerPromise = new WebworkerPromise(worker);\n      const arrayStart = arrayIndex;\n      const arrayEnd = Math.min(arrayIndex + arrayStride, array.length - 1);\n      const subArray = new array.constructor(array.slice(arrayStart, arrayEnd + 1));\n      workerChunks.push(workerPromise.postMessage({\n        array: subArray,\n        component,\n        numberOfComponents,\n        min,\n        max,\n        numberOfBins: model.numberOfBins\n      }, [subArray.buffer]));\n      arrayIndex += arrayStride;\n    }\n    Promise.all(workerChunks).then(subHistograms => {\n      workers.forEach(worker => worker.terminate());\n      model.histogram = new Float32Array(model.numberOfBins);\n      model.histogram.fill(0);\n      subHistograms.forEach(subHistogram => {\n        for (let i = 0, len = subHistogram.length; i < len; ++i) {\n          model.histogram[i] += subHistogram[i];\n        }\n      });\n\n      // Smart Rescale Histogram\n      const sampleSize = Math.min(numberOfBinToConsiders, model.histogram.length - numberOfBinsToSkip);\n      const sortedArray = Array.from(model.histogram);\n      sortedArray.sort((a, b) => Number(a) - Number(b));\n      for (let i = 0; i < numberOfBinsToSkip; i++) {\n        sortedArray.pop();\n      }\n      while (sortedArray.length > sampleSize) {\n        sortedArray.shift();\n      }\n      const mean = sortedArray.reduce((a, b) => a + b, 0) / sampleSize;\n      for (let i = 0, len = model.histogram.length; i < len; ++i) {\n        model.histogram[i] /= mean;\n      }\n      publicAPI.modified();\n      setTimeout(publicAPI.render, 0);\n    });\n    publicAPI.modified();\n  };\n  publicAPI.onClick = (x, y) => {\n    const [xNormalized, yNormalized] = normalizeCoordinates(x, y, model.graphArea, model.enableRangeZoom ? model.rangeZoom : null);\n    if (xNormalized < 0 && model.style.iconSize > 1) {\n      // Control buttons\n      const delta = model.style.iconSize + model.style.padding;\n      let offset = delta;\n      let buttonIdx = 0;\n      while (y > offset) {\n        buttonIdx += 1;\n        offset += delta;\n      }\n      switch (buttonIdx) {\n        case 0:\n          {\n            const gaussianIdx = publicAPI.addGaussian(0, 1, 0.1, 0, 0);\n            const gaussian = model.gaussians[gaussianIdx];\n            const originalGaussian = {\n              ...gaussian\n            };\n            const action = ACTIONS.adjustPosition;\n            model.activeGaussian = gaussianIdx;\n            model.selectedGaussian = gaussianIdx;\n\n            // Fake active action\n            macro.setImmediate(() => {\n              publicAPI.onDown(x, y);\n              model.dragAction = {\n                originalXY: [0, 0],\n                action,\n                gaussian,\n                originalGaussian\n              };\n            });\n            break;\n          }\n        case 1:\n          {\n            if (model.selectedGaussian !== -1) {\n              publicAPI.removeGaussian(model.selectedGaussian);\n            }\n            break;\n          }\n        default:\n          {\n            model.selectedGaussian = -1;\n            model.dragAction = null;\n          }\n      }\n    } else if (xNormalized < 0 || xNormalized > 1 || yNormalized < 0 || yNormalized > 1) {\n      model.selectedGaussian = -1;\n      model.dragAction = null;\n    } else {\n      const newSelected = findGaussian(xNormalized, model.gaussians);\n      if (newSelected !== model.selectedGaussian) {\n        model.selectedGaussian = newSelected;\n        publicAPI.modified();\n      }\n    }\n    return true;\n  };\n  publicAPI.onHover = (x, y) => {\n    // Determines the interaction region size for adjusting the Gaussian's\n    // height.\n    const tolerance = 20 / model.canvas.height;\n    const [xNormalized, yNormalized] = normalizeCoordinates(x, y, model.graphArea, model.enableRangeZoom ? model.rangeZoom : null);\n    const [xNormalizedAbs] = normalizeCoordinates(x, y, model.graphArea);\n    const newActive = xNormalized < 0 ? model.selectedGaussian : findGaussian(xNormalized, model.gaussians);\n    model.canvas.style.cursor = 'default';\n    const gaussian = model.gaussians[newActive];\n    if (model.enableRangeZoom && xNormalizedAbs >= 0 && y < model.graphArea[1] - 6 // circle radius\n    ) {\n      const thirdDelta = (model.rangeZoom[1] - model.rangeZoom[0]) / 3;\n      if (xNormalizedAbs < model.rangeZoom[0] + thirdDelta || xNormalizedAbs > model.rangeZoom[1] - thirdDelta) {\n        model.canvas.style.cursor = ACTION_TO_CURSOR.adjustZoom;\n      } else {\n        model.canvas.style.cursor = ACTION_TO_CURSOR.adjustPosition;\n      }\n      model.dragAction = {\n        rangeZoom: model.rangeZoom,\n        action: ACTIONS.adjustZoom\n      };\n    } else if (gaussian && xNormalizedAbs >= 0) {\n      const invY = 1 - yNormalized;\n      let actionName = null;\n      if (invY > gaussian.height + tolerance) {\n        actionName = 'adjustPosition';\n      } else if (invY > gaussian.height - tolerance) {\n        if (Math.abs(xNormalized - gaussian.position) < tolerance) {\n          actionName = 'adjustHeight';\n        } else {\n          actionName = 'adjustPosition';\n        }\n      } else if (invY > gaussian.height * 0.5 + tolerance) {\n        actionName = 'adjustPosition';\n      } else if (invY > gaussian.height * 0.5 - tolerance) {\n        if (Math.abs(xNormalized - gaussian.position) < tolerance) {\n          actionName = 'adjustBias';\n        } else {\n          actionName = 'adjustPosition';\n        }\n      } else if (invY > tolerance) {\n        actionName = 'adjustPosition';\n      } else {\n        actionName = 'adjustWidth';\n      }\n      model.canvas.style.cursor = ACTION_TO_CURSOR[actionName];\n      const action = ACTIONS[actionName];\n      const originalGaussian = {\n        ...gaussian\n      };\n      model.dragAction = {\n        originalXY: [xNormalized, yNormalized],\n        action,\n        gaussian,\n        originalGaussian\n      };\n    }\n    if (newActive !== model.activeGaussian) {\n      model.activeGaussian = newActive;\n      publicAPI.modified();\n    }\n    return true;\n  };\n  publicAPI.onDown = (x, y) => {\n    if (!model.mouseIsDown) {\n      publicAPI.invokeAnimation(true);\n    }\n    model.mouseIsDown = true;\n    const xNormalized = normalizeCoordinates(x, y, model.graphArea, model.enableRangeZoom ? model.rangeZoom : null)[0];\n    const newSelected = findGaussian(xNormalized, model.gaussians);\n    model.gaussianSide = 0;\n    const gaussian = model.gaussians[newSelected];\n    if (gaussian) {\n      model.gaussianSide = gaussian.position - xNormalized;\n    }\n    if (newSelected !== model.selectedGaussian && xNormalized > 0) {\n      model.selectedGaussian = newSelected;\n      publicAPI.modified();\n    }\n    return true;\n  };\n  publicAPI.onDrag = (x, y) => {\n    if (model.dragAction) {\n      const [xNormalized, yNormalized] = normalizeCoordinates(x, y, model.graphArea, model.enableRangeZoom ? model.rangeZoom : null);\n      const {\n        action\n      } = model.dragAction;\n      if (action(xNormalized, yNormalized, {\n        gaussianSide: model.gaussianSide,\n        model,\n        publicAPI,\n        ...model.dragAction\n      })) {\n        model.opacities = computeOpacities(model.gaussians, model.piecewiseSize);\n        publicAPI.invokeOpacityChange(publicAPI, true);\n      }\n      publicAPI.modified();\n    }\n    return true;\n  };\n  publicAPI.onUp = (x, y) => {\n    if (model.mouseIsDown) {\n      publicAPI.invokeAnimation(false);\n    }\n    model.mouseIsDown = false;\n    return true;\n  };\n  publicAPI.onLeave = (x, y) => {\n    publicAPI.onUp(x, y);\n    model.canvas.style.cursor = 'default';\n    model.activeGaussian = -1;\n    publicAPI.modified();\n    return true;\n  };\n  publicAPI.onAddGaussian = (x, y) => {\n    const [xNormalized, yNormalized] = normalizeCoordinates(x, y, model.graphArea, model.enableRangeZoom ? model.rangeZoom : null);\n    if (xNormalized >= 0) {\n      publicAPI.addGaussian(xNormalized, 1 - yNormalized, 0.1, 0, 0);\n    }\n    return true;\n  };\n  publicAPI.onRemoveGaussian = (x, y) => {\n    const xNormalized = normalizeCoordinates(x, y, model.graphArea, model.enableRangeZoom ? model.rangeZoom : null)[0];\n    const newSelected = findGaussian(xNormalized, model.gaussians);\n    if (xNormalized >= 0 && newSelected !== -1) {\n      publicAPI.removeGaussian(newSelected);\n    }\n    return true;\n  };\n  publicAPI.bindMouseListeners = () => {\n    if (!model.listeners) {\n      const isDown = () => !!model.mouseIsDown;\n      const touchId = createTouchClickListener({\n        clicks: 1,\n        touches: 1,\n        action: publicAPI.onClick\n      }, {\n        clicks: 2,\n        touches: 1,\n        action: publicAPI.onAddGaussian\n      }, {\n        clicks: 2,\n        touches: 2,\n        action: publicAPI.onRemoveGaussian\n      });\n      model.listeners = {\n        mousemove: listenerSelector(isDown, createListener(publicAPI.onDrag), createListener(publicAPI.onHover)),\n        dblclick: createListener(publicAPI.onAddGaussian),\n        contextmenu: createListener(publicAPI.onRemoveGaussian),\n        click: createListener(publicAPI.onClick),\n        mouseup: createListener(publicAPI.onUp),\n        mousedown: createListener(publicAPI.onDown),\n        mouseout: createListener(publicAPI.onLeave),\n        touchstart: createTouchListener(touchId, macro.chain(publicAPI.onHover, publicAPI.onDown)),\n        touchmove: listenerSelector(isDown, createTouchListener(touchId, publicAPI.onDrag), createTouchListener(touchId, publicAPI.onHover)),\n        touchend: createTouchListener(touchId, publicAPI.onUp, 0) // touchend have 0 touch event...\n      };\n\n      Object.keys(model.listeners).forEach(eventType => {\n        model.canvas.addEventListener(eventType, model.listeners[eventType], false);\n      });\n    }\n  };\n  publicAPI.unbindMouseListeners = () => {\n    if (model.listeners) {\n      Object.keys(model.listeners).forEach(eventType => {\n        model.canvas.removeEventListener(eventType, model.listeners[eventType]);\n      });\n      delete model.listeners;\n    }\n  };\n  publicAPI.render = () => {\n    const ctx = model.canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    const [width, height] = model.size;\n    const offset = model.style.padding;\n    const graphArea = [Math.floor(model.style.iconSize + offset), Math.floor(offset), Math.ceil(width - 2 * offset - model.style.iconSize), Math.ceil(height - 2 * offset)];\n    const zoomControlHeight = model.style.zoomControlHeight;\n    if (model.enableRangeZoom) {\n      graphArea[1] += Math.floor(zoomControlHeight);\n      graphArea[3] -= Math.floor(zoomControlHeight);\n    }\n    model.graphArea = graphArea;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n    ctx.lineJoin = 'round';\n    ctx.fillStyle = model.style.backgroundColor;\n    ctx.fillRect(...graphArea);\n    if (model.style.iconSize > 1) {\n      // Draw icons\n      // +\n      const halfSize = Math.round(model.style.iconSize / 2 - model.style.strokeWidth);\n      const center = Math.round(halfSize + offset + model.style.strokeWidth);\n      ctx.beginPath();\n      ctx.lineWidth = model.style.buttonStrokeWidth;\n      ctx.strokeStyle = model.style.buttonStrokeColor;\n      ctx.arc(center - offset / 2, center, halfSize, 0, 2 * Math.PI, false);\n      ctx.fillStyle = model.style.buttonFillColor;\n      ctx.fill();\n      ctx.stroke();\n      ctx.moveTo(center - halfSize + model.style.strokeWidth + 2 - offset / 2, center);\n      ctx.lineTo(center + halfSize - model.style.strokeWidth - 2 - offset / 2, center);\n      ctx.stroke();\n      ctx.moveTo(center - offset / 2, center - halfSize + model.style.strokeWidth + 2);\n      ctx.lineTo(center - offset / 2, center + halfSize - model.style.strokeWidth - 2);\n      ctx.stroke();\n\n      // -\n      if (model.selectedGaussian === -1) {\n        ctx.fillStyle = model.style.buttonDisableFillColor;\n        ctx.lineWidth = model.style.buttonDisableStrokeWidth;\n        ctx.strokeStyle = model.style.buttonDisableStrokeColor;\n      } else {\n        ctx.fillStyle = model.style.buttonFillColor;\n        ctx.lineWidth = model.style.buttonStrokeWidth;\n        ctx.strokeStyle = model.style.buttonStrokeColor;\n      }\n      ctx.beginPath();\n      ctx.arc(center - offset / 2, center + offset / 2 + model.style.iconSize, halfSize, 0, 2 * Math.PI, false);\n      ctx.fill();\n      ctx.stroke();\n      ctx.moveTo(center - halfSize + model.style.strokeWidth + 2 - offset / 2, center + offset / 2 + model.style.iconSize);\n      ctx.lineTo(center + halfSize - model.style.strokeWidth - 2 - offset / 2, center + offset / 2 + model.style.iconSize);\n      ctx.stroke();\n    }\n\n    // Draw histogram\n    if (model.histogram) {\n      drawChart(ctx, graphArea, rescaleArray(model.histogram, model.rangeZoom), {\n        lineWidth: 1,\n        strokeStyle: model.style.histogramColor,\n        fillStyle: model.style.histogramColor\n      });\n    }\n\n    // Draw gaussians\n    drawChart(ctx, graphArea, rescaleArray(model.opacities, model.enableRangeZoom && model.rangeZoom), {\n      lineWidth: model.style.strokeWidth,\n      strokeStyle: model.style.strokeColor\n    });\n\n    // Draw color function if any\n    if (model.colorTransferFunction && model.colorTransferFunction.getSize()) {\n      const rangeToUse = model.dataRange || model.colorTransferFunction.getMappingRange();\n      if (!model.colorCanvas || model.colorCanvasMTime !== model.colorTransferFunction.getMTime()) {\n        model.colorCanvasMTime = model.colorTransferFunction.getMTime();\n        model.colorCanvas = updateColorCanvas(model.colorTransferFunction, graphArea[2], rangeToUse, model.colorCanvas);\n      }\n      ctx.save();\n      drawChart(ctx, graphArea, rescaleArray(model.opacities, model.enableRangeZoom && model.rangeZoom), {\n        lineWidth: 1,\n        strokeStyle: 'rgba(0,0,0,0)',\n        fillStyle: 'rgba(0,0,0,1)',\n        clip: true\n      });\n\n      // Draw the correct portion of the color BG image\n      if (model.enableRangeZoom) {\n        ctx.drawImage(model.colorCanvas, model.rangeZoom[0] * graphArea[2], 0, graphArea[2], graphArea[3], graphArea[0], graphArea[1], graphArea[2] / (model.rangeZoom[1] - model.rangeZoom[0]), graphArea[3]);\n      } else {\n        ctx.drawImage(model.colorCanvas, graphArea[0], graphArea[1]);\n      }\n      ctx.restore();\n    } else if (model.backgroundImage) {\n      model.colorCanvas = updateColorCanvasFromImage(model.backgroundImage, graphArea[2], model.colorCanvas);\n      ctx.save();\n      drawChart(ctx, graphArea, rescaleArray(model.opacities, model.enableRangeZoom && model.rangeZoom), {\n        lineWidth: 1,\n        strokeStyle: 'rgba(0,0,0,0)',\n        fillStyle: 'rgba(0,0,0,1)',\n        clip: true\n      });\n      ctx.drawImage(model.colorCanvas, graphArea[0], graphArea[1]);\n      ctx.restore();\n    }\n\n    // Draw zoomed area\n    if (model.enableRangeZoom) {\n      ctx.fillStyle = model.style.zoomControlColor;\n      ctx.beginPath();\n      ctx.rect(graphArea[0] + model.rangeZoom[0] * graphArea[2], 0, (model.rangeZoom[1] - model.rangeZoom[0]) * graphArea[2], zoomControlHeight);\n      ctx.fill();\n    }\n\n    // Draw active gaussian\n    const activeGaussian = model.gaussians[model.activeGaussian] || model.gaussians[model.selectedGaussian];\n    if (activeGaussian) {\n      const activeOpacities = computeOpacities([activeGaussian], graphArea[2]);\n      drawChart(ctx, graphArea, rescaleArray(activeOpacities, model.enableRangeZoom && model.rangeZoom), {\n        lineWidth: model.style.activeStrokeWidth,\n        strokeStyle: model.style.activeColor\n      });\n      // Draw controls\n      const xCenter = graphArea[0] + rescaleValue(activeGaussian.position, model.enableRangeZoom && model.rangeZoom) * graphArea[2];\n      const yTop = graphArea[1] + (1 - activeGaussian.height) * graphArea[3];\n      const yMiddle = graphArea[1] + (1 - 0.5 * activeGaussian.height) * graphArea[3];\n      const yBottom = graphArea[1] + graphArea[3];\n      let widthInPixel = activeGaussian.width * graphArea[2];\n      if (model.enableRangeZoom) {\n        widthInPixel /= model.rangeZoom[1] - model.rangeZoom[0];\n      }\n      ctx.lineWidth = model.style.handleWidth;\n      ctx.strokeStyle = model.style.handleColor;\n      ctx.fillStyle = model.style.backgroundColor;\n      ctx.beginPath();\n      ctx.moveTo(xCenter, graphArea[1] + (1 - activeGaussian.height) * graphArea[3]);\n      ctx.lineTo(xCenter, graphArea[1] + graphArea[3]);\n      ctx.stroke();\n      // Height\n      ctx.beginPath();\n      ctx.arc(xCenter, yTop, 6, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.stroke();\n      // Bias\n      const radius = Math.min(widthInPixel * 0.1, activeGaussian.height * graphArea[3] * 0.2);\n      ctx.beginPath();\n      ctx.rect(xCenter - radius, yMiddle - radius, radius * 2, radius * 2);\n      ctx.fill();\n      ctx.stroke();\n      ctx.beginPath();\n      // Width\n      const sliderWidth = widthInPixel * 0.8;\n      ctx.rect(xCenter - sliderWidth, yBottom - 5, 2 * sliderWidth, 10);\n      ctx.fill();\n      ctx.stroke();\n    }\n  };\n  publicAPI.getOpacityNodes = dataRange => {\n    const rangeToUse = dataRange || model.dataRange;\n    const delta = (rangeToUse[1] - rangeToUse[0]) / (model.opacities.length - 1);\n    const nodes = [];\n    const midpoint = 0.5;\n    const sharpness = 0;\n    for (let index = 0; index < model.opacities.length; index++) {\n      const x = rangeToUse[0] + delta * index;\n      const y = model.opacities[index];\n      nodes.push({\n        x,\n        y,\n        midpoint,\n        sharpness\n      });\n    }\n    return nodes;\n  };\n  publicAPI.applyOpacity = (piecewiseFunction, dataRange) => {\n    const nodes = publicAPI.getOpacityNodes(dataRange);\n    piecewiseFunction.setNodes(nodes);\n  };\n  publicAPI.getOpacityRange = dataRange => {\n    const rangeToUse = dataRange || model.dataRange;\n    const delta = (rangeToUse[1] - rangeToUse[0]) / (model.opacities.length - 1);\n    let minIndex = model.opacities.length - 1;\n    let maxIndex = 0;\n    for (let index = 0; index < model.opacities.length; index++) {\n      if (model.opacities[index] > 0) {\n        minIndex = Math.min(minIndex, index);\n      }\n      if (model.opacities[index] > 0) {\n        maxIndex = Math.max(maxIndex, index);\n      }\n    }\n    return [rangeToUse[0] + minIndex * delta, rangeToUse[0] + maxIndex * delta];\n  };\n  const enableZoom = publicAPI.setEnableRangeZoom;\n  publicAPI.setEnableRangeZoom = v => {\n    const change = enableZoom(v);\n    if (change) {\n      model.colorCanvasMTime = 0;\n      model.rangeZoom = [0, 1];\n    }\n    return change;\n  };\n  const rangeZoom = publicAPI.setRangeZoom;\n  publicAPI.setRangeZoom = function () {\n    const change = rangeZoom(...arguments);\n    if (change) {\n      model.colorCanvasMTime = 0;\n    }\n    return change;\n  };\n\n  // Trigger rendering for any modified event\n  publicAPI.onModified(() => publicAPI.render());\n  publicAPI.setSize(...model.size);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  histogram: [],\n  numberOfBins: 256,\n  histogramArray: null,\n  dataRange: [0, 1],\n  gaussians: [],\n  opacities: [],\n  size: [600, 300],\n  piecewiseSize: 256,\n  colorCanvasMTime: 0,\n  gaussianMinimumHeight: 0.05,\n  style: {\n    backgroundColor: 'rgba(255, 255, 255, 1)',\n    histogramColor: 'rgba(200, 200, 200, 0.5)',\n    strokeColor: 'rgb(0, 0, 0)',\n    activeColor: 'rgb(0, 0, 150)',\n    buttonDisableFillColor: 'rgba(255, 255, 255, 0.5)',\n    buttonDisableStrokeColor: 'rgba(0, 0, 0, 0.5)',\n    buttonStrokeColor: 'rgba(0, 0, 0, 1)',\n    buttonFillColor: 'rgba(255, 255, 255, 1)',\n    handleColor: 'rgb(0, 150, 0)',\n    strokeWidth: 2,\n    activeStrokeWidth: 3,\n    buttonStrokeWidth: 1.5,\n    handleWidth: 3,\n    iconSize: 20,\n    padding: 10,\n    zoomControlHeight: 10,\n    zoomControlColor: '#999'\n  },\n  activeGaussian: -1,\n  selectedGaussian: -1,\n  enableRangeZoom: true,\n  rangeZoom: [0, 1] // normalized value\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['piecewiseSize', 'numberOfBins', 'colorTransferFunction', 'backgroundImage', 'enableRangeZoom', 'gaussianMinimumHeight']);\n  macro.setGetArray(publicAPI, model, ['rangeZoom'], 2);\n  macro.get(publicAPI, model, ['size', 'canvas', 'gaussians']);\n  macro.event(publicAPI, model, 'opacityChange');\n  macro.event(publicAPI, model, 'animation');\n  macro.event(publicAPI, model, 'zoomChange');\n\n  // Object specific methods\n  vtkPiecewiseGaussianWidget(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkPiecewiseGaussianWidget');\n\n// ----------------------------------------------------------------------------\n\nvar vtkPiecewiseGaussianWidget$1 = {\n  newInstance,\n  extend,\n  ...STATIC\n};\n\nexport { STATIC, vtkPiecewiseGaussianWidget$1 as default, extend, newInstance };\n","const Defaults = {\n  Gaussians: [{\n    position: 0.5,\n    height: 1,\n    width: 0.5,\n    xBias: 0.5,\n    yBias: 0.5\n  }],\n  Points: [[0, 0], [1, 1]],\n  Nodes: [{\n    x: 0,\n    y: 0,\n    midpoint: 0.5,\n    sharpness: 0\n  }, {\n    x: 1,\n    y: 1,\n    midpoint: 0.5,\n    sharpness: 0\n  }]\n};\nconst Mode = {\n  Gaussians: 0,\n  Points: 1,\n  Nodes: 2\n};\nvar Constants = {\n  Defaults,\n  Mode\n};\n\nexport { Constants as default };\n","import { m as macro } from '../../macros2.js';\nimport vtkPiecewiseFunction from '../../Common/DataModel/PiecewiseFunction.js';\nimport vtkPiecewiseGaussianWidget from '../../Interaction/Widgets/PiecewiseGaussianWidget.js';\nimport Constants from './PiecewiseFunctionProxy/Constants.js';\n\nconst {\n  Mode,\n  Defaults\n} = Constants;\n\n// ----------------------------------------------------------------------------\n\nfunction applyPointsToPiecewiseFunction(points, range, pwf) {\n  const width = range[1] - range[0];\n  const rescaled = points.map(_ref => {\n    let [x, y] = _ref;\n    return [x * width + range[0], y];\n  });\n  pwf.removeAllPoints();\n  rescaled.forEach(_ref2 => {\n    let [x, y] = _ref2;\n    return pwf.addPoint(x, y);\n  });\n}\n\n// ----------------------------------------------------------------------------\n\nfunction applyNodesToPiecewiseFunction(nodes, range, pwf) {\n  const width = range[1] - range[0];\n  const rescaled = nodes.map(n => ({\n    ...n,\n    x: n.x * width + range[0]\n  }));\n  pwf.setNodes(rescaled);\n}\n\n// ----------------------------------------------------------------------------\n\nfunction copyGaussians(gaussians) {\n  // gaussians is assumed to be an array of gaussian objects\n  return gaussians.map(g => ({\n    ...g\n  }));\n}\n\n// ----------------------------------------------------------------------------\n// vtkPiecewiseFunctionProxy methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPiecewiseFunctionProxy(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPiecewiseFunctionProxy');\n  model.piecewiseFunction = model.piecewiseFunction || vtkPiecewiseFunction.newInstance();\n\n  // Takes an array of gaussians\n  publicAPI.setGaussians = gaussians => {\n    model.gaussians = copyGaussians(gaussians || []);\n    if (model.gaussians.length === 0) {\n      model.gaussians = copyGaussians(Defaults.Gaussians);\n    }\n    publicAPI.applyMode();\n  };\n\n  // Takes an array of points [x, y]\n  publicAPI.setPoints = points => {\n    model.points = (points || []).slice();\n    if (model.points.length === 0) {\n      model.points = Defaults.Points.slice();\n    }\n    publicAPI.applyMode();\n  };\n\n  // Takes an array of PiecewiseFunction nodes\n  publicAPI.setNodes = nodes => {\n    model.nodes = (nodes || []).slice();\n    if (model.nodes.length === 0) {\n      model.nodes = Defaults.Nodes.slice();\n    }\n    publicAPI.applyMode();\n  };\n  publicAPI.setMode = mode => {\n    if (model.mode === mode) {\n      return;\n    }\n    model.mode = mode;\n    publicAPI.applyMode();\n  };\n  publicAPI.applyMode = () => {\n    switch (model.mode) {\n      case Mode.Gaussians:\n        vtkPiecewiseGaussianWidget.applyGaussianToPiecewiseFunction(model.gaussians, 255, model.dataRange, model.piecewiseFunction);\n        publicAPI.modified();\n        break;\n      case Mode.Points:\n        applyPointsToPiecewiseFunction(model.points, model.dataRange, model.piecewiseFunction);\n        publicAPI.modified();\n        break;\n      case Mode.Nodes:\n        applyNodesToPiecewiseFunction(model.nodes, model.dataRange, model.piecewiseFunction);\n        publicAPI.modified();\n        break;\n      // noop\n    }\n  };\n\n  publicAPI.getLookupTableProxy = () => model.proxyManager.getLookupTable(model.arrayName);\n  publicAPI.setDataRange = (min, max) => {\n    if (model.dataRange[0] !== min || model.dataRange[1] !== max) {\n      model.dataRange[0] = min;\n      model.dataRange[1] = max;\n      publicAPI.applyMode();\n    }\n  };\n\n  // Initialization ------------------------------------------------------------\n\n  publicAPI.applyMode();\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  mode: Mode.Gaussians,\n  gaussians: Defaults.Gaussians,\n  points: Defaults.Points,\n  nodes: Defaults.Nodes,\n  arrayName: 'No array associated',\n  arrayLocation: 'pointData',\n  dataRange: [0, 1]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['arrayName']);\n  macro.get(publicAPI, model, ['piecewiseFunction', 'gaussians', 'nodes', 'points', 'mode', 'dataRange']);\n\n  // Object specific methods\n  vtkPiecewiseFunctionProxy(publicAPI, model);\n\n  // Proxy handling\n  macro.proxy(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkPiecewiseFunctionProxy');\n\n// ----------------------------------------------------------------------------\n\nvar vtkPiecewiseFunctionProxy$1 = {\n  newInstance,\n  extend,\n  Mode,\n  Defaults\n};\n\nexport { vtkPiecewiseFunctionProxy$1 as default, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkImageData from './ImageData.js';\nimport vtkPolyData from './PolyData.js';\nimport vtkDataArray from '../Core/DataArray.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// see itk.js PixelTypes.js\nconst ITKJSPixelTypes = {\n  Unknown: 0,\n  Scalar: 1,\n  RGB: 2,\n  RGBA: 3,\n  Offset: 4,\n  Vector: 5,\n  Point: 6,\n  CovariantVector: 7,\n  SymmetricSecondRankTensor: 8,\n  DiffusionTensor3D: 9,\n  Complex: 10,\n  FixedArray: 11,\n  Array: 12,\n  Matrix: 13,\n  VariableLengthVector: 14,\n  VariableSizeMatrix: 15\n};\n\n// itk-wasm pixel types from https://github.com/InsightSoftwareConsortium/itk-wasm/blob/master/src/core/PixelTypes.ts\nconst ITKWASMPixelTypes = {\n  Unknown: 'Unknown',\n  Scalar: 'Scalar',\n  RGB: 'RGB',\n  RGBA: 'RGBA',\n  Offset: 'Offset',\n  Vector: 'Vector',\n  Point: 'Point',\n  CovariantVector: 'CovariantVector',\n  SymmetricSecondRankTensor: 'SymmetricSecondRankTensor',\n  DiffusionTensor3D: 'DiffusionTensor3D',\n  Complex: 'Complex',\n  FixedArray: 'FixedArray',\n  Array: 'Array',\n  Matrix: 'Matrix',\n  VariableLengthVector: 'VariableLengthVector',\n  VariableSizeMatrix: 'VariableSizeMatrix'\n};\nconst vtkArrayTypeToItkComponentType = new Map([['Uint8Array', 'uint8'], ['Int8Array', 'int8'], ['Uint16Array', 'uint16'], ['Int16Array', 'int16'], ['Uint32Array', 'uint32'], ['Int32Array', 'int32'], ['Float32Array', 'float32'], ['Float64Array', 'float64']]);\nconst itkComponentTypeToVtkArrayType = new Map([['uint8', 'Uint8Array'], ['int8', 'Int8Array'], ['uint16', 'Uint16Array'], ['int16', 'Int16Array'], ['uint32', 'Uint32Array'], ['int32', 'Int32Array'], ['float32', 'Float32Array'], ['float64', 'Float64Array']]);\n\n/**\n * Converts an itk-wasm Image to a vtk.js vtkImageData.\n *\n * Requires an itk-wasm Image as input.\n */\nfunction convertItkToVtkImage(itkImage) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const vtkImage = {\n    origin: [0, 0, 0],\n    spacing: [1, 1, 1]\n  };\n  const dimensions = [1, 1, 1];\n  const direction = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n  // Check whether itkImage is an itk.js Image or an itk-wasm Image?\n  const isITKWasm = itkImage.direction.data === undefined;\n  const ITKPixelTypes = isITKWasm ? ITKWASMPixelTypes : ITKJSPixelTypes;\n  for (let idx = 0; idx < itkImage.imageType.dimension; ++idx) {\n    vtkImage.origin[idx] = itkImage.origin[idx];\n    vtkImage.spacing[idx] = itkImage.spacing[idx];\n    dimensions[idx] = itkImage.size[idx];\n    for (let col = 0; col < itkImage.imageType.dimension; ++col) {\n      // ITK (and VTKMath) use a row-major index axis, but the direction\n      // matrix on the vtkImageData is a webGL matrix, which uses a\n      // column-major data layout. Transpose the direction matrix from\n      // itkImage when instantiating that vtkImageData direction matrix.\n      if (isITKWasm) {\n        direction[col + idx * 3] = itkImage.direction[idx + col * itkImage.imageType.dimension];\n      } else {\n        direction[col + idx * 3] = itkImage.direction.data[idx + col * itkImage.imageType.dimension];\n      }\n    }\n  }\n\n  // Create VTK Image Data\n  const imageData = vtkImageData.newInstance(vtkImage);\n\n  // Create VTK point data -- the data associated with the pixels / voxels\n  const pointData = vtkDataArray.newInstance({\n    name: options.scalarArrayName || 'Scalars',\n    values: itkImage.data,\n    numberOfComponents: itkImage.imageType.components\n  });\n  imageData.setDirection(direction);\n  imageData.setDimensions(...dimensions);\n  // Always associate multi-component pixel types with vtk.js point data\n  // scalars to facilitate multi-component volume rendering\n  imageData.getPointData().setScalars(pointData);\n\n  // Associate the point data that are 3D vectors / tensors\n  // Refer to itk-js/src/PixelTypes.js for numerical values\n  switch (isITKWasm ? ITKPixelTypes[itkImage.imageType.pixelType] : itkImage.imageType.pixelType) {\n    case ITKPixelTypes.Scalar:\n      break;\n    case ITKPixelTypes.RGB:\n      break;\n    case ITKPixelTypes.RGBA:\n      break;\n    case ITKPixelTypes.Offset:\n      break;\n    case ITKPixelTypes.Vector:\n      if (itkImage.imageType.dimension === 3 && itkImage.imageType.components === 3) {\n        imageData.getPointData().setVectors(pointData);\n      }\n      break;\n    case ITKPixelTypes.Point:\n      break;\n    case ITKPixelTypes.CovariantVector:\n      if (itkImage.imageType.dimension === 3 && itkImage.imageType.components === 3) {\n        imageData.getPointData().setVectors(pointData);\n      }\n      break;\n    case ITKPixelTypes.SymmetricSecondRankTensor:\n      if (itkImage.imageType.dimension === 3 && itkImage.imageType.components === 6) {\n        imageData.getPointData().setTensors(pointData);\n      }\n      break;\n    case ITKPixelTypes.DiffusionTensor3D:\n      if (itkImage.imageType.dimension === 3 && itkImage.imageType.components === 6) {\n        imageData.getPointData().setTensors(pointData);\n      }\n      break;\n    case ITKPixelTypes.Complex:\n      break;\n    case ITKPixelTypes.FixedArray:\n      break;\n    case ITKPixelTypes.Array:\n      break;\n    case ITKPixelTypes.Matrix:\n      break;\n    case ITKPixelTypes.VariableLengthVector:\n      break;\n    case ITKPixelTypes.VariableSizeMatrix:\n      break;\n    default:\n      vtkErrorMacro(`Cannot handle unexpected itk-wasm pixel type ${itkImage.imageType.pixelType}`);\n      return null;\n  }\n  return imageData;\n}\n\n/**\n * Converts a vtk.js vtkImageData to an itk-wasm Image.\n *\n * Requires a vtk.js vtkImageData as input.\n *\n */\nfunction convertVtkToItkImage(vtkImage) {\n  let copyData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const dimension = 3;\n  const itkImage = {\n    imageType: {\n      dimension,\n      pixelType: ITKWASMPixelTypes.Scalar,\n      componentType: '',\n      components: 1\n    },\n    name: 'vtkImageData',\n    origin: vtkImage.getOrigin(),\n    spacing: vtkImage.getSpacing(),\n    direction: new Float64Array(9),\n    size: vtkImage.getDimensions()\n  };\n  const direction = vtkImage.getDirection();\n\n  // Transpose the direction matrix from column-major to row-major\n  for (let idx = 0; idx < dimension; ++idx) {\n    for (let idy = 0; idy < dimension; ++idy) {\n      itkImage.direction[idx + idy * dimension] = direction[idy + idx * dimension];\n    }\n  }\n  const pointData = vtkImage.getPointData();\n  let vtkArray;\n  if (pointData.getTensors() !== null) {\n    itkImage.imageType.pixelType = ITKWASMPixelTypes.DiffusionTensor3D;\n    vtkArray = pointData.getTensors();\n  } else if (pointData.getVectors() != null) {\n    itkImage.imageType.pixelType = ITKWASMPixelTypes.Vector;\n    vtkArray = pointData.getVectors();\n  } else {\n    vtkArray = pointData.getScalars();\n  }\n  itkImage.imageType.componentType = vtkArrayTypeToItkComponentType.get(vtkArray.getDataType());\n  if (copyData) {\n    // Copy the data array\n    itkImage.data = vtkArray.getData().slice(0);\n  } else {\n    itkImage.data = vtkArray.getData();\n  }\n  return itkImage;\n}\n\n/**\n * Converts an itk-wasm PolyData to a vtk.js vtkPolyData.\n *\n * Requires an itk-wasm PolyData as input.\n */\nfunction convertItkToVtkPolyData(itkPolyData) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const pointDataArrays = [];\n  if (itkPolyData.pointData.length) {\n    pointDataArrays.push({\n      data: {\n        vtkClass: 'vtkDataArray',\n        name: options.pointDataName || 'PointData',\n        numberOfComponents: itkPolyData.polyDataType.pointPixelComponents,\n        size: itkPolyData.pointData.length,\n        dataType: itkComponentTypeToVtkArrayType.get(itkPolyData.polyDataType.pointPixelComponentType),\n        buffer: itkPolyData.pointData.buffer,\n        values: itkPolyData.pointData\n      }\n    });\n  }\n  const cellDataArrays = [];\n  if (itkPolyData.cellData.length) {\n    cellDataArrays.push({\n      data: {\n        vtkClass: 'vtkDataArray',\n        name: options.cellDataName || 'CellData',\n        numberOfComponents: itkPolyData.polyDataType.pointPixelComponents,\n        size: itkPolyData.cellData.length,\n        dataType: itkComponentTypeToVtkArrayType.get(itkPolyData.polyDataType.pointPixelComponentType),\n        buffer: itkPolyData.cellData.buffer,\n        values: itkPolyData.cellData\n      }\n    });\n  }\n  const vtkPolyDataModel = {\n    points: {\n      vtkClass: 'vtkPoints',\n      name: '_points',\n      numberOfComponents: 3,\n      size: itkPolyData.points.length,\n      dataType: 'Float32Array',\n      buffer: itkPolyData.points.buffer,\n      values: itkPolyData.points\n    },\n    verts: {\n      vtkClass: 'vtkCellArray',\n      name: '_verts',\n      numberOfComponents: 1,\n      size: itkPolyData.verticesBufferSize,\n      dataType: 'Uint32Array',\n      buffer: itkPolyData.vertices.buffer,\n      values: itkPolyData.vertices\n    },\n    lines: {\n      vtkClass: 'vtkCellArray',\n      name: '_lines',\n      numberOfComponents: 1,\n      size: itkPolyData.linesBufferSize,\n      dataType: 'Uint32Array',\n      buffer: itkPolyData.lines.buffer,\n      values: itkPolyData.lines\n    },\n    polys: {\n      vtkClass: 'vtkCellArray',\n      name: '_polys',\n      numberOfComponents: 1,\n      size: itkPolyData.polygonsBufferSize,\n      dataType: 'Uint32Array',\n      buffer: itkPolyData.polygons.buffer,\n      values: itkPolyData.polygons\n    },\n    strips: {\n      vtkClass: 'vtkCellArray',\n      name: '_strips',\n      numberOfComponents: 1,\n      size: itkPolyData.triangleStripsBufferSize,\n      dataType: 'Uint32Array',\n      buffer: itkPolyData.triangleStrips.buffer,\n      values: itkPolyData.triangleStrips\n    },\n    pointData: {\n      vtkClass: 'vtkDataSetAttributes',\n      activeGlobalIds: -1,\n      activeNormals: -1,\n      activePedigreeIds: -1,\n      activeScalars: -1,\n      activeTCoords: -1,\n      activeTensors: -1,\n      activeVectors: -1,\n      copyFieldFlags: [],\n      doCopyAllOff: false,\n      doCopyAllOn: true,\n      arrays: pointDataArrays\n    },\n    cellData: {\n      vtkClass: 'vtkDataSetAttributes',\n      activeGlobalIds: -1,\n      activeNormals: -1,\n      activePedigreeIds: -1,\n      activeScalars: -1,\n      activeTCoords: -1,\n      activeTensors: -1,\n      activeVectors: -1,\n      copyFieldFlags: [],\n      doCopyAllOff: false,\n      doCopyAllOn: true,\n      arrays: cellDataArrays\n    }\n  };\n\n  // Create VTK PolyData\n  const polyData = vtkPolyData.newInstance(vtkPolyDataModel);\n  const pd = polyData.getPointData();\n  const cd = polyData.getCellData();\n  if (itkPolyData.pointData.length) {\n    // Associate the point data that are 3D vectors / tensors\n    switch (ITKWASMPixelTypes[itkPolyData.polyDataType.pointPixelType]) {\n      case ITKWASMPixelTypes.Scalar:\n        pd.setScalars(pd.getArrayByIndex(0));\n        break;\n      case ITKWASMPixelTypes.RGB:\n        break;\n      case ITKWASMPixelTypes.RGBA:\n        break;\n      case ITKWASMPixelTypes.Offset:\n        break;\n      case ITKWASMPixelTypes.Vector:\n        if (itkPolyData.polyDataType.pointPixelComponents === 3) {\n          pd.setVectors(pd.getArrayByIndex(0));\n        }\n        break;\n      case ITKWASMPixelTypes.Point:\n        break;\n      case ITKWASMPixelTypes.CovariantVector:\n        if (itkPolyData.polyDataType.pointPixelComponents === 3) {\n          pd.setVectors(pd.getArrayByIndex(0));\n        }\n        break;\n      case ITKWASMPixelTypes.SymmetricSecondRankTensor:\n        if (itkPolyData.polyDataType.pointPixelComponents === 6) {\n          pd.setTensors(pd.getArrayByIndex(0));\n        }\n        break;\n      case ITKWASMPixelTypes.DiffusionTensor3D:\n        if (itkPolyData.polyDataType.pointPixelComponents === 6) {\n          pd.setTensors(pd.getArrayByIndex(0));\n        }\n        break;\n      case ITKWASMPixelTypes.Complex:\n        break;\n      case ITKWASMPixelTypes.FixedArray:\n        break;\n      case ITKWASMPixelTypes.Array:\n        break;\n      case ITKWASMPixelTypes.Matrix:\n        break;\n      case ITKWASMPixelTypes.VariableLengthVector:\n        break;\n      case ITKWASMPixelTypes.VariableSizeMatrix:\n        break;\n      default:\n        vtkErrorMacro(`Cannot handle unexpected itk-wasm pixel type ${itkPolyData.polyDataType.pointPixelType}`);\n        return null;\n    }\n  }\n  if (itkPolyData.cellData.length) {\n    // Associate the cell data that are 3D vectors / tensors\n    switch (ITKWASMPixelTypes[itkPolyData.polyDataType.cellPixelType]) {\n      case ITKWASMPixelTypes.Scalar:\n        cd.setScalars(cd.getArrayByIndex(0));\n        break;\n      case ITKWASMPixelTypes.RGB:\n        break;\n      case ITKWASMPixelTypes.RGBA:\n        break;\n      case ITKWASMPixelTypes.Offset:\n        break;\n      case ITKWASMPixelTypes.Vector:\n        if (itkPolyData.polyDataType.pointPixelComponents === 3) {\n          cd.setVectors(cd.getArrayByIndex(0));\n        }\n        break;\n      case ITKWASMPixelTypes.Point:\n        break;\n      case ITKWASMPixelTypes.CovariantVector:\n        if (itkPolyData.polyDataType.pointPixelComponents === 3) {\n          cd.setVectors(cd.getArrayByIndex(0));\n        }\n        break;\n      case ITKWASMPixelTypes.SymmetricSecondRankTensor:\n        if (itkPolyData.polyDataType.pointPixelComponents === 6) {\n          cd.setTensors(cd.getArrayByIndex(0));\n        }\n        break;\n      case ITKWASMPixelTypes.DiffusionTensor3D:\n        if (itkPolyData.polyDataType.pointPixelComponents === 6) {\n          cd.setTensors(cd.getArrayByIndex(0));\n        }\n        break;\n      case ITKWASMPixelTypes.Complex:\n        break;\n      case ITKWASMPixelTypes.FixedArray:\n        break;\n      case ITKWASMPixelTypes.Array:\n        break;\n      case ITKWASMPixelTypes.Matrix:\n        break;\n      case ITKWASMPixelTypes.VariableLengthVector:\n        break;\n      case ITKWASMPixelTypes.VariableSizeMatrix:\n        break;\n      default:\n        vtkErrorMacro(`Cannot handle unexpected itk-wasm pixel type ${itkPolyData.polyDataType.pointPixelType}`);\n        return null;\n    }\n  }\n  return polyData;\n}\n\n/**\n * Converts a vtk.js vtkPolyData to an itk-wasm PolyData.\n *\n * Requires a vtk.js vtkPolyData as input.\n *\n */\nfunction convertVtkToItkPolyData(polyData) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const itkPolyData = {\n    polyDataType: {\n      pointPixelComponentType: 'float32',\n      pointPixelComponents: 1,\n      pointPixelType: 'Scalar',\n      cellPixelComponentType: 'float32',\n      cellPixelComponents: 1,\n      cellPixelType: 'Scalar'\n    },\n    numberOfPoints: polyData.getNumberOfPoints(),\n    points: polyData.getPoints().getData(),\n    verticesBufferSize: polyData.getVerts().getNumberOfValues(),\n    vertices: polyData.getVerts().getData(),\n    linesBufferSize: polyData.getLines().getNumberOfValues(),\n    lines: polyData.getLines().getData(),\n    polygonsBufferSize: polyData.getPolys().getNumberOfValues(),\n    polygons: polyData.getPolys().getData(),\n    triangleStripsBufferSize: polyData.getStrips().getNumberOfValues(),\n    triangleStrips: polyData.getStrips().getData(),\n    numberOfPointPixels: 0,\n    pointData: new Float32Array(),\n    numberOfCellPixels: 0,\n    cellData: new Float32Array()\n  };\n  const pd = polyData.getPointData();\n  if (pd.getNumberOfArrays()) {\n    const pdArray = options.pointDataName ? pd.getArrayByName(options.pointDataName) : pd.getArrayByIndex(0);\n    itkPolyData.numberOfPointPixels = pdArray.getNumberOfTuples();\n    itkPolyData.pointData = pdArray.getData();\n    itkPolyData.polyDataType.pointPixelComponentType = vtkArrayTypeToItkComponentType.get(pdArray.getDataType());\n    // default to the same type\n    itkPolyData.polyDataType.cellPixelComponentType = itkPolyData.polyDataType.pointPixelComponentType;\n    itkPolyData.polyDataType.pointPixelComponents = pdArray.getNumberOfComponents();\n    itkPolyData.polyDataType.cellPixelComponents = itkPolyData.polyDataType.pointPixelComponents;\n    if (pd.getTensors() === pdArray) {\n      itkPolyData.polyDataType.pointPixelType = ITKWASMPixelTypes.SymmetricSecondRankTensor;\n    } else if (pd.getVectors() === pdArray) {\n      itkPolyData.polyDataType.pointPixelType = ITKWASMPixelTypes.Vector;\n    }\n    itkPolyData.polyDataType.cellPixelType = itkPolyData.polyDataType.pointPixelType;\n  }\n  const cd = polyData.getCellData();\n  if (cd.getNumberOfArrays()) {\n    const cdArray = options.cellDataName ? pd.getArrayByName(options.cellDataName) : pd.getArrayByIndex(0);\n    itkPolyData.numberOfCellPixels = cdArray.getNumberOfTuples();\n    itkPolyData.cellData = cdArray.getData();\n    itkPolyData.polyDataType.cellPixelComponentType = vtkArrayTypeToItkComponentType.get(cdArray.getDataType());\n    itkPolyData.polyDataType.cellPixelComponents = cdArray.getNumberOfComponents();\n    if (cd.getTensors() === cdArray) {\n      itkPolyData.polyDataType.cellPixelType = ITKWASMPixelTypes.SymmetricSecondRankTensor;\n    } else if (cd.getVectors() === cdArray) {\n      itkPolyData.polyDataType.cellPixelType = ITKWASMPixelTypes.Vector;\n    } else {\n      itkPolyData.polyDataType.cellPixelType = ITKWASMPixelTypes.Scalar;\n    }\n  }\n  return itkPolyData;\n}\nvar ITKHelper = {\n  convertItkToVtkImage,\n  convertVtkToItkImage,\n  convertItkToVtkPolyData,\n  convertVtkToItkPolyData\n};\n\nexport { convertItkToVtkImage, convertItkToVtkPolyData, convertVtkToItkImage, convertVtkToItkPolyData, ITKHelper as default };\n","export const v = []","import { v as vtkColorMaps$1 } from './ColorMaps.json.js';\n\nconst presetMap = Object.create(null);\nvtkColorMaps$1.filter(p => p.RGBPoints).filter(p => p.ColorSpace !== 'CIELAB').forEach(p => {\n  presetMap[p.Name] = p;\n});\n\n// ----------------------------------------------------------------------------\n\nconst rgbPresetNames = Object.keys(presetMap);\nrgbPresetNames.sort();\n\n// ----------------------------------------------------------------------------\n\nfunction getPresetByName(name) {\n  return presetMap[name];\n}\n\n// ----------------------------------------------------------------------------\n\nfunction addPreset(preset) {\n  if (!preset.RGBPoints || preset.ColorSpace === 'CIELAB') {\n    return;\n  }\n  if (!presetMap[preset.Name]) {\n    rgbPresetNames.push(preset.Name);\n    rgbPresetNames.sort();\n  }\n  presetMap[preset.Name] = preset;\n}\n\n// ----------------------------------------------------------------------------\n\nfunction removePresetByName(name) {\n  const index = rgbPresetNames.indexOf(name);\n  if (index > -1) {\n    rgbPresetNames.splice(index, 1);\n  }\n  delete presetMap[name];\n}\n\n// ----------------------------------------------------------------------------\n\nvar vtkColorMaps = {\n  addPreset,\n  removePresetByName,\n  getPresetByName,\n  rgbPresetNames\n};\n\nexport { vtkColorMaps as default };\n","import { m as macro } from '../../macros2.js';\nimport { s as subtract } from '../../Common/Core/Math/index.js';\n\n// ----------------------------------------------------------------------------\n// vtkAbstractManipulator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkAbstractManipulator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkAbstractManipulator');\n  model._prevWorldCoords = [];\n  publicAPI.getOrigin = callData => {\n    if (model.userOrigin) return model.userOrigin;\n    if (model.useCameraFocalPoint) return callData.pokedRenderer.getActiveCamera().getFocalPoint();\n    if (model.handleOrigin) return model.handleOrigin;\n    if (model.widgetOrigin) return model.widgetOrigin;\n    return [0, 0, 0];\n  };\n  publicAPI.getNormal = callData => {\n    if (model.userNormal) return model.userNormal;\n    if (model.useCameraNormal) return callData.pokedRenderer.getActiveCamera().getDirectionOfProjection();\n    if (model.handleNormal) return model.handleNormal;\n    if (model.widgetNormal) return model.widgetNormal;\n    return [0, 0, 1];\n  };\n  model._computeDeltaFromPrevCoords = curWorldCoords => {\n    if (!model._prevWorldCoords?.length || !curWorldCoords?.length) return [0, 0, 0];\n    return subtract(curWorldCoords, model._prevWorldCoords, []);\n  };\n  model._addWorldDeltas = manipulatorResults => {\n    const {\n      worldCoords: curWorldCoords\n    } = manipulatorResults;\n    const worldDelta = model._computeDeltaFromPrevCoords(curWorldCoords);\n    if (curWorldCoords) model._prevWorldCoords = curWorldCoords;\n    const deltas = {\n      worldDelta\n    };\n    return {\n      ...manipulatorResults,\n      ...deltas\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // userOrigin: null,\n  // handleOrigin: null,\n  // widgetOrigin: null,\n  // userNormal: null,\n  // handleNormal: null,\n  // widgetNormal: null\n  useCameraFocalPoint: false,\n  useCameraNormal: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['useCameraFocalPoint', 'useCameraNormal']);\n  macro.setGetArray(publicAPI, model, ['userOrigin', 'handleOrigin', 'widgetOrigin', 'userNormal', 'handleNormal', 'widgetNormal'], 3);\n  vtkAbstractManipulator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkAbstractManipulator');\n\n// ----------------------------------------------------------------------------\n\nvar vtkAbstractManipulator$1 = {\n  extend,\n  newInstance\n};\n\nexport { vtkAbstractManipulator$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkPlane from '../../Common/DataModel/Plane.js';\nimport vtkAbstractManipulator from './AbstractManipulator.js';\n\nfunction intersectDisplayWithPlane(x, y, planeOrigin, planeNormal, renderer, glRenderWindow) {\n  const near = glRenderWindow.displayToWorld(x, y, 0, renderer);\n  const far = glRenderWindow.displayToWorld(x, y, 1, renderer);\n  return vtkPlane.intersectWithLine(near, far, planeOrigin, planeNormal).x;\n}\n\n// ----------------------------------------------------------------------------\n// vtkPlaneManipulator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPlaneManipulator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPlaneManipulator');\n  publicAPI.handleEvent = (callData, glRenderWindow) => model._addWorldDeltas({\n    worldCoords: intersectDisplayWithPlane(callData.position.x, callData.position.y, publicAPI.getOrigin(callData), publicAPI.getNormal(callData), callData.pokedRenderer, glRenderWindow)\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nfunction defaultValues(initialValues) {\n  return {\n    ...initialValues\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  vtkAbstractManipulator.extend(publicAPI, model, defaultValues(initialValues));\n  vtkPlaneManipulator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkPlaneManipulator');\n\n// ----------------------------------------------------------------------------\n\nvar vtkPlanePointManipulator = {\n  intersectDisplayWithPlane,\n  extend,\n  newInstance\n};\n\nexport { vtkPlanePointManipulator as default, extend, intersectDisplayWithPlane, newInstance };\n","const Device = {\n  Unknown: 0,\n  LeftController: 1,\n  RightController: 2\n};\nconst Input = {\n  Unknown: 0,\n  Trigger: 1,\n  TrackPad: 2,\n  Grip: 3,\n  Thumbstick: 4,\n  A: 5,\n  B: 6,\n  ApplicationMenu: 7 // Not exposed in WebXR API\n};\n\nconst Axis = {\n  Unknown: 0,\n  TouchpadX: 1,\n  TouchpadY: 2,\n  ThumbstickX: 3,\n  ThumbstickY: 4\n};\nvar Constants = {\n  Device,\n  Input,\n  Axis\n};\n\nexport { Axis, Device, Input, Constants as default };\n","import { m as macro } from '../../macros2.js';\nimport { A as degreesFromRadians } from '../../Common/Core/Math/index.js';\nimport Constants from './RenderWindowInteractor/Constants.js';\n\nconst {\n  Device,\n  Input\n} = Constants;\nconst {\n  vtkWarningMacro,\n  vtkErrorMacro,\n  normalizeWheel,\n  vtkOnceErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nconst EMPTY_MOUSE_EVENT = {\n  ctrlKey: false,\n  altKey: false,\n  shiftKey: false\n};\nconst deviceInputMap = {\n  'xr-standard': [Input.Trigger, Input.Grip, Input.TrackPad, Input.Thumbstick, Input.A, Input.B]\n};\nconst handledEvents = ['StartAnimation', 'Animation', 'EndAnimation', 'PointerEnter', 'PointerLeave', 'MouseEnter', 'MouseLeave', 'StartMouseMove', 'MouseMove', 'EndMouseMove', 'LeftButtonPress', 'LeftButtonRelease', 'MiddleButtonPress', 'MiddleButtonRelease', 'RightButtonPress', 'RightButtonRelease', 'KeyPress', 'KeyDown', 'KeyUp', 'StartMouseWheel', 'MouseWheel', 'EndMouseWheel', 'StartPinch', 'Pinch', 'EndPinch', 'StartPan', 'Pan', 'EndPan', 'StartRotate', 'Rotate', 'EndRotate', 'Button3D', 'Move3D', 'StartPointerLock', 'EndPointerLock', 'StartInteraction', 'Interaction', 'EndInteraction', 'AnimationFrameRateUpdate'];\nfunction preventDefault(event) {\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n}\nfunction pointerCacheToPositions(cache) {\n  const positions = Object.create(null);\n  cache.forEach(_ref => {\n    let {\n      pointerId,\n      position\n    } = _ref;\n    positions[pointerId] = position;\n  });\n  return positions;\n}\n\n// ----------------------------------------------------------------------------\n// vtkRenderWindowInteractor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindowInteractor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindowInteractor');\n\n  // Capture \"parentClass\" api for internal use\n  const superClass = {\n    ...publicAPI\n  };\n\n  // Initialize list of requesters\n  const animationRequesters = new Set();\n\n  // map from pointerId to { pointerId: number, position: [x, y] }\n  const pointerCache = new Map();\n\n  // Factor to apply on wheel spin.\n  let wheelCoefficient = 1;\n\n  // Public API methods\n\n  //----------------------------------------------------------------------\n  publicAPI.start = () => {\n    // Let the compositing handle the event loop if it wants to.\n    // if (publicAPI.HasObserver(vtkCommand::StartEvent) && !publicAPI.HandleEventLoop) {\n    //   publicAPI.invokeEvent({ type: 'StartEvent' });\n    //   return;\n    // }\n\n    // As a convenience, initialize if we aren't initialized yet.\n    if (!model.initialized) {\n      publicAPI.initialize();\n      if (!model.initialized) {\n        return;\n      }\n    }\n    // Pass execution to the subclass which will run the event loop,\n    // this will not return until TerminateApp is called.\n    publicAPI.startEventLoop();\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.setRenderWindow = aren => {\n    vtkErrorMacro('you want to call setView(view) instead of setRenderWindow on a vtk.js interactor');\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.setInteractorStyle = style => {\n    if (model.interactorStyle !== style) {\n      if (model.interactorStyle != null) {\n        model.interactorStyle.setInteractor(null);\n      }\n      model.interactorStyle = style;\n      if (model.interactorStyle != null) {\n        if (model.interactorStyle.getInteractor() !== publicAPI) {\n          model.interactorStyle.setInteractor(publicAPI);\n        }\n      }\n    }\n  };\n\n  //---------------------------------------------------------------------\n  publicAPI.initialize = () => {\n    model.initialized = true;\n    publicAPI.enable();\n    publicAPI.render();\n  };\n  publicAPI.enable = () => publicAPI.setEnabled(true);\n  publicAPI.disable = () => publicAPI.setEnabled(false);\n  publicAPI.startEventLoop = () => vtkWarningMacro('empty event loop');\n  function updateCurrentRenderer(x, y) {\n    if (!model._forcedRenderer) {\n      model.currentRenderer = publicAPI.findPokedRenderer(x, y);\n    }\n  }\n  publicAPI.getCurrentRenderer = () => {\n    if (model.currentRenderer) {\n      return model.currentRenderer;\n    }\n    updateCurrentRenderer(0, 0);\n    return model.currentRenderer;\n  };\n  function _getScreenEventPositionFor(source) {\n    const canvas = model._view.getCanvas();\n    const bounds = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / bounds.width;\n    const scaleY = canvas.height / bounds.height;\n    const position = {\n      x: scaleX * (source.clientX - bounds.left),\n      y: scaleY * (bounds.height - source.clientY + bounds.top),\n      z: 0\n    };\n\n    // if multitouch, do not update the current renderer\n    if (pointerCache.size <= 1 || !model.currentRenderer) {\n      updateCurrentRenderer(position.x, position.y);\n    }\n    return position;\n  }\n  // Allow user to override it\n  const getScreenEventPositionFor = model._getScreenEventPositionFor || _getScreenEventPositionFor;\n  function getModifierKeysFor(event) {\n    return {\n      controlKey: event.ctrlKey,\n      altKey: event.altKey,\n      shiftKey: event.shiftKey\n    };\n  }\n  function getKeysFor(event) {\n    const modifierKeys = getModifierKeysFor(event);\n    const keys = {\n      key: event.key,\n      keyCode: event.charCode,\n      ...modifierKeys\n    };\n    return keys;\n  }\n  function getDeviceTypeFor(event) {\n    return event.pointerType || '';\n  }\n  const _bindEvents = () => {\n    if (model.container === null) {\n      return;\n    }\n    const {\n      container\n    } = model;\n    container.addEventListener('contextmenu', preventDefault);\n    container.addEventListener('wheel', publicAPI.handleWheel);\n    container.addEventListener('DOMMouseScroll', publicAPI.handleWheel);\n    container.addEventListener('pointerenter', publicAPI.handlePointerEnter);\n    container.addEventListener('pointerleave', publicAPI.handlePointerLeave);\n    container.addEventListener('pointermove', publicAPI.handlePointerMove, {\n      passive: false\n    });\n    container.addEventListener('pointerdown', publicAPI.handlePointerDown, {\n      passive: false\n    });\n    container.addEventListener('pointerup', publicAPI.handlePointerUp);\n    container.addEventListener('pointercancel', publicAPI.handlePointerCancel);\n    document.addEventListener('keypress', publicAPI.handleKeyPress);\n    document.addEventListener('keydown', publicAPI.handleKeyDown);\n    document.addEventListener('keyup', publicAPI.handleKeyUp);\n    document.addEventListener('pointerlockchange', publicAPI.handlePointerLockChange);\n\n    // using touchAction is more performant than preventDefault\n    // in a touchstart handler.\n    container.style.touchAction = 'none';\n    container.style.userSelect = 'none';\n    // disables tap highlight for when cursor is pointer\n    container.style.webkitTapHighlightColor = 'rgba(0,0,0,0)';\n  };\n\n  // For backward compatibility.\n  // Necessary for using unbind/bindEvent without calling setContainer.\n  publicAPI.bindEvents = container => {\n    if (container === null) {\n      return;\n    }\n    const res = superClass.setContainer(container);\n    if (res) {\n      _bindEvents();\n    }\n  };\n  const _unbindEvents = () => {\n    // Clear any previous timeouts and state variables that control mouse / touchpad behavior.\n    clearTimeout(model.moveTimeoutID);\n    clearTimeout(model.wheelTimeoutID);\n    model.moveTimeoutID = 0;\n    model.wheelTimeoutID = 0;\n    wheelCoefficient = 1.0;\n    const {\n      container\n    } = model;\n    if (container) {\n      container.removeEventListener('contextmenu', preventDefault);\n      container.removeEventListener('wheel', publicAPI.handleWheel);\n      container.removeEventListener('DOMMouseScroll', publicAPI.handleWheel);\n      container.removeEventListener('pointerenter', publicAPI.handlePointerEnter);\n      container.removeEventListener('pointerleave', publicAPI.handlePointerLeave);\n      container.removeEventListener('pointermove', publicAPI.handlePointerMove, {\n        passive: false\n      });\n      container.removeEventListener('pointerdown', publicAPI.handlePointerDown, {\n        passive: false\n      });\n      container.removeEventListener('pointerup', publicAPI.handlePointerUp);\n      container.removeEventListener('pointercancel', publicAPI.handlePointerCancel);\n    }\n    document.removeEventListener('keypress', publicAPI.handleKeyPress);\n    document.removeEventListener('keydown', publicAPI.handleKeyDown);\n    document.removeEventListener('keyup', publicAPI.handleKeyUp);\n    document.removeEventListener('pointerlockchange', publicAPI.handlePointerLockChange);\n    pointerCache.clear();\n  };\n  publicAPI.unbindEvents = () => {\n    _unbindEvents();\n    superClass.setContainer(null);\n  };\n  publicAPI.handleKeyPress = event => {\n    const data = getKeysFor(event);\n    publicAPI.keyPressEvent(data);\n  };\n  publicAPI.handleKeyDown = event => {\n    const data = getKeysFor(event);\n    publicAPI.keyDownEvent(data);\n  };\n  publicAPI.handleKeyUp = event => {\n    const data = getKeysFor(event);\n    publicAPI.keyUpEvent(data);\n  };\n  publicAPI.handlePointerEnter = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    publicAPI.pointerEnterEvent(callData);\n    if (callData.deviceType === 'mouse') {\n      publicAPI.mouseEnterEvent(callData);\n    }\n  };\n  publicAPI.handlePointerLeave = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    publicAPI.pointerLeaveEvent(callData);\n    if (callData.deviceType === 'mouse') {\n      publicAPI.mouseLeaveEvent(callData);\n    }\n  };\n  publicAPI.handlePointerDown = event => {\n    if (event.button > 2 || publicAPI.isPointerLocked()) {\n      // ignore events from extra mouse buttons such as `back` and `forward`\n      return;\n    }\n    if (model.preventDefaultOnPointerDown) {\n      preventDefault(event);\n    }\n    if (event.target.hasPointerCapture(event.pointerId)) {\n      event.target.releasePointerCapture(event.pointerId);\n    }\n    model.container.setPointerCapture(event.pointerId);\n    if (pointerCache.has(event.pointerId)) {\n      vtkWarningMacro('[RenderWindowInteractor] duplicate pointerId detected');\n    }\n    pointerCache.set(event.pointerId, {\n      pointerId: event.pointerId,\n      position: getScreenEventPositionFor(event)\n    });\n    switch (event.pointerType) {\n      case 'pen':\n      case 'touch':\n        publicAPI.handleTouchStart(event);\n        break;\n      case 'mouse':\n      default:\n        publicAPI.handleMouseDown(event);\n        break;\n    }\n  };\n  publicAPI.handlePointerUp = event => {\n    if (pointerCache.has(event.pointerId)) {\n      if (model.preventDefaultOnPointerUp) {\n        preventDefault(event);\n      }\n      pointerCache.delete(event.pointerId);\n      model.container.releasePointerCapture(event.pointerId);\n      switch (event.pointerType) {\n        case 'pen':\n        case 'touch':\n          publicAPI.handleTouchEnd(event);\n          break;\n        case 'mouse':\n        default:\n          publicAPI.handleMouseUp(event);\n          break;\n      }\n    }\n  };\n  publicAPI.handlePointerCancel = event => {\n    if (pointerCache.has(event.pointerId)) {\n      pointerCache.delete(event.pointerId);\n      switch (event.pointerType) {\n        case 'pen':\n        case 'touch':\n          publicAPI.handleTouchEnd(event);\n          break;\n        case 'mouse':\n        default:\n          publicAPI.handleMouseUp(event);\n          break;\n      }\n    }\n  };\n  publicAPI.handlePointerMove = event => {\n    if (pointerCache.has(event.pointerId)) {\n      const pointer = pointerCache.get(event.pointerId);\n      pointer.position = getScreenEventPositionFor(event);\n    }\n    switch (event.pointerType) {\n      case 'pen':\n      case 'touch':\n        publicAPI.handleTouchMove(event);\n        break;\n      case 'mouse':\n      default:\n        publicAPI.handleMouseMove(event);\n        break;\n    }\n  };\n  publicAPI.handleMouseDown = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    switch (event.button) {\n      case 0:\n        publicAPI.leftButtonPressEvent(callData);\n        break;\n      case 1:\n        publicAPI.middleButtonPressEvent(callData);\n        break;\n      case 2:\n        publicAPI.rightButtonPressEvent(callData);\n        break;\n      default:\n        vtkErrorMacro(`Unknown mouse button pressed: ${event.button}`);\n        break;\n    }\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.requestPointerLock = () => {\n    if (model.container) {\n      model.container.requestPointerLock();\n    }\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.exitPointerLock = () => document.exitPointerLock?.();\n\n  //----------------------------------------------------------------------\n  publicAPI.isPointerLocked = () => !!model.container && document.pointerLockElement === model.container;\n\n  //----------------------------------------------------------------------\n  publicAPI.handlePointerLockChange = () => {\n    if (publicAPI.isPointerLocked()) {\n      publicAPI.startPointerLockEvent();\n    } else {\n      publicAPI.endPointerLockEvent();\n    }\n  };\n\n  //----------------------------------------------------------------------\n  function forceRender() {\n    if (model._view && model.enabled && model.enableRender) {\n      model.inRender = true;\n      model._view.traverseAllPasses();\n      model.inRender = false;\n    }\n    // outside the above test so that third-party code can redirect\n    // the render to the appropriate class\n    publicAPI.invokeRenderEvent();\n  }\n  publicAPI.requestAnimation = requestor => {\n    if (requestor === undefined) {\n      vtkErrorMacro(`undefined requester, can not start animating`);\n      return;\n    }\n    if (animationRequesters.has(requestor)) {\n      vtkWarningMacro(`requester is already registered for animating`);\n      return;\n    }\n    animationRequesters.add(requestor);\n    if (!model.animationRequest && animationRequesters.size === 1 && !model.xrAnimation) {\n      model._animationStartTime = Date.now();\n      model._animationFrameCount = 0;\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n      publicAPI.startAnimationEvent();\n    }\n  };\n\n  // continue animating for at least the specified duration of\n  // milliseconds.\n  publicAPI.extendAnimation = duration => {\n    const newEnd = Date.now() + duration;\n    model._animationExtendedEnd = Math.max(model._animationExtendedEnd, newEnd);\n    if (!model.animationRequest && animationRequesters.size === 0 && !model.xrAnimation) {\n      model._animationStartTime = Date.now();\n      model._animationFrameCount = 0;\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n      publicAPI.startAnimationEvent();\n    }\n  };\n  publicAPI.isAnimating = () => model.xrAnimation || model.animationRequest !== null;\n  publicAPI.cancelAnimation = function (requestor) {\n    let skipWarning = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!animationRequesters.has(requestor)) {\n      if (!skipWarning) {\n        const requestStr = requestor && requestor.getClassName ? requestor.getClassName() : requestor;\n        vtkWarningMacro(`${requestStr} did not request an animation`);\n      }\n      return;\n    }\n    animationRequesters.delete(requestor);\n    if (model.animationRequest && animationRequesters.size === 0 && Date.now() > model._animationExtendedEnd) {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n      publicAPI.endAnimationEvent();\n      publicAPI.render();\n    }\n  };\n  publicAPI.switchToXRAnimation = () => {\n    // cancel existing animation if any\n    if (model.animationRequest) {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n    }\n    model.xrAnimation = true;\n  };\n  publicAPI.returnFromXRAnimation = () => {\n    model.xrAnimation = false;\n    if (animationRequesters.size !== 0) {\n      model.recentAnimationFrameRate = 10.0;\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n    }\n  };\n  publicAPI.updateXRGamepads = (xrSession, xrFrame, xrRefSpace) => {\n    // watch for when buttons change state and fire events\n    xrSession.inputSources.forEach(inputSource => {\n      const gripPose = inputSource.gripSpace == null ? null : xrFrame.getPose(inputSource.gripSpace, xrRefSpace);\n      const targetRayPose = inputSource.gripSpace == null ? null : xrFrame.getPose(inputSource.targetRaySpace, xrRefSpace);\n      const gamepad = inputSource.gamepad;\n      const hand = inputSource.handedness;\n      if (!gamepad) {\n        return;\n      }\n      if (!(gamepad.index in model.lastGamepadValues)) {\n        model.lastGamepadValues[gamepad.index] = {\n          left: {\n            buttons: {}\n          },\n          right: {\n            buttons: {}\n          },\n          none: {\n            buttons: {}\n          }\n        };\n      }\n      for (let buttonIdx = 0; buttonIdx < gamepad.buttons.length; ++buttonIdx) {\n        if (!(buttonIdx in model.lastGamepadValues[gamepad.index][hand].buttons)) {\n          model.lastGamepadValues[gamepad.index][hand].buttons[buttonIdx] = false;\n        }\n        if (model.lastGamepadValues[gamepad.index][hand].buttons[buttonIdx] !== gamepad.buttons[buttonIdx].pressed && gripPose != null) {\n          publicAPI.button3DEvent({\n            gamepad,\n            position: gripPose.transform.position,\n            orientation: gripPose.transform.orientation,\n            targetPosition: targetRayPose.transform.position,\n            targetOrientation: targetRayPose.transform.orientation,\n            pressed: gamepad.buttons[buttonIdx].pressed,\n            device: inputSource.handedness === 'left' ? Device.LeftController : Device.RightController,\n            input: deviceInputMap[gamepad.mapping] && deviceInputMap[gamepad.mapping][buttonIdx] ? deviceInputMap[gamepad.mapping][buttonIdx] : Input.Trigger\n          });\n          model.lastGamepadValues[gamepad.index][hand].buttons[buttonIdx] = gamepad.buttons[buttonIdx].pressed;\n        }\n        if (model.lastGamepadValues[gamepad.index][hand].buttons[buttonIdx] && gripPose != null) {\n          publicAPI.move3DEvent({\n            gamepad,\n            position: gripPose.transform.position,\n            orientation: gripPose.transform.orientation,\n            targetPosition: targetRayPose.transform.position,\n            targetOrientation: targetRayPose.transform.orientation,\n            device: inputSource.handedness === 'left' ? Device.LeftController : Device.RightController\n          });\n        }\n      }\n    });\n  };\n  publicAPI.handleMouseMove = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    if (model.moveTimeoutID === 0) {\n      publicAPI.startMouseMoveEvent(callData);\n    } else {\n      publicAPI.mouseMoveEvent(callData);\n      clearTimeout(model.moveTimeoutID);\n    }\n\n    // start a timer to keep us animating while we get mouse move events\n    model.moveTimeoutID = setTimeout(() => {\n      publicAPI.endMouseMoveEvent();\n      model.moveTimeoutID = 0;\n    }, 200);\n  };\n  publicAPI.handleAnimation = () => {\n    const currTime = Date.now();\n    model._animationFrameCount++;\n    if (currTime - model._animationStartTime > 1000.0 && model._animationFrameCount > 1) {\n      model.recentAnimationFrameRate = 1000.0 * (model._animationFrameCount - 1) / (currTime - model._animationStartTime);\n      model.lastFrameTime = 1.0 / model.recentAnimationFrameRate;\n      publicAPI.animationFrameRateUpdateEvent();\n      model._animationStartTime = currTime;\n      model._animationFrameCount = 1;\n    }\n    publicAPI.animationEvent();\n    forceRender();\n    if (animationRequesters.size > 0 || Date.now() < model._animationExtendedEnd) {\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n    } else {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n      publicAPI.endAnimationEvent();\n      publicAPI.render();\n    }\n  };\n  publicAPI.handleWheel = event => {\n    preventDefault(event);\n\n    /**\n     * wheel event values can vary significantly across browsers, platforms\n     * and devices [1]. `normalizeWheel` uses facebook's solution from their\n     * fixed-data-table repository [2].\n     *\n     * [1] https://developer.mozilla.org/en-US/docs/Web/Events/mousewheel\n     * [2] https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n     *\n     * This code will return an object with properties:\n     *\n     *   spinX   -- normalized spin speed (use for zoom) - x plane\n     *   spinY   -- \" - y plane\n     *   pixelX  -- normalized distance (to pixels) - x plane\n     *   pixelY  -- \" - y plane\n     *\n     */\n    const callData = {\n      ...normalizeWheel(event),\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n\n    // Wheel events are thought to scroll pages (i.e. multiple lines at once).\n    // See normalizeWheel() documentation for more context.\n    // While trackpad wheel events are many small (<1) wheel spins,\n    // mouse wheel events have absolute spin values higher than 1.\n    // Here the first spin value is \"recorded\", and used to normalize\n    // all the following mouse wheel events.\n    if (model.wheelTimeoutID === 0) {\n      // we attempt to distinguish between trackpads and mice\n      // .3 will be larger than the first trackpad event,\n      // but small enough to detect some common edge case mice\n      if (Math.abs(callData.spinY) >= 0.3) {\n        // Event is coming from mouse wheel\n        wheelCoefficient = Math.abs(callData.spinY);\n      } else {\n        // Event is coming from trackpad\n        wheelCoefficient = 1;\n      }\n    }\n    callData.spinY /= wheelCoefficient;\n    if (model.wheelTimeoutID === 0) {\n      publicAPI.startMouseWheelEvent(callData);\n      publicAPI.mouseWheelEvent(callData);\n    } else {\n      publicAPI.mouseWheelEvent(callData);\n      clearTimeout(model.wheelTimeoutID);\n    }\n    if (model.mouseScrollDebounceByPass) {\n      publicAPI.extendAnimation(600);\n      publicAPI.endMouseWheelEvent();\n      model.wheelTimeoutID = 0;\n    } else {\n      // start a timer to keep us animating while we get wheel events\n      model.wheelTimeoutID = setTimeout(() => {\n        publicAPI.extendAnimation(600);\n        publicAPI.endMouseWheelEvent();\n        model.wheelTimeoutID = 0;\n      }, 200);\n    }\n  };\n  publicAPI.handleMouseUp = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    switch (event.button) {\n      case 0:\n        publicAPI.leftButtonReleaseEvent(callData);\n        break;\n      case 1:\n        publicAPI.middleButtonReleaseEvent(callData);\n        break;\n      case 2:\n        publicAPI.rightButtonReleaseEvent(callData);\n        break;\n      default:\n        vtkErrorMacro(`Unknown mouse button released: ${event.button}`);\n        break;\n    }\n  };\n  publicAPI.handleTouchStart = event => {\n    const pointers = [...pointerCache.values()];\n    // If multitouch\n    if (model.recognizeGestures && pointers.length > 1) {\n      const positions = pointerCacheToPositions(pointerCache);\n      // did we just transition to multitouch?\n      if (pointers.length === 2) {\n        const callData = {\n          ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n          position: pointers[0].position,\n          deviceType: getDeviceTypeFor(event)\n        };\n        publicAPI.leftButtonReleaseEvent(callData);\n      }\n      // handle the gesture\n      publicAPI.recognizeGesture('TouchStart', positions);\n    } else if (pointers.length === 1) {\n      const callData = {\n        ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n        position: getScreenEventPositionFor(event),\n        deviceType: getDeviceTypeFor(event)\n      };\n      publicAPI.leftButtonPressEvent(callData);\n    }\n  };\n  publicAPI.handleTouchMove = event => {\n    const pointers = [...pointerCache.values()];\n    if (model.recognizeGestures && pointers.length > 1) {\n      const positions = pointerCacheToPositions(pointerCache);\n      publicAPI.recognizeGesture('TouchMove', positions);\n    } else if (pointers.length === 1) {\n      const callData = {\n        ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n        position: pointers[0].position,\n        deviceType: getDeviceTypeFor(event)\n      };\n      publicAPI.mouseMoveEvent(callData);\n    }\n  };\n  publicAPI.handleTouchEnd = event => {\n    const pointers = [...pointerCache.values()];\n    if (model.recognizeGestures) {\n      // No more fingers down\n      if (pointers.length === 0) {\n        const callData = {\n          ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n          position: getScreenEventPositionFor(event),\n          deviceType: getDeviceTypeFor(event)\n        };\n        publicAPI.leftButtonReleaseEvent(callData);\n      } else if (pointers.length === 1) {\n        // If one finger left, end touch and start button press\n        const positions = pointerCacheToPositions(pointerCache);\n        publicAPI.recognizeGesture('TouchEnd', positions);\n        const callData = {\n          ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n          position: pointers[0].position,\n          deviceType: getDeviceTypeFor(event)\n        };\n        publicAPI.leftButtonPressEvent(callData);\n      } else {\n        // If more than one finger left, keep touch move\n        const positions = pointerCacheToPositions(pointerCache);\n        publicAPI.recognizeGesture('TouchMove', positions);\n      }\n    } else if (pointers.length === 1) {\n      const callData = {\n        ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n        position: pointers[0].position,\n        deviceType: getDeviceTypeFor(event)\n      };\n      publicAPI.leftButtonReleaseEvent(callData);\n    }\n  };\n  publicAPI.setView = val => {\n    if (model._view === val) {\n      return;\n    }\n    model._view = val;\n    model._view.getRenderable().setInteractor(publicAPI);\n    publicAPI.modified();\n  };\n  publicAPI.getFirstRenderer = () => model._view?.getRenderable()?.getRenderersByReference()?.[0];\n  publicAPI.findPokedRenderer = function () {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    if (!model._view) {\n      return null;\n    }\n    // The original order of renderers needs to remain as\n    // the first one is the one we want to manipulate the camera on.\n    const rc = model._view?.getRenderable()?.getRenderers();\n    if (!rc || rc.length === 0) {\n      return null;\n    }\n    rc.sort((a, b) => a.getLayer() - b.getLayer());\n    let interactiveren = null;\n    let viewportren = null;\n    let currentRenderer = null;\n    let count = rc.length;\n    while (count--) {\n      const aren = rc[count];\n      if (model._view.isInViewport(x, y, aren) && aren.getInteractive()) {\n        currentRenderer = aren;\n        break;\n      }\n      if (interactiveren === null && aren.getInteractive()) {\n        // Save this renderer in case we can't find one in the viewport that\n        // is interactive.\n        interactiveren = aren;\n      }\n      if (viewportren === null && model._view.isInViewport(x, y, aren)) {\n        // Save this renderer in case we can't find one in the viewport that\n        // is interactive.\n        viewportren = aren;\n      }\n    }\n\n    // We must have a value.  If we found an interactive renderer before, that's\n    // better than a non-interactive renderer.\n    if (currentRenderer === null) {\n      currentRenderer = interactiveren;\n    }\n\n    // We must have a value.  If we found a renderer that is in the viewport,\n    // that is better than any old viewport (but not as good as an interactive\n    // one).\n    if (currentRenderer === null) {\n      currentRenderer = viewportren;\n    }\n\n    // We must have a value - take anything.\n    if (currentRenderer == null) {\n      currentRenderer = rc[0];\n    }\n    return currentRenderer;\n  };\n\n  // only render if we are not animating. If we are animating\n  // then renders will happen naturally anyhow and we definitely\n  // do not want extra renders as the make the apparent interaction\n  // rate slower.\n  publicAPI.render = () => {\n    if (!publicAPI.isAnimating() && !model.inRender) {\n      forceRender();\n    }\n  };\n\n  // create the generic Event methods\n  handledEvents.forEach(eventName => {\n    const lowerFirst = eventName.charAt(0).toLowerCase() + eventName.slice(1);\n    publicAPI[`${lowerFirst}Event`] = arg => {\n      // Check that interactor enabled\n      if (!model.enabled) {\n        return;\n      }\n\n      // Check that a poked renderer exists\n      const renderer = publicAPI.getCurrentRenderer();\n      if (!renderer) {\n        vtkOnceErrorMacro(`\n          Can not forward events without a current renderer on the interactor.\n        `);\n        return;\n      }\n\n      // Pass the eventName and the poked renderer\n      const callData = {\n        type: eventName,\n        pokedRenderer: model.currentRenderer,\n        firstRenderer: publicAPI.getFirstRenderer(),\n        // Add the arguments to the call data\n        ...arg\n      };\n\n      // Call invoke\n      publicAPI[`invoke${eventName}`](callData);\n    };\n  });\n\n  // we know we are in multitouch now, so start recognizing\n  publicAPI.recognizeGesture = (event, positions) => {\n    // more than two pointers we ignore\n    if (Object.keys(positions).length > 2) {\n      return;\n    }\n    if (!model.startingEventPositions) {\n      model.startingEventPositions = {};\n    }\n\n    // store the initial positions\n    if (event === 'TouchStart') {\n      Object.keys(positions).forEach(key => {\n        model.startingEventPositions[key] = positions[key];\n      });\n      // we do not know what the gesture is yet\n      model.currentGesture = 'Start';\n      return;\n    }\n\n    // end the gesture if needed\n    if (event === 'TouchEnd') {\n      if (model.currentGesture === 'Pinch') {\n        publicAPI.render();\n        publicAPI.endPinchEvent();\n      }\n      if (model.currentGesture === 'Rotate') {\n        publicAPI.render();\n        publicAPI.endRotateEvent();\n      }\n      if (model.currentGesture === 'Pan') {\n        publicAPI.render();\n        publicAPI.endPanEvent();\n      }\n      model.currentGesture = 'Start';\n      model.startingEventPositions = {};\n      return;\n    }\n\n    // what are the two pointers we are working with\n    let count = 0;\n    const posVals = [];\n    const startVals = [];\n    Object.keys(positions).forEach(key => {\n      posVals[count] = positions[key];\n      startVals[count] = model.startingEventPositions[key];\n      count++;\n    });\n\n    // The meat of the algorithm\n    // on move events we analyze them to determine what type\n    // of movement it is and then deal with it.\n    // calculate the distances\n    const originalDistance = Math.sqrt((startVals[0].x - startVals[1].x) * (startVals[0].x - startVals[1].x) + (startVals[0].y - startVals[1].y) * (startVals[0].y - startVals[1].y));\n    const newDistance = Math.sqrt((posVals[0].x - posVals[1].x) * (posVals[0].x - posVals[1].x) + (posVals[0].y - posVals[1].y) * (posVals[0].y - posVals[1].y));\n\n    // calculate rotations\n    let originalAngle = degreesFromRadians(Math.atan2(startVals[1].y - startVals[0].y, startVals[1].x - startVals[0].x));\n    let newAngle = degreesFromRadians(Math.atan2(posVals[1].y - posVals[0].y, posVals[1].x - posVals[0].x));\n\n    // angles are cyclic so watch for that, 1 and 359 are only 2 apart :)\n    let angleDeviation = newAngle - originalAngle;\n    newAngle = newAngle + 180.0 >= 360.0 ? newAngle - 180.0 : newAngle + 180.0;\n    originalAngle = originalAngle + 180.0 >= 360.0 ? originalAngle - 180.0 : originalAngle + 180.0;\n    if (Math.abs(newAngle - originalAngle) < Math.abs(angleDeviation)) {\n      angleDeviation = newAngle - originalAngle;\n    }\n\n    // calculate the translations\n    const trans = [];\n    trans[0] = (posVals[0].x - startVals[0].x + posVals[1].x - startVals[1].x) / 2.0;\n    trans[1] = (posVals[0].y - startVals[0].y + posVals[1].y - startVals[1].y) / 2.0;\n    if (event === 'TouchMove') {\n      // OK we want to\n      // - immediately respond to the user\n      // - allow the user to zoom without panning (saves focal point)\n      // - allow the user to rotate without panning (saves focal point)\n\n      // do we know what gesture we are doing yet? If not\n      // see if we can figure it out\n      if (model.currentGesture === 'Start') {\n        // pinch is a move to/from the center point\n        // rotate is a move along the circumference\n        // pan is a move of the center point\n        // compute the distance along each of these axes in pixels\n        // the first to break thresh wins\n        let thresh = 0.01 * Math.sqrt(model.container.clientWidth * model.container.clientWidth + model.container.clientHeight * model.container.clientHeight);\n        if (thresh < 15.0) {\n          thresh = 15.0;\n        }\n        const pinchDistance = Math.abs(newDistance - originalDistance);\n        const rotateDistance = newDistance * 3.1415926 * Math.abs(angleDeviation) / 360.0;\n        const panDistance = Math.sqrt(trans[0] * trans[0] + trans[1] * trans[1]);\n        if (pinchDistance > thresh && pinchDistance > rotateDistance && pinchDistance > panDistance) {\n          model.currentGesture = 'Pinch';\n          const callData = {\n            scale: 1.0,\n            touches: positions\n          };\n          publicAPI.startPinchEvent(callData);\n        } else if (rotateDistance > thresh && rotateDistance > panDistance) {\n          model.currentGesture = 'Rotate';\n          const callData = {\n            rotation: 0.0,\n            touches: positions\n          };\n          publicAPI.startRotateEvent(callData);\n        } else if (panDistance > thresh) {\n          model.currentGesture = 'Pan';\n          const callData = {\n            translation: [0, 0],\n            touches: positions\n          };\n          publicAPI.startPanEvent(callData);\n        }\n      } else {\n        // if we have found a specific type of movement then\n        // handle it\n        if (model.currentGesture === 'Rotate') {\n          const callData = {\n            rotation: angleDeviation,\n            touches: positions\n          };\n          publicAPI.rotateEvent(callData);\n        }\n        if (model.currentGesture === 'Pinch') {\n          const callData = {\n            scale: newDistance / originalDistance,\n            touches: positions\n          };\n          publicAPI.pinchEvent(callData);\n        }\n        if (model.currentGesture === 'Pan') {\n          const callData = {\n            translation: trans,\n            touches: positions\n          };\n          publicAPI.panEvent(callData);\n        }\n      }\n    }\n  };\n  publicAPI.handleVisibilityChange = () => {\n    model._animationStartTime = Date.now();\n    model._animationFrameCount = 0;\n  };\n  publicAPI.setCurrentRenderer = r => {\n    model._forcedRenderer = !!r;\n    model.currentRenderer = r;\n  };\n  publicAPI.setContainer = container => {\n    _unbindEvents();\n    const res = superClass.setContainer(container ?? null);\n    if (res) {\n      _bindEvents();\n    }\n    return res;\n  };\n\n  // Stop animating if the renderWindowInteractor is deleted.\n  publicAPI.delete = () => {\n    while (animationRequesters.size) {\n      publicAPI.cancelAnimation(animationRequesters.values().next().value);\n    }\n    if (typeof document.hidden !== 'undefined') {\n      document.removeEventListener('visibilitychange', publicAPI.handleVisibilityChange);\n    }\n    if (model.container) {\n      publicAPI.setContainer(null);\n    }\n    superClass.delete();\n  };\n\n  // Use the Page Visibility API to detect when we switch away from or back to\n  // this tab, and reset the animationFrameStart. When tabs are not active, browsers\n  // will stop calling requestAnimationFrame callbacks.\n  if (typeof document.hidden !== 'undefined') {\n    document.addEventListener('visibilitychange', publicAPI.handleVisibilityChange, false);\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  renderWindow: null,\n  interactorStyle: null,\n  picker: null,\n  pickingManager: null,\n  initialized: false,\n  enabled: false,\n  enableRender: true,\n  currentRenderer: null,\n  lightFollowCamera: true,\n  desiredUpdateRate: 30.0,\n  stillUpdateRate: 2.0,\n  container: null,\n  // _view: null,\n  recognizeGestures: true,\n  currentGesture: 'Start',\n  animationRequest: null,\n  lastFrameTime: 0.1,\n  recentAnimationFrameRate: 10.0,\n  wheelTimeoutID: 0,\n  moveTimeoutID: 0,\n  lastGamepadValues: {},\n  preventDefaultOnPointerDown: false,\n  preventDefaultOnPointerUp: false,\n  mouseScrollDebounceByPass: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n\n  // run animation at least until this time\n  model._animationExtendedEnd = 0;\n  macro.event(publicAPI, model, 'RenderEvent');\n  handledEvents.forEach(eventName => macro.event(publicAPI, model, eventName));\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['initialized', 'interactorStyle', 'lastFrameTime', 'recentAnimationFrameRate', '_view']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['container', 'lightFollowCamera', 'enabled', 'enableRender', 'recognizeGestures', 'desiredUpdateRate', 'stillUpdateRate', 'picker', 'preventDefaultOnPointerDown', 'preventDefaultOnPointerUp', 'mouseScrollDebounceByPass']);\n  macro.moveToProtected(publicAPI, model, ['view']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkRenderWindowInteractor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkRenderWindowInteractor');\n\n// ----------------------------------------------------------------------------\n\nvar vtkRenderWindowInteractor$1 = {\n  newInstance,\n  extend,\n  handledEvents,\n  ...Constants\n};\n\nexport { vtkRenderWindowInteractor$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkRenderWindowInteractor from './RenderWindowInteractor.js';\n\nconst {\n  vtkErrorMacro,\n  VOID\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n//----------------------------------------------------------------------------\n// Description:\n// Transform from world to display coordinates.\nfunction computeWorldToDisplay(renderer, x, y, z) {\n  const view = renderer.getRenderWindow().getViews()[0];\n  return view.worldToDisplay(x, y, z, renderer);\n}\n\n//----------------------------------------------------------------------------\n// Description:\n// Transform from display to world coordinates.\nfunction computeDisplayToWorld(renderer, x, y, z) {\n  const view = renderer.getRenderWindow().getViews()[0];\n  return view.displayToWorld(x, y, z, renderer);\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\nconst STATIC = {\n  computeWorldToDisplay,\n  computeDisplayToWorld\n};\n\n// ----------------------------------------------------------------------------\n// vtkInteractorObserver methods\n// ----------------------------------------------------------------------------\n\nfunction vtkInteractorObserver(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkInteractorObserver');\n  const superClass = {\n    ...publicAPI\n  };\n\n  //----------------------------------------------------------------------------\n  function unsubscribeFromEvents() {\n    while (model.subscribedEvents.length) {\n      model.subscribedEvents.pop().unsubscribe();\n    }\n  }\n\n  //----------------------------------------------------------------------------\n  // Check what events we can handle and register callbacks\n  function subscribeToEvents() {\n    vtkRenderWindowInteractor.handledEvents.forEach(eventName => {\n      if (publicAPI[`handle${eventName}`]) {\n        model.subscribedEvents.push(model._interactor[`on${eventName}`](callData => {\n          if (model.processEvents) {\n            return publicAPI[`handle${eventName}`](callData);\n          }\n          return VOID;\n        }, model.priority));\n      }\n    });\n  }\n\n  //----------------------------------------------------------------------------\n  // Public API methods\n  //----------------------------------------------------------------------------\n  publicAPI.setInteractor = i => {\n    if (i === model._interactor) {\n      return;\n    }\n    unsubscribeFromEvents();\n    model._interactor = i;\n    if (i && model.enabled) {\n      subscribeToEvents();\n    }\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.setEnabled = enable => {\n    if (enable === model.enabled) {\n      return;\n    }\n    unsubscribeFromEvents();\n    if (enable) {\n      if (model._interactor) {\n        subscribeToEvents();\n      } else {\n        vtkErrorMacro(`\n          The interactor must be set before subscribing to events\n        `);\n      }\n    }\n    model.enabled = enable;\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  // Description:\n  // Transform from display to world coordinates.\n  publicAPI.computeDisplayToWorld = (renderer, x, y, z) => {\n    if (!renderer) {\n      return null;\n    }\n    return model._interactor.getView().displayToWorld(x, y, z, renderer);\n  };\n\n  //----------------------------------------------------------------------------\n  // Description:\n  // Transform from world to display coordinates.\n  publicAPI.computeWorldToDisplay = (renderer, x, y, z) => {\n    if (!renderer) {\n      return null;\n    }\n    return model._interactor.getView().worldToDisplay(x, y, z, renderer);\n  };\n\n  //----------------------------------------------------------------------------\n\n  publicAPI.setPriority = priority => {\n    const modified = superClass.setPriority(priority);\n    if (modified && model._interactor) {\n      unsubscribeFromEvents();\n      subscribeToEvents();\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  enabled: true,\n  // _interactor: null,\n  priority: 0.0,\n  processEvents: true,\n  subscribedEvents: []\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.event(publicAPI, model, 'InteractionEvent');\n  macro.event(publicAPI, model, 'StartInteractionEvent');\n  macro.event(publicAPI, model, 'EndInteractionEvent');\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['_interactor', 'enabled']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['priority', 'processEvents']);\n  macro.moveToProtected(publicAPI, model, ['interactor']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkInteractorObserver(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkInteractorObserver');\n\n// ----------------------------------------------------------------------------\n\nvar vtkInteractorObserver$1 = {\n  newInstance,\n  extend,\n  ...STATIC\n};\n\nexport { STATIC, vtkInteractorObserver$1 as default, extend, newInstance };\n","const WIDGET_PRIORITY = 0.5;\nvar Constants = {\n  WIDGET_PRIORITY\n};\n\nexport { WIDGET_PRIORITY, Constants as default };\n","import { m as macro } from '../../macros2.js';\nimport vtkInteractorObserver from '../../Rendering/Core/InteractorObserver.js';\nimport vtkProp from '../../Rendering/Core/Prop.js';\nimport { RenderingTypes } from './WidgetManager/Constants.js';\nimport { WIDGET_PRIORITY } from './AbstractWidget/Constants.js';\n\n// ----------------------------------------------------------------------------\n\nfunction vtkAbstractWidget(publicAPI, model) {\n  model.classHierarchy.push('vtkAbstractWidget');\n  model.actorToRepresentationMap = new WeakMap();\n\n  // --------------------------------------------------------------------------\n  publicAPI.getBounds = model.widgetState.getBounds;\n  publicAPI.getNestedProps = () => model.representations;\n  // --------------------------------------------------------------------------\n\n  publicAPI.activateHandle = _ref => {\n    let {\n      selectedState,\n      representation\n    } = _ref;\n    model.widgetState.activateOnly(selectedState);\n    model.activeState = selectedState;\n    if (selectedState && selectedState.updateManipulator) {\n      selectedState.updateManipulator();\n    }\n    publicAPI.invokeActivateHandle({\n      selectedState,\n      representation\n    });\n    if (publicAPI.updateCursor) {\n      publicAPI.updateCursor();\n    }\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.deactivateAllHandles = () => {\n    model.widgetState.deactivate();\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.hasActor = actor => model.actorToRepresentationMap.has(actor);\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.grabFocus = () => {\n    model.hasFocus = true;\n  };\n  publicAPI.loseFocus = () => {\n    model.hasFocus = false;\n  };\n  publicAPI.hasFocus = () => model.hasFocus;\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.placeWidget = bounds => model.widgetState.placeWidget(bounds);\n  publicAPI.getPlaceFactor = () => model.widgetState.getPlaceFactor();\n  publicAPI.setPlaceFactor = factor => model.widgetState.setPlaceFactor(factor);\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.getRepresentationFromActor = actor => model.actorToRepresentationMap.get(actor);\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.updateRepresentationForRender = function () {\n    let renderingType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : RenderingTypes.FRONT_BUFFER;\n    for (let i = 0; i < model.representations.length; i++) {\n      const representation = model.representations[i];\n      representation.updateActorVisibility(renderingType, model.contextVisibility, model.handleVisibility);\n    }\n  };\n  publicAPI.getViewWidgets = () => model._factory.getViewWidgets();\n\n  // --------------------------------------------------------------------------\n  // Initialization calls\n  // --------------------------------------------------------------------------\n\n  publicAPI.setPriority(WIDGET_PRIORITY);\n}\n\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  contextVisibility: true,\n  handleVisibility: true,\n  hasFocus: false\n};\n\n/**\n * @param {*} publicAPI public methods to populate\n * @param {*} model internal values to populate\n * @param {object} initialValues Contains at least\n *   {viewType, _renderer, _camera, _openGLRenderWindow, _factory}\n */\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkProp.extend(publicAPI, model, initialValues);\n  vtkInteractorObserver.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['contextVisibility', 'handleVisibility', '_widgetManager']);\n  macro.get(publicAPI, model, ['representations', 'widgetState', 'activeState' // stores the last activated sub state(handle)\n  ]);\n\n  macro.moveToProtected(publicAPI, model, ['widgetManager']);\n  macro.event(publicAPI, model, 'ActivateHandle');\n  vtkAbstractWidget(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkAbstractWidget');\n\n// ----------------------------------------------------------------------------\n\nvar vtkAbstractWidget$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkAbstractWidget$1 as default, extend, newInstance };\n","import { f as vtkMath } from '../../Common/Core/Math/index.js';\nimport { FieldAssociations } from '../../Common/DataModel/DataSet/Constants.js';\nimport { m as macro } from '../../macros2.js';\nimport WidgetManagerConst from './WidgetManager/Constants.js';\nimport { WIDGET_PRIORITY } from './AbstractWidget/Constants.js';\n\nconst {\n  ViewTypes,\n  RenderingTypes,\n  CaptureOn\n} = WidgetManagerConst;\nconst {\n  vtkErrorMacro\n} = macro;\nlet viewIdCount = 1;\n\n// ----------------------------------------------------------------------------\n// Helper\n// ----------------------------------------------------------------------------\n\nfunction extractRenderingComponents(renderer) {\n  const camera = renderer.getActiveCamera();\n  const renderWindow = renderer.getRenderWindow();\n  const interactor = renderWindow.getInteractor();\n  const apiSpecificRenderWindow = interactor.getView();\n  return {\n    renderer,\n    renderWindow,\n    interactor,\n    apiSpecificRenderWindow,\n    camera\n  };\n}\nfunction getPixelWorldHeightAtCoord(worldCoord, displayScaleParams) {\n  const {\n    dispHeightFactor,\n    cameraPosition,\n    cameraDir,\n    isParallel,\n    rendererPixelDims\n  } = displayScaleParams;\n  let scale = 1;\n  if (isParallel) {\n    scale = dispHeightFactor;\n  } else {\n    const worldCoordToCamera = [...worldCoord];\n    vtkMath.subtract(worldCoordToCamera, cameraPosition, worldCoordToCamera);\n    scale = vtkMath.dot(worldCoordToCamera, cameraDir) * dispHeightFactor;\n  }\n  const rHeight = rendererPixelDims[1];\n  return scale / rHeight;\n}\n// ----------------------------------------------------------------------------\n// vtkWidgetManager methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWidgetManager(publicAPI, model) {\n  if (!model.viewId) {\n    model.viewId = `view-${viewIdCount++}`;\n  }\n  model.classHierarchy.push('vtkWidgetManager');\n  const propsWeakMap = new WeakMap();\n  const subscriptions = [];\n\n  // --------------------------------------------------------------------------\n  // API internal\n  // --------------------------------------------------------------------------\n\n  function updateWidgetWeakMap(widget) {\n    const representations = widget.getRepresentations();\n    for (let i = 0; i < representations.length; i++) {\n      const representation = representations[i];\n      const origin = {\n        widget,\n        representation\n      };\n      const actors = representation.getActors();\n      for (let j = 0; j < actors.length; j++) {\n        const actor = actors[j];\n        propsWeakMap.set(actor, origin);\n      }\n    }\n  }\n  function getViewWidget(widget) {\n    return widget && (widget.isA('vtkAbstractWidget') ? widget : widget.getWidgetForView({\n      viewId: model.viewId\n    }));\n  }\n\n  // --------------------------------------------------------------------------\n  // Widget scaling\n  // --------------------------------------------------------------------------\n\n  function updateDisplayScaleParams() {\n    const {\n      _apiSpecificRenderWindow,\n      _camera,\n      _renderer\n    } = model;\n    if (_renderer && _apiSpecificRenderWindow && _camera) {\n      const [rwW, rwH] = _apiSpecificRenderWindow.getSize();\n      const [vxmin, vymin, vxmax, vymax] = _renderer.getViewport();\n      const pixelRatio = _apiSpecificRenderWindow.getComputedDevicePixelRatio();\n      const rendererPixelDims = [rwW * (vxmax - vxmin) / pixelRatio, rwH * (vymax - vymin) / pixelRatio];\n      const cameraPosition = _camera.getPosition();\n      const cameraDir = _camera.getDirectionOfProjection();\n      const isParallel = _camera.getParallelProjection();\n      const dispHeightFactor = isParallel ? 2 * _camera.getParallelScale() : 2 * Math.tan(vtkMath.radiansFromDegrees(_camera.getViewAngle()) / 2);\n      model.widgets.forEach(w => {\n        w.getNestedProps().forEach(r => {\n          if (r.getScaleInPixels()) {\n            r.setDisplayScaleParams({\n              dispHeightFactor,\n              cameraPosition,\n              cameraDir,\n              isParallel,\n              rendererPixelDims\n            });\n          }\n        });\n      });\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  // API public\n  // --------------------------------------------------------------------------\n\n  async function updateSelection(callData, fromTouchEvent, callID) {\n    const {\n      position\n    } = callData;\n    const {\n      requestCount,\n      selectedState,\n      representation,\n      widget\n    } = await publicAPI.getSelectedDataForXY(position.x, position.y);\n    if (requestCount || callID !== model._currentUpdateSelectionCallID) {\n      // requestCount > 0: Call activate only once\n      // callID check: drop old calls\n      return;\n    }\n    function activateHandle(w) {\n      if (fromTouchEvent) {\n        // release any previous left button interaction\n        model._interactor.invokeLeftButtonRelease(callData);\n      }\n      w.activateHandle({\n        selectedState,\n        representation\n      });\n      if (fromTouchEvent) {\n        // re-trigger the left button press to pick the now-active widget\n        model._interactor.invokeLeftButtonPress(callData);\n      }\n    }\n\n    // Default cursor behavior\n    const cursorStyles = publicAPI.getCursorStyles();\n    const style = widget ? 'hover' : 'default';\n    const cursor = cursorStyles[style];\n    if (cursor) {\n      model._apiSpecificRenderWindow.setCursor(cursor);\n    }\n    model.activeWidget = null;\n    let wantRender = false;\n    if (model.widgetInFocus === widget && widget.hasFocus()) {\n      activateHandle(widget);\n      model.activeWidget = widget;\n      wantRender = true;\n    } else {\n      for (let i = 0; i < model.widgets.length; i++) {\n        const w = model.widgets[i];\n        if (w === widget && w.getNestedPickable()) {\n          activateHandle(w);\n          model.activeWidget = w;\n          wantRender = true;\n        } else {\n          wantRender ||= !!w.getActiveState();\n          w.deactivateAllHandles();\n        }\n      }\n    }\n    if (wantRender) {\n      model._interactor.render();\n    }\n  }\n  const handleEvent = async function (callData) {\n    let fromTouchEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!model.isAnimating && model.pickingEnabled && callData.pokedRenderer === model._renderer) {\n      const callID = Symbol('UpdateSelection');\n      model._currentUpdateSelectionCallID = callID;\n      await updateSelection(callData, fromTouchEvent, callID);\n    }\n  };\n  function updateWidgetForRender(w) {\n    w.updateRepresentationForRender(model.renderingType);\n  }\n  function renderPickingBuffer() {\n    model.renderingType = RenderingTypes.PICKING_BUFFER;\n    model.widgets.forEach(updateWidgetForRender);\n  }\n  function renderFrontBuffer() {\n    model.renderingType = RenderingTypes.FRONT_BUFFER;\n    model.widgets.forEach(updateWidgetForRender);\n  }\n  async function captureBuffers(x1, y1, x2, y2) {\n    if (model._captureInProgress) {\n      await model._captureInProgress;\n      return;\n    }\n    renderPickingBuffer();\n    model._capturedBuffers = null;\n    model._captureInProgress = model._selector.getSourceDataAsync(model._renderer, x1, y1, x2, y2);\n    model._capturedBuffers = await model._captureInProgress;\n    model._captureInProgress = null;\n    model.previousSelectedData = null;\n    renderFrontBuffer();\n  }\n  publicAPI.enablePicking = () => {\n    model.pickingEnabled = true;\n    publicAPI.renderWidgets();\n  };\n  publicAPI.renderWidgets = () => {\n    if (model.pickingEnabled && model.captureOn === CaptureOn.MOUSE_RELEASE) {\n      const [w, h] = model._apiSpecificRenderWindow.getSize();\n      captureBuffers(0, 0, w, h);\n    }\n    renderFrontBuffer();\n    publicAPI.modified();\n  };\n  publicAPI.disablePicking = () => {\n    model.pickingEnabled = false;\n  };\n  publicAPI.setRenderer = renderer => {\n    const renderingComponents = extractRenderingComponents(renderer);\n    Object.assign(model, renderingComponents);\n    macro.moveToProtected({}, model, Object.keys(renderingComponents));\n    while (subscriptions.length) {\n      subscriptions.pop().unsubscribe();\n    }\n    model._selector = model._apiSpecificRenderWindow.createSelector();\n    model._selector.setFieldAssociation(FieldAssociations.FIELD_ASSOCIATION_POINTS);\n    subscriptions.push(model._apiSpecificRenderWindow.onWindowResizeEvent(updateDisplayScaleParams));\n    subscriptions.push(model._camera.onModified(updateDisplayScaleParams));\n    updateDisplayScaleParams();\n    subscriptions.push(model._interactor.onStartAnimation(() => {\n      model.isAnimating = true;\n    }));\n    subscriptions.push(model._interactor.onEndAnimation(() => {\n      model.isAnimating = false;\n      publicAPI.renderWidgets();\n    }));\n    subscriptions.push(model._interactor.onMouseMove(eventData => {\n      handleEvent(eventData);\n      return macro.VOID;\n    }));\n\n    // must be handled after widgets, hence the given priority.\n    subscriptions.push(model._interactor.onLeftButtonPress(eventData => {\n      const {\n        deviceType\n      } = eventData;\n      const touchEvent = deviceType === 'touch' || deviceType === 'pen';\n      // only try selection if the left button press is from touch.\n      if (touchEvent) {\n        handleEvent(eventData, touchEvent);\n      }\n      return macro.VOID;\n    }, WIDGET_PRIORITY / 2));\n    publicAPI.modified();\n    if (model.pickingEnabled) {\n      publicAPI.enablePicking();\n    }\n  };\n  function addWidgetInternal(viewWidget) {\n    viewWidget.setWidgetManager(publicAPI);\n    updateWidgetWeakMap(viewWidget);\n    updateDisplayScaleParams();\n\n    // Register to renderer\n    model._renderer.addActor(viewWidget);\n  }\n  publicAPI.addWidget = (widget, viewType, initialValues) => {\n    if (!model._renderer) {\n      vtkErrorMacro('Widget manager MUST BE link to a view before registering widgets');\n      return null;\n    }\n    const {\n      viewId,\n      _renderer\n    } = model;\n    const w = widget.getWidgetForView({\n      viewId,\n      renderer: _renderer,\n      viewType: viewType || ViewTypes.DEFAULT,\n      initialValues\n    });\n    if (w != null && model.widgets.indexOf(w) === -1) {\n      model.widgets.push(w);\n      addWidgetInternal(w);\n      publicAPI.modified();\n    }\n    return w;\n  };\n  function removeWidgetInternal(viewWidget) {\n    model._renderer.removeActor(viewWidget);\n    viewWidget.delete();\n  }\n  function onWidgetRemoved() {\n    model._renderer.getRenderWindow().getInteractor().render();\n    publicAPI.renderWidgets();\n  }\n  publicAPI.removeWidgets = () => {\n    model.widgets.forEach(removeWidgetInternal);\n    model.widgets = [];\n    model.widgetInFocus = null;\n    onWidgetRemoved();\n  };\n  publicAPI.removeWidget = widget => {\n    const viewWidget = getViewWidget(widget);\n    const index = model.widgets.indexOf(viewWidget);\n    if (index !== -1) {\n      model.widgets.splice(index, 1);\n      const isWidgetInFocus = model.widgetInFocus === viewWidget;\n      if (isWidgetInFocus) {\n        publicAPI.releaseFocus();\n      }\n      removeWidgetInternal(viewWidget);\n      onWidgetRemoved();\n    }\n  };\n  publicAPI.getSelectedDataForXY = async (x, y) => {\n    model.selections = null;\n    if (model.pickingEnabled) {\n      // do we require a new capture?\n      if (!model._capturedBuffers || model.captureOn === CaptureOn.MOUSE_MOVE) {\n        await captureBuffers(x, y, x, y);\n      } else {\n        // or do we need a pixel that is outside the last capture?\n        const capturedRegion = model._capturedBuffers.area;\n        if (x < capturedRegion[0] || x > capturedRegion[2] || y < capturedRegion[1] || y > capturedRegion[3]) {\n          await captureBuffers(x, y, x, y);\n        }\n      }\n      model.selections = model._capturedBuffers.generateSelection(x, y, x, y);\n    }\n    return publicAPI.getSelectedData();\n  };\n  publicAPI.getSelectedData = () => {\n    if (!model.selections || !model.selections.length) {\n      model.previousSelectedData = null;\n      return {};\n    }\n    const {\n      propID,\n      compositeID,\n      prop\n    } = model.selections[0].getProperties();\n    let {\n      widget,\n      representation\n    } = model.selections[0].getProperties();\n    // widget is undefined for handle representation.\n    if (model.previousSelectedData && model.previousSelectedData.prop === prop && model.previousSelectedData.widget === widget && model.previousSelectedData.compositeID === compositeID) {\n      model.previousSelectedData.requestCount++;\n      return model.previousSelectedData;\n    }\n    if (propsWeakMap.has(prop)) {\n      const props = propsWeakMap.get(prop);\n      widget = props.widget;\n      representation = props.representation;\n    }\n    if (widget && representation) {\n      const selectedState = representation.getSelectedState(prop, compositeID);\n      model.previousSelectedData = {\n        requestCount: 0,\n        propID,\n        compositeID,\n        prop,\n        widget,\n        representation,\n        selectedState\n      };\n      return model.previousSelectedData;\n    }\n    model.previousSelectedData = null;\n    return {};\n  };\n  publicAPI.grabFocus = widget => {\n    const viewWidget = getViewWidget(widget);\n    if (model.widgetInFocus && model.widgetInFocus !== viewWidget) {\n      model.widgetInFocus.loseFocus();\n    }\n    model.widgetInFocus = viewWidget;\n    if (model.widgetInFocus) {\n      model.widgetInFocus.grabFocus();\n    }\n  };\n  publicAPI.releaseFocus = () => publicAPI.grabFocus(null);\n  const superDelete = publicAPI.delete;\n  publicAPI.delete = () => {\n    while (subscriptions.length) {\n      subscriptions.pop().unsubscribe();\n    }\n    superDelete();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst defaultValues = function () {\n  let initialValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    // _camera: null,\n    // _selector: null,\n    // _currentUpdateSelectionCallID: null,\n    viewId: null,\n    widgets: [],\n    activeWidget: null,\n    renderer: null,\n    viewType: ViewTypes.DEFAULT,\n    isAnimating: false,\n    pickingEnabled: true,\n    selections: null,\n    previousSelectedData: null,\n    widgetInFocus: null,\n    captureOn: CaptureOn.MOUSE_MOVE,\n    ...initialValues,\n    cursorStyles: initialValues.cursorStyles ? {\n      ...initialValues.cursorStyles\n    } : {\n      default: 'default',\n      hover: 'pointer'\n    }\n  };\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, defaultValues(initialValues));\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['captureOn', 'cursorStyles', {\n    type: 'enum',\n    name: 'viewType',\n    enum: ViewTypes\n  }]);\n  macro.get(publicAPI, model, ['selections', 'widgets', 'viewId', 'pickingEnabled', 'activeWidget']);\n\n  // Object specific methods\n  vtkWidgetManager(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkWidgetManager');\n\n// ----------------------------------------------------------------------------\n\nvar vtkWidgetManager$1 = {\n  newInstance,\n  extend,\n  Constants: WidgetManagerConst,\n  getPixelWorldHeightAtCoord\n};\n\nexport { vtkWidgetManager$1 as default, extend, extractRenderingComponents, getPixelWorldHeightAtCoord, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkAbstractWidget from './AbstractWidget.js';\nimport { extractRenderingComponents } from './WidgetManager.js';\n\nfunction NoOp() {}\n\n// ----------------------------------------------------------------------------\n\nfunction vtkAbstractWidgetFactory(publicAPI, model) {\n  model.classHierarchy.push('vtkAbstractWidgetFactory');\n\n  // DO NOT share on the model ------------------------------------------------\n  const viewToWidget = {};\n  // DO NOT share on the model ------------------------------------------------\n\n  // Can be called with just ViewId after the widget has been registered\n  publicAPI.getWidgetForView = _ref => {\n    let {\n      viewId,\n      renderer,\n      viewType,\n      initialValues\n    } = _ref;\n    if (!viewToWidget[viewId]) {\n      if (!renderer) {\n        return null;\n      }\n      const {\n        interactor,\n        apiSpecificRenderWindow,\n        camera\n      } = extractRenderingComponents(renderer);\n      const widgetModel = {};\n      const widgetPublicAPI = {};\n      macro.obj(widgetPublicAPI, widgetModel);\n      Object.assign(widgetPublicAPI, {\n        onWidgetChange: publicAPI.onWidgetChange\n      });\n      Object.assign(widgetModel, {\n        widgetState: model.widgetState,\n        manipulator: model.manipulator,\n        viewType,\n        renderer,\n        camera,\n        apiSpecificRenderWindow,\n        factory: publicAPI\n      });\n      macro.moveToProtected(widgetPublicAPI, widgetModel, ['renderer', 'camera', 'apiSpecificRenderWindow', 'factory']);\n      macro.get(widgetPublicAPI, widgetModel, ['viewType']);\n      macro.safeArrays(widgetModel);\n      vtkAbstractWidget.extend(widgetPublicAPI, widgetModel, initialValues);\n\n      // Create representations for that view\n      /* eslint-disable no-shadow */\n      const widgetInitialValues = initialValues; // Avoid shadowing\n      widgetModel.representations = publicAPI.getRepresentationsForViewType(viewType).map(_ref2 => {\n        let {\n          builder,\n          labels,\n          initialValues\n        } = _ref2;\n        return builder.newInstance({\n          _parentProp: widgetPublicAPI,\n          labels,\n          ...initialValues,\n          ...widgetInitialValues\n        });\n      });\n      /* eslint-enable no-shadow */\n\n      widgetModel.representations.forEach(r => {\n        r.setInputData(widgetModel.widgetState);\n        r.getActors().forEach(actor => {\n          widgetModel.actorToRepresentationMap.set(actor, r);\n        });\n      });\n      model.behavior(widgetPublicAPI, widgetModel);\n      // Forward representation methods\n      ['coincidentTopologyParameters', ...(model.methodsToLink || [])].forEach(methodName => {\n        const set = `set${macro.capitalize(methodName)}`;\n        const get = `get${macro.capitalize(methodName)}`;\n        const methods = {\n          [methodName]: [],\n          [set]: [],\n          [get]: []\n        };\n        widgetModel.representations.forEach(representation => {\n          if (representation[methodName]) {\n            methods[methodName].push(representation[methodName]);\n          }\n          if (representation[set]) {\n            methods[set].push(representation[set]);\n          }\n          if (representation[get]) {\n            methods[get].push(representation[get]);\n          }\n        });\n        Object.keys(methods).forEach(name => {\n          const calls = methods[name];\n          if (calls.length === 1) {\n            widgetPublicAPI[name] = calls[0];\n          } else if (calls.length > 1) {\n            widgetPublicAPI[name] = macro.chain(...calls);\n          }\n        });\n      });\n\n      // Custom delete to detach from parent\n      widgetPublicAPI.delete = macro.chain(() => {\n        delete viewToWidget[viewId];\n      }, widgetPublicAPI.delete);\n      widgetPublicAPI.setInteractor(interactor);\n      const viewWidget = Object.freeze(widgetPublicAPI);\n      viewToWidget[viewId] = viewWidget;\n      return viewWidget;\n    }\n    return viewToWidget[viewId];\n  };\n\n  // List of all the views the widget has been registered to.\n  publicAPI.getViewIds = () => Object.keys(viewToWidget);\n  publicAPI.getViewWidgets = () => Object.values(viewToWidget);\n\n  // --------------------------------------------------------------------------\n  // Widget visibility / enable\n  // --------------------------------------------------------------------------\n  // Call methods on all its view widgets\n\n  publicAPI.setVisibility = value => {\n    const viewIds = Object.keys(viewToWidget);\n    for (let i = 0; i < viewIds.length; i++) {\n      viewToWidget[viewIds[i]].setVisibility(value);\n    }\n  };\n  publicAPI.setPickable = value => {\n    const viewIds = Object.keys(viewToWidget);\n    for (let i = 0; i < viewIds.length; i++) {\n      viewToWidget[viewIds[i]].setPickable(value);\n    }\n  };\n  publicAPI.setDragable = value => {\n    const viewIds = Object.keys(viewToWidget);\n    for (let i = 0; i < viewIds.length; i++) {\n      viewToWidget[viewIds[i]].setDragable(value);\n    }\n  };\n  publicAPI.setContextVisibility = value => {\n    const viewIds = Object.keys(viewToWidget);\n    for (let i = 0; i < viewIds.length; i++) {\n      viewToWidget[viewIds[i]].setContextVisibility(value);\n    }\n  };\n  publicAPI.setHandleVisibility = value => {\n    const viewIds = Object.keys(viewToWidget);\n    for (let i = 0; i < viewIds.length; i++) {\n      viewToWidget[viewIds[i]].setHandleVisibility(value);\n    }\n  };\n\n  // --------------------------------------------------------------------------\n  // Place Widget API\n  // --------------------------------------------------------------------------\n\n  publicAPI.placeWidget = bounds => model.widgetState.placeWidget(bounds);\n  publicAPI.getPlaceFactor = () => model.widgetState.getPlaceFactor();\n  publicAPI.setPlaceFactor = factor => model.widgetState.setPlaceFactor(factor);\n\n  // --------------------------------------------------------------------------\n  // Event Widget API\n  // --------------------------------------------------------------------------\n  let unsubscribe = NoOp;\n  publicAPI.delete = macro.chain(publicAPI.delete, () => unsubscribe());\n  if (model.widgetState) {\n    unsubscribe = model.widgetState.onModified(() => publicAPI.invokeWidgetChange(model.widgetState)).unsubscribe;\n  }\n}\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, initialValues);\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['widgetState']);\n  macro.event(publicAPI, model, 'WidgetChange');\n  vtkAbstractWidgetFactory(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkAbstractWidget');\n\n// ----------------------------------------------------------------------------\n\nvar vtkAbstractWidgetFactory$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkAbstractWidgetFactory$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\n\nconst DEFAULT_LABEL = 'default';\nfunction removeObjectInArray(array, obj) {\n  const idx = array.indexOf(obj);\n  if (idx !== -1) {\n    array.splice(idx, 1);\n  }\n}\n\n// ----------------------------------------------------------------------------\n\nfunction vtkWidgetState(publicAPI, model) {\n  model.classHierarchy.push('vtkWidgetState');\n  const subscriptions = [];\n  model.labels = {};\n  model.nestedStates = [];\n\n  // --------------------------------------------------------------------------\n  // labels can be a string or an array of strings.\n  // If nothing (or empty array) provided the default label will be used.\n  // --------------------------------------------------------------------------\n\n  publicAPI.bindState = function (nested) {\n    let labels = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [DEFAULT_LABEL];\n    model.nestedStates.push(nested);\n    subscriptions.push(nested.onModified(publicAPI.modified));\n    if (Array.isArray(labels) && labels.length) {\n      for (let i = 0; i < labels.length; i++) {\n        const label = labels[i];\n        if (!model.labels[label]) {\n          model.labels[label] = [];\n        }\n        model.labels[label].push(nested);\n      }\n    } else {\n      // Need to bind to a label\n      const labelToUse = Array.isArray(labels) ? DEFAULT_LABEL : labels || DEFAULT_LABEL;\n      if (!model.labels[labelToUse]) {\n        model.labels[labelToUse] = [];\n      }\n      model.labels[labelToUse].push(nested);\n    }\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.unbindState = nested => {\n    while (subscriptions.length) {\n      subscriptions.pop().unsubscribe();\n    }\n    removeObjectInArray(model.nestedStates, nested);\n    for (let i = 0; i < model.nestedStates.length; i++) {\n      subscriptions.push(model.nestedStates[i].onModified(publicAPI.modified));\n    }\n    Object.keys(model.labels).forEach(label => {\n      const list = model.labels[label];\n      removeObjectInArray(list, nested);\n    });\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.unbindAll = () => {\n    while (subscriptions.length) {\n      subscriptions.pop().unsubscribe();\n    }\n    model.nestedStates = [];\n  };\n\n  // --------------------------------------------------------------------------\n  // Active flag API\n  // --------------------------------------------------------------------------\n\n  publicAPI.activate = () => publicAPI.setActive(true);\n  publicAPI.deactivate = excludingState => {\n    if (excludingState !== publicAPI) {\n      publicAPI.setActive(false);\n    }\n    for (let i = 0; i < model.nestedStates.length; i++) {\n      model.nestedStates[i].deactivate(excludingState);\n    }\n  };\n  publicAPI.activateOnly = subState => {\n    if (subState) {\n      subState.setActive(true);\n    }\n    // deactivate current state, but exclude the sub-state\n    publicAPI.deactivate(subState);\n  };\n\n  // --------------------------------------------------------------------------\n  // Nested state methods\n  // --------------------------------------------------------------------------\n\n  publicAPI.getStatesWithLabel = name => model.labels[name];\n  publicAPI.getAllNestedStates = () => model.nestedStates;\n\n  // --------------------------------------------------------------------------\n  // Clean on delete\n  // --------------------------------------------------------------------------\n\n  publicAPI.delete = macro.chain(publicAPI.unbindAll, publicAPI.delete);\n}\n\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  active: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['active']);\n  vtkWidgetState(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nvar vtkWidgetState$1 = {\n  extend\n};\n\nexport { vtkWidgetState$1 as default, extend };\n","import { m as macro } from '../../../macros2.js';\nimport vtkBoundingBox from '../../../Common/DataModel/BoundingBox.js';\n\nfunction vtkBoundsMixin(publicAPI, model) {\n  const sourceBounds = [];\n  const bbox = [...vtkBoundingBox.INIT_BOUNDS];\n  publicAPI.containsPoint = (x, y, z) => {\n    if (Array.isArray(x)) {\n      return vtkBoundingBox.containsPoint(bbox, x[0], x[1], x[2]);\n    }\n    return vtkBoundingBox.containsPoint(bbox, x, y, z);\n  };\n  publicAPI.placeWidget = bounds => {\n    model.bounds = [];\n    const center = [(bounds[0] + bounds[1]) / 2.0, (bounds[2] + bounds[3]) / 2.0, (bounds[4] + bounds[5]) / 2.0];\n    for (let i = 0; i < 6; i++) {\n      const axisCenter = center[Math.floor(i / 2)];\n      sourceBounds[i] = bounds[i];\n      model.bounds[i] = (bounds[i] - axisCenter) * model.placeFactor + axisCenter;\n    }\n    vtkBoundingBox.setBounds(bbox, model.bounds);\n    publicAPI.invokeBoundsChange(model.bounds);\n    publicAPI.modified();\n  };\n  publicAPI.setPlaceFactor = factor => {\n    if (model.placeFactor !== factor) {\n      model.placeFactor = factor;\n      model.bounds = [];\n      const center = [(sourceBounds[0] + sourceBounds[1]) / 2.0, (sourceBounds[2] + sourceBounds[3]) / 2.0, (sourceBounds[4] + sourceBounds[5]) / 2.0];\n      for (let i = 0; i < 6; i++) {\n        const axisCenter = center[Math.floor(i / 2)];\n        model.bounds[i] = (sourceBounds[i] - axisCenter) * model.placeFactor + axisCenter;\n      }\n      vtkBoundingBox.setBounds(bbox, model.bounds);\n      publicAPI.invokeBoundsChange(model.bounds);\n      publicAPI.modified();\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  bounds: [-1, 1, -1, 1, -1, 1],\n  placeFactor: 1\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.setGetArray(publicAPI, model, ['bounds'], 6);\n  macro.get(publicAPI, model, ['placeFactor']);\n  macro.event(publicAPI, model, 'BoundsChange');\n  model.bounds = model.bounds.slice();\n  vtkBoundsMixin(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nvar bounds = {\n  extend\n};\n\nexport { bounds as default, extend };\n","import { m as macro } from '../../../macros2.js';\n\n/**\n * Scalar color mixin.\n * Scalar value [0, 1] references a color in the mapper LUT.\n * Not to be used in conjunction with `color3` mixin.\n * @see color3\n */\n\nconst DEFAULT_VALUES = {\n  color: 0.5\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.setGet(publicAPI, model, ['color']);\n}\n\n// ----------------------------------------------------------------------------\n\nvar color = {\n  extend\n};\n\nexport { color as default, extend };\n","import { m as macro } from '../../../macros2.js';\n\n/**\n * RGB Uint8 color mixin. Not to be used in conjunction with `color` mixin.\n * @see color\n */\nconst DEFAULT_VALUES = {\n  color3: [255, 255, 255],\n  opacity: 255\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.setGetArray(publicAPI, model, ['color3'], 3, 255);\n  macro.setGet(publicAPI, model, ['opacity']);\n}\n\n// ----------------------------------------------------------------------------\n\nvar color3 = {\n  extend\n};\n\nexport { color3 as default, extend };\n","import { m as macro } from '../../../macros2.js';\n\n// ----------------------------------------------------------------------------\n\nfunction vtkCornerMixin(publicAPI, model) {\n  publicAPI.translate = (dx, dy, dz) => {\n    const [x, y, z] = publicAPI.getCornerByReference();\n    publicAPI.setCorner(x + dx, y + dy, z + dz);\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  corner: [0, 0, 0]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.setGetArray(publicAPI, model, ['corner'], 3);\n  vtkCornerMixin(publicAPI);\n}\n\n// ----------------------------------------------------------------------------\n\nvar corner = {\n  extend\n};\n\nexport { corner as default, extend };\n","import { m as macro } from '../../../macros2.js';\nimport vtkMatrixBuilder from '../../../Common/Core/MatrixBuilder.js';\n\n// ----------------------------------------------------------------------------\n\nfunction vtkDirectionMixin(publicAPI, model) {\n  const transform = model.angleUnit === 'degree' ? vtkMatrixBuilder.buildFromDegree() : vtkMatrixBuilder.buildFromRadian();\n  publicAPI.rotateFromDirections = (originDirection, targetDirection) => {\n    transform.identity().rotateFromDirections(originDirection, targetDirection).apply(model.direction);\n    publicAPI.modified();\n  };\n  publicAPI.rotate = (angle, axis) => {\n    transform.identity().rotate(angle, axis).apply(model.direction);\n  };\n  publicAPI.rotateX = angle => {\n    transform.identity().rotateX(angle).apply(model.direction);\n  };\n  publicAPI.rotateY = angle => {\n    transform.identity().rotateY(angle).apply(model.direction);\n  };\n  publicAPI.rotateZ = angle => {\n    transform.identity().rotateZ(angle).apply(model.direction);\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  direction: [1, 0, 0]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.setGetArray(publicAPI, model, ['direction'], 3);\n  vtkDirectionMixin(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nvar direction = {\n  extend\n};\n\nexport { direction as default, extend };\n","import { m as macro } from '../../../macros2.js';\n\n// ----------------------------------------------------------------------------\n\nfunction vtkManipulatorMixin(publicAPI, model) {\n  publicAPI.updateManipulator = () => {\n    if (model.manipulator) {\n      const {\n        origin,\n        normal,\n        direction\n      } = model;\n      const {\n        setHandleOrigin,\n        setHandleCenter,\n        setHandleNormal,\n        setHandleDirection\n      } = model.manipulator;\n      if (origin && setHandleOrigin) {\n        setHandleOrigin(origin);\n      } else if (origin && setHandleCenter) {\n        setHandleCenter(origin);\n      }\n      if (direction && setHandleDirection) {\n        setHandleDirection(direction);\n      } else if (direction && !normal && setHandleNormal) {\n        setHandleNormal(direction);\n      } else if (normal && setHandleDirection) {\n        setHandleDirection(normal);\n      }\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  manipulator: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.setGet(publicAPI, model, ['manipulator']);\n  vtkManipulatorMixin(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nvar manipulator = {\n  extend\n};\n\nexport { manipulator as default, extend };\n","import { m as macro } from '../../../macros2.js';\n\nconst DEFAULT_VALUES = {\n  name: ''\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.setGet(publicAPI, model, ['name']);\n}\n\n// ----------------------------------------------------------------------------\n\nvar name = {\n  extend\n};\n\nexport { name as default, extend };\n","import { m as macro } from '../../../macros2.js';\nimport { l as normalize, j as cross } from '../../../Common/Core/Math/index.js';\n\nfunction eq(v1, v2) {\n  return v1.length === 3 && v2.length === 3 && v1[0] === v2[0] && v1[1] === v2[1] && v1[2] === v2[2];\n}\nfunction isSame(o, p1, p2, before) {\n  return eq(o, before.o) && eq(p1, before.p1) && eq(p2, before.p2);\n}\n\n// function axis(o, p1, p2) {\n//   if (o[0] === p1[0] && p1[0] === p2[0]) {\n//     return 'X';\n//   }\n//   if (o[1] === p1[1] && p1[1] === p2[1]) {\n//     return 'Y';\n//   }\n//   if (o[2] === p1[2] && p1[2] === p2[2]) {\n//     return 'Z';\n//   }\n//   return '?';\n// }\n\n// ----------------------------------------------------------------------------\n\nfunction vtkOrientationMixin(publicAPI, model) {\n  const previousPoints = {\n    o: [],\n    p1: [],\n    p2: []\n  };\n  publicAPI.normalize = () => {\n    normalize(model.up);\n    normalize(model.right);\n    normalize(model.direction);\n    publicAPI.modified();\n  };\n  publicAPI.updateFromOriginRightUp = (o, p1, p2) => {\n    if (isSame(o, p1, p2, previousPoints)) {\n      return;\n    }\n    previousPoints.o = o.slice();\n    previousPoints.p1 = p1.slice();\n    previousPoints.p2 = p2.slice();\n    model.up = [p2[0] - o[0], p2[1] - o[1], p2[2] - o[2]];\n    model.right = [p1[0] - o[0], p1[1] - o[1], p1[2] - o[2]];\n    cross(model.up, model.right, model.direction);\n    cross(model.direction, model.up, model.right);\n    publicAPI.normalize();\n    publicAPI.modified();\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  up: [0, 1, 0],\n  right: [1, 0, 0],\n  direction: [0, 0, 1]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.setGetArray(publicAPI, model, ['up', 'right', 'direction'], 3);\n  vtkOrientationMixin(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nvar orientation = {\n  extend\n};\n\nexport { orientation as default, extend };\n","import { m as macro } from '../../../macros2.js';\nimport { f as vtkMath } from '../../../Common/Core/Math/index.js';\nimport { getPixelWorldHeightAtCoord } from '../WidgetManager.js';\n\n// ----------------------------------------------------------------------------\n\nfunction vtkOriginMixin(publicAPI, model) {\n  const superClass = {\n    ...publicAPI\n  };\n  publicAPI.translate = (dx, dy, dz) => {\n    const [x, y, z] = publicAPI.getOriginByReference();\n    publicAPI.setOrigin(x + dx, y + dy, z + dz);\n  };\n  publicAPI.getOrigin = displayScaleParams => {\n    const origin = superClass.getOrigin();\n    if (!model.offset) {\n      return origin;\n    }\n    if (!displayScaleParams) {\n      return vtkMath.add(origin, model.offset, origin);\n    }\n    const pixelWorldHeight = getPixelWorldHeightAtCoord(origin, displayScaleParams);\n    const {\n      rendererPixelDims\n    } = displayScaleParams;\n    const totalSize = Math.min(rendererPixelDims[0], rendererPixelDims[1]);\n    return vtkMath.multiplyAccumulate(origin, model.offset, totalSize * pixelWorldHeight, origin);\n  };\n}\n\n// ----------------------------------------------------------------------------\n/**\n * offset: optional offset that can be scaled to pixel screen space.\n */\nconst DEFAULT_VALUES = {\n  origin: null,\n  offset: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.setGetArray(publicAPI, model, ['origin', 'offset'], 3);\n  vtkOriginMixin(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nvar origin = {\n  extend\n};\n\nexport { origin as default, extend };\n","import { m as macro } from '../../../macros2.js';\n\nconst DEFAULT_VALUES = {\n  scale1: 0.5\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.setGet(publicAPI, model, ['scale1']);\n}\n\n// ----------------------------------------------------------------------------\n\nvar scale1 = {\n  extend\n};\n\nexport { scale1 as default, extend };\n","import { m as macro } from '../../../macros2.js';\n\nconst DEFAULT_VALUES = {\n  scale3: [1, 1, 1]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.setGetArray(publicAPI, model, ['scale3'], 3);\n}\n\n// ----------------------------------------------------------------------------\n\nvar scale3 = {\n  extend\n};\n\nexport { scale3 as default, extend };\n","import { m as macro } from '../../../macros2.js';\n\nconst DEFAULT_VALUES = {\n  text: 'DefaultText'\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.setGet(publicAPI, model, ['text']);\n}\n\n// ----------------------------------------------------------------------------\n\nvar text = {\n  extend\n};\n\nexport { text as default, extend };\n","import { m as macro } from '../../../macros2.js';\n\nconst DEFAULT_VALUES = {\n  visible: true\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.setGet(publicAPI, model, ['visible']);\n  publicAPI.isVisible = publicAPI.getVisible;\n}\n\n// ----------------------------------------------------------------------------\n\nvar visible = {\n  extend\n};\n\nexport { visible as default, extend };\n","import { m as macro } from '../../../macros2.js';\n\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  shape: ''\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.setGet(publicAPI, model, ['shape']);\n}\n\n// ----------------------------------------------------------------------------\n\nvar shape = {\n  extend\n};\n\nexport { shape as default, extend };\n","import { m as macro } from '../../macros2.js';\nimport vtkWidgetState from './WidgetState.js';\nimport bounds from './StateBuilder/boundsMixin.js';\nimport color from './StateBuilder/colorMixin.js';\nimport color3 from './StateBuilder/color3Mixin.js';\nimport corner from './StateBuilder/cornerMixin.js';\nimport direction from './StateBuilder/directionMixin.js';\nimport manipulator from './StateBuilder/manipulatorMixin.js';\nimport name from './StateBuilder/nameMixin.js';\nimport orientation from './StateBuilder/orientationMixin.js';\nimport origin from './StateBuilder/originMixin.js';\nimport scale1 from './StateBuilder/scale1Mixin.js';\nimport scale3 from './StateBuilder/scale3Mixin.js';\nimport text from './StateBuilder/textMixin.js';\nimport visible from './StateBuilder/visibleMixin.js';\nimport shape from './StateBuilder/shapeMixin.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Global type lookup map\n// ----------------------------------------------------------------------------\n\nconst MIXINS = {\n  bounds,\n  color,\n  color3,\n  corner,\n  direction,\n  manipulator,\n  name,\n  orientation,\n  origin,\n  scale1,\n  scale3,\n  text,\n  visible,\n  shape\n};\n\n// ----------------------------------------------------------------------------\n\nfunction newInstance(mixins, initialValues) {\n  let publicAPI = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let model = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  let skipWidgetState = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  if (!skipWidgetState) {\n    vtkWidgetState.extend(publicAPI, model, initialValues);\n  }\n  for (let i = 0; i < mixins.length; i++) {\n    const mixin = MIXINS[mixins[i]];\n    if (mixin) {\n      mixin.extend(publicAPI, model, initialValues);\n    } else {\n      vtkErrorMacro('Invalid mixin name:', mixins[i]);\n    }\n  }\n  macro.safeArrays(model);\n  return Object.freeze(publicAPI);\n}\n\n// ----------------------------------------------------------------------------\n\nclass Builder {\n  constructor() {\n    this.publicAPI = {};\n    this.model = {};\n    vtkWidgetState.extend(this.publicAPI, this.model);\n    // The root state should always have the bounds/placeWidget/widgetFactor\n    bounds.extend(this.publicAPI, this.model);\n  }\n\n  /* eslint-disable no-shadow */\n  addDynamicMixinState(_ref) {\n    let {\n      labels,\n      mixins,\n      name,\n      initialValues\n    } = _ref;\n    const listName = `${name}List`;\n    this.model[listName] = [];\n    // Create new Instance method\n    this.publicAPI[`add${macro.capitalize(name)}`] = values => {\n      const instance = newInstance(mixins, {\n        ...initialValues,\n        ...values\n      });\n      this.publicAPI.bindState(instance, labels);\n      this.model[listName].push(instance);\n      this.publicAPI.modified();\n      return instance;\n    };\n    this.publicAPI[`remove${macro.capitalize(name)}`] = instanceOrIndex => {\n      let removeIndex = this.model[listName].indexOf(instanceOrIndex);\n      if (removeIndex === -1 && instanceOrIndex < this.model[listName].length) {\n        removeIndex = instanceOrIndex;\n      }\n      const instance = this.model[listName][removeIndex];\n      if (instance) {\n        this.publicAPI.unbindState(instance);\n      }\n      this.model[listName].splice(removeIndex, 1);\n      this.publicAPI.modified();\n    };\n    this.publicAPI[`get${macro.capitalize(name)}List`] = () => this.model[listName].slice();\n    this.publicAPI[`clear${macro.capitalize(name)}List`] = () => {\n      while (this.model[listName].length) {\n        const instance = this.model[listName].pop();\n        if (instance) {\n          this.publicAPI.unbindState(instance);\n        }\n      }\n      this.publicAPI.modified();\n    };\n    return this;\n  }\n  addStateFromMixin(_ref2) {\n    let {\n      labels,\n      mixins,\n      name,\n      initialValues\n    } = _ref2;\n    const instance = newInstance(mixins, initialValues);\n    this.model[name] = instance;\n    this.publicAPI.bindState(instance, labels);\n    macro.setGet(this.publicAPI, this.model, [name]);\n    return this;\n  }\n  addStateFromInstance(_ref3) {\n    let {\n      labels,\n      name,\n      instance\n    } = _ref3;\n    this.model[name] = instance;\n    this.publicAPI.bindState(instance, labels);\n    macro.setGet(this.publicAPI, this.model, [name]);\n    return this;\n  }\n  addField(_ref4) {\n    let {\n      name,\n      initialValue\n    } = _ref4;\n    if (Array.isArray(initialValue)) {\n      macro.setGetArray(this.publicAPI, this.model, [name], initialValue.length);\n    } else {\n      macro.setGet(this.publicAPI, this.model, [name]);\n    }\n    this.model[name] = initialValue;\n    return this;\n  }\n  build() {\n    for (var _len = arguments.length, mixins = new Array(_len), _key = 0; _key < _len; _key++) {\n      mixins[_key] = arguments[_key];\n    }\n    return newInstance(mixins, {}, this.publicAPI, this.model, true);\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Public API\n// ----------------------------------------------------------------------------\n\nfunction createBuilder() {\n  return new Builder();\n}\nvar vtkStateBuilder = {\n  createBuilder\n};\n\nexport { createBuilder, vtkStateBuilder as default };\n","const Coordinate = {\n  DISPLAY: 0,\n  NORMALIZED_DISPLAY: 1,\n  VIEWPORT: 2,\n  NORMALIZED_VIEWPORT: 3,\n  PROJECTION: 4,\n  VIEW: 5,\n  WORLD: 6\n};\nvar Constants = {\n  Coordinate\n};\n\nexport { Coordinate, Constants as default };\n","import { m as macro } from '../../macros2.js';\nimport Constants from './Coordinate/Constants.js';\nimport { P as round, K as floor } from '../../Common/Core/Math/index.js';\n\nconst {\n  Coordinate\n} = Constants;\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCoordinate(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCoordinate');\n  publicAPI.setValue = function () {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return false;\n    }\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    let array = args;\n    // allow an array passed as a single arg.\n    if (array.length === 1 && Array.isArray(array[0])) {\n      array = array[0];\n    }\n    if (array.length === 2) {\n      publicAPI.setValue(array[0], array[1], 0.0);\n      return true;\n    }\n    if (array.length !== 3) {\n      throw new RangeError('Invalid number of values for array setter');\n    }\n    let changeDetected = false;\n    model.value.forEach((item, index) => {\n      if (item !== array[index]) {\n        if (changeDetected) {\n          return;\n        }\n        changeDetected = true;\n      }\n    });\n    if (changeDetected) {\n      model.value = [].concat(array);\n      publicAPI.modified();\n    }\n    return true;\n  };\n  publicAPI.setCoordinateSystemToDisplay = () => {\n    publicAPI.setCoordinateSystem(Coordinate.DISPLAY);\n  };\n  publicAPI.setCoordinateSystemToNormalizedDisplay = () => {\n    publicAPI.setCoordinateSystem(Coordinate.NORMALIZED_DISPLAY);\n  };\n  publicAPI.setCoordinateSystemToViewport = () => {\n    publicAPI.setCoordinateSystem(Coordinate.VIEWPORT);\n  };\n  publicAPI.setCoordinateSystemToNormalizedViewport = () => {\n    publicAPI.setCoordinateSystem(Coordinate.NORMALIZED_VIEWPORT);\n  };\n  publicAPI.setCoordinateSystemToProjection = () => {\n    publicAPI.setCoordinateSystem(Coordinate.PROJECTION);\n  };\n  publicAPI.setCoordinateSystemToView = () => {\n    publicAPI.setCoordinateSystem(Coordinate.VIEW);\n  };\n  publicAPI.setCoordinateSystemToWorld = () => {\n    publicAPI.setCoordinateSystem(Coordinate.WORLD);\n  };\n  publicAPI.getCoordinateSystemAsString = () => macro.enumToString(Coordinate, model.coordinateSystem);\n  publicAPI.getComputedWorldValue = ren => {\n    let val = model.computedWorldValue;\n    if (model.computing) {\n      return val;\n    }\n    model.computing = 1;\n    val[0] = model.value[0];\n    val[1] = model.value[1];\n    val[2] = model.value[2];\n\n    // Use our renderer if is defined\n    let renderer = ren;\n    if (model.renderer) {\n      renderer = model.renderer;\n    }\n    if (!renderer) {\n      if (model.coordinateSystem === Coordinate.WORLD) {\n        if (model.referenceCoordinate) {\n          const refValue = model.referenceCoordinate.getComputedWorldValue(renderer);\n          val[0] += refValue[0];\n          val[1] += refValue[1];\n          val[2] += refValue[2];\n        }\n        model.computing = 0;\n      } else {\n        vtkErrorMacro('Attempt to compute world coordinates from another coordinate system without a renderer');\n      }\n      return val;\n    }\n\n    // convert to current coordinate system\n    let view = null;\n    if (renderer && renderer.getRenderWindow().getViews()) {\n      view = renderer.getRenderWindow().getViews()[0];\n    } else {\n      return model.computedWorldValue;\n    }\n    const dims = view.getViewportSize(renderer);\n    const aspect = dims[0] / dims[1];\n    if (model.referenceCoordinate && model.coordinateSystem !== Coordinate.WORLD) {\n      const fval = model.referenceCoordinate.getComputedDoubleDisplayValue(renderer);\n      let refValue = [fval[0], fval[1], 0.0];\n      switch (model.coordinateSystem) {\n        case Coordinate.NORMALIZED_DISPLAY:\n          refValue = view.displayToNormalizedDisplay(refValue[0], refValue[1], refValue[2]);\n          break;\n        case Coordinate.VIEWPORT:\n          refValue = view.displayToNormalizedDisplay(refValue[0], refValue[1], refValue[2]);\n          refValue = view.normalizedDisplayToViewport(refValue[0], refValue[1], refValue[2], renderer);\n          break;\n        case Coordinate.NORMALIZED_VIEWPORT:\n          refValue = view.displayToNormalizedDisplay(refValue[0], refValue[1], refValue[2]);\n          refValue = view.normalizedDisplayToViewport(refValue[0], refValue[1], refValue[2], renderer);\n          refValue = view.viewportToNormalizedViewport(refValue[0], refValue[1], refValue[2], renderer);\n          break;\n        case Coordinate.PROJECTION:\n          refValue = view.displayToNormalizedDisplay(refValue[0], refValue[1], refValue[2]);\n          refValue = view.normalizedDisplayToViewport(refValue[0], refValue[1], refValue[2], renderer);\n          refValue = view.viewportToNormalizedViewport(refValue[0], refValue[1], refValue[2], renderer);\n          refValue = renderer.normalizedViewportToProjection(refValue[0], refValue[1], refValue[2]);\n          break;\n        case Coordinate.VIEW:\n          refValue = view.displayToNormalizedDisplay(refValue[0], refValue[1], refValue[2]);\n          refValue = view.normalizedDisplayToViewport(refValue[0], refValue[1], refValue[2], renderer);\n          refValue = view.viewportToNormalizedViewport(refValue[0], refValue[1], refValue[2], renderer);\n          refValue = renderer.normalizedViewportToProjection(refValue[0], refValue[1], refValue[2]);\n          refValue = renderer.projectionToView(refValue[0], refValue[1], refValue[2], aspect);\n          break;\n      }\n      val[0] += refValue[0];\n      val[1] += refValue[1];\n      val[2] += refValue[2];\n    }\n    switch (model.coordinateSystem) {\n      case Coordinate.DISPLAY:\n        val = view.displayToNormalizedDisplay(val[0], val[1], val[2]);\n        val = view.normalizedDisplayToViewport(val[0], val[1], val[2], renderer);\n        val = view.viewportToNormalizedViewport(val[0], val[1], val[2], renderer);\n        val = renderer.normalizedViewportToProjection(val[0], val[1], val[2]);\n        val = renderer.projectionToView(val[0], val[1], val[2], aspect);\n        val = renderer.viewToWorld(val[0], val[1], val[2]);\n        break;\n      case Coordinate.NORMALIZED_DISPLAY:\n        val = view.normalizedDisplayToViewport(val[0], val[1], val[2], renderer);\n        val = view.viewportToNormalizedViewport(val[0], val[1], val[2], renderer);\n        val = renderer.normalizedViewportToProjection(val[0], val[1], val[2]);\n        val = renderer.projectionToView(val[0], val[1], val[2], aspect);\n        val = renderer.viewToWorld(val[0], val[1], val[2]);\n        break;\n      case Coordinate.VIEWPORT:\n        val = view.viewportToNormalizedViewport(val[0], val[1], val[2], renderer);\n        val = renderer.normalizedViewportToProjection(val[0], val[1], val[2]);\n        val = renderer.projectionToView(val[0], val[1], val[2], aspect);\n        val = renderer.viewToWorld(val[0], val[1], val[2]);\n        break;\n      case Coordinate.NORMALIZED_VIEWPORT:\n        val = renderer.normalizedViewportToProjection(val[0], val[1], val[2]);\n        val = renderer.projectionToView(val[0], val[1], val[2], aspect);\n        val = renderer.viewToWorld(val[0], val[1], val[2]);\n        break;\n      case Coordinate.PROJECTION:\n        val = renderer.projectionToView(val[0], val[1], val[2], aspect);\n        val = renderer.viewToWorld(val[0], val[1], val[2]);\n        break;\n      case Coordinate.VIEW:\n        val = renderer.viewToWorld(val[0], val[1], val[2]);\n        break;\n    }\n    if (model.referenceCoordinate && model.coordinateSystem === Coordinate.WORLD) {\n      const refValue = publicAPI.getComputedWorldValue(renderer);\n      val[0] += refValue[0];\n      val[1] += refValue[1];\n      val[2] += refValue[2];\n    }\n    model.computing = 0;\n    model.computedWorldValue = val.slice(0);\n    return val;\n  };\n  publicAPI.getComputedViewportValue = ren => {\n    const f = publicAPI.getComputedDoubleViewportValue(ren);\n    return [round(f[0]), round(f[1])];\n  };\n  publicAPI.getComputedDisplayValue = ren => {\n    const val = publicAPI.getComputedDoubleDisplayValue(ren);\n    return [floor(val[0]), floor(val[1])];\n  };\n  publicAPI.getComputedLocalDisplayValue = ren => {\n    // Use our renderer if it is defined\n    let renderer = ren;\n    if (model.renderer) {\n      renderer = model.renderer;\n    }\n    let val = publicAPI.getComputedDisplayValue(renderer);\n    if (!renderer) {\n      vtkErrorMacro('Attempt to convert to local display coordinates without a renderer');\n      return val;\n    }\n    let view = null;\n    if (renderer && renderer.getRenderWindow().getViews()) {\n      view = renderer.getRenderWindow().getViews()[0];\n    } else {\n      return val;\n    }\n    val = view.displayToLocalDisplay(val[0], val[1], val[2]);\n    return [round(val[0]), round(val[1])];\n  };\n  publicAPI.getComputedDoubleViewportValue = ren => {\n    let renderer = ren;\n    if (model.renderer) {\n      renderer = model.renderer;\n    }\n    let val = publicAPI.getComputedDoubleDisplayValue(renderer);\n    if (!renderer) {\n      return val;\n    }\n    let view = null;\n    if (renderer && renderer.getRenderWindow().getViews()) {\n      view = renderer.getRenderWindow().getViews()[0];\n    } else {\n      return val;\n    }\n    val = view.displayToNormalizedDisplay(val[0], val[1], val[2]);\n    val = view.normalizedDisplayToViewport(val[0], val[1], val[2], renderer);\n    return [val[0], val[1]];\n  };\n  publicAPI.getComputedDoubleDisplayValue = ren => {\n    if (model.computing) {\n      return model.computedDoubleDisplayValue;\n    }\n    model.computing = 1;\n    let val = model.value.slice(0);\n    let renderer = ren;\n    if (model.renderer) {\n      renderer = model.renderer;\n    }\n    if (!renderer) {\n      if (model.coordinateSystem === Coordinate.DISPLAY) {\n        model.computedDoubleDisplayValue[0] = val[0];\n        model.computedDoubleDisplayValue[1] = val[1];\n        if (model.referenceCoordinate) {\n          const refValue = model.referenceCoordinate.getComputedDoubleDisplayValue();\n          model.computedDoubleDisplayValue[0] += refValue[0];\n          model.computedDoubleDisplayValue[1] += refValue[1];\n        }\n      } else {\n        model.computedDoubleDisplayValue[0] = Number.MAX_VALUE;\n        model.computedDoubleDisplayValue[1] = Number.MAX_VALUE;\n        vtkErrorMacro('Request for coordinate transformation without required viewport');\n      }\n      return model.computedDoubleDisplayValue;\n    }\n    let view = null;\n    if (renderer && renderer.getRenderWindow().getViews()) {\n      view = renderer.getRenderWindow().getViews()[0];\n    } else {\n      return val;\n    }\n    const dims = view.getViewportSize(renderer);\n    const aspect = dims[0] / dims[1];\n    switch (model.coordinateSystem) {\n      case Coordinate.WORLD:\n        {\n          if (model.referenceCoordinate) {\n            const refValue = model.referenceCoordinate.getComputedWorldValue(renderer);\n            val[0] += refValue[0];\n            val[1] += refValue[1];\n            val[2] += refValue[2];\n          }\n          val = renderer.worldToView(val[0], val[1], val[2]);\n          val = renderer.viewToProjection(val[0], val[1], val[2], aspect);\n          val = renderer.projectionToNormalizedViewport(val[0], val[1], val[2]);\n          val = view.normalizedViewportToViewport(val[0], val[1], val[2], renderer);\n          val = view.viewportToNormalizedDisplay(val[0], val[1], val[2], renderer);\n          val = view.normalizedDisplayToDisplay(val[0], val[1], val[2]);\n          break;\n        }\n      case Coordinate.VIEW:\n        {\n          val = renderer.viewToProjection(val[0], val[1], val[2], aspect);\n          val = renderer.projectionToNormalizedViewport(val[0], val[1], val[2]);\n          val = view.normalizedViewportToViewport(val[0], val[1], val[2], renderer);\n          val = view.viewportToNormalizedDisplay(val[0], val[1], val[2], renderer);\n          val = view.normalizedDisplayToDisplay(val[0], val[1], val[2]);\n          break;\n        }\n      case Coordinate.PROJECTION:\n        {\n          val = renderer.projectionToNormalizedViewport(val[0], val[1], val[2]);\n          val = view.normalizedViewportToViewport(val[0], val[1], val[2], renderer);\n          val = view.viewportToNormalizedDisplay(val[0], val[1], val[2], renderer);\n          val = view.normalizedDisplayToDisplay(val[0], val[1], val[2]);\n          break;\n        }\n      case Coordinate.NORMALIZED_VIEWPORT:\n        {\n          val = view.normalizedViewportToViewport(val[0], val[1], val[2], renderer);\n          if (model.referenceCoordinate) {\n            const refValue = model.referenceCoordinate.getComputedDoubleViewportValue(renderer);\n            val[0] += refValue[0];\n            val[1] += refValue[1];\n          }\n          val = view.viewportToNormalizedDisplay(val[0], val[1], val[2], renderer);\n          val = view.normalizedDisplayToDisplay(val[0], val[1], val[2]);\n          break;\n        }\n      case Coordinate.VIEWPORT:\n        {\n          if (model.referenceCoordinate) {\n            const refValue = model.referenceCoordinate.getComputedDoubleViewportValue(renderer);\n            val[0] += refValue[0];\n            val[1] += refValue[1];\n          }\n          val = view.viewportToNormalizedDisplay(val[0], val[1], val[2], renderer);\n          val = view.normalizedDisplayToDisplay(val[0], val[1], val[2]);\n          break;\n        }\n      case Coordinate.NORMALIZED_DISPLAY:\n        val = view.normalizedDisplayToDisplay(val[0], val[1], val[2]);\n        break;\n      case Coordinate.USERDEFINED:\n        val = model.value.slice(0);\n        break;\n    }\n\n    // if we have a reference coordinate and we haven't handled it yet\n    if (model.referenceCoordinate && (model.coordinateSystem === Coordinate.DISPLAY || model.coordinateSystem === Coordinate.NORMALIZED_DISPLAY)) {\n      const refValue = model.referenceCoordinate.getComputedDoubleDisplayValue(renderer);\n      val[0] += refValue[0];\n      val[1] += refValue[1];\n    }\n    model.computedDoubleDisplayValue[0] = val[0];\n    model.computedDoubleDisplayValue[1] = val[1];\n    model.computing = 0;\n    return model.computedDoubleDisplayValue;\n  };\n  publicAPI.getComputedValue = ren => {\n    let renderer = ren;\n    if (model.renderer) {\n      renderer = model.renderer;\n    }\n    switch (model.coordinateSystem) {\n      case Coordinate.WORLD:\n        return publicAPI.getComputedWorldValue(renderer);\n      case Coordinate.VIEW:\n      case Coordinate.NORMALIZED_VIEWPORT:\n      case Coordinate.VIEWPORT:\n        {\n          const val = publicAPI.getComputedViewportValue(renderer);\n          model.computedWorldValue[0] = val[0];\n          model.computedWorldValue[1] = val[1];\n          break;\n        }\n      case Coordinate.NORMALIZED_DISPLAY:\n      case Coordinate.DISPLAY:\n        {\n          const val = model.getComputedDisplayValue(renderer);\n          model.computedWorldValue[0] = val[0];\n          model.computedWorldValue[1] = val[1];\n          break;\n        }\n    }\n    return model.computedWorldValue;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  coordinateSystem: Coordinate.WORLD,\n  value: [0.0, 0.0, 0.0],\n  renderer: null,\n  referenceCoordinate: null,\n  computing: 0,\n  computedWorldValue: [0.0, 0.0, 0.0],\n  computedDoubleDisplayValue: [0.0, 0.0]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n\n  // Build VTK API\n  macro.set(publicAPI, model, ['property']);\n  macro.get(publicAPI, model, ['value']);\n  macro.setGet(publicAPI, model, ['coordinateSystem', 'referenceCoordinate', 'renderer']);\n  macro.getArray(publicAPI, model, ['value'], 3);\n\n  // Object methods\n  vtkCoordinate(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkCoordinate');\n\n// ----------------------------------------------------------------------------\n\nvar vtkCoordinate$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkCoordinate$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport Constants from './Property2D/Constants.js';\nimport { Representation } from './Property/Constants.js';\n\nconst {\n  DisplayLocation\n} = Constants;\n\n// ----------------------------------------------------------------------------\n// vtkProperty2D methods\n// ----------------------------------------------------------------------------\n\nfunction vtkProperty2D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkProperty2D');\n  publicAPI.setDisplayLocationToBackground = () => publicAPI.setDisplayLocation(DisplayLocation.BACKGROUND);\n  publicAPI.setDisplayLocationToForeground = () => publicAPI.setDisplayLocation(DisplayLocation.FOREGROUND);\n  publicAPI.setRepresentationToWireframe = () => publicAPI.setRepresentation(Representation.WIREFRAME);\n  publicAPI.setRepresentationToSurface = () => publicAPI.setRepresentation(Representation.SURFACE);\n  publicAPI.setRepresentationToPoints = () => publicAPI.setRepresentation(Representation.POINTS);\n  publicAPI.getRepresentationAsString = () => macro.enumToString(Representation, model.representation);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\nconst DEFAULT_VALUES = {\n  color: [1, 1, 1],\n  opacity: 1,\n  pointSize: 1,\n  lineWidth: 1,\n  representation: Representation.SURFACE,\n  displayLocation: DisplayLocation.FOREGROUND\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['opacity', 'lineWidth', 'pointSize', 'displayLocation', 'representation']);\n  macro.setGetArray(publicAPI, model, ['color'], 3);\n\n  // Object methods\n  vtkProperty2D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkProperty2D');\n\n// ----------------------------------------------------------------------------\n\nvar vtkProperty2D$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkProperty2D$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkCoordinate from './Coordinate.js';\nimport vtkProp from './Prop.js';\nimport vtkProperty2D from './Property2D.js';\nimport { Coordinate } from './Coordinate/Constants.js';\n\n// ----------------------------------------------------------------------------\n// vtkActor2D methods\n// ----------------------------------------------------------------------------\n\nfunction vtkActor2D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkActor2D');\n  publicAPI.getActors2D = () => publicAPI;\n  publicAPI.getIsOpaque = () => {\n    // make sure we have a property\n    if (!model.property) {\n      // force creation of a property\n      publicAPI.getProperty();\n    }\n    let isOpaque = model.property.getOpacity() >= 1.0;\n\n    // are we using an opaque texture, if any?\n    isOpaque = isOpaque && (!model.texture || !model.texture.isTranslucent());\n    return isOpaque;\n  };\n  publicAPI.hasTranslucentPolygonalGeometry = () => {\n    if (model.mapper === null) {\n      return false;\n    }\n    // make sure we have a property\n    if (model.property === null) {\n      // force creation of a property\n      publicAPI.setProperty(publicAPI.makeProperty());\n    }\n\n    // is this actor opaque ?\n    return !publicAPI.getIsOpaque();\n  };\n  publicAPI.makeProperty = vtkProperty2D.newInstance;\n  publicAPI.getProperty = () => {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n    return model.property;\n  };\n\n  //----------------------------------------------------------------------------\n  // Set the Prop2D's position in display coordinates.\n  publicAPI.setDisplayPosition = (XPos, YPos) => {\n    model.positionCoordinate.setCoordinateSystem(Coordinate.DISPLAY);\n    model.positionCoordinate.setValue(XPos, YPos, 0.0);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.setWidth = w => {\n    const pos = model.position2Coordinate.getValue();\n    model.position2Coordinate.setCoordinateSystemToNormalizedViewport();\n    model.position2Coordinate.setValue(w, pos[1]);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.setHeight = w => {\n    const pos = model.position2Coordinate.getValue();\n    model.position2Coordinate.setCoordinateSystemToNormalizedViewport();\n    model.position2Coordinate.setValue(pos[0], w);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getWidth = () => model.position2Coordinate.getValue()[0];\n\n  //----------------------------------------------------------------------------\n  publicAPI.getHeight = () => model.position2Coordinate.getValue()[1];\n  publicAPI.getMTime = () => {\n    let mt = model.mtime;\n    if (model.property !== null) {\n      const time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    mt = model.positionCoordinate.getMTime() > mt ? model.positionCoordinate.getMTime() : mt;\n    mt = model.positionCoordinate2.getMTime() > mt ? model.positionCoordinate2.getMTime() : mt;\n\n    // TBD: Handle array of textures here.\n\n    return mt;\n  };\n  publicAPI.getRedrawMTime = () => {\n    let mt = model.mtime;\n    if (model.mapper !== null) {\n      let time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    return mt;\n  };\n  publicAPI.getBounds = () => {\n    // does our mapper support bounds\n    if (typeof publicAPI.getMapper().getBounds === 'function') {\n      model.useBounds = true;\n      return publicAPI.getMapper().getBounds();\n    }\n    model.useBounds = false;\n    return [];\n  };\n\n  // Description:\n  // Return the actual vtkCoordinate reference that the mapper should use\n  // to position the actor. This is used internally by the mappers and should\n  // be overridden in specialized subclasses and otherwise ignored.\n  publicAPI.getActualPositionCoordinate = () => model.positionCoordinate;\n  publicAPI.getActualPositionCoordinate2 = () => model.positionCoordinate2;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  layerNumber: 0,\n  positionCoordinate: null,\n  positionCoordinate2: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp.extend(publicAPI, model, initialValues);\n  model.positionCoordinate = vtkCoordinate.newInstance();\n  model.positionCoordinate.setCoordinateSystemToViewport();\n  model.positionCoordinate2 = vtkCoordinate.newInstance();\n  model.positionCoordinate2.setCoordinateSystemToNormalizedViewport();\n  model.positionCoordinate2.setValue(0.5, 0.5);\n  model.positionCoordinate2.setReferenceCoordinate(model.positionCoordinate);\n\n  // Build VTK API\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['mapper']);\n\n  // Object methods\n  vtkActor2D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkActor2D');\n\n// ----------------------------------------------------------------------------\n\nvar vtkActor2D$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkActor2D$1 as default, extend, newInstance };\n","const Behavior = {\n  HANDLE: 0,\n  CONTEXT: 1\n};\nvar Constants = {\n  Behavior\n};\n\nexport { Behavior, Constants as default };\n","import { m as macro } from '../../macros2.js';\nimport vtkProp from '../../Rendering/Core/Prop.js';\nimport vtkCellArray from '../../Common/Core/CellArray.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkPoints from '../../Common/Core/Points.js';\nimport { Behavior } from './WidgetRepresentation/Constants.js';\nimport { RenderingTypes } from '../Core/WidgetManager/Constants.js';\nimport { CATEGORIES } from '../../Rendering/Core/Mapper/CoincidentTopologyHelper.js';\nimport { POLYDATA_FIELDS } from '../../Common/DataModel/PolyData/Constants.js';\n\nconst {\n  vtkErrorMacro,\n  vtkWarningMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\nconst STYLE_CATEGORIES = ['active', 'inactive', 'static'];\nfunction applyCoincidentTopologyParametersToMapper(mapper, parameters) {\n  if (mapper && mapper.setResolveCoincidentTopologyToPolygonOffset) {\n    mapper.setResolveCoincidentTopologyToPolygonOffset();\n    CATEGORIES.forEach(category => {\n      if (parameters[category]) {\n        const methodName = `setRelativeCoincidentTopology${category}OffsetParameters`;\n        if (mapper[methodName]) {\n          const {\n            factor,\n            offset\n          } = parameters[category];\n          mapper[methodName](factor, offset);\n        }\n      }\n    });\n  }\n}\nfunction mergeStyles(elementNames) {\n  for (var _len = arguments.length, stylesToMerge = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    stylesToMerge[_key - 1] = arguments[_key];\n  }\n  const newStyleObject = {\n    active: {},\n    inactive: {},\n    static: {}\n  };\n  STYLE_CATEGORIES.forEach(category => {\n    const cat = newStyleObject[category];\n    elementNames.forEach(name => {\n      if (!cat[name]) {\n        cat[name] = {};\n      }\n      stylesToMerge.filter(s => s && s[category] && s[category][name]).forEach(s => Object.assign(cat[name], s[category][name]));\n    });\n  });\n  return newStyleObject;\n}\n\n// ----------------------------------------------------------------------------\n\nfunction applyStyles(pipelines, styles, activeActor) {\n  if (!activeActor) {\n    // static\n    Object.keys(styles.static).forEach(name => {\n      if (pipelines[name]) {\n        pipelines[name].actor.getProperty().set(styles.static[name]);\n      }\n    });\n    // inactive\n    Object.keys(styles.inactive).forEach(name => {\n      if (pipelines[name]) {\n        pipelines[name].actor.getProperty().set(styles.inactive[name]);\n      }\n    });\n  } else {\n    Object.keys(pipelines).forEach(name => {\n      const style = pipelines[name].actor === activeActor ? styles.active[name] : styles.inactive[name];\n      if (style) {\n        pipelines[name].actor.getProperty().set(style);\n      }\n    });\n  }\n}\n\n// ----------------------------------------------------------------------------\n\nfunction connectPipeline(pipeline) {\n  let source = pipeline.source;\n  if (pipeline.filter) {\n    if (source.isA('vtkDataSet')) {\n      pipeline.filter.setInputData(source);\n    } else {\n      pipeline.filter.setInputConnection(source.getOutputPort());\n    }\n    source = pipeline.filter;\n  }\n  if (source) {\n    if (source.isA('vtkDataSet')) {\n      pipeline.mapper.setInputData(source);\n    } else {\n      pipeline.mapper.setInputConnection(source.getOutputPort());\n    }\n  }\n  if (pipeline.glyph) {\n    pipeline.mapper.setInputConnection(pipeline.glyph.getOutputPort(), 1);\n  }\n  pipeline.actor.setMapper(pipeline.mapper);\n}\n\n// Internal convenient function to create a data array:\nfunction allocateArray(polyData, name, numberOfTuples, dataType, numberOfComponents) {\n  // Check first whether name is points, verts, lines, polys, otherwise it is a point data array.\n  let dataArray = polyData[`get${macro.capitalize(name)}`]?.() || polyData.getPointData().getArrayByName(name);\n  if (!dataArray || dataType !== undefined && dataArray.getDataType() !== dataType || numberOfComponents !== undefined && dataArray.getNumberOfComponents() !== numberOfComponents) {\n    let arrayType = vtkDataArray;\n    let arrayDataType = dataType;\n    let arrayNumberOfComponents = numberOfComponents;\n    if (name === 'points') {\n      arrayType = vtkPoints;\n      arrayDataType = arrayDataType ?? 'Float32Array';\n      arrayNumberOfComponents = numberOfComponents ?? 3;\n    } else if (POLYDATA_FIELDS.includes(name)) {\n      arrayType = vtkCellArray;\n      arrayDataType = arrayDataType ?? 'Uint16Array';\n      arrayNumberOfComponents = numberOfComponents ?? 1;\n    } else {\n      // data array\n      arrayDataType = arrayDataType ?? 'Float32Array';\n      arrayNumberOfComponents = numberOfComponents ?? 1;\n    }\n    dataArray = arrayType.newInstance({\n      name,\n      dataType: arrayDataType,\n      numberOfComponents: arrayNumberOfComponents,\n      size: arrayNumberOfComponents * numberOfTuples,\n      empty: numberOfTuples === 0\n    });\n    if (name === 'points' || POLYDATA_FIELDS.includes(name)) {\n      polyData[`set${macro.capitalize(name)}`](dataArray);\n    } else {\n      polyData.getPointData().addArray(dataArray);\n    }\n  } else if (dataArray.getNumberOfTuples() !== numberOfTuples) {\n    dataArray.resize(numberOfTuples);\n  }\n  return dataArray;\n}\n\n// ----------------------------------------------------------------------------\n// vtkWidgetRepresentation\n// ----------------------------------------------------------------------------\n\nfunction vtkWidgetRepresentation(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWidgetRepresentation');\n\n  // Internal cache\n  const cache = {\n    mtimes: {},\n    states: []\n  };\n  model._onCoincidentTopologyParametersChanged = () => {\n    publicAPI.getActors().forEach(actor => {\n      applyCoincidentTopologyParametersToMapper(actor.getMapper(), model.coincidentTopologyParameters);\n    });\n  };\n\n  // --------------------------------------------------------------------------\n  publicAPI.getActors = () => model.actors;\n  publicAPI.getNestedProps = publicAPI.getActors;\n  // --------------------------------------------------------------------------\n\n  publicAPI.setLabels = function () {\n    for (var _len2 = arguments.length, labels = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      labels[_key2] = arguments[_key2];\n    }\n    if (labels.length === 1) {\n      model.labels = [].concat(labels[0]);\n    } else {\n      model.labels = labels;\n    }\n    publicAPI.modified();\n  };\n  publicAPI.getRepresentationStates = function () {\n    let input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : model.inputData[0];\n    if (cache.mtimes.representation === publicAPI.getMTime() && cache.mtimes.input === input.getMTime()) {\n      return cache.states;\n    }\n\n    // Reinitialize cache\n    cache.mtimes.representation = publicAPI.getMTime();\n    cache.mtimes.input = input.getMTime();\n    cache.states = [];\n\n    // Fill states that are going to be used in the representation\n    model.labels.forEach(name => {\n      cache.states = cache.states.concat(input.getStatesWithLabel(name) || []);\n    });\n    return cache.states;\n  };\n  publicAPI.getSelectedState = (prop, compositeID) => {\n    const representationStates = publicAPI.getRepresentationStates();\n    if (compositeID < representationStates.length) {\n      return representationStates[compositeID];\n    }\n    vtkErrorMacro(`Representation ${publicAPI.getClassName()} should implement getSelectedState(prop, compositeID) method.`);\n    return null;\n  };\n  publicAPI.updateActorVisibility = function () {\n    let renderingType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : RenderingTypes.FRONT_BUFFER;\n    let ctxVisible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let handleVisible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    let otherFlag = true;\n    switch (model.behavior) {\n      case Behavior.HANDLE:\n        otherFlag = renderingType === RenderingTypes.PICKING_BUFFER || handleVisible;\n        break;\n      case Behavior.CONTEXT:\n        otherFlag = ctxVisible;\n        break;\n      default:\n        otherFlag = true;\n        break;\n    }\n    const visibilityFlag = otherFlag;\n    for (let i = 0; i < model.actors.length; i++) {\n      if (model.visibilityFlagArray) {\n        model.actors[i].setVisibility(visibilityFlag && model.visibilityFlagArray[i]);\n      } else {\n        model.actors[i].setVisibility(visibilityFlag);\n      }\n    }\n    if (model.alwaysVisibleActors) {\n      for (let i = 0; i < model.alwaysVisibleActors.length; i++) {\n        model.alwaysVisibleActors[i].setVisibility(true);\n      }\n    }\n  };\n\n  // Add warning to model.actors.push\n  model.actors.push = function () {\n    vtkWarningMacro('You should use publicAPI.addActor() to initialize the actor properly');\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    args.forEach(actor => publicAPI.addActor(actor));\n  };\n  publicAPI.addActor = actor => {\n    applyCoincidentTopologyParametersToMapper(actor.getMapper(), model.coincidentTopologyParameters);\n    Array.prototype.push.apply(model.actors, [actor]);\n  };\n\n  // Make sure setting the labels at build time works with string/array...\n  publicAPI.setLabels(model.labels);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nfunction defaultValues(initialValues) {\n  return {\n    activeScaleFactor: 1.2,\n    activeColor: 1,\n    useActiveColor: true,\n    actors: [],\n    labels: [],\n    behavior: Behavior.CONTEXT,\n    coincidentTopologyParameters: {\n      Point: {\n        factor: -1.0,\n        offset: -1.0\n      },\n      Line: {\n        factor: -1.0,\n        offset: -1.0\n      },\n      Polygon: {\n        factor: -1.0,\n        offset: -1.0\n      }\n    },\n    scaleInPixels: false,\n    displayScaleParams: {\n      dispHeightFactor: 1,\n      cameraPosition: [0, 0, 0],\n      cameraDir: [1, 0, 0],\n      isParallel: false,\n      rendererPixelDims: [1, 1]\n    },\n    _internalArrays: {},\n    ...initialValues\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  // Object methods\n  vtkProp.extend(publicAPI, model, defaultValues(initialValues));\n  macro.algo(publicAPI, model, 1, 1);\n  macro.get(publicAPI, model, ['labels', 'displayScaleParams', 'coincidentTopologyParameters']);\n  macro.set(publicAPI, model, [{\n    type: 'object',\n    name: 'displayScaleParams'\n  }, {\n    type: 'object',\n    name: 'coincidentTopologyParameters'\n  }]);\n  macro.setGet(publicAPI, model, ['scaleInPixels', 'activeScaleFactor', 'activeColor', 'useActiveColor']);\n\n  // Object specific methods\n  vtkWidgetRepresentation(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nvar vtkWidgetRepresentation$1 = {\n  extend,\n  mergeStyles,\n  applyStyles,\n  connectPipeline\n};\n\nexport { allocateArray, applyStyles, connectPipeline, vtkWidgetRepresentation$1 as default, extend, mergeStyles };\n","import vtkWidgetRepresentation from './WidgetRepresentation.js';\nimport { Behavior } from './WidgetRepresentation/Constants.js';\n\n// ----------------------------------------------------------------------------\n// vtkWidgetRepresentation\n// ----------------------------------------------------------------------------\n\nfunction vtkContextRepresentation(publicAPI, model) {\n  model.classHierarchy.push('vtkContextRepresentation');\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  behavior: Behavior.CONTEXT,\n  pickable: false,\n  dragable: true\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const newDefault = {\n    ...DEFAULT_VALUES,\n    ...initialValues\n  };\n  vtkWidgetRepresentation.extend(publicAPI, model, newDefault);\n  vtkContextRepresentation(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nvar vtkContextRepresentation$1 = {\n  extend\n};\n\nexport { vtkContextRepresentation$1 as default, extend };\n","const States = {\n  IS_START: 0,\n  IS_NONE: 0,\n  IS_ROTATE: 1,\n  IS_PAN: 2,\n  IS_SPIN: 3,\n  IS_DOLLY: 4,\n  IS_CAMERA_POSE: 11,\n  IS_WINDOW_LEVEL: 1024,\n  IS_SLICE: 1025\n};\nvar vtkInteractorStyleConstants = {\n  States\n};\n\nexport { States, vtkInteractorStyleConstants as default };\n","import { m as macro } from '../../macros2.js';\nimport vtkInteractorObserver from './InteractorObserver.js';\nimport vtkInteractorStyleConstants from './InteractorStyle/Constants.js';\n\nconst {\n  States\n} = vtkInteractorStyleConstants;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// Add module-level functions or api that you want to expose statically via\n// the next section...\n\nconst stateNames = {\n  Rotate: States.IS_ROTATE,\n  Pan: States.IS_PAN,\n  Spin: States.IS_SPIN,\n  Dolly: States.IS_DOLLY,\n  CameraPose: States.IS_CAMERA_POSE,\n  WindowLevel: States.IS_WINDOW_LEVEL,\n  Slice: States.IS_SLICE\n};\n\n// ----------------------------------------------------------------------------\n// vtkInteractorStyle methods\n// ----------------------------------------------------------------------------\n\nfunction vtkInteractorStyle(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkInteractorStyle');\n\n  // Public API methods\n  // create bunch of Start/EndState methods\n  Object.keys(stateNames).forEach(key => {\n    macro.event(publicAPI, model, `Start${key}Event`);\n    publicAPI[`start${key}`] = () => {\n      if (model.state !== States.IS_NONE) {\n        return;\n      }\n      model.state = stateNames[key];\n      model._interactor.requestAnimation(publicAPI);\n      publicAPI.invokeStartInteractionEvent({\n        type: 'StartInteractionEvent'\n      });\n      publicAPI[`invokeStart${key}Event`]({\n        type: `Start${key}Event`\n      });\n    };\n    macro.event(publicAPI, model, `End${key}Event`);\n    publicAPI[`end${key}`] = () => {\n      if (model.state !== stateNames[key]) {\n        return;\n      }\n      model.state = States.IS_NONE;\n      model._interactor.cancelAnimation(publicAPI);\n      publicAPI.invokeEndInteractionEvent({\n        type: 'EndInteractionEvent'\n      });\n      publicAPI[`invokeEnd${key}Event`]({\n        type: `End${key}Event`\n      });\n      model._interactor.render();\n    };\n  });\n  model.getRenderer = callData => model.focusedRenderer || callData.pokedRenderer;\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleKeyPress = callData => {\n    const rwi = model._interactor;\n    let ac = null;\n    switch (callData.key) {\n      case 'r':\n      case 'R':\n        model.getRenderer(callData).resetCamera();\n        rwi.render();\n        break;\n      case 'w':\n      case 'W':\n        ac = model.getRenderer(callData).getActors();\n        ac.forEach(anActor => {\n          const prop = anActor.getProperty();\n          if (prop.setRepresentationToWireframe) {\n            prop.setRepresentationToWireframe();\n          }\n        });\n        rwi.render();\n        break;\n      case 's':\n      case 'S':\n        ac = model.getRenderer(callData).getActors();\n        ac.forEach(anActor => {\n          const prop = anActor.getProperty();\n          if (prop.setRepresentationToSurface) {\n            prop.setRepresentationToSurface();\n          }\n        });\n        rwi.render();\n        break;\n      case 'v':\n      case 'V':\n        ac = model.getRenderer(callData).getActors();\n        ac.forEach(anActor => {\n          const prop = anActor.getProperty();\n          if (prop.setRepresentationToPoints) {\n            prop.setRepresentationToPoints();\n          }\n        });\n        rwi.render();\n        break;\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  state: States.IS_NONE,\n  handleObservers: 1,\n  autoAdjustCameraClippingRange: 1\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkInteractorObserver.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['focusedRenderer']);\n\n  // Object specific methods\n  vtkInteractorStyle(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkInteractorStyle');\n\n// ----------------------------------------------------------------------------\n\nvar vtkInteractorStyle$1 = {\n  newInstance,\n  extend,\n  ...vtkInteractorStyleConstants\n};\n\nexport { vtkInteractorStyle$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkInteractorStyle from '../../Rendering/Core/InteractorStyle.js';\n\nconst {\n  vtkDebugMacro\n} = macro;\nconst {\n  States\n} = vtkInteractorStyle;\n\n// ----------------------------------------------------------------------------\n// Event Types\n// ----------------------------------------------------------------------------\n\nconst START_INTERACTION_EVENT = {\n  type: 'StartInteractionEvent'\n};\nconst INTERACTION_EVENT = {\n  type: 'InteractionEvent'\n};\nconst END_INTERACTION_EVENT = {\n  type: 'EndInteractionEvent'\n};\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction translateCamera(renderer, rwi, toX, toY, fromX, fromY) {\n  const cam = renderer.getActiveCamera();\n  let viewFocus = cam.getFocalPoint();\n  viewFocus = rwi.getInteractorStyle().computeWorldToDisplay(renderer, viewFocus[0], viewFocus[1], viewFocus[2]);\n  const focalDepth = viewFocus[2];\n  const newPickPoint = rwi.getInteractorStyle().computeDisplayToWorld(renderer, toX, toY, focalDepth);\n  const oldPickPoint = rwi.getInteractorStyle().computeDisplayToWorld(renderer, fromX, fromY, focalDepth);\n\n  // camera motion is reversed\n  const motionVector = [oldPickPoint[0] - newPickPoint[0], oldPickPoint[1] - newPickPoint[1], oldPickPoint[2] - newPickPoint[2]];\n  viewFocus = cam.getFocalPoint();\n  const viewPoint = cam.getPosition();\n  cam.setFocalPoint(motionVector[0] + viewFocus[0], motionVector[1] + viewFocus[1], motionVector[2] + viewFocus[2]);\n  cam.setPosition(motionVector[0] + viewPoint[0], motionVector[1] + viewPoint[1], motionVector[2] + viewPoint[2]);\n}\nfunction dollyToPosition(fact, position, renderer, rwi) {\n  const cam = renderer.getActiveCamera();\n  if (cam.getParallelProjection()) {\n    // Zoom relatively to the cursor\n    const view = rwi.getView();\n    const aSize = view.getViewportSize(renderer);\n    const viewport = renderer.getViewport();\n    const viewSize = view.getSize();\n    const w = aSize[0];\n    const h = aSize[1];\n    const x0 = w / 2;\n    const y0 = h / 2;\n    const x1 = position.x - viewport[0] * viewSize[0];\n    const y1 = position.y - viewport[1] * viewSize[1];\n    translateCamera(renderer, rwi, x0, y0, x1, y1);\n    cam.setParallelScale(cam.getParallelScale() / fact);\n    translateCamera(renderer, rwi, x1, y1, x0, y0);\n  } else {\n    // Zoom relatively to the cursor position\n\n    // Move focal point to cursor position\n    let viewFocus = cam.getFocalPoint();\n    const norm = cam.getViewPlaneNormal();\n    viewFocus = rwi.getInteractorStyle().computeWorldToDisplay(renderer, viewFocus[0], viewFocus[1], viewFocus[2]);\n    const newFp = rwi.getInteractorStyle().computeDisplayToWorld(renderer, position.x, position.y, viewFocus[2]);\n    cam.setFocalPoint(newFp[0], newFp[1], newFp[2]);\n\n    // Move camera in/out along projection direction\n    cam.dolly(fact);\n    renderer.resetCameraClippingRange();\n\n    // Find new focal point\n    const newCameraPos = cam.getPosition();\n    viewFocus = cam.getFocalPoint();\n    const newPoint = [0, 0, 0];\n    let t = norm[0] * (viewFocus[0] - newCameraPos[0]) + norm[1] * (viewFocus[1] - newCameraPos[1]) + norm[2] * (viewFocus[2] - newCameraPos[2]);\n    t /= norm[0] ** 2 + norm[1] ** 2 + norm[2] ** 2;\n    newPoint[0] = newCameraPos[0] + norm[0] * t;\n    newPoint[1] = newCameraPos[1] + norm[1] * t;\n    newPoint[2] = newCameraPos[2] + norm[2] * t;\n    cam.setFocalPoint(newPoint[0], newPoint[1], newPoint[2]);\n    renderer.resetCameraClippingRange();\n  }\n}\nfunction dollyByFactor(interactor, renderer, factor) {\n  if (Number.isNaN(factor)) {\n    return;\n  }\n  const camera = renderer.getActiveCamera();\n  if (camera.getParallelProjection()) {\n    camera.setParallelScale(camera.getParallelScale() / factor);\n  } else {\n    camera.dolly(factor);\n    renderer.resetCameraClippingRange();\n  }\n  if (interactor.getLightFollowCamera()) {\n    renderer.updateLightsGeometryToFollowCamera();\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst STATIC = {\n  dollyToPosition,\n  translateCamera,\n  dollyByFactor\n};\n\n// ----------------------------------------------------------------------------\n// vtkInteractorStyleManipulator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkInteractorStyleManipulator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkInteractorStyleManipulator');\n  model.currentVRManipulators = new Map();\n  model.mouseManipulators = [];\n  model.keyboardManipulators = [];\n  model.vrManipulators = [];\n  model.gestureManipulators = [];\n  model.currentManipulator = null;\n  model.currentWheelManipulator = null;\n  model.centerOfRotation = [0, 0, 0];\n  model.rotationFactor = 1;\n\n  //-------------------------------------------------------------------------\n  publicAPI.removeAllManipulators = () => {\n    publicAPI.removeAllMouseManipulators();\n    publicAPI.removeAllKeyboardManipulators();\n    publicAPI.removeAllVRManipulators();\n    publicAPI.removeAllGestureManipulators();\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.removeAllMouseManipulators = () => {\n    model.mouseManipulators = [];\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.removeAllKeyboardManipulators = () => {\n    model.keyboardManipulators = [];\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.removeAllVRManipulators = () => {\n    model.vrManipulators = [];\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.removeAllGestureManipulators = () => {\n    model.gestureManipulators = [];\n  };\n\n  //-------------------------------------------------------------------------\n  const removeManipulator = (manipulator, list) => {\n    const index = list.indexOf(manipulator);\n    if (index === -1) {\n      return false;\n    }\n    list.splice(index, 1);\n    publicAPI.modified();\n    return true;\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.removeMouseManipulator = manipulator => removeManipulator(manipulator, model.mouseManipulators);\n\n  //-------------------------------------------------------------------------\n  publicAPI.removeKeyboardManipulator = manipulator => removeManipulator(manipulator, model.keyboardManipulators);\n\n  //-------------------------------------------------------------------------\n  publicAPI.removeVRManipulator = manipulator => removeManipulator(manipulator, model.vrManipulators);\n\n  //-------------------------------------------------------------------------\n  publicAPI.removeGestureManipulator = manipulator => removeManipulator(manipulator, model.gestureManipulators);\n\n  //-------------------------------------------------------------------------\n  const addManipulator = (manipulator, list) => {\n    const index = list.indexOf(manipulator);\n    if (index !== -1) {\n      return false;\n    }\n    list.push(manipulator);\n    publicAPI.modified();\n    return true;\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.addMouseManipulator = manipulator => addManipulator(manipulator, model.mouseManipulators);\n\n  //-------------------------------------------------------------------------\n  publicAPI.addKeyboardManipulator = manipulator => addManipulator(manipulator, model.keyboardManipulators);\n\n  //-------------------------------------------------------------------------\n  publicAPI.addVRManipulator = manipulator => addManipulator(manipulator, model.vrManipulators);\n\n  //-------------------------------------------------------------------------\n  publicAPI.addGestureManipulator = manipulator => addManipulator(manipulator, model.gestureManipulators);\n\n  //-------------------------------------------------------------------------\n  publicAPI.getNumberOfMouseManipulators = () => model.mouseManipulators.length;\n\n  //-------------------------------------------------------------------------\n  publicAPI.getNumberOfKeyboardManipulators = () => model.keyboardManipulators.length;\n\n  //-------------------------------------------------------------------------\n  publicAPI.getNumberOfVRManipulators = () => model.vrManipulators.length;\n\n  //-------------------------------------------------------------------------\n  publicAPI.getNumberOfGestureManipulators = () => model.gestureManipulators.length;\n\n  //-------------------------------------------------------------------------\n  publicAPI.resetCurrentManipulator = () => {\n    model.currentManipulator = null;\n    model.currentWheelManipulator = null;\n  };\n\n  //-------------------------------------------------------------------------\n  // Mouse\n  //-------------------------------------------------------------------------\n  publicAPI.handleLeftButtonPress = callData => {\n    model.previousPosition = callData.position;\n    publicAPI.onButtonDown(1, callData);\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.handleMiddleButtonPress = callData => {\n    model.previousPosition = callData.position;\n    publicAPI.onButtonDown(2, callData);\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.handleRightButtonPress = callData => {\n    model.previousPosition = callData.position;\n    publicAPI.onButtonDown(3, callData);\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.handleButton3D = ed => {\n    if (!ed) {\n      return;\n    }\n\n    // Look for a matching 3D camera interactor.\n    const manipulator = publicAPI.findVRManipulator(ed.device, ed.input, ed.pressed);\n    if (manipulator) {\n      // register the manipulator for this device\n      model.currentVRManipulators.set(ed.device, manipulator);\n      manipulator.onButton3D(publicAPI, model.getRenderer(ed), model.state, ed);\n      if (ed.pressed) {\n        publicAPI.startCameraPose();\n      } else {\n        model.currentVRManipulators.delete(ed.device);\n\n        // make sure we don't end camera pose if other VR manipulators are currently interacting\n        if (model.currentVRManipulators.size === 0) {\n          publicAPI.endCameraPose();\n        }\n      }\n    } else {\n      vtkDebugMacro('No manipulator found');\n    }\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.handleMove3D = ed => {\n    const manipulator = model.currentVRManipulators.get(ed.device);\n    if (manipulator && model.state === States.IS_CAMERA_POSE) {\n      manipulator.onMove3D(publicAPI, model.getRenderer(ed), model.state, ed);\n    }\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.onButtonDown = (button, callData) => {\n    // Must not be processing an interaction to start another.\n    if (model.currentManipulator) {\n      return;\n    }\n\n    // Look for a matching camera interactor.\n    model.currentManipulator = publicAPI.findMouseManipulator(button, callData.shiftKey, callData.controlKey, callData.altKey);\n    if (model.currentManipulator) {\n      if (model.currentManipulator.setCenter) {\n        model.currentManipulator.setCenter(model.centerOfRotation);\n      }\n      if (model.currentManipulator.setRotationFactor) {\n        model.currentManipulator.setRotationFactor(model.rotationFactor);\n      }\n      model.currentManipulator.startInteraction();\n      model.currentManipulator.onButtonDown(model._interactor, model.getRenderer(callData), callData.position);\n      model._interactor.requestAnimation(publicAPI.onButtonDown);\n      publicAPI.invokeStartInteractionEvent(START_INTERACTION_EVENT);\n    } else {\n      vtkDebugMacro('No manipulator found');\n    }\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.findMouseManipulator = (button, shift, control, alt) => {\n    // Look for a matching camera manipulator\n    let manipulator = null;\n    let count = model.mouseManipulators.length;\n    while (count--) {\n      const manip = model.mouseManipulators[count];\n      if (manip && manip.getButton() === button && manip.getShift() === shift && manip.getControl() === control && manip.getAlt() === alt && manip.isDragEnabled()) {\n        manipulator = manip;\n      }\n    }\n    return manipulator;\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.findVRManipulator = (device, input) => {\n    // Look for a matching camera manipulator\n    let manipulator = null;\n    let count = model.vrManipulators.length;\n    while (count--) {\n      const manip = model.vrManipulators[count];\n      if (manip && manip.getDevice() === device && manip.getInput() === input) {\n        manipulator = manip;\n      }\n    }\n    return manipulator;\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.handleLeftButtonRelease = () => {\n    publicAPI.onButtonUp(1);\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.handleMiddleButtonRelease = () => {\n    publicAPI.onButtonUp(2);\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.handleRightButtonRelease = () => {\n    publicAPI.onButtonUp(3);\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.onButtonUp = button => {\n    if (!model.currentManipulator) {\n      return;\n    }\n    if (model.currentManipulator.getButton && model.currentManipulator.getButton() === button) {\n      model.currentManipulator.onButtonUp(model._interactor);\n      model.currentManipulator.endInteraction();\n      model.currentManipulator = null;\n      model._interactor.cancelAnimation(publicAPI.onButtonDown);\n      publicAPI.invokeEndInteractionEvent(END_INTERACTION_EVENT);\n    }\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.handleStartMouseWheel = callData => {\n    // Must not be processing a wheel interaction to start another.\n    if (model.currentWheelManipulator) {\n      return;\n    }\n    let manipulator = null;\n    let count = model.mouseManipulators.length;\n    while (count--) {\n      const manip = model.mouseManipulators[count];\n      if (manip && manip.isScrollEnabled() && manip.getShift() === callData.shiftKey && manip.getControl() === callData.controlKey && manip.getAlt() === callData.altKey) {\n        manipulator = manip;\n      }\n    }\n    if (manipulator) {\n      model.currentWheelManipulator = manipulator;\n      model.currentWheelManipulator.onStartScroll(model._interactor, model.getRenderer(callData), callData.spinY);\n      model.currentWheelManipulator.startInteraction();\n      model._interactor.requestAnimation(publicAPI.handleStartMouseWheel);\n      publicAPI.invokeStartInteractionEvent(START_INTERACTION_EVENT);\n    } else {\n      vtkDebugMacro('No manipulator found');\n    }\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.handleEndMouseWheel = () => {\n    if (!model.currentWheelManipulator) {\n      return;\n    }\n    if (model.currentWheelManipulator.onEndScroll) {\n      model.currentWheelManipulator.onEndScroll(model._interactor);\n      model.currentWheelManipulator.endInteraction();\n      model.currentWheelManipulator = null;\n      model._interactor.cancelAnimation(publicAPI.handleStartMouseWheel);\n      publicAPI.invokeEndInteractionEvent(END_INTERACTION_EVENT);\n    }\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.handleMouseWheel = callData => {\n    if (model.currentWheelManipulator && model.currentWheelManipulator.onScroll) {\n      model.currentWheelManipulator.onScroll(model._interactor, model.getRenderer(callData), callData.spinY, model.cachedMousePosition);\n      publicAPI.invokeInteractionEvent(INTERACTION_EVENT);\n    }\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.handleMouseMove = callData => {\n    model.cachedMousePosition = callData.position;\n    if (model.currentManipulator && model.currentManipulator.onMouseMove) {\n      model.currentManipulator.onMouseMove(model._interactor, model.getRenderer(callData), callData.position);\n      publicAPI.invokeInteractionEvent(INTERACTION_EVENT);\n    }\n  };\n\n  //-------------------------------------------------------------------------\n  // Keyboard\n  //-------------------------------------------------------------------------\n  publicAPI.handleKeyPress = callData => {\n    model.keyboardManipulators.filter(m => m.onKeyPress).forEach(manipulator => {\n      manipulator.onKeyPress(model._interactor, model.getRenderer(callData), callData.key);\n      publicAPI.invokeInteractionEvent(INTERACTION_EVENT);\n    });\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.handleKeyDown = callData => {\n    model.keyboardManipulators.filter(m => m.onKeyDown).forEach(manipulator => {\n      manipulator.onKeyDown(model._interactor, model.getRenderer(callData), callData.key);\n      publicAPI.invokeInteractionEvent(INTERACTION_EVENT);\n    });\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.handleKeyUp = callData => {\n    model.keyboardManipulators.filter(m => m.onKeyUp).forEach(manipulator => {\n      manipulator.onKeyUp(model._interactor, model.getRenderer(callData), callData.key);\n      publicAPI.invokeInteractionEvent(INTERACTION_EVENT);\n    });\n  };\n\n  //-------------------------------------------------------------------------\n  // Gesture\n  //-------------------------------------------------------------------------\n\n  publicAPI.handleStartPinch = callData => {\n    publicAPI.startDolly();\n    let count = model.gestureManipulators.length;\n    while (count--) {\n      const manipulator = model.gestureManipulators[count];\n      if (manipulator && manipulator.isPinchEnabled()) {\n        manipulator.onStartPinch(model._interactor, callData.scale);\n        manipulator.startInteraction();\n      }\n    }\n    model._interactor.requestAnimation(publicAPI.handleStartPinch);\n    publicAPI.invokeStartInteractionEvent(START_INTERACTION_EVENT);\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleEndPinch = () => {\n    publicAPI.endDolly();\n    let count = model.gestureManipulators.length;\n    while (count--) {\n      const manipulator = model.gestureManipulators[count];\n      if (manipulator && manipulator.isPinchEnabled()) {\n        manipulator.onEndPinch(model._interactor);\n        manipulator.endInteraction();\n      }\n    }\n    model._interactor.cancelAnimation(publicAPI.handleStartPinch);\n    publicAPI.invokeEndInteractionEvent(END_INTERACTION_EVENT);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleStartRotate = callData => {\n    publicAPI.startRotate();\n    let count = model.gestureManipulators.length;\n    while (count--) {\n      const manipulator = model.gestureManipulators[count];\n      if (manipulator && manipulator.isRotateEnabled()) {\n        manipulator.onStartRotate(model._interactor, callData.rotation);\n        manipulator.startInteraction();\n      }\n    }\n    model._interactor.requestAnimation(publicAPI.handleStartRotate);\n    publicAPI.invokeStartInteractionEvent(START_INTERACTION_EVENT);\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleEndRotate = () => {\n    publicAPI.endRotate();\n    let count = model.gestureManipulators.length;\n    while (count--) {\n      const manipulator = model.gestureManipulators[count];\n      if (manipulator && manipulator.isRotateEnabled()) {\n        manipulator.onEndRotate(model._interactor);\n        manipulator.endInteraction();\n      }\n    }\n    model._interactor.cancelAnimation(publicAPI.handleStartRotate);\n    publicAPI.invokeEndInteractionEvent(END_INTERACTION_EVENT);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleStartPan = callData => {\n    publicAPI.startPan();\n    let count = model.gestureManipulators.length;\n    while (count--) {\n      const manipulator = model.gestureManipulators[count];\n      if (manipulator && manipulator.isPanEnabled()) {\n        manipulator.onStartPan(model._interactor, callData.translation);\n        manipulator.startInteraction();\n      }\n    }\n    model._interactor.requestAnimation(publicAPI.handleStartPan);\n    publicAPI.invokeStartInteractionEvent(START_INTERACTION_EVENT);\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleEndPan = () => {\n    publicAPI.endPan();\n    let count = model.gestureManipulators.length;\n    while (count--) {\n      const manipulator = model.gestureManipulators[count];\n      if (manipulator && manipulator.isPanEnabled()) {\n        manipulator.onEndPan(model._interactor);\n        manipulator.endInteraction();\n      }\n    }\n    model._interactor.cancelAnimation(publicAPI.handleStartPan);\n    publicAPI.invokeEndInteractionEvent(END_INTERACTION_EVENT);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handlePinch = callData => {\n    let count = model.gestureManipulators.length;\n    let actionCount = 0;\n    while (count--) {\n      const manipulator = model.gestureManipulators[count];\n      if (manipulator && manipulator.isPinchEnabled()) {\n        manipulator.onPinch(model._interactor, model.getRenderer(callData), callData.scale);\n        actionCount++;\n      }\n    }\n    if (actionCount) {\n      publicAPI.invokeInteractionEvent(INTERACTION_EVENT);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handlePan = callData => {\n    let count = model.gestureManipulators.length;\n    let actionCount = 0;\n    while (count--) {\n      const manipulator = model.gestureManipulators[count];\n      if (manipulator && manipulator.isPanEnabled()) {\n        manipulator.onPan(model._interactor, model.getRenderer(callData), callData.translation);\n        actionCount++;\n      }\n    }\n    if (actionCount) {\n      publicAPI.invokeInteractionEvent(INTERACTION_EVENT);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleRotate = callData => {\n    let count = model.gestureManipulators.length;\n    let actionCount = 0;\n    while (count--) {\n      const manipulator = model.gestureManipulators[count];\n      if (manipulator && manipulator.isRotateEnabled()) {\n        manipulator.onRotate(model._interactor, model.getRenderer(callData), callData.rotation);\n        actionCount++;\n      }\n    }\n    if (actionCount) {\n      publicAPI.invokeInteractionEvent(INTERACTION_EVENT);\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst defaultValues = initialValues => ({\n  cachedMousePosition: null,\n  currentManipulator: null,\n  currentWheelManipulator: null,\n  // mouseManipulators: null,\n  // keyboardManipulators: null,\n  // vrManipulators: null,\n  // gestureManipulators: null,\n  centerOfRotation: [0, 0, 0],\n  rotationFactor: 1,\n  ...initialValues\n});\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, defaultValues(initialValues));\n\n  // Inheritance\n  vtkInteractorStyle.extend(publicAPI, model, initialValues);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['rotationFactor']);\n  macro.get(publicAPI, model, ['mouseManipulators', 'keyboardManipulators', 'vrManipulators', 'gestureManipulators']);\n  macro.setGetArray(publicAPI, model, ['centerOfRotation'], 3);\n\n  // Object specific methods\n  vtkInteractorStyleManipulator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkInteractorStyleManipulator');\n\n// ----------------------------------------------------------------------------\n\nvar vtkInteractorStyleManipulator$1 = {\n  newInstance,\n  extend,\n  ...STATIC\n};\n\nexport { STATIC, vtkInteractorStyleManipulator$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n// vtkCompositeCameraManipulator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCompositeCameraManipulator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCompositeCameraManipulator');\n\n  //-------------------------------------------------------------------------\n  publicAPI.computeDisplayCenter = (iObserver, renderer) => {\n    const pt = iObserver.computeWorldToDisplay(renderer, model.center[0], model.center[1], model.center[2]);\n    model.displayCenter[0] = pt[0];\n    model.displayCenter[1] = pt[1];\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  center: [0, 0, 0],\n  rotationFactor: 1,\n  displayCenter: [0, 0]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['rotationFactor']);\n  macro.setGetArray(publicAPI, model, ['displayCenter'], 2);\n  macro.setGetArray(publicAPI, model, ['center'], 3);\n\n  // Object specific methods\n  vtkCompositeCameraManipulator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nvar vtkCompositeCameraManipulator$1 = {\n  extend\n};\n\nexport { vtkCompositeCameraManipulator$1 as default, extend };\n","import { m as macro } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n// vtkCompositeMouseManipulator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCompositeMouseManipulator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCompositeMouseManipulator');\n  publicAPI.startInteraction = () => {};\n  publicAPI.endInteraction = () => {};\n  publicAPI.onButtonDown = (interactor, renderer, position) => {};\n  publicAPI.onButtonUp = interactor => {};\n  publicAPI.onMouseMove = (interactor, renderer, position) => {};\n  publicAPI.onStartScroll = (interactor, renderer, delta) => {};\n  publicAPI.onScroll = (interactor, renderer, delta) => {};\n  publicAPI.onEndScroll = interactor => {};\n  publicAPI.isDragEnabled = () => model.dragEnabled;\n  publicAPI.isScrollEnabled = () => model.scrollEnabled;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  button: 1,\n  shift: false,\n  control: false,\n  alt: false,\n  dragEnabled: true,\n  scrollEnabled: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['button', 'shift', 'control', 'alt']);\n  macro.set(publicAPI, model, ['dragEnabled', 'scrollEnabled']);\n\n  // Object specific methods\n  vtkCompositeMouseManipulator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nvar vtkCompositeMouseManipulator$1 = {\n  extend\n};\n\nexport { vtkCompositeMouseManipulator$1 as default, extend };\n","import { m as macro } from '../../macros2.js';\nimport vtkCompositeCameraManipulator from './CompositeCameraManipulator.js';\nimport vtkCompositeMouseManipulator from './CompositeMouseManipulator.js';\nimport { j as cross } from '../../Common/Core/Math/index.js';\n\n// ----------------------------------------------------------------------------\n// vtkMouseCameraTrackballPanManipulator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkMouseCameraTrackballPanManipulator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkMouseCameraTrackballPanManipulator');\n  publicAPI.onButtonDown = (interactor, renderer, position) => {\n    model.previousPosition = position;\n  };\n  publicAPI.onMouseMove = (interactor, renderer, position) => {\n    if (!position) {\n      return;\n    }\n    const pos = position;\n    const lastPos = model.previousPosition;\n    model.previousPosition = position;\n    const camera = renderer.getActiveCamera();\n    const camPos = camera.getPosition();\n    const fp = camera.getFocalPoint();\n    if (camera.getParallelProjection()) {\n      camera.orthogonalizeViewUp();\n      const up = camera.getViewUp();\n      const vpn = camera.getViewPlaneNormal();\n      const right = [0, 0, 0];\n      cross(vpn, up, right);\n\n      // These are different because y is flipped.\n      const height = interactor.getView().getViewportSize(renderer)[1];\n      let dx = (pos.x - lastPos.x) / height;\n      let dy = (lastPos.y - pos.y) / height;\n      const scale = camera.getParallelScale();\n      dx *= scale * 2.0;\n      dy *= scale * 2.0;\n      let tmp = right[0] * dx + up[0] * dy;\n      camPos[0] += tmp;\n      fp[0] += tmp;\n      tmp = right[1] * dx + up[1] * dy;\n      camPos[1] += tmp;\n      fp[1] += tmp;\n      tmp = right[2] * dx + up[2] * dy;\n      camPos[2] += tmp;\n      fp[2] += tmp;\n      camera.setPosition(camPos[0], camPos[1], camPos[2]);\n      camera.setFocalPoint(fp[0], fp[1], fp[2]);\n    } else {\n      const {\n        center\n      } = model;\n      const style = interactor.getInteractorStyle();\n      const focalDepth = style.computeWorldToDisplay(renderer, center[0], center[1], center[2])[2];\n      const worldPoint = style.computeDisplayToWorld(renderer, pos.x, pos.y, focalDepth);\n      const lastWorldPoint = style.computeDisplayToWorld(renderer, lastPos.x, lastPos.y, focalDepth);\n      const newCamPos = [camPos[0] + (lastWorldPoint[0] - worldPoint[0]), camPos[1] + (lastWorldPoint[1] - worldPoint[1]), camPos[2] + (lastWorldPoint[2] - worldPoint[2])];\n      const newFp = [fp[0] + (lastWorldPoint[0] - worldPoint[0]), fp[1] + (lastWorldPoint[1] - worldPoint[1]), fp[2] + (lastWorldPoint[2] - worldPoint[2])];\n      camera.setPosition(newCamPos[0], newCamPos[1], newCamPos[2]);\n      camera.setFocalPoint(newFp[0], newFp[1], newFp[2]);\n    }\n    renderer.resetCameraClippingRange();\n    if (interactor.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  macro.obj(publicAPI, model);\n  vtkCompositeCameraManipulator.extend(publicAPI, model, initialValues);\n  vtkCompositeMouseManipulator.extend(publicAPI, model, initialValues);\n\n  // Object specific methods\n  vtkMouseCameraTrackballPanManipulator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkMouseCameraTrackballPanManipulator');\n\n// ----------------------------------------------------------------------------\n\nvar vtkMouseCameraTrackballPanManipulator$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkMouseCameraTrackballPanManipulator$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkCompositeCameraManipulator from './CompositeCameraManipulator.js';\nimport vtkCompositeMouseManipulator from './CompositeMouseManipulator.js';\n\n// ----------------------------------------------------------------------------\n// vtkMouseCameraTrackballZoomManipulator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkMouseCameraTrackballZoomManipulator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkMouseCameraTrackballZoomManipulator');\n  publicAPI.onButtonDown = (interactor, renderer, position) => {\n    model.previousPosition = position;\n    const size = interactor.getView().getViewportSize(renderer);\n    const camera = renderer.getActiveCamera();\n    const direction = model.flipDirection ? -1 : 1;\n    if (camera.getParallelProjection()) {\n      model.zoomScale = 1.5 / size[1] * direction;\n    } else {\n      const range = camera.getClippingRange();\n      model.zoomScale = 1.5 * (range[1] / size[1]) * direction;\n    }\n  };\n  publicAPI.onMouseMove = (interactor, renderer, position) => {\n    if (!position) {\n      return;\n    }\n    const dy = model.previousPosition.y - position.y;\n    const camera = renderer.getActiveCamera();\n    if (camera.getParallelProjection()) {\n      const k = dy * model.zoomScale;\n      camera.setParallelScale((1.0 - k) * camera.getParallelScale());\n    } else {\n      const cameraPos = camera.getPosition();\n      const cameraFp = camera.getFocalPoint();\n      const norm = camera.getDirectionOfProjection();\n      const k = dy * model.zoomScale;\n      let tmp = k * norm[0];\n      cameraPos[0] += tmp;\n      cameraFp[0] += tmp;\n      tmp = k * norm[1];\n      cameraPos[1] += tmp;\n      cameraFp[1] += tmp;\n      tmp = k * norm[2];\n      cameraPos[2] += tmp;\n      cameraFp[2] += tmp;\n      if (!camera.getFreezeFocalPoint()) {\n        camera.setFocalPoint(cameraFp[0], cameraFp[1], cameraFp[2]);\n      }\n      camera.setPosition(cameraPos[0], cameraPos[1], cameraPos[2]);\n      renderer.resetCameraClippingRange();\n    }\n    if (interactor.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n    model.previousPosition = position;\n  };\n  publicAPI.onScroll = (interactor, renderer, delta) => {\n    if (!delta) {\n      return;\n    }\n    const camera = renderer.getActiveCamera();\n    const dyf = 1 - delta / 10;\n    if (camera.getParallelProjection()) {\n      camera.setParallelScale(camera.getParallelScale() / dyf);\n    } else {\n      camera.dolly(dyf);\n      renderer.resetCameraClippingRange();\n    }\n    if (interactor.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  zoomScale: 0.0,\n  flipDirection: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  macro.obj(publicAPI, model);\n  vtkCompositeMouseManipulator.extend(publicAPI, model, initialValues);\n  vtkCompositeCameraManipulator.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['flipDirection']);\n\n  // Object specific methods\n  vtkMouseCameraTrackballZoomManipulator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkMouseCameraTrackballZoomManipulator');\n\n// ----------------------------------------------------------------------------\n\nvar vtkMouseCameraTrackballZoomManipulator$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkMouseCameraTrackballZoomManipulator$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\n\nconst DEFAULT_VIEW_API = 'WebGL';\nconst VIEW_CONSTRUCTORS = Object.create(null);\n\n// ----------------------------------------------------------------------------\n// static methods\n// ----------------------------------------------------------------------------\n\nfunction registerViewConstructor(name, constructor) {\n  VIEW_CONSTRUCTORS[name] = constructor;\n}\nfunction listViewAPIs() {\n  return Object.keys(VIEW_CONSTRUCTORS);\n}\nfunction newAPISpecificView(name) {\n  let initialValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return VIEW_CONSTRUCTORS[name] && VIEW_CONSTRUCTORS[name](initialValues);\n}\n\n// ----------------------------------------------------------------------------\n// vtkRenderWindow methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindow(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindow');\n\n  // Add renderer\n  publicAPI.addRenderer = renderer => {\n    if (publicAPI.hasRenderer(renderer)) {\n      return;\n    }\n    renderer.setRenderWindow(publicAPI);\n    model.renderers.push(renderer);\n\n    // for (this->Renderers->InitTraversal(rsit);\n    //      (aren = this->Renderers->GetNextRenderer(rsit)); )\n    //   {\n    //   aren->SetAllocatedRenderTime\n    //     (1.0/(this->DesiredUpdateRate*this->Renderers->GetNumberOfItems()));\n    //   }\n\n    publicAPI.modified();\n  };\n\n  // Remove renderer\n  publicAPI.removeRenderer = renderer => {\n    model.renderers = model.renderers.filter(r => r !== renderer);\n    publicAPI.modified();\n  };\n  publicAPI.hasRenderer = ren => model.renderers.indexOf(ren) !== -1;\n\n  // get an API specific view of this data\n  publicAPI.newAPISpecificView = function (name) {\n    let initialValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return newAPISpecificView(name || model.defaultViewAPI, initialValues);\n  };\n\n  // Add renderer\n  publicAPI.addView = view => {\n    if (publicAPI.hasView(view)) {\n      return;\n    }\n    view.setRenderable(publicAPI);\n    model._views.push(view);\n    publicAPI.modified();\n  };\n\n  // Remove renderer\n  publicAPI.removeView = view => {\n    model._views = model._views.filter(r => r !== view);\n    publicAPI.modified();\n  };\n  publicAPI.hasView = view => model._views.indexOf(view) !== -1;\n\n  // handle any pre render initializations\n  publicAPI.preRender = () => {\n    model.renderers.forEach(ren => {\n      // make sure we have a camera\n      if (!ren.isActiveCameraCreated()) {\n        ren.resetCamera();\n      }\n    });\n  };\n  publicAPI.render = () => {\n    publicAPI.preRender();\n    if (model.interactor) {\n      model.interactor.render();\n    } else {\n      model._views.forEach(view => view.traverseAllPasses());\n    }\n  };\n  publicAPI.getStatistics = () => {\n    const results = {\n      propCount: 0,\n      invisiblePropCount: 0,\n      gpuMemoryMB: 0\n    };\n    model._views.forEach(v => {\n      if (v.getGraphicsMemoryInfo) results.gpuMemoryMB += v.getGraphicsMemoryInfo() / 1e6;\n    });\n    model.renderers.forEach(ren => {\n      const props = ren.getViewProps();\n      const gren = model._views[0].getViewNodeFor(ren);\n      props.forEach(prop => {\n        if (prop.getVisibility()) {\n          results.propCount += 1;\n          const mpr = prop.getMapper && prop.getMapper();\n          if (mpr && mpr.getPrimitiveCount) {\n            const gmpr = gren.getViewNodeFor(mpr);\n            if (gmpr) {\n              if (gmpr.getAllocatedGPUMemoryInBytes) {\n                results.gpuMemoryMB += gmpr.getAllocatedGPUMemoryInBytes() / 1e6;\n              }\n              const pcount = mpr.getPrimitiveCount();\n              Object.keys(pcount).forEach(keyName => {\n                if (!results[keyName]) {\n                  results[keyName] = 0;\n                }\n                results[keyName] += pcount[keyName];\n              });\n            }\n          }\n        } else {\n          results.invisiblePropCount += 1;\n        }\n      });\n    });\n    results.str = Object.keys(results).map(keyName => `${keyName}: ${results[keyName]}`).join('\\n');\n    return results;\n  };\n  publicAPI.captureImages = function () {\n    let format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'image/png';\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    macro.setImmediate(publicAPI.render);\n    return model._views.map(view => view.captureNextImage ? view.captureNextImage(format, opts) : undefined).filter(i => !!i);\n  };\n  publicAPI.addRenderWindow = child => {\n    if (model.childRenderWindows.includes(child)) {\n      return false;\n    }\n    model.childRenderWindows.push(child);\n    publicAPI.modified();\n    return true;\n  };\n  publicAPI.removeRenderWindow = child => {\n    const childIndex = model.childRenderWindows.findIndex(x => x === child);\n    if (childIndex < 0) {\n      return false;\n    }\n    model.childRenderWindows.splice(childIndex, 1);\n    publicAPI.modified();\n    return true;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  defaultViewAPI: DEFAULT_VIEW_API,\n  renderers: [],\n  views: [],\n  interactor: null,\n  neverRendered: true,\n  numberOfLayers: 1,\n  childRenderWindows: []\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['interactor', 'numberOfLayers', '_views', 'defaultViewAPI']);\n  macro.get(publicAPI, model, ['neverRendered']);\n  macro.getArray(publicAPI, model, ['renderers', 'childRenderWindows']);\n  macro.moveToProtected(publicAPI, model, ['views']);\n  macro.event(publicAPI, model, 'completion');\n\n  // Object methods\n  vtkRenderWindow(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkRenderWindow');\n\n// ----------------------------------------------------------------------------\n\nvar vtkRenderWindow$1 = {\n  newInstance,\n  extend,\n  registerViewConstructor,\n  listViewAPIs,\n  newAPISpecificView\n};\n\nexport { vtkRenderWindow$1 as default, extend, listViewAPIs, newAPISpecificView, newInstance, registerViewConstructor };\n","import { mat4, vec4, vec3, quat } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport { r as radiansFromDegrees, k as add, j as cross } from '../../Common/Core/Math/index.js';\n\nconst {\n  vtkDebugMacro\n} = macro;\n\n/* eslint-disable new-cap */\n\n/*\n * Convenience function to access elements of a gl-matrix.  If it turns\n * out I have rows and columns swapped everywhere, then I'll just change\n * the order of 'row' and 'col' parameters in this function\n */\n// function getMatrixElement(matrix, row, col) {\n//   const idx = (row * 4) + col;\n//   return matrix[idx];\n// }\n\n// ----------------------------------------------------------------------------\n// vtkCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCamera');\n\n  // Set up private variables and methods\n  const origin = new Float64Array(3);\n  const dopbasis = new Float64Array([0.0, 0.0, -1.0]);\n  const upbasis = new Float64Array([0.0, 1.0, 0.0]);\n  const tmpMatrix = mat4.identity(new Float64Array(16));\n  const tmpMatrix2 = mat4.identity(new Float64Array(16));\n  const tmpvec1 = new Float64Array(3);\n  const tmpvec2 = new Float64Array(3);\n  const tmpvec3 = new Float64Array(3);\n  const rotateMatrix = mat4.identity(new Float64Array(16));\n  const trans = mat4.identity(new Float64Array(16));\n  const newPosition = new Float64Array(3);\n  const newFocalPoint = new Float64Array(3);\n\n  // Internal Functions that don't need to be public\n  function computeViewPlaneNormal() {\n    // VPN is -DOP\n    model.viewPlaneNormal[0] = -model.directionOfProjection[0];\n    model.viewPlaneNormal[1] = -model.directionOfProjection[1];\n    model.viewPlaneNormal[2] = -model.directionOfProjection[2];\n  }\n  publicAPI.orthogonalizeViewUp = () => {\n    const vt = publicAPI.getViewMatrix();\n    model.viewUp[0] = vt[4];\n    model.viewUp[1] = vt[5];\n    model.viewUp[2] = vt[6];\n    publicAPI.modified();\n  };\n  publicAPI.setPosition = (x, y, z) => {\n    if (x === model.position[0] && y === model.position[1] && z === model.position[2]) {\n      return;\n    }\n    model.position[0] = x;\n    model.position[1] = y;\n    model.position[2] = z;\n\n    // recompute the focal distance\n    publicAPI.computeDistance();\n    publicAPI.modified();\n  };\n  publicAPI.setFocalPoint = (x, y, z) => {\n    if (x === model.focalPoint[0] && y === model.focalPoint[1] && z === model.focalPoint[2]) {\n      return;\n    }\n    model.focalPoint[0] = x;\n    model.focalPoint[1] = y;\n    model.focalPoint[2] = z;\n\n    // recompute the focal distance\n    publicAPI.computeDistance();\n    publicAPI.modified();\n  };\n  publicAPI.setDistance = d => {\n    if (model.distance === d) {\n      return;\n    }\n    model.distance = d;\n    if (model.distance < 1e-20) {\n      model.distance = 1e-20;\n      vtkDebugMacro('Distance is set to minimum.');\n    }\n\n    // we want to keep the camera pointing in the same direction\n    const vec = model.directionOfProjection;\n\n    // recalculate FocalPoint\n    model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\n    model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\n    model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  // This method must be called when the focal point or camera position changes\n  publicAPI.computeDistance = () => {\n    const dx = model.focalPoint[0] - model.position[0];\n    const dy = model.focalPoint[1] - model.position[1];\n    const dz = model.focalPoint[2] - model.position[2];\n    model.distance = Math.sqrt(dx * dx + dy * dy + dz * dz);\n    if (model.distance < 1e-20) {\n      model.distance = 1e-20;\n      vtkDebugMacro('Distance is set to minimum.');\n      const vec = model.directionOfProjection;\n\n      // recalculate FocalPoint\n      model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\n      model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\n      model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\n    }\n    model.directionOfProjection[0] = dx / model.distance;\n    model.directionOfProjection[1] = dy / model.distance;\n    model.directionOfProjection[2] = dz / model.distance;\n    computeViewPlaneNormal();\n  };\n\n  //----------------------------------------------------------------------------\n  // Move the position of the camera along the view plane normal. Moving\n  // towards the focal point (e.g., > 1) is a dolly-in, moving away\n  // from the focal point (e.g., < 1) is a dolly-out.\n  publicAPI.dolly = amount => {\n    if (amount <= 0.0) {\n      return;\n    }\n\n    // dolly moves the camera towards the focus\n    const d = model.distance / amount;\n    publicAPI.setPosition(model.focalPoint[0] - d * model.directionOfProjection[0], model.focalPoint[1] - d * model.directionOfProjection[1], model.focalPoint[2] - d * model.directionOfProjection[2]);\n  };\n  publicAPI.roll = angle => {\n    const eye = model.position;\n    const at = model.focalPoint;\n    const up = model.viewUp;\n    const viewUpVec4 = new Float64Array([up[0], up[1], up[2], 0.0]);\n    mat4.identity(rotateMatrix);\n    const viewDir = new Float64Array([at[0] - eye[0], at[1] - eye[1], at[2] - eye[2]]);\n    mat4.rotate(rotateMatrix, rotateMatrix, radiansFromDegrees(angle), viewDir);\n    vec4.transformMat4(viewUpVec4, viewUpVec4, rotateMatrix);\n    model.viewUp[0] = viewUpVec4[0];\n    model.viewUp[1] = viewUpVec4[1];\n    model.viewUp[2] = viewUpVec4[2];\n    publicAPI.modified();\n  };\n  publicAPI.azimuth = angle => {\n    const fp = model.focalPoint;\n    mat4.identity(trans);\n\n    // translate the focal point to the origin,\n    // rotate about view up,\n    // translate back again\n    mat4.translate(trans, trans, fp);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), model.viewUp);\n    mat4.translate(trans, trans, [-fp[0], -fp[1], -fp[2]]);\n\n    // apply the transform to the position\n    vec3.transformMat4(newPosition, model.position, trans);\n    publicAPI.setPosition(newPosition[0], newPosition[1], newPosition[2]);\n  };\n  publicAPI.yaw = angle => {\n    const position = model.position;\n    mat4.identity(trans);\n\n    // translate the camera to the origin,\n    // rotate about axis,\n    // translate back again\n    mat4.translate(trans, trans, position);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), model.viewUp);\n    mat4.translate(trans, trans, [-position[0], -position[1], -position[2]]);\n\n    // apply the transform to the position\n    vec3.transformMat4(newFocalPoint, model.focalPoint, trans);\n    publicAPI.setFocalPoint(newFocalPoint[0], newFocalPoint[1], newFocalPoint[2]);\n  };\n  publicAPI.elevation = angle => {\n    const fp = model.focalPoint;\n\n    // get the eye / camera position from the viewMatrix\n    const vt = publicAPI.getViewMatrix();\n    const axis = [-vt[0], -vt[1], -vt[2]];\n    mat4.identity(trans);\n\n    // translate the focal point to the origin,\n    // rotate about view up,\n    // translate back again\n    mat4.translate(trans, trans, fp);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), axis);\n    mat4.translate(trans, trans, [-fp[0], -fp[1], -fp[2]]);\n\n    // apply the transform to the position\n    vec3.transformMat4(newPosition, model.position, trans);\n    publicAPI.setPosition(newPosition[0], newPosition[1], newPosition[2]);\n  };\n  publicAPI.pitch = angle => {\n    const position = model.position;\n    const vt = publicAPI.getViewMatrix();\n    const axis = [vt[0], vt[1], vt[2]];\n    mat4.identity(trans);\n\n    // translate the camera to the origin,\n    // rotate about axis,\n    // translate back again\n    mat4.translate(trans, trans, position);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), axis);\n    mat4.translate(trans, trans, [-position[0], -position[1], -position[2]]);\n\n    // apply the transform to the focal point\n    vec3.transformMat4(newFocalPoint, model.focalPoint, trans);\n    publicAPI.setFocalPoint(...newFocalPoint);\n  };\n  publicAPI.zoom = factor => {\n    if (factor <= 0) {\n      return;\n    }\n    if (model.parallelProjection) {\n      model.parallelScale /= factor;\n    } else {\n      model.viewAngle /= factor;\n    }\n    publicAPI.modified();\n  };\n  publicAPI.translate = (x, y, z) => {\n    const offset = [x, y, z];\n    add(model.position, offset, model.position);\n    add(model.focalPoint, offset, model.focalPoint);\n    publicAPI.computeDistance();\n    publicAPI.modified();\n  };\n  publicAPI.applyTransform = transformMat4 => {\n    const vuOld = [...model.viewUp, 1.0];\n    const posNew = [];\n    const fpNew = [];\n    const vuNew = [];\n    vuOld[0] += model.position[0];\n    vuOld[1] += model.position[1];\n    vuOld[2] += model.position[2];\n    vec4.transformMat4(posNew, [...model.position, 1.0], transformMat4);\n    vec4.transformMat4(fpNew, [...model.focalPoint, 1.0], transformMat4);\n    vec4.transformMat4(vuNew, vuOld, transformMat4);\n    vuNew[0] -= posNew[0];\n    vuNew[1] -= posNew[1];\n    vuNew[2] -= posNew[2];\n    publicAPI.setPosition(...posNew.slice(0, 3));\n    publicAPI.setFocalPoint(...fpNew.slice(0, 3));\n    publicAPI.setViewUp(...vuNew.slice(0, 3));\n  };\n  publicAPI.getThickness = () => model.clippingRange[1] - model.clippingRange[0];\n  publicAPI.setThickness = thickness => {\n    let t = thickness;\n    if (t < 1e-20) {\n      t = 1e-20;\n      vtkDebugMacro('Thickness is set to minimum.');\n    }\n    publicAPI.setClippingRange(model.clippingRange[0], model.clippingRange[0] + t);\n  };\n  publicAPI.setThicknessFromFocalPoint = thickness => {\n    let t = thickness;\n    if (t < 1e-20) {\n      t = 1e-20;\n      vtkDebugMacro('Thickness is set to minimum.');\n    }\n    publicAPI.setClippingRange(model.distance - t / 2, model.distance + t / 2);\n  };\n\n  // Unimplemented functions\n  publicAPI.setRoll = angle => {}; // dependency on GetOrientation() and a model.ViewTransform object, see https://github.com/Kitware/VTK/blob/master/Common/Transforms/vtkTransform.cxx and https://vtk.org/doc/nightly/html/classvtkTransform.html\n  publicAPI.getRoll = () => {};\n  publicAPI.setObliqueAngles = (alpha, beta) => {};\n  publicAPI.getOrientation = () => {};\n  publicAPI.getOrientationWXYZ = () => {};\n  publicAPI.getFrustumPlanes = aspect => {\n    // Return array of 24 params (4 params for each of 6 plane equations)\n  };\n  publicAPI.getCameraLightTransformMatrix = matrix => {\n    mat4.copy(matrix, model.cameraLightTransform);\n    return matrix;\n  };\n  publicAPI.computeCameraLightTransform = () => {\n    // not sure if this is the correct transformation, based on the same funciton in VTK\n    mat4.copy(tmpMatrix, publicAPI.getViewMatrix());\n    mat4.invert(tmpMatrix, tmpMatrix);\n    mat4.fromScaling(tmpMatrix2, [model.distance, model.distance, model.distance]);\n    mat4.multiply(tmpMatrix, tmpMatrix, tmpMatrix2);\n    mat4.identity(model.cameraLightTransform);\n    mat4.translate(model.cameraLightTransform, tmpMatrix, [0.0, 0.0, -1.0]);\n  };\n  publicAPI.deepCopy = sourceCamera => {};\n  publicAPI.physicalOrientationToWorldDirection = ori => {\n    // push the x axis through the orientation quat\n    const oriq = quat.fromValues(ori[0], ori[1], ori[2], ori[3]);\n    const coriq = quat.create();\n    const qdir = quat.fromValues(0.0, 0.0, 1.0, 0.0);\n    quat.conjugate(coriq, oriq);\n\n    // rotate the z axis by the quat\n    quat.multiply(qdir, oriq, qdir);\n    quat.multiply(qdir, qdir, coriq);\n\n    // return the z axis in world coords\n    return [qdir[0], qdir[1], qdir[2]];\n  };\n  publicAPI.getPhysicalToWorldMatrix = result => {\n    publicAPI.getWorldToPhysicalMatrix(result);\n    mat4.invert(result, result);\n  };\n  publicAPI.getWorldToPhysicalMatrix = result => {\n    mat4.identity(result);\n\n    // now the physical to vtk world rotation tform\n    const physVRight = [3];\n    cross(model.physicalViewNorth, model.physicalViewUp, physVRight);\n    result[0] = physVRight[0];\n    result[1] = physVRight[1];\n    result[2] = physVRight[2];\n    result[4] = model.physicalViewUp[0];\n    result[5] = model.physicalViewUp[1];\n    result[6] = model.physicalViewUp[2];\n    result[8] = -model.physicalViewNorth[0];\n    result[9] = -model.physicalViewNorth[1];\n    result[10] = -model.physicalViewNorth[2];\n    mat4.transpose(result, result);\n    vec3.set(tmpvec1, 1 / model.physicalScale, 1 / model.physicalScale, 1 / model.physicalScale);\n    mat4.scale(result, result, tmpvec1);\n    mat4.translate(result, result, model.physicalTranslation);\n  };\n  publicAPI.computeViewParametersFromViewMatrix = vmat => {\n    // invert to get view to world\n    mat4.invert(tmpMatrix, vmat);\n\n    // note with glmatrix operations happen in\n    // the reverse order\n    // mat.scale\n    // mat.translate\n    // will result in the translation then the scale\n    // mat.mult(a,b)\n    // results in perform the B transformation then A\n\n    // then extract the params position, orientation\n    // push 0,0,0 through to get a translation\n    vec3.transformMat4(tmpvec1, origin, tmpMatrix);\n    publicAPI.computeDistance();\n    const oldDist = model.distance;\n    publicAPI.setPosition(tmpvec1[0], tmpvec1[1], tmpvec1[2]);\n\n    // push basis vectors to get orientation\n    vec3.transformMat4(tmpvec2, dopbasis, tmpMatrix);\n    vec3.subtract(tmpvec2, tmpvec2, tmpvec1);\n    vec3.normalize(tmpvec2, tmpvec2);\n    publicAPI.setDirectionOfProjection(tmpvec2[0], tmpvec2[1], tmpvec2[2]);\n    vec3.transformMat4(tmpvec3, upbasis, tmpMatrix);\n    vec3.subtract(tmpvec3, tmpvec3, tmpvec1);\n    vec3.normalize(tmpvec3, tmpvec3);\n    publicAPI.setViewUp(tmpvec3[0], tmpvec3[1], tmpvec3[2]);\n    publicAPI.setDistance(oldDist);\n  };\n\n  // the provided matrix should include\n  // translation and orientation only\n  // mat is physical to view\n  publicAPI.computeViewParametersFromPhysicalMatrix = mat => {\n    // get the WorldToPhysicalMatrix\n    publicAPI.getWorldToPhysicalMatrix(tmpMatrix);\n\n    // first convert the physical -> view matrix to be\n    // world -> view\n    mat4.multiply(tmpMatrix, mat, tmpMatrix);\n    publicAPI.computeViewParametersFromViewMatrix(tmpMatrix);\n  };\n  publicAPI.setViewMatrix = mat => {\n    model.viewMatrix = mat;\n    if (model.viewMatrix) {\n      mat4.copy(tmpMatrix, model.viewMatrix);\n      publicAPI.computeViewParametersFromViewMatrix(tmpMatrix);\n      mat4.transpose(model.viewMatrix, model.viewMatrix);\n    }\n  };\n  publicAPI.getViewMatrix = () => {\n    if (model.viewMatrix) {\n      return model.viewMatrix;\n    }\n    mat4.lookAt(tmpMatrix, model.position,\n    // eye\n    model.focalPoint,\n    // at\n    model.viewUp // up\n    );\n\n    mat4.transpose(tmpMatrix, tmpMatrix);\n    const result = new Float64Array(16);\n    mat4.copy(result, tmpMatrix);\n    return result;\n  };\n  publicAPI.setProjectionMatrix = mat => {\n    model.projectionMatrix = mat;\n  };\n  publicAPI.getProjectionMatrix = (aspect, nearz, farz) => {\n    const result = new Float64Array(16);\n    mat4.identity(result);\n    if (model.projectionMatrix) {\n      const scale = 1 / model.physicalScale;\n      vec3.set(tmpvec1, scale, scale, scale);\n      mat4.copy(result, model.projectionMatrix);\n      mat4.scale(result, result, tmpvec1);\n      mat4.transpose(result, result);\n      return result;\n    }\n    mat4.identity(tmpMatrix);\n\n    // FIXME: Not sure what to do about adjust z buffer here\n    // adjust Z-buffer range\n    // this->ProjectionTransform->AdjustZBuffer( -1, +1, nearz, farz );\n    const cWidth = model.clippingRange[1] - model.clippingRange[0];\n    const cRange = [model.clippingRange[0] + (nearz + 1) * cWidth / 2.0, model.clippingRange[0] + (farz + 1) * cWidth / 2.0];\n    if (model.parallelProjection) {\n      // set up a rectangular parallelipiped\n      const width = model.parallelScale * aspect;\n      const height = model.parallelScale;\n      const xmin = (model.windowCenter[0] - 1.0) * width;\n      const xmax = (model.windowCenter[0] + 1.0) * width;\n      const ymin = (model.windowCenter[1] - 1.0) * height;\n      const ymax = (model.windowCenter[1] + 1.0) * height;\n      mat4.ortho(tmpMatrix, xmin, xmax, ymin, ymax, cRange[0], cRange[1]);\n      mat4.transpose(tmpMatrix, tmpMatrix);\n    } else if (model.useOffAxisProjection) {\n      throw new Error('Off-Axis projection is not supported at this time');\n    } else {\n      const tmp = Math.tan(radiansFromDegrees(model.viewAngle) / 2.0);\n      let width;\n      let height;\n      if (model.useHorizontalViewAngle === true) {\n        width = model.clippingRange[0] * tmp;\n        height = model.clippingRange[0] * tmp / aspect;\n      } else {\n        width = model.clippingRange[0] * tmp * aspect;\n        height = model.clippingRange[0] * tmp;\n      }\n      const xmin = (model.windowCenter[0] - 1.0) * width;\n      const xmax = (model.windowCenter[0] + 1.0) * width;\n      const ymin = (model.windowCenter[1] - 1.0) * height;\n      const ymax = (model.windowCenter[1] + 1.0) * height;\n      const znear = cRange[0];\n      const zfar = cRange[1];\n      tmpMatrix[0] = 2.0 * znear / (xmax - xmin);\n      tmpMatrix[5] = 2.0 * znear / (ymax - ymin);\n      tmpMatrix[2] = (xmin + xmax) / (xmax - xmin);\n      tmpMatrix[6] = (ymin + ymax) / (ymax - ymin);\n      tmpMatrix[10] = -(znear + zfar) / (zfar - znear);\n      tmpMatrix[14] = -1.0;\n      tmpMatrix[11] = -2.0 * znear * zfar / (zfar - znear);\n      tmpMatrix[15] = 0.0;\n    }\n    mat4.copy(result, tmpMatrix);\n    return result;\n  };\n  publicAPI.getCompositeProjectionMatrix = (aspect, nearz, farz) => {\n    const vMat = publicAPI.getViewMatrix();\n    const pMat = publicAPI.getProjectionMatrix(aspect, nearz, farz);\n    // mats are transposed so the order is A then B\n    // we reuse pMat as it is a copy so we can do what we want with it\n    mat4.multiply(pMat, vMat, pMat);\n    return pMat;\n  };\n  publicAPI.setDirectionOfProjection = (x, y, z) => {\n    if (model.directionOfProjection[0] === x && model.directionOfProjection[1] === y && model.directionOfProjection[2] === z) {\n      return;\n    }\n    model.directionOfProjection[0] = x;\n    model.directionOfProjection[1] = y;\n    model.directionOfProjection[2] = z;\n    const vec = model.directionOfProjection;\n\n    // recalculate FocalPoint\n    model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\n    model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\n    model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\n    computeViewPlaneNormal();\n  };\n\n  // used to handle convert js device orientation angles\n  // when you use this method the camera will adjust to the\n  // device orientation such that the physicalViewUp you set\n  // in world coordinates looks up, and the physicalViewNorth\n  // you set in world coorindates will (maybe) point north\n  //\n  // NOTE WARNING - much of the documentation out there on how\n  // orientation works is seriously wrong. Even worse the Chrome\n  // device orientation simulator is completely wrong and should\n  // never be used. OMG it is so messed up.\n  //\n  // how it seems to work on iOS is that the device orientation\n  // is specified in extrinsic angles with a alpha, beta, gamma\n  // convention with axes of Z, X, Y (the code below substitutes\n  // the physical coordinate system for these axes to get the right\n  // modified coordinate system.\n  publicAPI.setDeviceAngles = (alpha, beta, gamma, screen) => {\n    const physVRight = [3];\n    cross(model.physicalViewNorth, model.physicalViewUp, physVRight);\n\n    // phone to physical coordinates\n    const rotmat = mat4.identity(new Float64Array(16));\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(alpha), model.physicalViewUp);\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(beta), physVRight);\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(gamma), model.physicalViewNorth);\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(-screen), model.physicalViewUp);\n    const dop = new Float64Array([-model.physicalViewUp[0], -model.physicalViewUp[1], -model.physicalViewUp[2]]);\n    const vup = new Float64Array(model.physicalViewNorth);\n    vec3.transformMat4(dop, dop, rotmat);\n    vec3.transformMat4(vup, vup, rotmat);\n    publicAPI.setDirectionOfProjection(dop[0], dop[1], dop[2]);\n    publicAPI.setViewUp(vup[0], vup[1], vup[2]);\n    publicAPI.modified();\n  };\n  publicAPI.setOrientationWXYZ = (degrees, x, y, z) => {\n    const quatMat = mat4.identity(new Float64Array(16));\n    if (degrees !== 0.0 && (x !== 0.0 || y !== 0.0 || z !== 0.0)) {\n      // convert to radians\n      const angle = radiansFromDegrees(degrees);\n      const q = quat.create();\n      quat.setAxisAngle(q, [x, y, z], angle);\n      mat4.fromQuat(quatMat, q);\n    }\n    const newdop = new Float64Array(3);\n    vec3.transformMat4(newdop, [0.0, 0.0, -1.0], quatMat);\n    const newvup = new Float64Array(3);\n    vec3.transformMat4(newvup, [0.0, 1.0, 0.0], quatMat);\n    publicAPI.setDirectionOfProjection(...newdop);\n    publicAPI.setViewUp(...newvup);\n    publicAPI.modified();\n  };\n  publicAPI.computeClippingRange = bounds => {\n    let vn = null;\n    let position = null;\n    vn = model.viewPlaneNormal;\n    position = model.position;\n    const a = -vn[0];\n    const b = -vn[1];\n    const c = -vn[2];\n    const d = -(a * position[0] + b * position[1] + c * position[2]);\n\n    // Set the max near clipping plane and the min far clipping plane\n    const range = [a * bounds[0] + b * bounds[2] + c * bounds[4] + d, 1e-18];\n\n    // Find the closest / farthest bounding box vertex\n    for (let k = 0; k < 2; k++) {\n      for (let j = 0; j < 2; j++) {\n        for (let i = 0; i < 2; i++) {\n          const dist = a * bounds[i] + b * bounds[2 + j] + c * bounds[4 + k] + d;\n          range[0] = dist < range[0] ? dist : range[0];\n          range[1] = dist > range[1] ? dist : range[1];\n        }\n      }\n    }\n    return range;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  position: [0, 0, 1],\n  focalPoint: [0, 0, 0],\n  viewUp: [0, 1, 0],\n  directionOfProjection: [0, 0, -1],\n  parallelProjection: false,\n  useHorizontalViewAngle: false,\n  viewAngle: 30,\n  parallelScale: 1,\n  clippingRange: [0.01, 1000.01],\n  windowCenter: [0, 0],\n  viewPlaneNormal: [0, 0, 1],\n  useOffAxisProjection: false,\n  screenBottomLeft: [-0.5, -0.5, -0.5],\n  screenBottomRight: [0.5, -0.5, -0.5],\n  screenTopRight: [0.5, 0.5, -0.5],\n  freezeFocalPoint: false,\n  projectionMatrix: null,\n  viewMatrix: null,\n  cameraLightTransform: mat4.create(),\n  // used for world to physical transformations\n  physicalTranslation: [0, 0, 0],\n  physicalScale: 1.0,\n  physicalViewUp: [0, 1, 0],\n  physicalViewNorth: [0, 0, -1]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['distance']);\n  macro.setGet(publicAPI, model, ['parallelProjection', 'useHorizontalViewAngle', 'viewAngle', 'parallelScale', 'useOffAxisProjection', 'freezeFocalPoint', 'physicalScale']);\n  macro.getArray(publicAPI, model, ['directionOfProjection', 'viewPlaneNormal', 'position', 'focalPoint']);\n  macro.setGetArray(publicAPI, model, ['clippingRange', 'windowCenter'], 2);\n  macro.setGetArray(publicAPI, model, ['viewUp', 'screenBottomLeft', 'screenBottomRight', 'screenTopRight', 'physicalTranslation', 'physicalViewUp', 'physicalViewNorth'], 3);\n\n  // Object methods\n  vtkCamera(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkCamera');\n\n// ----------------------------------------------------------------------------\n\nvar vtkCamera$1 = {\n  newInstance,\n  extend\n};\n\nexport { DEFAULT_VALUES, vtkCamera$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport { l as normalize, r as radiansFromDegrees } from '../../Common/Core/Math/index.js';\nimport { vec3 } from 'gl-matrix';\n\n// ----------------------------------------------------------------------------\n\nconst LIGHT_TYPES = ['HeadLight', 'CameraLight', 'SceneLight'];\n\n// ----------------------------------------------------------------------------\n// vtkLight methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLight(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLight');\n  const tmpVec = new Float64Array(3);\n  publicAPI.getTransformedPosition = () => {\n    if (model.transformMatrix) {\n      vec3.transformMat4(tmpVec, model.position, model.transformMatrix);\n    } else {\n      vec3.set(tmpVec, model.position[0], model.position[1], model.position[2]);\n    }\n    return tmpVec;\n  };\n  publicAPI.getTransformedFocalPoint = () => {\n    if (model.transformMatrix) {\n      vec3.transformMat4(tmpVec, model.focalPoint, model.transformMatrix);\n    } else {\n      vec3.set(tmpVec, model.focalPoint[0], model.focalPoint[1], model.focalPoint[2]);\n    }\n    return tmpVec;\n  };\n  publicAPI.getDirection = () => {\n    if (model.directionMTime < model.mtime) {\n      vec3.sub(model.direction, model.focalPoint, model.position);\n      normalize(model.direction);\n      model.directionMTime = model.mtime;\n    }\n    return model.direction;\n  };\n\n  // Sets the direction from a vec3 instead of a focal point\n  publicAPI.setDirection = directionVector => {\n    const newFocalPoint = new Float64Array(3);\n    vec3.sub(newFocalPoint, model.position, directionVector);\n    model.focalPoint = newFocalPoint;\n  };\n  publicAPI.setDirectionAngle = (elevation, azimuth) => {\n    const elevationRadians = radiansFromDegrees(elevation);\n    const azimuthRadians = radiansFromDegrees(azimuth);\n    publicAPI.setPosition(Math.cos(elevationRadians) * Math.sin(azimuthRadians), Math.sin(elevationRadians), Math.cos(elevationRadians) * Math.cos(azimuthRadians));\n    publicAPI.setFocalPoint(0, 0, 0);\n    publicAPI.setPositional(0);\n  };\n  publicAPI.setLightTypeToHeadLight = () => {\n    publicAPI.setLightType('HeadLight');\n  };\n  publicAPI.setLightTypeToCameraLight = () => {\n    publicAPI.setLightType('CameraLight');\n  };\n  publicAPI.setLightTypeToSceneLight = () => {\n    publicAPI.setTransformMatrix(null);\n    publicAPI.setLightType('SceneLight');\n  };\n  publicAPI.lightTypeIsHeadLight = () => model.lightType === 'HeadLight';\n  publicAPI.lightTypeIsSceneLight = () => model.lightType === 'SceneLight';\n  publicAPI.lightTypeIsCameraLight = () => model.lightType === 'CameraLight';\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  switch: true,\n  intensity: 1,\n  color: [1, 1, 1],\n  position: [0, 0, 1],\n  focalPoint: [0, 0, 0],\n  positional: false,\n  exponent: 1,\n  coneAngle: 30,\n  coneFalloff: 5,\n  attenuationValues: [1, 0, 0],\n  transformMatrix: null,\n  lightType: 'SceneLight',\n  shadowAttenuation: 1,\n  direction: [0, 0, 0],\n  directionMTime: 0\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['intensity', 'switch', 'positional', 'exponent', 'coneAngle', 'coneFalloff', 'transformMatrix', 'lightType', 'shadowAttenuation', 'attenuationValues']);\n  macro.setGetArray(publicAPI, model, ['color', 'position', 'focalPoint', 'attenuationValues'], 3);\n\n  // Object methods\n  vtkLight(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkLight');\n\n// ----------------------------------------------------------------------------\n\nvar vtkLight$1 = {\n  newInstance,\n  extend,\n  LIGHT_TYPES\n};\n\nexport { LIGHT_TYPES, vtkLight$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\nfunction notImplemented(method) {\n  return () => vtkErrorMacro(`vtkViewport::${method} - NOT IMPLEMENTED`);\n}\n\n// ----------------------------------------------------------------------------\n// vtkViewport methods\n// ----------------------------------------------------------------------------\n\nfunction vtkViewport(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkViewport');\n\n  // Public API methods\n  publicAPI.getViewProps = () => model.props;\n  publicAPI.hasViewProp = prop => model.props.includes(prop);\n  publicAPI.addViewProp = prop => {\n    if (prop && !publicAPI.hasViewProp(prop)) {\n      model.props.push(prop);\n    }\n  };\n  publicAPI.removeViewProp = prop => {\n    const newPropList = model.props.filter(item => item !== prop);\n    if (model.props.length !== newPropList.length) {\n      model.props = newPropList;\n    }\n  };\n  publicAPI.removeAllViewProps = () => {\n    model.props = [];\n  };\n\n  // this method get all the props including any nested props\n  function gatherProps(prop) {\n    let allProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    allProps.push(prop);\n    const children = prop.getNestedProps();\n    if (children && children.length) {\n      for (let i = 0; i < children.length; i++) {\n        gatherProps(children[i], allProps);\n      }\n    }\n    return allProps;\n  }\n  publicAPI.getViewPropsWithNestedProps = () => {\n    const allPropsArray = [];\n    for (let i = 0; i < model.props.length; i++) {\n      gatherProps(model.props[i], allPropsArray);\n    }\n    return allPropsArray;\n  };\n  publicAPI.addActor2D = publicAPI.addViewProp;\n  publicAPI.removeActor2D = prop => {\n    // VTK way: model.actors2D.RemoveItem(prop);\n    publicAPI.removeViewProp(prop);\n  };\n  publicAPI.getActors2D = () => {\n    model.actors2D = [];\n    model.props.forEach(prop => {\n      model.actors2D = model.actors2D.concat(prop.getActors2D());\n    });\n    return model.actors2D;\n  };\n  publicAPI.displayToView = () => vtkErrorMacro('call displayToView on your view instead');\n  publicAPI.viewToDisplay = () => vtkErrorMacro('callviewtodisplay on your view instead');\n  publicAPI.getSize = () => vtkErrorMacro('call getSize on your View instead');\n  publicAPI.normalizedDisplayToProjection = (x, y, z) => {\n    // first to normalized viewport\n    const nvp = publicAPI.normalizedDisplayToNormalizedViewport(x, y, z);\n\n    // then to view\n    return publicAPI.normalizedViewportToProjection(nvp[0], nvp[1], nvp[2]);\n  };\n  publicAPI.normalizedDisplayToNormalizedViewport = (x, y, z) => {\n    const scale = [model.viewport[2] - model.viewport[0], model.viewport[3] - model.viewport[1]];\n    return [(x - model.viewport[0]) / scale[0], (y - model.viewport[1]) / scale[1], z];\n  };\n  publicAPI.normalizedViewportToProjection = (x, y, z) => [x * 2.0 - 1.0, y * 2.0 - 1.0, z * 2.0 - 1.0];\n  publicAPI.projectionToNormalizedDisplay = (x, y, z) => {\n    // first to nvp\n    const nvp = publicAPI.projectionToNormalizedViewport(x, y, z);\n\n    // then to ndp\n    return publicAPI.normalizedViewportToNormalizedDisplay(nvp[0], nvp[1], nvp[2]);\n  };\n  publicAPI.normalizedViewportToNormalizedDisplay = (x, y, z) => {\n    const scale = [model.viewport[2] - model.viewport[0], model.viewport[3] - model.viewport[1]];\n    return [x * scale[0] + model.viewport[0], y * scale[1] + model.viewport[1], z];\n  };\n  publicAPI.projectionToNormalizedViewport = (x, y, z) => [(x + 1.0) * 0.5, (y + 1.0) * 0.5, (z + 1.0) * 0.5];\n  publicAPI.PickPropFrom = notImplemented('PickPropFrom');\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // _vtkWindow: null,\n  background: [0, 0, 0],\n  background2: [0.2, 0.2, 0.2],\n  gradientBackground: false,\n  viewport: [0, 0, 1, 1],\n  aspect: [1, 1],\n  pixelAspect: [1, 1],\n  props: [],\n  actors2D: []\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.event(publicAPI, model, 'event');\n  macro.setGetArray(publicAPI, model, ['viewport'], 4);\n  macro.setGetArray(publicAPI, model, ['background', 'background2'], 3);\n  vtkViewport(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkViewport');\n\n// ----------------------------------------------------------------------------\n\nvar vtkViewport$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkViewport$1 as default, extend, newInstance };\n","import { mat4, vec3 } from 'gl-matrix';\nimport { n as newInstance$1, g as get, e as setGet, k as getArray, l as setGetArray, i as moveToProtected, c as macro } from '../../macros2.js';\nimport vtkCamera from './Camera.js';\nimport vtkLight from './Light.js';\nimport { U as areBoundsInitialized, u as uninitializeBounds, r as radiansFromDegrees, d as dot, H as createUninitializedBounds } from '../../Common/Core/Math/index.js';\nimport vtkViewport from './Viewport.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\n\nconst {\n  vtkDebugMacro,\n  vtkErrorMacro,\n  vtkWarningMacro\n} = macro;\nfunction notImplemented(method) {\n  return () => vtkErrorMacro(`vtkRenderer::${method} - NOT IMPLEMENTED`);\n}\n\n// ----------------------------------------------------------------------------\n// vtkRenderer methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderer');\n\n  // Events\n  const COMPUTE_VISIBLE_PROP_BOUNDS_EVENT = {\n    type: 'ComputeVisiblePropBoundsEvent',\n    renderer: publicAPI\n  };\n  const RESET_CAMERA_CLIPPING_RANGE_EVENT = {\n    type: 'ResetCameraClippingRangeEvent',\n    renderer: publicAPI\n  };\n  const RESET_CAMERA_EVENT = {\n    type: 'ResetCameraEvent',\n    renderer: publicAPI\n  };\n  publicAPI.updateCamera = () => {\n    if (!model.activeCamera) {\n      vtkDebugMacro('No cameras are on, creating one.');\n      // the get method will automagically create a camera\n      // and reset it since one hasn't been specified yet.\n      publicAPI.getActiveCameraAndResetIfCreated();\n    }\n\n    // update the viewing transformation\n    model.activeCamera.render(publicAPI);\n    return true;\n  };\n  publicAPI.updateLightsGeometryToFollowCamera = () => {\n    // only update the light's geometry if this Renderer is tracking\n    // this lights.  That allows one renderer to view the lights that\n    // another renderer is setting up.\n    const camera = publicAPI.getActiveCameraAndResetIfCreated();\n    model.lights.forEach(light => {\n      if (light.lightTypeIsSceneLight()) ; else if (light.lightTypeIsHeadLight()) {\n        // update position and orientation of light to match camera.\n        light.setPositionFrom(camera.getPositionByReference());\n        light.setFocalPointFrom(camera.getFocalPointByReference());\n        light.modified(camera.getMTime());\n      } else if (light.lightTypeIsCameraLight()) {\n        light.setTransformMatrix(camera.getCameraLightTransformMatrix(mat4.create()));\n      } else {\n        vtkErrorMacro('light has unknown light type', light.get());\n      }\n    });\n  };\n  publicAPI.updateLightGeometry = () => {\n    if (model.lightFollowCamera) {\n      // only update the light's geometry if this Renderer is tracking\n      // this lights.  That allows one renderer to view the lights that\n      // another renderer is setting up.\n      return publicAPI.updateLightsGeometryToFollowCamera();\n    }\n    return true;\n  };\n  publicAPI.allocateTime = notImplemented('allocateTime');\n  publicAPI.updateGeometry = notImplemented('updateGeometry');\n  publicAPI.getVTKWindow = () => model._renderWindow;\n  publicAPI.setLayer = layer => {\n    vtkDebugMacro(publicAPI.getClassName(), publicAPI, 'setting Layer to ', layer);\n    if (model.layer !== layer) {\n      model.layer = layer;\n      publicAPI.modified();\n    }\n    publicAPI.setPreserveColorBuffer(!!layer);\n  };\n  publicAPI.setActiveCamera = camera => {\n    if (model.activeCamera === camera) {\n      return false;\n    }\n    model.activeCamera = camera;\n    publicAPI.modified();\n    publicAPI.invokeEvent({\n      type: 'ActiveCameraEvent',\n      camera\n    });\n    return true;\n  };\n  publicAPI.makeCamera = () => {\n    const camera = vtkCamera.newInstance();\n    publicAPI.invokeEvent({\n      type: 'CreateCameraEvent',\n      camera\n    });\n    return camera;\n  };\n\n  // Replace the set/get macro method\n  publicAPI.getActiveCamera = () => {\n    if (!model.activeCamera) {\n      model.activeCamera = publicAPI.makeCamera();\n    }\n    return model.activeCamera;\n  };\n  publicAPI.getActiveCameraAndResetIfCreated = () => {\n    if (!model.activeCamera) {\n      publicAPI.getActiveCamera();\n      publicAPI.resetCamera();\n    }\n    return model.activeCamera;\n  };\n  publicAPI.getActors = () => {\n    model.actors = [];\n    model.props.forEach(prop => {\n      model.actors = model.actors.concat(prop.getActors());\n    });\n    return model.actors;\n  };\n  publicAPI.addActor = publicAPI.addViewProp;\n  publicAPI.removeActor = actor => {\n    model.actors = model.actors.filter(a => a !== actor);\n    publicAPI.removeViewProp(actor);\n    publicAPI.modified();\n  };\n  publicAPI.removeAllActors = () => {\n    const actors = publicAPI.getActors();\n    actors.forEach(actor => {\n      publicAPI.removeViewProp(actor);\n    });\n    model.actors = [];\n    publicAPI.modified();\n  };\n  publicAPI.getVolumes = () => {\n    model.volumes = [];\n    model.props.forEach(prop => {\n      model.volumes = model.volumes.concat(prop.getVolumes());\n    });\n    return model.volumes;\n  };\n  publicAPI.addVolume = publicAPI.addViewProp;\n  publicAPI.removeVolume = volume => {\n    model.volumes = model.volumes.filter(v => v !== volume);\n    publicAPI.removeViewProp(volume);\n    publicAPI.modified();\n  };\n  publicAPI.removeAllVolumes = () => {\n    const volumes = publicAPI.getVolumes();\n    volumes.forEach(volume => {\n      publicAPI.removeViewProp(volume);\n    });\n    model.volumes = [];\n    publicAPI.modified();\n  };\n  publicAPI.hasLight = light => model.lights.includes(light);\n  publicAPI.addLight = light => {\n    if (light && !publicAPI.hasLight(light)) {\n      model.lights.push(light);\n      publicAPI.modified();\n    }\n  };\n  publicAPI.removeLight = light => {\n    model.lights = model.lights.filter(l => l !== light);\n    publicAPI.modified();\n  };\n  publicAPI.removeAllLights = () => {\n    model.lights = [];\n    publicAPI.modified();\n  };\n  publicAPI.setLightCollection = lights => {\n    model.lights = lights;\n    publicAPI.modified();\n  };\n  publicAPI.makeLight = vtkLight.newInstance;\n  publicAPI.createLight = () => {\n    if (!model.automaticLightCreation) {\n      return;\n    }\n    if (model._createdLight) {\n      publicAPI.removeLight(model._createdLight);\n      model._createdLight.delete();\n      model._createdLight = null;\n    }\n    model._createdLight = publicAPI.makeLight();\n    publicAPI.addLight(model._createdLight);\n    model._createdLight.setLightTypeToHeadLight();\n\n    // set these values just to have a good default should LightFollowCamera\n    // be turned off.\n    model._createdLight.setPosition(publicAPI.getActiveCamera().getPosition());\n    model._createdLight.setFocalPoint(publicAPI.getActiveCamera().getFocalPoint());\n  };\n\n  // requires the aspect ratio of the viewport as X/Y\n  publicAPI.normalizedDisplayToWorld = (x, y, z, aspect) => {\n    let vpd = publicAPI.normalizedDisplayToProjection(x, y, z);\n    vpd = publicAPI.projectionToView(vpd[0], vpd[1], vpd[2], aspect);\n    return publicAPI.viewToWorld(vpd[0], vpd[1], vpd[2]);\n  };\n\n  // requires the aspect ratio of the viewport as X/Y\n  publicAPI.worldToNormalizedDisplay = (x, y, z, aspect) => {\n    let vpd = publicAPI.worldToView(x, y, z);\n    vpd = publicAPI.viewToProjection(vpd[0], vpd[1], vpd[2], aspect);\n    return publicAPI.projectionToNormalizedDisplay(vpd[0], vpd[1], vpd[2]);\n  };\n\n  // requires the aspect ratio of the viewport as X/Y\n  publicAPI.viewToWorld = (x, y, z) => {\n    if (model.activeCamera === null) {\n      vtkErrorMacro('ViewToWorld: no active camera, cannot compute view to world, returning 0,0,0');\n      return [0, 0, 0];\n    }\n\n    // get the view matrix from the active camera\n    const matrix = model.activeCamera.getViewMatrix();\n    mat4.invert(matrix, matrix);\n    mat4.transpose(matrix, matrix);\n\n    // Transform point to world coordinates\n    const result = new Float64Array([x, y, z]);\n    vec3.transformMat4(result, result, matrix);\n    return result;\n  };\n  publicAPI.projectionToView = (x, y, z, aspect) => {\n    if (model.activeCamera === null) {\n      vtkErrorMacro('ProjectionToView: no active camera, cannot compute projection to view, returning 0,0,0');\n      return [0, 0, 0];\n    }\n\n    // get the projection transformation from the active camera\n    const matrix = model.activeCamera.getProjectionMatrix(aspect, -1.0, 1.0);\n    mat4.invert(matrix, matrix);\n    mat4.transpose(matrix, matrix);\n\n    // Transform point to world coordinates\n    const result = new Float64Array([x, y, z]);\n    vec3.transformMat4(result, result, matrix);\n    return result;\n  };\n\n  // Convert world point coordinates to view coordinates.\n  publicAPI.worldToView = (x, y, z) => {\n    if (model.activeCamera === null) {\n      vtkErrorMacro('WorldToView: no active camera, cannot compute view to world, returning 0,0,0');\n      return [0, 0, 0];\n    }\n\n    // get the view transformation from the active camera\n    const matrix = model.activeCamera.getViewMatrix();\n    mat4.transpose(matrix, matrix);\n    const result = new Float64Array([x, y, z]);\n    vec3.transformMat4(result, result, matrix);\n    return result;\n  };\n\n  // Convert world point coordinates to view coordinates.\n  // requires the aspect ratio of the viewport as X/Y\n  publicAPI.viewToProjection = (x, y, z, aspect) => {\n    if (model.activeCamera === null) {\n      vtkErrorMacro('ViewToProjection: no active camera, cannot compute view to projection, returning 0,0,0');\n      return [0, 0, 0];\n    }\n\n    // get the projeciton transformation from the active camera\n    const matrix = model.activeCamera.getProjectionMatrix(aspect, -1.0, 1.0);\n    mat4.transpose(matrix, matrix);\n    const result = new Float64Array([x, y, z]);\n    vec3.transformMat4(result, result, matrix);\n    return result;\n  };\n  publicAPI.computeVisiblePropBounds = () => {\n    model.allBounds[0] = vtkBoundingBox.INIT_BOUNDS[0];\n    model.allBounds[1] = vtkBoundingBox.INIT_BOUNDS[1];\n    model.allBounds[2] = vtkBoundingBox.INIT_BOUNDS[2];\n    model.allBounds[3] = vtkBoundingBox.INIT_BOUNDS[3];\n    model.allBounds[4] = vtkBoundingBox.INIT_BOUNDS[4];\n    model.allBounds[5] = vtkBoundingBox.INIT_BOUNDS[5];\n    let nothingVisible = true;\n    publicAPI.invokeEvent(COMPUTE_VISIBLE_PROP_BOUNDS_EVENT);\n\n    // loop through all props\n    for (let index = 0; index < model.props.length; ++index) {\n      const prop = model.props[index];\n      if (prop.getVisibility() && prop.getUseBounds()) {\n        const bounds = prop.getBounds();\n        if (bounds && areBoundsInitialized(bounds)) {\n          nothingVisible = false;\n          if (bounds[0] < model.allBounds[0]) {\n            model.allBounds[0] = bounds[0];\n          }\n          if (bounds[1] > model.allBounds[1]) {\n            model.allBounds[1] = bounds[1];\n          }\n          if (bounds[2] < model.allBounds[2]) {\n            model.allBounds[2] = bounds[2];\n          }\n          if (bounds[3] > model.allBounds[3]) {\n            model.allBounds[3] = bounds[3];\n          }\n          if (bounds[4] < model.allBounds[4]) {\n            model.allBounds[4] = bounds[4];\n          }\n          if (bounds[5] > model.allBounds[5]) {\n            model.allBounds[5] = bounds[5];\n          }\n        }\n      }\n    }\n    if (nothingVisible) {\n      uninitializeBounds(model.allBounds);\n      vtkDebugMacro(\"Can't compute bounds, no 3D props are visible\");\n    }\n    return model.allBounds;\n  };\n  publicAPI.resetCamera = function () {\n    let bounds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    const boundsToUse = bounds || publicAPI.computeVisiblePropBounds();\n    const center = [0, 0, 0];\n    if (!areBoundsInitialized(boundsToUse)) {\n      vtkDebugMacro('Cannot reset camera!');\n      return false;\n    }\n    let vn = null;\n    if (publicAPI.getActiveCamera()) {\n      vn = model.activeCamera.getViewPlaneNormal();\n    } else {\n      vtkErrorMacro('Trying to reset non-existent camera');\n      return false;\n    }\n\n    // Reset the perspective zoom factors, otherwise subsequent zooms will cause\n    // the view angle to become very small and cause bad depth sorting.\n    model.activeCamera.setViewAngle(30.0);\n    center[0] = (boundsToUse[0] + boundsToUse[1]) / 2.0;\n    center[1] = (boundsToUse[2] + boundsToUse[3]) / 2.0;\n    center[2] = (boundsToUse[4] + boundsToUse[5]) / 2.0;\n    let w1 = boundsToUse[1] - boundsToUse[0];\n    let w2 = boundsToUse[3] - boundsToUse[2];\n    let w3 = boundsToUse[5] - boundsToUse[4];\n    w1 *= w1;\n    w2 *= w2;\n    w3 *= w3;\n    let radius = w1 + w2 + w3;\n\n    // If we have just a single point, pick a radius of 1.0\n    radius = radius === 0 ? 1.0 : radius;\n\n    // compute the radius of the enclosing sphere\n    radius = Math.sqrt(radius) * 0.5;\n\n    // default so that the bounding sphere fits within the view fustrum\n\n    // compute the distance from the intersection of the view frustum with the\n    // bounding sphere. Basically in 2D draw a circle representing the bounding\n    // sphere in 2D then draw a horizontal line going out from the center of\n    // the circle. That is the camera view. Then draw a line from the camera\n    // position to the point where it intersects the circle. (it will be tangent\n    // to the circle at this point, this is important, only go to the tangent\n    // point, do not draw all the way to the view plane). Then draw the radius\n    // from the tangent point to the center of the circle. You will note that\n    // this forms a right triangle with one side being the radius, another being\n    // the target distance for the camera, then just find the target dist using\n    // a sin.\n    const angle = radiansFromDegrees(model.activeCamera.getViewAngle());\n    const parallelScale = radius;\n    const distance = radius / Math.sin(angle * 0.5);\n\n    // check view-up vector against view plane normal\n    const vup = model.activeCamera.getViewUp();\n    if (Math.abs(dot(vup, vn)) > 0.999) {\n      vtkWarningMacro('Resetting view-up since view plane normal is parallel');\n      model.activeCamera.setViewUp(-vup[2], vup[0], vup[1]);\n    }\n\n    // update the camera\n    model.activeCamera.setFocalPoint(center[0], center[1], center[2]);\n    model.activeCamera.setPosition(center[0] + distance * vn[0], center[1] + distance * vn[1], center[2] + distance * vn[2]);\n    publicAPI.resetCameraClippingRange(boundsToUse);\n\n    // setup default parallel scale\n    model.activeCamera.setParallelScale(parallelScale);\n\n    // update reasonable world to physical values\n    model.activeCamera.setPhysicalScale(radius);\n    model.activeCamera.setPhysicalTranslation(-center[0], -center[1], -center[2]);\n\n    // Here to let parallel/distributed compositing intercept\n    // and do the right thing.\n    publicAPI.invokeEvent(RESET_CAMERA_EVENT);\n    return true;\n  };\n  publicAPI.resetCameraClippingRange = function () {\n    let bounds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    const boundsToUse = bounds || publicAPI.computeVisiblePropBounds();\n    if (!areBoundsInitialized(boundsToUse)) {\n      vtkDebugMacro('Cannot reset camera clipping range!');\n      return false;\n    }\n\n    // Make sure we have an active camera\n    publicAPI.getActiveCameraAndResetIfCreated();\n    if (!model.activeCamera) {\n      vtkErrorMacro('Trying to reset clipping range of non-existent camera');\n      return false;\n    }\n\n    // Get the exact range for the bounds\n    const range = model.activeCamera.computeClippingRange(boundsToUse);\n\n    // do not let far - near be less than 0.1 of the window height\n    // this is for cases such as 2D images which may have zero range\n    let minGap = 0.0;\n    if (model.activeCamera.getParallelProjection()) {\n      minGap = 0.2 * model.activeCamera.getParallelScale();\n    } else {\n      const angle = radiansFromDegrees(model.activeCamera.getViewAngle());\n      minGap = 0.2 * Math.tan(angle / 2.0) * range[1];\n    }\n    if (range[1] - range[0] < minGap) {\n      minGap = minGap - range[1] + range[0];\n      range[1] += minGap / 2.0;\n      range[0] -= minGap / 2.0;\n    }\n\n    // Do not let the range behind the camera throw off the calculation.\n    if (range[0] < 0.0) {\n      range[0] = 0.0;\n    }\n\n    // Give ourselves a little breathing room\n    range[0] = 0.99 * range[0] - (range[1] - range[0]) * model.clippingRangeExpansion;\n    range[1] = 1.01 * range[1] + (range[1] - range[0]) * model.clippingRangeExpansion;\n\n    // Make sure near is not bigger than far\n    range[0] = range[0] >= range[1] ? 0.01 * range[1] : range[0];\n\n    // Make sure near is at least some fraction of far - this prevents near\n    // from being behind the camera or too close in front. How close is too\n    // close depends on the resolution of the depth buffer\n    if (!model.nearClippingPlaneTolerance) {\n      model.nearClippingPlaneTolerance = 0.01;\n    }\n\n    // make sure the front clipping range is not too far from the far clippnig\n    // range, this is to make sure that the zbuffer resolution is effectively\n    // used\n    if (range[0] < model.nearClippingPlaneTolerance * range[1]) {\n      range[0] = model.nearClippingPlaneTolerance * range[1];\n    }\n    model.activeCamera.setClippingRange(range[0], range[1]);\n\n    // Here to let parallel/distributed compositing intercept\n    // and do the right thing.\n    publicAPI.invokeEvent(RESET_CAMERA_CLIPPING_RANGE_EVENT);\n    return false;\n  };\n  publicAPI.setRenderWindow = renderWindow => {\n    if (renderWindow !== model._renderWindow) {\n      model._vtkWindow = renderWindow;\n      model._renderWindow = renderWindow;\n    }\n  };\n  publicAPI.visibleActorCount = () => model.props.filter(prop => prop.getVisibility()).length;\n  publicAPI.visibleVolumeCount = publicAPI.visibleActorCount;\n  publicAPI.getMTime = () => {\n    let m1 = model.mtime;\n    const m2 = model.activeCamera ? model.activeCamera.getMTime() : 0;\n    if (m2 > m1) {\n      m1 = m2;\n    }\n    const m3 = model._createdLight ? model._createdLight.getMTime() : 0;\n    if (m3 > m1) {\n      m1 = m3;\n    }\n    return m1;\n  };\n  publicAPI.getTransparent = () => !!model.preserveColorBuffer;\n  publicAPI.isActiveCameraCreated = () => !!model.activeCamera;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  pickedProp: null,\n  activeCamera: null,\n  allBounds: [],\n  ambient: [1, 1, 1],\n  allocatedRenderTime: 100,\n  timeFactor: 1,\n  automaticLightCreation: true,\n  twoSidedLighting: true,\n  lastRenderTimeInSeconds: -1,\n  renderWindow: null,\n  lights: [],\n  actors: [],\n  volumes: [],\n  lightFollowCamera: true,\n  numberOfPropsRendered: 0,\n  propArray: null,\n  pathArray: null,\n  layer: 0,\n  preserveColorBuffer: false,\n  preserveDepthBuffer: false,\n  computeVisiblePropBounds: createUninitializedBounds(),\n  interactive: true,\n  nearClippingPlaneTolerance: 0,\n  clippingRangeExpansion: 0.05,\n  erase: true,\n  draw: true,\n  useShadows: false,\n  useDepthPeeling: false,\n  occlusionRatio: 0,\n  maximumNumberOfPeels: 4,\n  selector: null,\n  delegate: null,\n  texturedBackground: false,\n  backgroundTexture: null,\n  environmentTexture: null,\n  environmentTextureDiffuseStrength: 1,\n  environmentTextureSpecularStrength: 1,\n  useEnvironmentTextureAsBackground: false,\n  pass: 0\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewport.extend(publicAPI, model, initialValues);\n\n  // make sure background has 4 entries. Default to opaque black\n  if (!model.background) model.background = [0, 0, 0, 1];\n  while (model.background.length < 3) model.background.push(0);\n  if (model.background.length === 3) model.background.push(1);\n\n  // Build VTK API\n  get(publicAPI, model, ['_renderWindow', 'allocatedRenderTime', 'timeFactor', 'lastRenderTimeInSeconds', 'numberOfPropsRendered', 'lastRenderingUsedDepthPeeling', 'selector']);\n  setGet(publicAPI, model, ['twoSidedLighting', 'lightFollowCamera', 'automaticLightCreation', 'erase', 'draw', 'nearClippingPlaneTolerance', 'clippingRangeExpansion', 'backingStore', 'interactive', 'layer', 'preserveColorBuffer', 'preserveDepthBuffer', 'useDepthPeeling', 'occlusionRatio', 'maximumNumberOfPeels', 'delegate', 'backgroundTexture', 'texturedBackground', 'environmentTexture', 'environmentTextureDiffuseStrength', 'environmentTextureSpecularStrength', 'useEnvironmentTextureAsBackground', 'useShadows', 'pass']);\n  getArray(publicAPI, model, ['actors', 'volumes', 'lights']);\n  setGetArray(publicAPI, model, ['background'], 4, 1.0);\n  moveToProtected(publicAPI, model, ['renderWindow']);\n\n  // Object methods\n  vtkRenderer(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkRenderer');\n\n// ----------------------------------------------------------------------------\n\nvar vtkRenderer$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkRenderer$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderPass(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderPass');\n  publicAPI.getOperation = () => model.currentOperation;\n  publicAPI.setCurrentOperation = val => {\n    model.currentOperation = val;\n    model.currentTraverseOperation = `traverse${macro.capitalize(model.currentOperation)}`;\n  };\n  publicAPI.getTraverseOperation = () => model.currentTraverseOperation;\n\n  // by default this class will traverse all of its\n  // preDelegateOperations, then call its delegate render passes\n  // the traverse all of its postDelegateOperations\n  // any of those three arrays can be empty\n  publicAPI.traverse = function (viewNode) {\n    let parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (model.deleted) {\n      return;\n    }\n\n    // we just render our delegates in order\n    model._currentParent = parent;\n    model.preDelegateOperations.forEach(val => {\n      publicAPI.setCurrentOperation(val);\n      viewNode.traverse(publicAPI);\n    });\n    model.delegates.forEach(val => {\n      val.traverse(viewNode, publicAPI);\n    });\n    model.postDelegateOperations.forEach(val => {\n      publicAPI.setCurrentOperation(val);\n      viewNode.traverse(publicAPI);\n    });\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  delegates: [],\n  currentOperation: null,\n  preDelegateOperations: [],\n  postDelegateOperations: [],\n  currentParent: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['currentOperation']);\n  macro.setGet(publicAPI, model, ['delegates', '_currentParent', 'preDelegateOperations', 'postDelegateOperations']);\n  macro.moveToProtected(publicAPI, model, ['currentParent']);\n\n  // Object methods\n  vtkRenderPass(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkRenderPass');\n\n// ----------------------------------------------------------------------------\n\nvar vtkRenderPass$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkRenderPass$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkOpenGLTexture from './Texture.js';\nimport vtkOpenGLFramebuffer from './Framebuffer.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkHelper from './Helper.js';\nimport vtkProperty from '../Core/Property.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport vtkVertexArrayObject from './VertexArrayObject.js';\n\nconst {\n  Representation\n} = vtkProperty;\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n\nfunction translucentShaderReplacement(shaders) {\n  const substituteRes = vtkShaderProgram.substitute(shaders.Fragment, '//VTK::RenderPassFragmentShader::Impl', `\n      float weight = gl_FragData[0].a * pow(max(1.1 - gl_FragCoord.z, 0.0), 2.0);\n      gl_FragData[0] = vec4(gl_FragData[0].rgb*weight, gl_FragData[0].a);\n      gl_FragData[1].r = weight;\n    `, false);\n  shaders.Fragment = substituteRes.result;\n}\nconst oitpFragTemplate = `//VTK::System::Dec\n\nin vec2 tcoord;\n\nuniform sampler2D translucentRTexture;\nuniform sampler2D translucentRGBATexture;\n\n// the output of this shader\n//VTK::Output::Dec\n\nvoid main()\n{\n  vec4 t1Color = texture(translucentRGBATexture, tcoord);\n  float t2Color = texture(translucentRTexture, tcoord).r;\n  gl_FragData[0] = vec4(t1Color.rgb/max(t2Color,0.01), 1.0 - t1Color.a);\n}\n`;\nfunction vtkOpenGLOrderIndependentTranslucentPass(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLOrderIndependentTranslucentPass');\n\n  // build vertices etc\n  publicAPI.createVertexBuffer = () => {\n    // 4 corner points in clipping space in order (x, y, z) where z is always set to -1\n    // prettier-ignore\n    const ptsArray = new Float32Array([-1, -1, -1, 1, -1, -1, -1, 1, -1, 1, 1, -1]);\n\n    // 4 corresponding corner points in texture space in order (x, y)\n    const tcoordArray = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n\n    // a square defined as cell relation ship in order (cell_size, v1, v2, v3, v4)\n    const cellArray = new Uint16Array([4, 0, 1, 3, 2]);\n    const points = vtkDataArray.newInstance({\n      numberOfComponents: 3,\n      values: ptsArray\n    });\n    points.setName('points');\n    const tcoords = vtkDataArray.newInstance({\n      numberOfComponents: 2,\n      values: tcoordArray\n    });\n    tcoords.setName('tcoords');\n    const cells = vtkDataArray.newInstance({\n      numberOfComponents: 1,\n      values: cellArray\n    });\n    model.tris.getCABO().createVBO(cells, 'polys', Representation.SURFACE, {\n      points,\n      tcoords,\n      cellOffset: 0\n    });\n    model.VBOBuildTime.modified();\n  };\n  publicAPI.createFramebuffer = viewNode => {\n    const size = viewNode.getSize();\n    const gl = viewNode.getContext();\n    model.framebuffer = vtkOpenGLFramebuffer.newInstance();\n    model.framebuffer.setOpenGLRenderWindow(viewNode);\n    model.framebuffer.create(...size);\n    model.framebuffer.saveCurrentBindingsAndBuffers();\n    model.framebuffer.bind();\n    model.translucentRGBATexture = vtkOpenGLTexture.newInstance();\n    model.translucentRGBATexture.setInternalFormat(gl.RGBA16F);\n    model.translucentRGBATexture.setFormat(gl.RGBA);\n    model.translucentRGBATexture.setOpenGLDataType(gl.HALF_FLOAT);\n    model.translucentRGBATexture.setOpenGLRenderWindow(viewNode);\n    model.translucentRGBATexture.create2DFromRaw(size[0], size[1], 4, 'Float32Array', null);\n    model.translucentRTexture = vtkOpenGLTexture.newInstance();\n    model.translucentRTexture.setInternalFormat(gl.R16F);\n    model.translucentRTexture.setFormat(gl.RED);\n    model.translucentRTexture.setOpenGLDataType(gl.HALF_FLOAT);\n    model.translucentRTexture.setOpenGLRenderWindow(viewNode);\n    model.translucentRTexture.create2DFromRaw(size[0], size[1], 1, 'Float32Array', null);\n    model.translucentZTexture = vtkOpenGLTexture.newInstance();\n    model.translucentZTexture.setOpenGLRenderWindow(viewNode);\n    model.translucentZTexture.createDepthFromRaw(size[0], size[1], 'Float32Array', null);\n    model.framebuffer.setColorBuffer(model.translucentRGBATexture, 0);\n    model.framebuffer.setColorBuffer(model.translucentRTexture, 1);\n    model.framebuffer.setDepthBuffer(model.translucentZTexture);\n  };\n  publicAPI.createCopyShader = viewNode => {\n    model.copyShader = viewNode.getShaderCache().readyShaderProgramArray(['//VTK::System::Dec', 'attribute vec4 vertexDC;', 'attribute vec2 tcoordTC;', 'varying vec2 tcoord;', 'void main() { tcoord = tcoordTC; gl_Position = vertexDC; }'].join('\\n'), oitpFragTemplate, '');\n  };\n  publicAPI.createVBO = viewNode => {\n    const gl = viewNode.getContext();\n    model.tris.setOpenGLRenderWindow(viewNode);\n    publicAPI.createVertexBuffer();\n    const program = model.copyShader;\n    // prepare the vertex and triangle data for the image plane to render to\n\n    model.tris.getCABO().bind();\n    if (!model.copyVAO.addAttributeArray(program, model.tris.getCABO(), 'vertexDC', model.tris.getCABO().getVertexOffset(), model.tris.getCABO().getStride(), gl.FLOAT, 3, gl.FALSE)) {\n      vtkErrorMacro('Error setting vertexDC in copy shader VAO.');\n    }\n    if (!model.copyVAO.addAttributeArray(program, model.tris.getCABO(), 'tcoordTC', model.tris.getCABO().getTCoordOffset(), model.tris.getCABO().getStride(), gl.FLOAT, 2, gl.FALSE)) {\n      vtkErrorMacro('Error setting vertexDC in copy shader VAO.');\n    }\n  };\n  publicAPI.traverse = (viewNode, renNode, forwardPass) => {\n    if (model.deleted) {\n      return;\n    }\n    const size = viewNode.getSize();\n    const gl = viewNode.getContext();\n\n    // if we lack the webgl2 and half floatsupport just do\n    // basic alpha blending\n    model._supported = false;\n    if (renNode.getSelector() || !gl || !viewNode.getWebgl2() || !gl.getExtension('EXT_color_buffer_half_float') && !gl.getExtension('EXT_color_buffer_float')) {\n      publicAPI.setCurrentOperation('translucentPass');\n      renNode.traverse(publicAPI);\n      return;\n    }\n    model._supported = true;\n\n    // prepare framebuffer // allocate framebuffer if needed and bind it\n    if (model.framebuffer === null) {\n      publicAPI.createFramebuffer(viewNode);\n    } else {\n      const fbSize = model.framebuffer.getSize();\n      if (fbSize === null || fbSize[0] !== size[0] || fbSize[1] !== size[1]) {\n        model.framebuffer.releaseGraphicsResources();\n        model.translucentRGBATexture.releaseGraphicsResources(viewNode);\n        model.translucentRTexture.releaseGraphicsResources(viewNode);\n        model.translucentZTexture.releaseGraphicsResources(viewNode);\n        publicAPI.createFramebuffer(viewNode);\n      } else {\n        // store framebuffer bindings to restore them later\n        model.framebuffer.saveCurrentBindingsAndBuffers();\n        model.framebuffer.bind();\n      }\n    }\n    gl.drawBuffers([gl.COLOR_ATTACHMENT0]);\n    gl.clearBufferfv(gl.COLOR, 0, [0.0, 0.0, 0.0, 0.0]);\n    gl.clearBufferfv(gl.DEPTH, 0, [1.0]);\n    gl.colorMask(false, false, false, false);\n\n    // rerender the opaque pass to set the depth buffer\n    // TODO remove when webgl1 is deprecated and instead\n    // have the forward pass use a texture backed zbuffer\n    if (forwardPass.getOpaqueActorCount() > 0) {\n      // Don't use zBufferPass as it will also render the depth of translucent actors\n      forwardPass.setCurrentOperation('opaqueZBufferPass');\n      renNode.traverse(forwardPass);\n    }\n    gl.colorMask(true, true, true, true);\n    gl.drawBuffers([gl.COLOR_ATTACHMENT0, gl.COLOR_ATTACHMENT1]);\n\n    // make sure to clear the entire framebuffer as we will\n    // be blitting the entire thing all of it needs good initial values\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.scissor(0, 0, size[0], size[1]);\n    gl.clearBufferfv(gl.COLOR, 0, [0.0, 0.0, 0.0, 1.0]);\n    gl.clearBufferfv(gl.COLOR, 1, [0.0, 0.0, 0.0, 0.0]);\n    gl.enable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n\n    // basic gist is we accumulate color into RGB We compute final opacity\n    // into A We store accumulated opacity into R of the R texture.\n    gl.blendFuncSeparate(gl.ONE, gl.ONE, gl.ZERO, gl.ONE_MINUS_SRC_ALPHA);\n\n    // now do the translucent rendering\n    publicAPI.setCurrentOperation('translucentPass');\n    renNode.traverse(publicAPI);\n    gl.drawBuffers([gl.NONE]);\n    model.framebuffer.restorePreviousBindingsAndBuffers();\n    // gl.drawBuffers([gl.BACK]);\n\n    // make sure the copy shader is ready\n    if (model.copyShader === null) {\n      publicAPI.createCopyShader(viewNode);\n    } else {\n      viewNode.getShaderCache().readyShaderProgram(model.copyShader);\n    }\n\n    // make sure we have a VAO\n    if (!model.copyVAO) {\n      model.copyVAO = vtkVertexArrayObject.newInstance();\n      model.copyVAO.setOpenGLRenderWindow(viewNode);\n    }\n    model.copyVAO.bind();\n\n    // make sure the VBO is up to date\n    if (model.VBOBuildTime.getMTime() < publicAPI.getMTime()) {\n      publicAPI.createVBO(viewNode);\n    }\n    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.depthMask(false);\n    gl.depthFunc(gl.ALWAYS);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.scissor(0, 0, size[0], size[1]);\n\n    // activate texture\n    model.translucentRGBATexture.activate();\n    model.copyShader.setUniformi('translucentRGBATexture', model.translucentRGBATexture.getTextureUnit());\n    model.translucentRTexture.activate();\n    model.copyShader.setUniformi('translucentRTexture', model.translucentRTexture.getTextureUnit());\n\n    // render quad\n    gl.drawArrays(gl.TRIANGLES, 0, model.tris.getCABO().getElementCount());\n    gl.depthMask(true);\n    gl.depthFunc(gl.LEQUAL);\n    model.translucentRGBATexture.deactivate();\n    model.translucentRTexture.deactivate();\n\n    // restore scissor + viewport from renderer\n    const ts = renNode.getTiledSizeAndOrigin();\n    gl.scissor(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n    gl.viewport(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n  };\n  publicAPI.getShaderReplacement = () => {\n    if (model._supported) {\n      return translucentShaderReplacement;\n    }\n    return null;\n  };\n  publicAPI.releaseGraphicsResources = viewNode => {\n    if (model.framebuffer) {\n      model.framebuffer.releaseGraphicsResources(viewNode);\n      model.framebuffer = null;\n    }\n    if (model.translucentRGBATexture) {\n      model.translucentRGBATexture.releaseGraphicsResources(viewNode);\n      model.translucentRGBATexture = null;\n    }\n    if (model.translucentRTexture) {\n      model.translucentRTexture.releaseGraphicsResources(viewNode);\n      model.translucentRTexture = null;\n    }\n    if (model.translucentZTexture) {\n      model.translucentZTexture.releaseGraphicsResources(viewNode);\n      model.translucentZTexture = null;\n    }\n    if (model.copyVAO) {\n      model.copyVAO.releaseGraphicsResources(viewNode);\n      model.copyVAO = null;\n    }\n    if (model.copyShader) {\n      model.copyShader.releaseGraphicsResources(viewNode);\n      model.copyShader = null;\n    }\n    if (model.tris) {\n      model.tris.releaseGraphicsResources(viewNode);\n      model.tris = null;\n    }\n    publicAPI.modified();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  framebuffer: null,\n  copyShader: null,\n  tris: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  vtkRenderPass.extend(publicAPI, model, initialValues);\n  model.VBOBuildTime = {};\n  macro.obj(model.VBOBuildTime, {\n    mtime: 0\n  });\n  model.tris = vtkHelper.newInstance();\n  macro.get(publicAPI, model, ['framebuffer']);\n\n  // Object methods\n  vtkOpenGLOrderIndependentTranslucentPass(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkOpenGLOrderIndependentTranslucentPass');\n\n// ----------------------------------------------------------------------------\n\nvar vtkOpenGLOrderIndependentTranslucentPass$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkOpenGLOrderIndependentTranslucentPass$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkOpenGLFramebuffer from './Framebuffer.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\nimport vtkOpenGLOrderIndependentTranslucentPass from './OrderIndependentTranslucentPass.js';\n\n// ----------------------------------------------------------------------------\n\nfunction vtkForwardPass(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkForwardPass');\n\n  // this pass implements a forward rendering pipeline\n  // if both volumes and opaque geometry are present\n  // it will mix the two together by capturing a zbuffer\n  // first\n  publicAPI.traverse = function (viewNode) {\n    let parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (model.deleted) {\n      return;\n    }\n\n    // we just render our delegates in order\n    model._currentParent = parent;\n\n    // build\n    publicAPI.setCurrentOperation('buildPass');\n    viewNode.traverse(publicAPI);\n    const numlayers = viewNode.getRenderable().getNumberOfLayers();\n\n    // iterate over renderers\n    const renderers = viewNode.getRenderable().getRenderersByReference();\n    for (let i = 0; i < numlayers; i++) {\n      for (let index = 0; index < renderers.length; index++) {\n        const ren = renderers[index];\n        const renNode = viewNode.getViewNodeFor(ren);\n        if (ren.getDraw() && ren.getLayer() === i) {\n          // check for both opaque and volume actors\n          model.opaqueActorCount = 0;\n          model.translucentActorCount = 0;\n          model.volumeCount = 0;\n          model.overlayActorCount = 0;\n          publicAPI.setCurrentOperation('queryPass');\n          renNode.traverse(publicAPI);\n\n          // do we need to capture a zbuffer?\n          if ((model.opaqueActorCount > 0 || model.translucentActorCount > 0) && model.volumeCount > 0 || model.depthRequested) {\n            const size = viewNode.getFramebufferSize();\n            // make sure the framebuffer is setup\n            if (model.framebuffer === null) {\n              model.framebuffer = vtkOpenGLFramebuffer.newInstance();\n            }\n            model.framebuffer.setOpenGLRenderWindow(viewNode);\n            model.framebuffer.saveCurrentBindingsAndBuffers();\n            const fbSize = model.framebuffer.getSize();\n            if (fbSize === null || fbSize[0] !== size[0] || fbSize[1] !== size[1]) {\n              model.framebuffer.create(size[0], size[1]);\n              model.framebuffer.populateFramebuffer();\n            }\n            model.framebuffer.bind();\n            // opaqueZBufferPass only renders opaque actors\n            // zBufferPass renders both translucent and opaque actors\n            // we want to be able to pick translucent actors\n            publicAPI.setCurrentOperation('zBufferPass');\n            renNode.traverse(publicAPI);\n            model.framebuffer.restorePreviousBindingsAndBuffers();\n\n            // reset now that we have done it\n            model.depthRequested = false;\n          }\n          publicAPI.setCurrentOperation('cameraPass');\n          renNode.traverse(publicAPI);\n          if (model.opaqueActorCount > 0) {\n            publicAPI.setCurrentOperation('opaquePass');\n            renNode.traverse(publicAPI);\n          }\n          if (model.translucentActorCount > 0) {\n            if (!model.translucentPass) {\n              model.translucentPass = vtkOpenGLOrderIndependentTranslucentPass.newInstance();\n            }\n            model.translucentPass.traverse(viewNode, renNode, publicAPI);\n          }\n          if (model.volumeCount > 0) {\n            publicAPI.setCurrentOperation('volumePass');\n            renNode.traverse(publicAPI);\n          }\n          if (model.overlayActorCount > 0) {\n            publicAPI.setCurrentOperation('overlayPass');\n            renNode.traverse(publicAPI);\n          }\n        }\n      }\n    }\n  };\n  publicAPI.getZBufferTexture = () => {\n    if (model.framebuffer) {\n      return model.framebuffer.getColorTexture();\n    }\n    return null;\n  };\n  publicAPI.requestDepth = () => {\n    model.depthRequested = true;\n  };\n  publicAPI.incrementOpaqueActorCount = () => model.opaqueActorCount++;\n  publicAPI.incrementTranslucentActorCount = () => model.translucentActorCount++;\n  publicAPI.incrementVolumeCount = () => model.volumeCount++;\n  publicAPI.incrementOverlayActorCount = () => model.overlayActorCount++;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  opaqueActorCount: 0,\n  translucentActorCount: 0,\n  volumeCount: 0,\n  overlayActorCount: 0,\n  framebuffer: null,\n  depthRequested: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  vtkRenderPass.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['framebuffer', 'opaqueActorCount', 'translucentActorCount', 'volumeCount']);\n\n  // Object methods\n  vtkForwardPass(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkForwardPass');\n\n// ----------------------------------------------------------------------------\n\nvar vtkForwardPass$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkForwardPass$1 as default, extend, newInstance };\n","import Md5 from 'spark-md5';\nimport { m as macro } from '../../macros2.js';\nimport vtkShaderProgram from './ShaderProgram.js';\n\n// ----------------------------------------------------------------------------\n\nconst SET_GET_FIELDS = ['lastShaderProgramBound', 'context', '_openGLRenderWindow'];\n\n// ----------------------------------------------------------------------------\n// vtkShaderCache methods\n// ----------------------------------------------------------------------------\n\nfunction vtkShaderCache(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkShaderCache');\n  publicAPI.replaceShaderValues = (VSSource, FSSource, GSSource) => {\n    // first handle renaming any Fragment shader inputs\n    // if we have a geometry shader. By default fragment shaders\n    // assume their inputs come from a Vertex Shader. When we\n    // have a Geometry shader we rename the frament shader inputs\n    // to come from the geometry shader\n\n    let nFSSource = FSSource;\n    if (GSSource.length > 0) {\n      nFSSource = vtkShaderProgram.substitute(nFSSource, 'VSOut', 'GSOut').result;\n    }\n    const gl2 = model._openGLRenderWindow.getWebgl2();\n    let fragDepthString = '\\n';\n    let version = '#version 100\\n';\n    if (gl2) {\n      version = '#version 300 es\\n' + '#define attribute in\\n' + '#define textureCube texture\\n' + '#define texture2D texture\\n' + '#define textureCubeLod textureLod\\n' + '#define texture2DLod textureLod\\n';\n    } else {\n      model.context.getExtension('OES_standard_derivatives');\n      if (model.context.getExtension('EXT_frag_depth')) {\n        fragDepthString = '#extension GL_EXT_frag_depth : enable\\n';\n      }\n      if (model.context.getExtension('EXT_shader_texture_lod')) {\n        fragDepthString += '#extension GL_EXT_shader_texture_lod : enable\\n' + '#define textureCubeLod textureCubeLodEXT\\n' + '#define texture2DLod texture2DLodEXT';\n      }\n    }\n    nFSSource = vtkShaderProgram.substitute(nFSSource, '//VTK::System::Dec', [`${version}\\n`, gl2 ? '' : '#extension GL_OES_standard_derivatives : enable\\n', fragDepthString, '#ifdef GL_FRAGMENT_PRECISION_HIGH', 'precision highp float;', 'precision highp int;', '#else', 'precision mediump float;', 'precision mediump int;', '#endif']).result;\n    let nVSSource = vtkShaderProgram.substitute(VSSource, '//VTK::System::Dec', [`${version}\\n`, '#ifdef GL_FRAGMENT_PRECISION_HIGH', 'precision highp float;', 'precision highp int;', '#else', 'precision mediump float;', 'precision mediump int;', '#endif']).result;\n    if (gl2) {\n      nVSSource = vtkShaderProgram.substitute(nVSSource, 'varying', 'out').result;\n      nFSSource = vtkShaderProgram.substitute(nFSSource, 'varying', 'in').result;\n      let shaderOutputs = '';\n      let outputCount = 0;\n      while (nFSSource.includes(`gl_FragData[${outputCount}]`)) {\n        nFSSource = vtkShaderProgram.substitute(nFSSource, `gl_FragData\\\\[${outputCount}\\\\]`, `fragOutput${outputCount}`).result;\n        shaderOutputs += `layout(location = ${outputCount}) out vec4 fragOutput${outputCount};\\n`;\n        outputCount++;\n      }\n      nFSSource = vtkShaderProgram.substitute(nFSSource, '//VTK::Output::Dec', shaderOutputs).result;\n    }\n\n    // nFSSource = ShaderProgram.substitute(nFSSource, 'gl_FragData\\\\[0\\\\]',\n    //   'gl_FragColor').result;\n\n    const nGSSource = vtkShaderProgram.substitute(GSSource, '//VTK::System::Dec', version).result;\n    return {\n      VSSource: nVSSource,\n      FSSource: nFSSource,\n      GSSource: nGSSource\n    };\n  };\n\n  // return NULL if there is an issue\n  publicAPI.readyShaderProgramArray = (vertexCode, fragmentCode, geometryCode) => {\n    const data = publicAPI.replaceShaderValues(vertexCode, fragmentCode, geometryCode);\n    const shaderProgram = publicAPI.getShaderProgram(data.VSSource, data.FSSource, data.GSSource);\n    return publicAPI.readyShaderProgram(shaderProgram);\n  };\n  publicAPI.readyShaderProgram = program => {\n    if (!program) {\n      return null;\n    }\n\n    // compile if needed\n    if (!program.getCompiled() && !program.compileShader()) {\n      return null;\n    }\n\n    // bind if needed\n    if (!publicAPI.bindShaderProgram(program)) {\n      return null;\n    }\n    return program;\n  };\n  publicAPI.getShaderProgram = (vertexCode, fragmentCode, geometryCode) => {\n    // compute the MD5 and the check the map\n    const hashInput = `${vertexCode}${fragmentCode}${geometryCode}`;\n    const result = Md5.hash(hashInput);\n\n    // does it already exist?\n    if (!(result in model.shaderPrograms)) {\n      // create one\n      const sps = vtkShaderProgram.newInstance();\n      sps.setContext(model.context);\n      sps.getVertexShader().setSource(vertexCode);\n      sps.getFragmentShader().setSource(fragmentCode);\n      if (geometryCode) {\n        sps.getGeometryShader().setSource(geometryCode);\n      }\n      sps.setMd5Hash(result);\n      model.shaderPrograms[result] = sps;\n      return sps;\n    }\n    return model.shaderPrograms[result];\n  };\n  publicAPI.releaseGraphicsResources = win => {\n    // NOTE:\n    // In the current implementation as of October 26th, if a shader\n    // program is created by ShaderCache then it should make sure\n    // that it releases the graphics resources used by these programs.\n    // It is not wisely for callers to do that since then they would\n    // have to loop over all the programs were in use and invoke\n    // release graphics resources individually.\n\n    publicAPI.releaseCurrentShaderProgram();\n    Object.keys(model.shaderPrograms).map(key => model.shaderPrograms[key]).forEach(sp => sp.cleanup());\n    model.shaderPrograms = {};\n  };\n  publicAPI.releaseCurrentShaderProgram = () => {\n    // release prior shader\n    if (model.lastShaderProgramBound) {\n      model.lastShaderProgramBound.cleanup();\n      model.lastShaderProgramBound = null;\n    }\n  };\n  publicAPI.bindShaderProgram = program => {\n    if (model.lastShaderProgramBound === program) {\n      return 1;\n    }\n\n    // release prior program\n    if (model.lastShaderProgramBound) {\n      model.lastShaderProgramBound.release();\n    }\n    program.bind();\n    model.lastShaderProgramBound = program;\n    return 1;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  lastShaderProgramBound: null,\n  shaderPrograms: null,\n  context: null\n  // _openGLRenderWindow: null,\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Internal objects\n  model.shaderPrograms = {};\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, SET_GET_FIELDS);\n  macro.moveToProtected(publicAPI, model, ['openGLRenderWindow']);\n\n  // Object methods\n  vtkShaderCache(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkShaderCache');\n\n// ----------------------------------------------------------------------------\n\nvar vtkShaderCache$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkShaderCache$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLTextureUnitManager methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLTextureUnitManager(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLTextureUnitManager');\n\n  // ----------------------------------------------------------------------------\n  // Description:\n  // Delete the allocation table and check if it is not called before\n  // all the texture units have been released.\n  publicAPI.deleteTable = () => {\n    for (let i = 0; i < model.numberOfTextureUnits; ++i) {\n      if (model.textureUnits[i] === true) {\n        vtkErrorMacro('some texture units  were not properly released');\n      }\n    }\n    model.textureUnits = [];\n    model.numberOfTextureUnits = 0;\n  };\n\n  // ----------------------------------------------------------------------------\n  publicAPI.setContext = ctx => {\n    if (model.context !== ctx) {\n      if (model.context !== 0) {\n        publicAPI.deleteTable();\n      }\n      model.context = ctx;\n      if (model.context) {\n        model.numberOfTextureUnits = ctx.getParameter(ctx.MAX_TEXTURE_IMAGE_UNITS);\n        for (let i = 0; i < model.numberOfTextureUnits; ++i) {\n          model.textureUnits[i] = false;\n        }\n      }\n      publicAPI.modified();\n    }\n  };\n\n  // ----------------------------------------------------------------------------\n  // Description:\n  // Reserve a texture unit. It returns its number.\n  // It returns -1 if the allocation failed (because there are no more\n  // texture units left).\n  // \\post valid_result: result==-1 || result>=0 && result<this->GetNumberOfTextureUnits())\n  // \\post allocated: result==-1 || this->IsAllocated(result)\n  publicAPI.allocate = () => {\n    for (let i = 0; i < model.numberOfTextureUnits; i++) {\n      if (!publicAPI.isAllocated(i)) {\n        model.textureUnits[i] = true;\n        return i;\n      }\n    }\n    return -1;\n  };\n  publicAPI.allocateUnit = unit => {\n    if (publicAPI.isAllocated(unit)) {\n      return -1;\n    }\n    model.textureUnits[unit] = true;\n    return unit;\n  };\n\n  // ----------------------------------------------------------------------------\n  // Description:\n  // Tell if texture unit `textureUnitId' is already allocated.\n  // \\pre valid_id_range : textureUnitId>=0 && textureUnitId<this->GetNumberOfTextureUnits()\n  publicAPI.isAllocated = textureUnitId => model.textureUnits[textureUnitId];\n\n  // ----------------------------------------------------------------------------\n  // Description:\n  // Release a texture unit.\n  // \\pre valid_id: textureUnitId>=0 && textureUnitId<this->GetNumberOfTextureUnits()\n  // \\pre allocated_id: this->IsAllocated(textureUnitId)\n  publicAPI.free = val => {\n    model.textureUnits[val] = false;\n  };\n  publicAPI.freeAll = () => {\n    for (let i = 0; i < model.numberOfTextureUnits; ++i) {\n      model.textureUnits[i] = false;\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  numberOfTextureUnits: 0,\n  textureUnits: 0\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  model.textureUnits = [];\n\n  // Build VTK API\n  macro.get(publicAPI, model, ['numberOfTextureUnits']);\n  macro.setGet(publicAPI, model, ['context']);\n\n  // Object methods\n  vtkOpenGLTextureUnitManager(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkOpenGLTextureUnitManager');\n\n// ----------------------------------------------------------------------------\n\nvar vtkTextureUnitManager = {\n  newInstance,\n  extend\n};\n\nexport { vtkTextureUnitManager as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkViewNode from './ViewNode.js';\n\n// ----------------------------------------------------------------------------\n// vtkRenderWindowViewNode is intended to be a superclass for all api specific\n// RenderWindows. It is intended to define a common API that can be invoked\n// upon an api specific render window and provide some common method\n// implementations. If your application requires communicating with an api specific\n// view try to limit such interactions to methods defined in this class.\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// vtkRenderWindowViewNode methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindowViewNode(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindowViewNode');\n  publicAPI.getViewNodeFactory = () => null;\n  publicAPI.getAspectRatio = () => model.size[0] / model.size[1];\n  publicAPI.getAspectRatioForRenderer = renderer => {\n    const viewport = renderer.getViewportByReference();\n    return model.size[0] * (viewport[2] - viewport[0]) / ((viewport[3] - viewport[1]) * model.size[1]);\n  };\n  publicAPI.isInViewport = (x, y, viewport) => {\n    const vCoords = viewport.getViewportByReference();\n    const size = publicAPI.getFramebufferSize();\n    if (vCoords[0] * size[0] <= x && vCoords[2] * size[0] >= x && vCoords[1] * size[1] <= y && vCoords[3] * size[1] >= y) {\n      return true;\n    }\n    return false;\n  };\n  publicAPI.getViewportSize = viewport => {\n    const vCoords = viewport.getViewportByReference();\n    const size = publicAPI.getFramebufferSize();\n    return [(vCoords[2] - vCoords[0]) * size[0], (vCoords[3] - vCoords[1]) * size[1]];\n  };\n  publicAPI.getViewportCenter = viewport => {\n    const size = publicAPI.getViewportSize(viewport);\n    return [size[0] * 0.5, size[1] * 0.5];\n  };\n  publicAPI.displayToNormalizedDisplay = (x, y, z) => {\n    const size = publicAPI.getFramebufferSize();\n    return [x / size[0], y / size[1], z];\n  };\n  publicAPI.normalizedDisplayToDisplay = (x, y, z) => {\n    const size = publicAPI.getFramebufferSize();\n    return [x * size[0], y * size[1], z];\n  };\n  publicAPI.worldToView = (x, y, z, renderer) => renderer.worldToView(x, y, z);\n  publicAPI.viewToWorld = (x, y, z, renderer) => renderer.viewToWorld(x, y, z);\n  publicAPI.worldToDisplay = (x, y, z, renderer) => {\n    const val = renderer.worldToView(x, y, z);\n    const dims = publicAPI.getViewportSize(renderer);\n    const val2 = renderer.viewToProjection(val[0], val[1], val[2], dims[0] / dims[1]);\n    const val3 = renderer.projectionToNormalizedDisplay(val2[0], val2[1], val2[2]);\n    return publicAPI.normalizedDisplayToDisplay(val3[0], val3[1], val3[2]);\n  };\n  publicAPI.displayToWorld = (x, y, z, renderer) => {\n    const val = publicAPI.displayToNormalizedDisplay(x, y, z);\n    const val2 = renderer.normalizedDisplayToProjection(val[0], val[1], val[2]);\n    const dims = publicAPI.getViewportSize(renderer);\n    const val3 = renderer.projectionToView(val2[0], val2[1], val2[2], dims[0] / dims[1]);\n    return renderer.viewToWorld(val3[0], val3[1], val3[2]);\n  };\n  publicAPI.normalizedDisplayToViewport = (x, y, z, renderer) => {\n    let vCoords = renderer.getViewportByReference();\n    vCoords = publicAPI.normalizedDisplayToDisplay(vCoords[0], vCoords[1], 0.0);\n    const coords = publicAPI.normalizedDisplayToDisplay(x, y, z);\n    return [coords[0] - vCoords[0] - 0.5, coords[1] - vCoords[1] - 0.5, z];\n  };\n  publicAPI.viewportToNormalizedViewport = (x, y, z, renderer) => {\n    const size = publicAPI.getViewportSize(renderer);\n    if (size && size[0] !== 0 && size[1] !== 0) {\n      return [x / (size[0] - 1.0), y / (size[1] - 1.0), z];\n    }\n    return [x, y, z];\n  };\n  publicAPI.normalizedViewportToViewport = (x, y, z, renderer) => {\n    const size = publicAPI.getViewportSize(renderer);\n    return [x * (size[0] - 1.0), y * (size[1] - 1.0), z];\n  };\n  publicAPI.displayToLocalDisplay = (x, y, z) => {\n    const size = publicAPI.getFramebufferSize();\n    return [x, size[1] - y - 1, z];\n  };\n  publicAPI.viewportToNormalizedDisplay = (x, y, z, renderer) => {\n    let vCoords = renderer.getViewportByReference();\n    vCoords = publicAPI.normalizedDisplayToDisplay(vCoords[0], vCoords[1], 0.0);\n    const x2 = x + vCoords[0] + 0.5;\n    const y2 = y + vCoords[1] + 0.5;\n    return publicAPI.displayToNormalizedDisplay(x2, y2, z);\n  };\n  publicAPI.getComputedDevicePixelRatio = () => model.size[0] / publicAPI.getContainerSize()[0];\n  publicAPI.getContainerSize = () => {\n    macro.vtkErrorMacro('not implemented');\n  };\n  publicAPI.getPixelData = (x1, y1, x2, y2) => {\n    macro.vtkErrorMacro('not implemented');\n  };\n  publicAPI.createSelector = () => {\n    macro.vtkErrorMacro('not implemented');\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  size: undefined,\n  selector: undefined\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  if (!model.size) {\n    model.size = [300, 300];\n  }\n  macro.getArray(publicAPI, model, ['size'], 2);\n  macro.get(publicAPI, model, ['selector']);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  // Object methods\n  vtkRenderWindowViewNode(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkRenderWindowViewNode');\n\n// ----------------------------------------------------------------------------\n\nvar vtkRenderWindowViewNode$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkRenderWindowViewNode$1 as default, extend, newInstance };\n","// This is used to access the underlying 3D context\nconst GET_UNDERLYING_CONTEXT = '__getUnderlyingContext';\nfunction createContextProxyHandler() {\n  const cache = new Map();\n  const getParameterHandler = {\n    apply(target, gl, args) {\n      if (cache.has(args[0])) {\n        return cache.get(args[0]);\n      }\n      return target.apply(gl, args);\n    }\n  };\n\n  // only supports single-value setters\n  function cachedSetterHandler(key) {\n    return {\n      apply(target, gl, args) {\n        cache.set(key, args[0]);\n        return target.apply(gl, args);\n      }\n    };\n  }\n\n  // When a property is accessed on the webgl context proxy,\n  // it's accessed is intercepted. If the property name matches\n  // any of the keys of `propHandlers`, then that handler is called\n  // with the following arguments: (gl, prop, receiver, propValue)\n  // - gl (WebGL2RenderingContext): the underlying webgl context\n  // - propName (string): the property name\n  // - receiver (Proxy): the webgl context proxy\n  // - propValue (unknown): the value of `gl[propName]`\n\n  const propHandlers = Object.create(null);\n\n  // Sets getParameter(property) as a cached getter proxy.\n  // propValue.bind(gl) is to avoid Illegal Invocation errors.\n  propHandlers.getParameter = (gl, prop, receiver, propValue) => new Proxy(propValue.bind(gl), getParameterHandler);\n\n  // Sets depthMask(flag) as a cached setter proxy.\n  propHandlers.depthMask = (gl, prop, receiver, propValue) => new Proxy(propValue.bind(gl), cachedSetterHandler(gl.DEPTH_WRITEMASK));\n  return {\n    get(gl, prop, receiver) {\n      if (prop === GET_UNDERLYING_CONTEXT) return () => gl;\n      let value = Reflect.get(gl, prop, gl);\n      if (value instanceof Function) {\n        // prevents Illegal Invocation errors\n        value = value.bind(gl);\n      }\n      const propHandler = propHandlers[prop];\n      if (propHandler) {\n        return propHandler(gl, prop, receiver, value);\n      }\n      return value;\n    }\n  };\n}\nvar ContextProxy = {\n  createContextProxyHandler\n};\n\nexport { GET_UNDERLYING_CONTEXT, createContextProxyHandler, ContextProxy as default };\n","import { VtkDataTypes } from '../../Common/Core/DataArray/Constants.js';\nimport { m as macro } from '../../macros2.js';\nimport { registerViewConstructor } from '../Core/RenderWindow.js';\nimport vtkForwardPass from './ForwardPass.js';\nimport vtkHardwareSelector from './HardwareSelector.js';\nimport vtkShaderCache from './ShaderCache.js';\nimport vtkTextureUnitManager from './TextureUnitManager.js';\nimport vtkViewNodeFactory, { registerOverride } from './ViewNodeFactory.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\nimport vtkRenderWindowViewNode from '../SceneGraph/RenderWindowViewNode.js';\nimport { createContextProxyHandler } from './RenderWindow/ContextProxy.js';\n\nconst {\n  vtkDebugMacro,\n  vtkErrorMacro\n} = macro;\nconst SCREENSHOT_PLACEHOLDER = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%'\n};\nconst parentMethodsToProxy = ['activateTexture', 'deactivateTexture', 'disableCullFace', 'enableCullFace', 'get3DContext', 'getActiveFramebuffer', 'getContext', 'getDefaultTextureByteSize', 'getDefaultTextureInternalFormat', 'getDefaultToWebgl2', 'getGLInformations', 'getGraphicsMemoryInfo', 'getGraphicsResourceForObject', 'getHardwareMaximumLineWidth', 'getPixelData', 'getShaderCache', 'getTextureUnitForTexture', 'getTextureUnitManager', 'getWebgl2', 'makeCurrent', 'releaseGraphicsResources', 'registerGraphicsResourceUser', 'unregisterGraphicsResourceUser', 'restoreContext', 'setActiveFramebuffer', 'setContext', 'setDefaultToWebgl2', 'setGraphicsResourceForObject'];\nfunction checkRenderTargetSupport(gl, format, type) {\n  // create temporary frame buffer and texture\n  const framebuffer = gl.createFramebuffer();\n  const texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texImage2D(gl.TEXTURE_2D, 0, format, 2, 2, 0, format, type, null);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n  // check frame buffer status\n  const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\n  // clean up\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return status === gl.FRAMEBUFFER_COMPLETE;\n}\n\n// ----------------------------------------------------------------------------\n// Monitor the usage of GL context across vtkOpenGLRenderWindow instances\n// ----------------------------------------------------------------------------\n\nlet GL_CONTEXT_COUNT = 0;\nconst GL_CONTEXT_LISTENERS = [];\nfunction createGLContext() {\n  GL_CONTEXT_COUNT++;\n  GL_CONTEXT_LISTENERS.forEach(cb => cb(GL_CONTEXT_COUNT));\n}\nfunction deleteGLContext() {\n  GL_CONTEXT_COUNT--;\n  GL_CONTEXT_LISTENERS.forEach(cb => cb(GL_CONTEXT_COUNT));\n}\nfunction pushMonitorGLContextCount(cb) {\n  GL_CONTEXT_LISTENERS.push(cb);\n}\nfunction popMonitorGLContextCount(cb) {\n  return GL_CONTEXT_LISTENERS.pop();\n}\nfunction _preventDefault(e) {\n  e.preventDefault();\n}\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLRenderWindow methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLRenderWindow(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLRenderWindow');\n\n  // Only create a cachingContextHandler if needed\n  let cachingContextHandler;\n  function getCachingContextHandler() {\n    if (!cachingContextHandler) {\n      cachingContextHandler = createContextProxyHandler();\n    }\n    return cachingContextHandler;\n  }\n  publicAPI.getViewNodeFactory = () => model.myFactory;\n\n  // prevent default context lost handler\n  model.canvas.addEventListener('webglcontextlost', _preventDefault, false);\n  model.canvas.addEventListener('webglcontextrestored', publicAPI.restoreContext, false);\n\n  // Auto update style\n  const previousSize = [0, 0];\n  function updateWindow() {\n    // Canvas size\n    if (model.renderable) {\n      if (model.size[0] !== previousSize[0] || model.size[1] !== previousSize[1]) {\n        previousSize[0] = model.size[0];\n        previousSize[1] = model.size[1];\n        model.canvas.setAttribute('width', model.size[0]);\n        model.canvas.setAttribute('height', model.size[1]);\n      }\n    }\n\n    // ImageStream size\n    if (model.viewStream) {\n      // If same size that's a NoOp\n      model.viewStream.setSize(model.size[0], model.size[1]);\n    }\n\n    // Offscreen ?\n    model.canvas.style.display = model.useOffScreen ? 'none' : 'block';\n\n    // Cursor type\n    if (model.el) {\n      model.el.style.cursor = model.cursorVisibility ? model.cursor : 'none';\n    }\n\n    // Invalidate cached DOM container size\n    model.containerSize = null;\n  }\n  publicAPI.onModified(updateWindow);\n\n  // Builds myself.\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNodes(model.renderable.getRenderersByReference());\n      publicAPI.addMissingNodes(model.renderable.getChildRenderWindowsByReference());\n      publicAPI.removeUnusedNodes();\n      publicAPI.initialize();\n      model.children.forEach(child => {\n        // Children can be openGl renderer or openGl render windows\n        // Only openGl renderers have a method setOpenGLRenderWindow\n        child.setOpenGLRenderWindow?.(publicAPI);\n      });\n    }\n  };\n  publicAPI.initialize = () => {\n    if (!model.initialized) {\n      // Set root parent if there is one\n      // Some methods of the root parent are proxied (see parentMethodsToProxy)\n      model.rootOpenGLRenderWindow = publicAPI.getLastAncestorOfType('vtkOpenGLRenderWindow');\n      if (model.rootOpenGLRenderWindow) {\n        // Initialize a 2D context that will copy the content of the root parent\n        model.context2D = publicAPI.get2DContext();\n      } else {\n        // Initialize a 3D context that may be used by child render windows\n        model.context = publicAPI.get3DContext();\n        publicAPI.resizeFromChildRenderWindows();\n        if (model.context) {\n          createGLContext();\n        }\n        model.textureUnitManager = vtkTextureUnitManager.newInstance();\n        model.textureUnitManager.setContext(model.context);\n        model.shaderCache.setContext(model.context);\n        // initialize blending for transparency\n        const gl = model.context;\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.depthFunc(gl.LEQUAL);\n        gl.enable(gl.BLEND);\n      }\n      model.initialized = true;\n    }\n  };\n  publicAPI.makeCurrent = () => {\n    model.context.makeCurrent();\n  };\n  publicAPI.setContainer = el => {\n    if (model.el && model.el !== el) {\n      if (model.canvas.parentNode !== model.el) {\n        vtkErrorMacro('Error: canvas parent node does not match container');\n      }\n\n      // Remove canvas from previous container\n      model.el.removeChild(model.canvas);\n\n      // If the renderer has previously added\n      // a background image, remove it from the DOM.\n      if (model.el.contains(model.bgImage)) {\n        model.el.removeChild(model.bgImage);\n      }\n    }\n    if (model.el !== el) {\n      model.el = el;\n      if (model.el) {\n        model.el.appendChild(model.canvas);\n\n        // If the renderer is set to use a background\n        // image, attach it to the DOM.\n        if (model.useBackgroundImage) {\n          model.el.appendChild(model.bgImage);\n        }\n      }\n\n      // Trigger modified()\n      publicAPI.modified();\n    }\n  };\n  publicAPI.getContainer = () => model.el;\n  publicAPI.getContainerSize = () => {\n    if (!model.containerSize && model.el) {\n      const {\n        width,\n        height\n      } = model.el.getBoundingClientRect();\n      model.containerSize = [width, height];\n    }\n    return model.containerSize || model.size;\n  };\n  publicAPI.getFramebufferSize = () => {\n    const fbSize = model.activeFramebuffer?.getSize();\n    return fbSize || model.size;\n  };\n  publicAPI.getPixelData = (x1, y1, x2, y2) => {\n    const pixels = new Uint8Array((x2 - x1 + 1) * (y2 - y1 + 1) * 4);\n    model.context.readPixels(x1, y1, x2 - x1 + 1, y2 - y1 + 1, model.context.RGBA, model.context.UNSIGNED_BYTE, pixels);\n    return pixels;\n  };\n  publicAPI.get3DContext = function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      preserveDrawingBuffer: false,\n      depth: true,\n      alpha: true,\n      powerPreference: 'high-performance'\n    };\n    let result = null;\n    const webgl2Supported = typeof WebGL2RenderingContext !== 'undefined';\n    model.webgl2 = false;\n    if (model.defaultToWebgl2 && webgl2Supported) {\n      result = model.canvas.getContext('webgl2', options);\n      if (result) {\n        model.webgl2 = true;\n        vtkDebugMacro('using webgl2');\n      }\n    }\n    if (!result) {\n      vtkDebugMacro('using webgl1');\n      result = model.canvas.getContext('webgl', options) || model.canvas.getContext('experimental-webgl', options);\n    }\n    return new Proxy(result, getCachingContextHandler());\n  };\n  publicAPI.get2DContext = function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return model.canvas.getContext('2d', options);\n  };\n  publicAPI.restoreContext = () => {\n    const rp = vtkRenderPass.newInstance();\n    rp.setCurrentOperation('Release');\n    rp.traverse(publicAPI, null);\n  };\n  publicAPI.activateTexture = texture => {\n    // Only add if it isn't already there\n    const result = model._textureResourceIds.get(texture);\n    if (result !== undefined) {\n      model.context.activeTexture(model.context.TEXTURE0 + result);\n      return;\n    }\n    const activeUnit = publicAPI.getTextureUnitManager().allocate();\n    if (activeUnit < 0) {\n      vtkErrorMacro('Hardware does not support the number of textures defined.');\n      return;\n    }\n    model._textureResourceIds.set(texture, activeUnit);\n    model.context.activeTexture(model.context.TEXTURE0 + activeUnit);\n  };\n  publicAPI.deactivateTexture = texture => {\n    // Only deactivate if it isn't already there\n    const result = model._textureResourceIds.get(texture);\n    if (result !== undefined) {\n      publicAPI.getTextureUnitManager().free(result);\n      model._textureResourceIds.delete(texture);\n    }\n  };\n  publicAPI.getTextureUnitForTexture = texture => {\n    const result = model._textureResourceIds.get(texture);\n    if (result !== undefined) {\n      return result;\n    }\n    return -1;\n  };\n  publicAPI.getDefaultTextureByteSize = function (vtkType) {\n    let oglNorm16Ext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let useHalfFloat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (model.webgl2) {\n      switch (vtkType) {\n        case VtkDataTypes.CHAR:\n        case VtkDataTypes.SIGNED_CHAR:\n        case VtkDataTypes.UNSIGNED_CHAR:\n          return 1;\n        case oglNorm16Ext:\n        case useHalfFloat:\n        case VtkDataTypes.UNSIGNED_SHORT:\n        case VtkDataTypes.SHORT:\n        case VtkDataTypes.VOID:\n          // Used for unsigned int depth\n          return 2;\n        default:\n          // For all other cases, assume float\n          return 4;\n      }\n    }\n\n    // webgl1 type support is limited to 1 byte\n    return 1;\n  };\n  publicAPI.getDefaultTextureInternalFormat = function (vtktype, numComps) {\n    let oglNorm16Ext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let useHalfFloat = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    if (model.webgl2) {\n      switch (vtktype) {\n        case VtkDataTypes.UNSIGNED_CHAR:\n          switch (numComps) {\n            case 1:\n              return model.context.R8;\n            case 2:\n              return model.context.RG8;\n            case 3:\n              return model.context.RGB8;\n            case 4:\n            default:\n              return model.context.RGBA8;\n          }\n        case oglNorm16Ext && !useHalfFloat && VtkDataTypes.UNSIGNED_SHORT:\n          switch (numComps) {\n            case 1:\n              return oglNorm16Ext.R16_EXT;\n            case 2:\n              return oglNorm16Ext.RG16_EXT;\n            case 3:\n              return oglNorm16Ext.RGB16_EXT;\n            case 4:\n            default:\n              return oglNorm16Ext.RGBA16_EXT;\n          }\n        // prioritize norm16 over float\n        case oglNorm16Ext && !useHalfFloat && VtkDataTypes.SHORT:\n          switch (numComps) {\n            case 1:\n              return oglNorm16Ext.R16_SNORM_EXT;\n            case 2:\n              return oglNorm16Ext.RG16_SNORM_EXT;\n            case 3:\n              return oglNorm16Ext.RGB16_SNORM_EXT;\n            case 4:\n            default:\n              return oglNorm16Ext.RGBA16_SNORM_EXT;\n          }\n        case VtkDataTypes.UNSIGNED_SHORT:\n        case VtkDataTypes.SHORT:\n        case VtkDataTypes.FLOAT:\n        default:\n          // useHalfFloat tells us if the texture can be accurately\n          // rendered with 16 bits or not.\n          switch (numComps) {\n            case 1:\n              return useHalfFloat ? model.context.R16F : model.context.R32F;\n            case 2:\n              return useHalfFloat ? model.context.RG16F : model.context.RG32F;\n            case 3:\n              return useHalfFloat ? model.context.RGB16F : model.context.RGB32F;\n            case 4:\n            default:\n              return useHalfFloat ? model.context.RGBA16F : model.context.RGBA32F;\n          }\n      }\n    }\n\n    // webgl1 only supports four types\n    switch (numComps) {\n      case 1:\n        return model.context.LUMINANCE;\n      case 2:\n        return model.context.LUMINANCE_ALPHA;\n      case 3:\n        return model.context.RGB;\n      case 4:\n      default:\n        return model.context.RGBA;\n    }\n  };\n  publicAPI.setBackgroundImage = img => {\n    model.bgImage.src = img.src;\n  };\n  publicAPI.setUseBackgroundImage = value => {\n    model.useBackgroundImage = value;\n\n    // Add or remove the background image from the\n    // DOM as specified.\n    if (model.useBackgroundImage && !model.el.contains(model.bgImage)) {\n      model.el.appendChild(model.bgImage);\n    } else if (!model.useBackgroundImage && model.el.contains(model.bgImage)) {\n      model.el.removeChild(model.bgImage);\n    }\n  };\n  function getCanvasDataURL() {\n    let format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : model.imageFormat;\n    // Copy current canvas to not modify the original\n    const temporaryCanvas = document.createElement('canvas');\n    const temporaryContext = temporaryCanvas.getContext('2d');\n    temporaryCanvas.width = model.canvas.width;\n    temporaryCanvas.height = model.canvas.height;\n    temporaryContext.drawImage(model.canvas, 0, 0);\n\n    // Get current client rect to place canvas\n    const mainBoundingClientRect = model.canvas.getBoundingClientRect();\n    const renderWindow = model.renderable;\n    const renderers = renderWindow.getRenderers();\n    renderers.forEach(renderer => {\n      const viewProps = renderer.getViewProps();\n      viewProps.forEach(viewProp => {\n        // Check if the prop has a container that should have canvas\n        if (viewProp.getContainer) {\n          const container = viewProp.getContainer();\n          const canvasList = container.getElementsByTagName('canvas');\n          // Go throughout all canvas and copy it into temporary main canvas\n          for (let i = 0; i < canvasList.length; i++) {\n            const currentCanvas = canvasList[i];\n            const boundingClientRect = currentCanvas.getBoundingClientRect();\n            const newXPosition = boundingClientRect.x - mainBoundingClientRect.x;\n            const newYPosition = boundingClientRect.y - mainBoundingClientRect.y;\n            temporaryContext.drawImage(currentCanvas, newXPosition, newYPosition);\n          }\n        }\n      });\n    });\n    const screenshot = temporaryCanvas.toDataURL(format);\n    temporaryCanvas.remove();\n    publicAPI.invokeImageReady(screenshot);\n  }\n  publicAPI.captureNextImage = function () {\n    let format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'image/png';\n    let {\n      resetCamera = false,\n      size = null,\n      scale = 1\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (model.deleted) {\n      return null;\n    }\n    model.imageFormat = format;\n    const previous = model.notifyStartCaptureImage;\n    model.notifyStartCaptureImage = true;\n    model._screenshot = {\n      size: !!size || scale !== 1 ? size || model.size.map(val => val * scale) : null\n    };\n    return new Promise((resolve, reject) => {\n      const subscription = publicAPI.onImageReady(imageURL => {\n        if (model._screenshot.size === null) {\n          model.notifyStartCaptureImage = previous;\n          subscription.unsubscribe();\n          if (model._screenshot.placeHolder) {\n            // resize the main canvas back to its original size and show it\n            model.size = model._screenshot.originalSize;\n\n            // process the resize\n            publicAPI.modified();\n\n            // restore the saved camera parameters, if applicable\n            if (model._screenshot.cameras) {\n              model._screenshot.cameras.forEach(_ref => {\n                let {\n                  restoreParamsFn,\n                  arg\n                } = _ref;\n                return restoreParamsFn(arg);\n              });\n            }\n\n            // Trigger a render at the original size\n            publicAPI.traverseAllPasses();\n\n            // Remove and clean up the placeholder, revealing the original\n            model.el.removeChild(model._screenshot.placeHolder);\n            model._screenshot.placeHolder.remove();\n            model._screenshot = null;\n          }\n          resolve(imageURL);\n        } else {\n          // Create a placeholder image overlay while we resize and render\n          const tmpImg = document.createElement('img');\n          tmpImg.style = SCREENSHOT_PLACEHOLDER;\n          tmpImg.src = imageURL;\n          model._screenshot.placeHolder = model.el.appendChild(tmpImg);\n\n          // hide the main canvas\n          model.canvas.style.display = 'none';\n\n          // remember the main canvas original size, then resize it\n          model._screenshot.originalSize = model.size;\n          model.size = model._screenshot.size;\n          model.rootOpenGLRenderWindow?.resizeFromChildRenderWindows();\n          model._screenshot.size = null;\n\n          // process the resize\n          publicAPI.modified();\n          if (resetCamera) {\n            const isUserResetCamera = resetCamera !== true;\n\n            // If resetCamera was requested, we first save camera parameters\n            // from all the renderers, so we can restore them later\n            model._screenshot.cameras = model.renderable.getRenderers().map(renderer => {\n              const camera = renderer.getActiveCamera();\n              const params = camera.get('focalPoint', 'position', 'parallelScale');\n              return {\n                resetCameraArgs: isUserResetCamera ? {\n                  renderer\n                } : undefined,\n                resetCameraFn: isUserResetCamera ? resetCamera : renderer.resetCamera,\n                restoreParamsFn: camera.set,\n                // \"clone\" the params so we don't keep refs to properties\n                arg: JSON.parse(JSON.stringify(params))\n              };\n            });\n\n            // Perform the resetCamera() on each renderer only after capturing\n            // the params from all active cameras, in case there happen to be\n            // linked cameras among the renderers.\n            model._screenshot.cameras.forEach(_ref2 => {\n              let {\n                resetCameraFn,\n                resetCameraArgs\n              } = _ref2;\n              return resetCameraFn(resetCameraArgs);\n            });\n          }\n\n          // Trigger a render at the custom size\n          publicAPI.traverseAllPasses();\n        }\n      });\n    });\n  };\n  let hardwareMaximumLineWidth;\n  publicAPI.getHardwareMaximumLineWidth = () => {\n    // We cache the result of this function because `getParameter` is slow\n    if (hardwareMaximumLineWidth != null) {\n      return hardwareMaximumLineWidth;\n    }\n    const gl = publicAPI.get3DContext();\n    const lineWidthRange = gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE);\n    hardwareMaximumLineWidth = lineWidthRange[1];\n    return lineWidthRange[1];\n  };\n  publicAPI.getGLInformations = () => {\n    if (model._glInformation) {\n      return model._glInformation;\n    }\n    const gl = publicAPI.get3DContext();\n    const glTextureFloat = gl.getExtension('OES_texture_float');\n    const glTextureHalfFloat = gl.getExtension('OES_texture_half_float');\n    const glDebugRendererInfo = gl.getExtension('WEBGL_debug_renderer_info');\n    const glDrawBuffers = gl.getExtension('WEBGL_draw_buffers');\n    const glAnisotropic = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n    const params = [['Max Vertex Attributes', 'MAX_VERTEX_ATTRIBS', gl.getParameter(gl.MAX_VERTEX_ATTRIBS)], ['Max Varying Vectors', 'MAX_VARYING_VECTORS', gl.getParameter(gl.MAX_VARYING_VECTORS)], ['Max Vertex Uniform Vectors', 'MAX_VERTEX_UNIFORM_VECTORS', gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS)], ['Max Fragment Uniform Vectors', 'MAX_FRAGMENT_UNIFORM_VECTORS', gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS)], ['Max Fragment Texture Image Units', 'MAX_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)], ['Max Vertex Texture Image Units', 'MAX_VERTEX_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)], ['Max Combined Texture Image Units', 'MAX_COMBINED_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS)], ['Max 2D Texture Size', 'MAX_TEXTURE_SIZE', gl.getParameter(gl.MAX_TEXTURE_SIZE)], ['Max Cube Texture Size', 'MAX_CUBE_MAP_TEXTURE_SIZE', gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE)], ['Max Texture Anisotropy', 'MAX_TEXTURE_MAX_ANISOTROPY_EXT', glAnisotropic && gl.getParameter(glAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT)], ['Point Size Range', 'ALIASED_POINT_SIZE_RANGE', gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE).join(' - ')], ['Line Width Range', 'ALIASED_LINE_WIDTH_RANGE', gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE).join(' - ')], ['Max Viewport Dimensions', 'MAX_VIEWPORT_DIMS', gl.getParameter(gl.MAX_VIEWPORT_DIMS).join(' - ')], ['Max Renderbuffer Size', 'MAX_RENDERBUFFER_SIZE', gl.getParameter(gl.MAX_RENDERBUFFER_SIZE)], ['Framebuffer Red Bits', 'RED_BITS', gl.getParameter(gl.RED_BITS)], ['Framebuffer Green Bits', 'GREEN_BITS', gl.getParameter(gl.GREEN_BITS)], ['Framebuffer Blue Bits', 'BLUE_BITS', gl.getParameter(gl.BLUE_BITS)], ['Framebuffer Alpha Bits', 'ALPHA_BITS', gl.getParameter(gl.ALPHA_BITS)], ['Framebuffer Depth Bits', 'DEPTH_BITS', gl.getParameter(gl.DEPTH_BITS)], ['Framebuffer Stencil Bits', 'STENCIL_BITS', gl.getParameter(gl.STENCIL_BITS)], ['Framebuffer Subpixel Bits', 'SUBPIXEL_BITS', gl.getParameter(gl.SUBPIXEL_BITS)], ['MSAA Samples', 'SAMPLES', gl.getParameter(gl.SAMPLES)], ['MSAA Sample Buffers', 'SAMPLE_BUFFERS', gl.getParameter(gl.SAMPLE_BUFFERS)], ['Supported Formats for UByte Render Targets     ', 'UNSIGNED_BYTE RENDER TARGET FORMATS', [glTextureFloat && checkRenderTargetSupport(gl, gl.RGBA, gl.UNSIGNED_BYTE) ? 'RGBA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.RGB, gl.UNSIGNED_BYTE) ? 'RGB' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, gl.UNSIGNED_BYTE) ? 'LUMINANCE' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.ALPHA, gl.UNSIGNED_BYTE) ? 'ALPHA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, gl.UNSIGNED_BYTE) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Supported Formats for Half Float Render Targets', 'HALF FLOAT RENDER TARGET FORMATS', [glTextureHalfFloat && checkRenderTargetSupport(gl, gl.RGBA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'RGBA' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.RGB, glTextureHalfFloat.HALF_FLOAT_OES) ? 'RGB' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, glTextureHalfFloat.HALF_FLOAT_OES) ? 'LUMINANCE' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.ALPHA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'ALPHA' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Supported Formats for Full Float Render Targets', 'FLOAT RENDER TARGET FORMATS', [glTextureFloat && checkRenderTargetSupport(gl, gl.RGBA, gl.FLOAT) ? 'RGBA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.RGB, gl.FLOAT) ? 'RGB' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, gl.FLOAT) ? 'LUMINANCE' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.ALPHA, gl.FLOAT) ? 'ALPHA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, gl.FLOAT) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Max Multiple Render Targets Buffers', 'MAX_DRAW_BUFFERS_WEBGL', glDrawBuffers ? gl.getParameter(glDrawBuffers.MAX_DRAW_BUFFERS_WEBGL) : 0], ['High Float Precision in Vertex Shader', 'HIGH_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).rangeMax, '</sup>)'].join('')], ['Medium Float Precision in Vertex Shader', 'MEDIUM_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).rangeMax, '</sup>)'].join('')], ['Low Float Precision in Vertex Shader', 'LOW_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).rangeMax, '</sup>)'].join('')], ['High Float Precision in Fragment Shader', 'HIGH_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).rangeMax, '</sup>)'].join('')], ['Medium Float Precision in Fragment Shader', 'MEDIUM_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).rangeMax, '</sup>)'].join('')], ['Low Float Precision in Fragment Shader', 'LOW_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).rangeMax, '</sup>)'].join('')], ['High Int Precision in Vertex Shader', 'HIGH_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).rangeMax, '</sup>)'].join('')], ['Medium Int Precision in Vertex Shader', 'MEDIUM_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).rangeMax, '</sup>)'].join('')], ['Low Int Precision in Vertex Shader', 'LOW_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).rangeMax, '</sup>)'].join('')], ['High Int Precision in Fragment Shader', 'HIGH_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).rangeMax, '</sup>)'].join('')], ['Medium Int Precision in Fragment Shader', 'MEDIUM_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).rangeMax, '</sup>)'].join('')], ['Low Int Precision in Fragment Shader', 'LOW_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).rangeMax, '</sup>)'].join('')], ['Supported Extensions', 'EXTENSIONS', gl.getSupportedExtensions().join('<br/>\\t\\t\\t\\t\\t    ')], ['WebGL Renderer', 'RENDERER', gl.getParameter(gl.RENDERER)], ['WebGL Vendor', 'VENDOR', gl.getParameter(gl.VENDOR)], ['WebGL Version', 'VERSION', gl.getParameter(gl.VERSION)], ['Shading Language Version', 'SHADING_LANGUAGE_VERSION', gl.getParameter(gl.SHADING_LANGUAGE_VERSION)], ['Unmasked Renderer', 'UNMASKED_RENDERER', glDebugRendererInfo && gl.getParameter(glDebugRendererInfo.UNMASKED_RENDERER_WEBGL)], ['Unmasked Vendor', 'UNMASKED_VENDOR', glDebugRendererInfo && gl.getParameter(glDebugRendererInfo.UNMASKED_VENDOR_WEBGL)], ['WebGL Version', 'WEBGL_VERSION', model.webgl2 ? 2 : 1]];\n    const result = {};\n    while (params.length) {\n      const [label, key, value] = params.pop();\n      if (key) {\n        result[key] = {\n          label,\n          value\n        };\n      }\n    }\n    model._glInformation = result;\n    return result;\n  };\n  publicAPI.traverseAllPasses = () => {\n    if (model.renderPasses) {\n      for (let index = 0; index < model.renderPasses.length; ++index) {\n        model.renderPasses[index].traverse(publicAPI, null);\n      }\n    }\n    publicAPI.copyParentContent();\n    if (model.notifyStartCaptureImage) {\n      getCanvasDataURL();\n    }\n    const childrenRW = model.renderable.getChildRenderWindowsByReference();\n    for (let i = 0; i < childrenRW.length; ++i) {\n      publicAPI.getViewNodeFor(childrenRW[i])?.traverseAllPasses();\n    }\n  };\n  publicAPI.copyParentContent = () => {\n    const rootParent = model.rootOpenGLRenderWindow;\n    if (!rootParent || !model.context2D || model.children.some(oglRenderer => !!oglRenderer.getSelector?.())) {\n      return;\n    }\n    const parentCanvas = rootParent.getCanvas();\n    const selfCanvas = model.canvas;\n    model.context2D.drawImage(parentCanvas, 0, parentCanvas.height - selfCanvas.height,\n    // source y axis is inverted\n    selfCanvas.width, selfCanvas.height, 0, 0, selfCanvas.width, selfCanvas.height);\n  };\n  publicAPI.resizeFromChildRenderWindows = () => {\n    // Adapt the size of the parent render window to the child render windows\n    const childrenRW = model.renderable.getChildRenderWindowsByReference();\n    if (childrenRW.length > 0) {\n      const maxSize = [0, 0];\n      for (let i = 0; i < childrenRW.length; ++i) {\n        const childSize = publicAPI.getViewNodeFor(childrenRW[i])?.getSize();\n        if (childSize) {\n          maxSize[0] = childSize[0] > maxSize[0] ? childSize[0] : maxSize[0];\n          maxSize[1] = childSize[1] > maxSize[1] ? childSize[1] : maxSize[1];\n        }\n      }\n      publicAPI.setSize(...maxSize);\n    }\n  };\n  publicAPI.disableCullFace = () => {\n    if (model.cullFaceEnabled) {\n      model.context.disable(model.context.CULL_FACE);\n      model.cullFaceEnabled = false;\n    }\n  };\n  publicAPI.enableCullFace = () => {\n    if (!model.cullFaceEnabled) {\n      model.context.enable(model.context.CULL_FACE);\n      model.cullFaceEnabled = true;\n    }\n  };\n  publicAPI.setViewStream = stream => {\n    if (model.viewStream === stream) {\n      return false;\n    }\n    if (model.subscription) {\n      model.subscription.unsubscribe();\n      model.subscription = null;\n    }\n    model.viewStream = stream;\n    if (model.viewStream) {\n      // Force background to be transparent + render\n      const mainRenderer = model.renderable.getRenderers()[0];\n      mainRenderer.getBackgroundByReference()[3] = 0;\n\n      // Enable display of the background image\n      publicAPI.setUseBackgroundImage(true);\n\n      // Bind to remote stream\n      model.subscription = model.viewStream.onImageReady(e => publicAPI.setBackgroundImage(e.image));\n      model.viewStream.setSize(model.size[0], model.size[1]);\n      model.viewStream.invalidateCache();\n      model.viewStream.render();\n      publicAPI.modified();\n    }\n    return true;\n  };\n  publicAPI.createSelector = () => {\n    const ret = vtkHardwareSelector.newInstance();\n    ret.setOpenGLRenderWindow(publicAPI);\n    return ret;\n  };\n  function clearEvents() {\n    model.canvas.removeEventListener('webglcontextlost', _preventDefault);\n    model.canvas.removeEventListener('webglcontextrestored', publicAPI.restoreContext);\n  }\n  publicAPI.delete = macro.chain(() => {\n    if (model.context) {\n      deleteGLContext();\n    }\n    publicAPI.setContainer();\n    publicAPI.setViewStream();\n  }, clearEvents, publicAPI.delete);\n\n  // Do not trigger modified for performance reasons\n  publicAPI.setActiveFramebuffer = newActiveFramebuffer => {\n    model.activeFramebuffer = newActiveFramebuffer;\n  };\n  const superSetSize = publicAPI.setSize;\n  publicAPI.setSize = (width, height) => {\n    const modified = superSetSize(width, height);\n    if (modified) {\n      publicAPI.invokeWindowResizeEvent({\n        width,\n        height\n      });\n    }\n    return modified;\n  };\n  publicAPI.registerGraphicsResourceUser = (coreObject, newUser) => {\n    // Try to create the graphics resource if it doesn't exist\n    if (!model._graphicsResources.has(coreObject)) {\n      publicAPI.setGraphicsResourceForObject(coreObject, null, null);\n    }\n    // Add newUser to the set of users\n    const sharedResource = model._graphicsResources.get(coreObject);\n    sharedResource?.users.add(newUser);\n  };\n  publicAPI.unregisterGraphicsResourceUser = (coreObject, oldUser) => {\n    const sharedResource = model._graphicsResources.get(coreObject);\n    if (!sharedResource) {\n      return;\n    }\n    sharedResource.users.delete(oldUser);\n    // Release graphics resources when the number of users reaches 0\n    if (!sharedResource.users.size) {\n      sharedResource.oglObject?.releaseGraphicsResources(publicAPI);\n      model._graphicsResources.delete(coreObject);\n    }\n  };\n  publicAPI.getGraphicsResourceForObject = coreObject => model._graphicsResources.get(coreObject);\n  publicAPI.setGraphicsResourceForObject = (coreObject, oglObject, hash) => {\n    if (!coreObject) {\n      return;\n    }\n    const sharedResource = model._graphicsResources.get(coreObject);\n    // Release the old resource\n    sharedResource?.oglObject?.releaseGraphicsResources(publicAPI);\n    // Keep the same users that have registered for this coreObject\n    model._graphicsResources.set(coreObject, {\n      coreObject,\n      oglObject,\n      hash,\n      users: sharedResource?.users ?? new Set()\n    });\n  };\n  publicAPI.getGraphicsMemoryInfo = () => {\n    let memUsed = 0;\n    model._graphicsResources.forEach(_ref3 => {\n      let {\n        oglObject\n      } = _ref3;\n      memUsed += oglObject.getAllocatedGPUMemoryInBytes();\n    });\n    return memUsed;\n  };\n  publicAPI.releaseGraphicsResources = () => {\n    // Clear the shader cache\n    if (model.shaderCache !== null) {\n      model.shaderCache.releaseGraphicsResources(publicAPI);\n    }\n    // Free cached graphics resources at the context level\n    model._graphicsResources.forEach(_ref4 => {\n      let {\n        oglObject\n      } = _ref4;\n      oglObject.releaseGraphicsResources(publicAPI);\n    });\n    model._graphicsResources.clear();\n    if (model.textureUnitManager !== null) {\n      model.textureUnitManager.freeAll();\n    }\n    // Finally, ask the renderers to release prop resources\n    model.renderable.getRenderersByReference().forEach(ren => {\n      const glRen = publicAPI.getViewNodeFor(ren);\n      glRen?.releaseGraphicsResources();\n    });\n  };\n\n  // Proxy some methods if needed\n  const publicAPIBeforeProxy = {\n    ...publicAPI\n  };\n  parentMethodsToProxy.forEach(methodName => {\n    publicAPI[methodName] = function () {\n      if (model.rootOpenGLRenderWindow) {\n        // Proxy only methods when the render window has a parent\n        return model.rootOpenGLRenderWindow[methodName](...arguments);\n      }\n      return publicAPIBeforeProxy[methodName](...arguments);\n    };\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  cullFaceEnabled: false,\n  shaderCache: null,\n  initialized: false,\n  context: null,\n  context2D: null,\n  canvas: null,\n  cursorVisibility: true,\n  cursor: 'pointer',\n  textureUnitManager: null,\n  textureResourceIds: null,\n  containerSize: null,\n  renderPasses: [],\n  notifyStartCaptureImage: false,\n  webgl2: false,\n  defaultToWebgl2: true,\n  // attempt webgl2 on by default\n  activeFramebuffer: null,\n  imageFormat: 'image/png',\n  useOffScreen: false,\n  useBackgroundImage: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkRenderWindowViewNode.extend(publicAPI, model, initialValues);\n\n  // Create internal instances\n  if (!model.canvas) {\n    model.canvas = document.createElement('canvas');\n    model.canvas.style.width = '100%';\n  }\n  if (!model.selector) {\n    model.selector = vtkHardwareSelector.newInstance();\n    model.selector.setOpenGLRenderWindow(publicAPI);\n  }\n\n  // Create internal bgImage\n  model.bgImage = new Image();\n  model.bgImage.style.position = 'absolute';\n  model.bgImage.style.left = '0';\n  model.bgImage.style.top = '0';\n  model.bgImage.style.width = '100%';\n  model.bgImage.style.height = '100%';\n  model.bgImage.style.zIndex = '-1';\n  model._textureResourceIds = new Map();\n  model._graphicsResources = new Map();\n  model._glInformation = null;\n  model.myFactory = vtkViewNodeFactory.newInstance();\n  model.shaderCache = vtkShaderCache.newInstance();\n  model.shaderCache.setOpenGLRenderWindow(publicAPI);\n\n  // setup default forward pass rendering\n  model.renderPasses[0] = vtkForwardPass.newInstance();\n\n  // Build VTK API\n  macro.get(publicAPI, model, ['shaderCache', 'textureUnitManager', 'webgl2', 'useBackgroundImage', 'activeFramebuffer', 'rootOpenGLRenderWindow']);\n  macro.setGet(publicAPI, model, ['initialized', 'context', 'context2D', 'canvas', 'renderPasses', 'notifyStartCaptureImage', 'defaultToWebgl2', 'cursor', 'useOffScreen']);\n  macro.setGetArray(publicAPI, model, ['size'], 2);\n  macro.event(publicAPI, model, 'imageReady');\n  macro.event(publicAPI, model, 'windowResizeEvent');\n\n  // Object methods\n  vtkOpenGLRenderWindow(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkOpenGLRenderWindow');\n\n// ----------------------------------------------------------------------------\n// Register API specific RenderWindow implementation\n// ----------------------------------------------------------------------------\n\nregisterViewConstructor('WebGL', newInstance);\n\n// ----------------------------------------------------------------------------\n\nvar vtkRenderWindow = {\n  newInstance,\n  extend,\n  pushMonitorGLContextCount,\n  popMonitorGLContextCount\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkRenderWindow', newInstance);\n\nexport { vtkRenderWindow as default, extend, newInstance, popMonitorGLContextCount, pushMonitorGLContextCount };\n","import { mat4, vec3 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkCompositeCameraManipulator from './CompositeCameraManipulator.js';\nimport vtkCompositeMouseManipulator from './CompositeMouseManipulator.js';\nimport { w as multiplyScalar, d as dot, k as add, r as radiansFromDegrees, j as cross } from '../../Common/Core/Math/index.js';\n\n// ----------------------------------------------------------------------------\n// vtkMouseCameraTrackballRotateManipulator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkMouseCameraTrackballRotateManipulator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkMouseCameraTrackballRotateManipulator');\n  const newCamPos = new Float64Array(3);\n  const newFp = new Float64Array(3);\n  const newViewUp = new Float64Array(3);\n  const trans = new Float64Array(16);\n  const v2 = new Float64Array(3);\n  const centerNeg = new Float64Array(3);\n  const direction = new Float64Array(3);\n  publicAPI.onButtonDown = (interactor, renderer, position) => {\n    model.previousPosition = position;\n  };\n  publicAPI.onMouseMove = (interactor, renderer, position) => {\n    if (!position) {\n      return;\n    }\n    const camera = renderer.getActiveCamera();\n    const cameraPos = camera.getPosition();\n    const cameraFp = camera.getFocalPoint();\n    mat4.identity(trans);\n    const {\n      center,\n      rotationFactor\n    } = model;\n    if (model.useFocalPointAsCenterOfRotation) {\n      center[0] = cameraFp[0];\n      center[1] = cameraFp[1];\n      center[2] = cameraFp[2];\n    }\n    const dx = model.previousPosition.x - position.x;\n    const dy = model.previousPosition.y - position.y;\n    const size = interactor.getView().getViewportSize(renderer);\n\n    // Azimuth\n    const viewUp = camera.getViewUp();\n    if (model.useWorldUpVec) {\n      const centerOfRotation = new Float64Array(3);\n      vec3.copy(centerOfRotation, model.worldUpVec);\n\n      // Compute projection of cameraPos onto worldUpVec\n      multiplyScalar(centerOfRotation, dot(cameraPos, model.worldUpVec) / dot(model.worldUpVec, model.worldUpVec));\n      add(center, centerOfRotation, centerOfRotation);\n      mat4.translate(trans, trans, centerOfRotation);\n      mat4.rotate(trans, trans, radiansFromDegrees(360.0 * dx / size[0] * rotationFactor), model.worldUpVec);\n\n      // Translate back\n      centerOfRotation[0] = -centerOfRotation[0];\n      centerOfRotation[1] = -centerOfRotation[1];\n      centerOfRotation[2] = -centerOfRotation[2];\n      mat4.translate(trans, trans, centerOfRotation);\n      mat4.translate(trans, trans, center);\n    } else {\n      mat4.translate(trans, trans, center);\n      mat4.rotate(trans, trans, radiansFromDegrees(360.0 * dx / size[0] * rotationFactor), viewUp);\n    }\n\n    // Elevation\n    cross(camera.getDirectionOfProjection(), viewUp, v2);\n    mat4.rotate(trans, trans, radiansFromDegrees(-360.0 * dy / size[1] * rotationFactor), v2);\n\n    // Translate back\n    centerNeg[0] = -center[0];\n    centerNeg[1] = -center[1];\n    centerNeg[2] = -center[2];\n    mat4.translate(trans, trans, centerNeg);\n\n    // Apply transformation to camera position, focal point, and view up\n    vec3.transformMat4(newCamPos, cameraPos, trans);\n    vec3.transformMat4(newFp, cameraFp, trans);\n    direction[0] = viewUp[0] + cameraPos[0];\n    direction[1] = viewUp[1] + cameraPos[1];\n    direction[2] = viewUp[2] + cameraPos[2];\n    vec3.transformMat4(newViewUp, direction, trans);\n    camera.setPosition(newCamPos[0], newCamPos[1], newCamPos[2]);\n    camera.setFocalPoint(newFp[0], newFp[1], newFp[2]);\n    camera.setViewUp(newViewUp[0] - newCamPos[0], newViewUp[1] - newCamPos[1], newViewUp[2] - newCamPos[2]);\n    camera.orthogonalizeViewUp();\n    renderer.resetCameraClippingRange();\n    if (interactor.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n    model.previousPosition = position;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  useWorldUpVec: false,\n  // set WorldUpVector to be y-axis by default\n  worldUpVec: [0, 1, 0],\n  useFocalPointAsCenterOfRotation: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  macro.obj(publicAPI, model);\n  vtkCompositeMouseManipulator.extend(publicAPI, model, initialValues);\n  vtkCompositeCameraManipulator.extend(publicAPI, model, initialValues);\n\n  // Create get-set macro\n  macro.setGet(publicAPI, model, ['useWorldUpVec']);\n  macro.setGetArray(publicAPI, model, ['worldUpVec'], 3);\n  macro.setGet(publicAPI, model, ['useFocalPointAsCenterOfRotation']);\n\n  // Object specific methods\n  vtkMouseCameraTrackballRotateManipulator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkMouseCameraTrackballRotateManipulator');\n\n// ----------------------------------------------------------------------------\n\nvar vtkMouseCameraTrackballRotateManipulator$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkMouseCameraTrackballRotateManipulator$1 as default, extend, newInstance };\n","import { mat4, quat } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport { A as degreesFromRadians, r as radiansFromDegrees, a as areMatricesEqual } from '../../Common/Core/Math/index.js';\nimport vtkProp from './Prop.js';\n\nconst VTK_EPSILON = 1e-6;\n\n// ----------------------------------------------------------------------------\n// vtkProp3D methods\n// ----------------------------------------------------------------------------\n\nfunction vtkProp3D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkProp3D');\n  publicAPI.addPosition = deltaXYZ => {\n    model.position = model.position.map((value, index) => value + deltaXYZ[index]);\n    publicAPI.modified();\n  };\n  publicAPI.getOrientationWXYZ = () => {\n    const q = quat.create();\n    mat4.getRotation(q, model.rotation);\n    const oaxis = new Float64Array(3);\n    const w = quat.getAxisAngle(oaxis, q);\n    return [degreesFromRadians(w), oaxis[0], oaxis[1], oaxis[2]];\n  };\n  publicAPI.getOrientationQuaternion = function () {\n    let out = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return mat4.getRotation(out, model.rotation);\n  };\n  publicAPI.rotateX = val => {\n    if (val === 0.0) {\n      return;\n    }\n    mat4.rotateX(model.rotation, model.rotation, radiansFromDegrees(val));\n    publicAPI.modified();\n  };\n  publicAPI.rotateY = val => {\n    if (val === 0.0) {\n      return;\n    }\n    mat4.rotateY(model.rotation, model.rotation, radiansFromDegrees(val));\n    publicAPI.modified();\n  };\n  publicAPI.rotateZ = val => {\n    if (val === 0.0) {\n      return;\n    }\n    mat4.rotateZ(model.rotation, model.rotation, radiansFromDegrees(val));\n    publicAPI.modified();\n  };\n  publicAPI.rotateWXYZ = (degrees, x, y, z) => {\n    if (degrees === 0.0 || x === 0.0 && y === 0.0 && z === 0.0) {\n      return;\n    }\n\n    // convert to radians\n    const angle = radiansFromDegrees(degrees);\n    const q = quat.create();\n    quat.setAxisAngle(q, [x, y, z], angle);\n    const quatMat = new Float64Array(16);\n    mat4.fromQuat(quatMat, q);\n    mat4.multiply(model.rotation, model.rotation, quatMat);\n    publicAPI.modified();\n  };\n  publicAPI.rotateQuaternion = orientationQuaternion => {\n    if (Math.abs(orientationQuaternion[3]) >= 1 - VTK_EPSILON) {\n      return;\n    }\n    const oriQuatMat = mat4.fromQuat(new Float64Array(16), orientationQuaternion);\n    mat4.multiply(model.rotation, model.rotation, oriQuatMat);\n    publicAPI.modified();\n  };\n  publicAPI.setOrientation = (x, y, z) => {\n    if (x === model.orientation[0] && y === model.orientation[1] && z === model.orientation[2]) {\n      return false;\n    }\n    model.orientation = [x, y, z];\n    mat4.identity(model.rotation);\n    publicAPI.rotateZ(z);\n    publicAPI.rotateX(x);\n    publicAPI.rotateY(y);\n    publicAPI.modified();\n    return true;\n  };\n  publicAPI.setUserMatrix = matrix => {\n    if (areMatricesEqual(model.userMatrix, matrix)) {\n      return false;\n    }\n    mat4.copy(model.userMatrix, matrix);\n    publicAPI.modified();\n    return true;\n  };\n  publicAPI.getMatrix = () => {\n    publicAPI.computeMatrix();\n    return model.matrix;\n  };\n  publicAPI.computeMatrix = () => {\n    // check whether or not need to rebuild the matrix\n    if (publicAPI.getMTime() > model.matrixMTime.getMTime()) {\n      mat4.identity(model.matrix);\n      if (model.userMatrix) {\n        mat4.multiply(model.matrix, model.matrix, model.userMatrix);\n      }\n      mat4.translate(model.matrix, model.matrix, model.origin);\n      mat4.translate(model.matrix, model.matrix, model.position);\n      mat4.multiply(model.matrix, model.matrix, model.rotation);\n      mat4.scale(model.matrix, model.matrix, model.scale);\n      mat4.translate(model.matrix, model.matrix, [-model.origin[0], -model.origin[1], -model.origin[2]]);\n      mat4.transpose(model.matrix, model.matrix);\n\n      // check for identity\n      model.isIdentity = true;\n      for (let i = 0; i < 4; ++i) {\n        for (let j = 0; j < 4; ++j) {\n          if ((i === j ? 1.0 : 0.0) !== model.matrix[i + j * 4]) {\n            model.isIdentity = false;\n          }\n        }\n      }\n      model.matrixMTime.modified();\n    }\n  };\n  publicAPI.getCenter = () => vtkBoundingBox.getCenter(model.bounds);\n  publicAPI.getLength = () => vtkBoundingBox.getLength(model.bounds);\n  publicAPI.getXRange = () => vtkBoundingBox.getXRange(model.bounds);\n  publicAPI.getYRange = () => vtkBoundingBox.getYRange(model.bounds);\n  publicAPI.getZRange = () => vtkBoundingBox.getZRange(model.bounds);\n  publicAPI.getUserMatrix = () => model.userMatrix;\n  function updateIdentityFlag() {\n    publicAPI.computeMatrix();\n  }\n  publicAPI.onModified(updateIdentityFlag);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  origin: [0, 0, 0],\n  position: [0, 0, 0],\n  orientation: [0, 0, 0],\n  rotation: null,\n  scale: [1, 1, 1],\n  bounds: [1, -1, 1, -1, 1, -1],\n  userMatrix: null,\n  userMatrixMTime: null,\n  cachedProp3D: null,\n  isIdentity: true,\n  matrixMTime: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp.extend(publicAPI, model, initialValues);\n  model.matrixMTime = {};\n  macro.obj(model.matrixMTime);\n\n  // Build VTK API\n  macro.get(publicAPI, model, ['bounds', 'isIdentity']);\n  macro.getArray(publicAPI, model, ['orientation']);\n  macro.setGetArray(publicAPI, model, ['origin', 'position', 'scale'], 3);\n\n  // Object internal instance\n  model.matrix = mat4.identity(new Float64Array(16));\n  model.rotation = mat4.identity(new Float64Array(16));\n  model.userMatrix = mat4.identity(new Float64Array(16));\n  model.transform = null; // FIXME\n\n  // Object methods\n  vtkProp3D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkProp3D');\n\n// ----------------------------------------------------------------------------\n\nvar vtkProp3D$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkProp3D$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport Constants from './ImageProperty/Constants.js';\n\nconst {\n  InterpolationType\n} = Constants;\nconst {\n  vtkErrorMacro\n} = macro;\nconst VTK_MAX_VRCOMP = 4;\n\n// ----------------------------------------------------------------------------\n// vtkImageProperty methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageProperty(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageProperty');\n  publicAPI.getMTime = () => {\n    let mTime = model.mtime;\n    let time;\n    for (let index = 0; index < VTK_MAX_VRCOMP; index++) {\n      // Color MTimes\n      if (model.componentData[index].rGBTransferFunction) {\n        // time that RGB transfer function was last modified\n        time = model.componentData[index].rGBTransferFunction.getMTime();\n        mTime = mTime > time ? mTime : time;\n      }\n\n      // Piecewise function MTimes\n      if (model.componentData[index].piecewiseFunction) {\n        // time that weighting function was last modified\n        time = model.componentData[index].piecewiseFunction.getMTime();\n        mTime = mTime > time ? mTime : time;\n      }\n    }\n    return mTime;\n  };\n\n  // Set the color of a volume to an RGB transfer function\n  publicAPI.setRGBTransferFunction = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let func = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    // backwards compatible call without the component index\n    let idx = index;\n    let transferFunc = func;\n    if (!Number.isInteger(index)) {\n      transferFunc = index;\n      idx = 0;\n    }\n    if (model.componentData[idx].rGBTransferFunction !== transferFunc) {\n      model.componentData[idx].rGBTransferFunction = transferFunc;\n      publicAPI.modified();\n      return true;\n    }\n    return false;\n  };\n\n  // Get the currently set RGB transfer function.\n  publicAPI.getRGBTransferFunction = function () {\n    let idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return model.componentData[idx].rGBTransferFunction;\n  };\n\n  // Set the piecewise function\n  publicAPI.setPiecewiseFunction = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let func = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let idx = index;\n    let transferFunc = func;\n    if (!Number.isInteger(index)) {\n      transferFunc = index;\n      idx = 0;\n    }\n    if (model.componentData[idx].piecewiseFunction !== transferFunc) {\n      model.componentData[idx].piecewiseFunction = transferFunc;\n      publicAPI.modified();\n      return true;\n    }\n    return false;\n  };\n\n  // Get the component weighting function.\n  publicAPI.getPiecewiseFunction = function () {\n    let idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return model.componentData[idx].piecewiseFunction;\n  };\n\n  // Alias to set the piecewise function\n  publicAPI.setScalarOpacity = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let func = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    // backwards compatible call without the component index\n    let idx = index;\n    let transferFunc = func;\n    if (!Number.isInteger(index)) {\n      transferFunc = index;\n      idx = 0;\n    }\n    return publicAPI.setPiecewiseFunction(idx, transferFunc);\n  };\n\n  // Alias to get the piecewise function (backwards compatibility)\n  publicAPI.getScalarOpacity = function () {\n    let idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return publicAPI.getPiecewiseFunction(idx);\n  };\n  publicAPI.setComponentWeight = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return false;\n    }\n    const val = Math.min(1, Math.max(0, value));\n    if (model.componentData[index].componentWeight !== val) {\n      model.componentData[index].componentWeight = val;\n      publicAPI.modified();\n      return true;\n    }\n    return false;\n  };\n  publicAPI.getComponentWeight = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return 0.0;\n    }\n    return model.componentData[index].componentWeight;\n  };\n  publicAPI.setInterpolationTypeToNearest = () => publicAPI.setInterpolationType(InterpolationType.NEAREST);\n  publicAPI.setInterpolationTypeToLinear = () => publicAPI.setInterpolationType(InterpolationType.LINEAR);\n  publicAPI.getInterpolationTypeAsString = () => macro.enumToString(InterpolationType, model.interpolationType);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\nconst DEFAULT_VALUES = {\n  independentComponents: false,\n  interpolationType: InterpolationType.LINEAR,\n  colorWindow: 255,\n  colorLevel: 127.5,\n  ambient: 1.0,\n  diffuse: 0.0,\n  opacity: 1.0,\n  useLookupTableScalarRange: false,\n  useLabelOutline: false,\n  labelOutlineThickness: [1],\n  labelOutlineOpacity: 1.0\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  if (!model.componentData) {\n    model.componentData = [];\n    for (let i = 0; i < VTK_MAX_VRCOMP; i++) {\n      model.componentData.push({\n        rGBTransferFunction: null,\n        piecewiseFunction: null,\n        componentWeight: 1.0\n      });\n    }\n  }\n  macro.setGet(publicAPI, model, ['independentComponents', 'interpolationType', 'colorWindow', 'colorLevel', 'ambient', 'diffuse', 'opacity', 'useLookupTableScalarRange', 'useLabelOutline', 'labelOutlineOpacity']);\n  macro.setGetArray(publicAPI, model, ['labelOutlineThickness']);\n\n  // Object methods\n  vtkImageProperty(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageProperty');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageProperty$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkImageProperty$1 as default, extend, newInstance };\n","import { mat4 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkProp3D from './Prop3D.js';\nimport vtkImageProperty from './ImageProperty.js';\n\nconst {\n  vtkDebugMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkImageSlice methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageSlice(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageSlice');\n  publicAPI.getActors = () => publicAPI;\n  publicAPI.getImages = () => publicAPI;\n  publicAPI.getIsOpaque = () => {\n    if (model.forceOpaque) {\n      return true;\n    }\n    if (model.forceTranslucent) {\n      return false;\n    }\n    // make sure we have a property\n    if (!model.property) {\n      // force creation of a property\n      publicAPI.getProperty();\n    }\n    let isOpaque = model.property.getOpacity() >= 1.0;\n\n    // are we using an opaque scalar array, if any?\n    isOpaque = isOpaque && (!model.mapper || model.mapper.getIsOpaque());\n    return isOpaque;\n  };\n\n  // Always render during opaque pass, to keep the behavior\n  // predictable and because depth-peeling kills alpha-blending.\n  // In the future, the Renderer should render images in layers,\n  // i.e. where each image will have a layer number assigned to it,\n  // and the Renderer will do the images in their own pass.\n  publicAPI.hasTranslucentPolygonalGeometry = () => false;\n  publicAPI.makeProperty = vtkImageProperty.newInstance;\n  publicAPI.getProperty = () => {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n    return model.property;\n  };\n  publicAPI.getBounds = () => {\n    if (model.mapper === null) {\n      return model.bounds;\n    }\n\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBounds();\n    if (!bds || bds.length !== 6) {\n      return bds;\n    }\n\n    // Check for the special case when the actor is empty.\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    }\n\n    // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n    const zip = rows => rows[0].map((_, c) => rows.map(row => row[c]));\n    if (!model.mapperBounds || !zip([bds, model.mapperBounds]).reduce((a, b) => a && b[0] === b[1], true) || publicAPI.getMTime() > model.boundsMTime.getMTime()) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.map(x => x);\n      publicAPI.computeMatrix();\n      const tmp4 = new Float64Array(16);\n      mat4.transpose(tmp4, model.matrix);\n      vtkBoundingBox.transformBounds(bds, tmp4, model.bounds);\n      model.boundsMTime.modified();\n    }\n    return model.bounds;\n  };\n  publicAPI.getBoundsForSlice = (slice, thickness) => {\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBoundsForSlice(slice, thickness);\n    // Check for the special case when the actor is empty.\n    if (!vtkBoundingBox.isValid(bds)) {\n      return bds;\n    }\n    publicAPI.computeMatrix();\n    const tmp4 = new Float64Array(16);\n    mat4.transpose(tmp4, model.matrix);\n    const newBounds = vtkBoundingBox.transformBounds(bds, tmp4);\n    return newBounds;\n  };\n\n  //----------------------------------------------------------------------------\n  // Get the minimum X bound\n  publicAPI.getMinXBound = () => publicAPI.getBounds()[0];\n\n  // Get the maximum X bound\n  publicAPI.getMaxXBound = () => publicAPI.getBounds()[1];\n\n  // Get the minimum Y bound\n  publicAPI.getMinYBound = () => publicAPI.getBounds()[2];\n\n  // Get the maximum Y bound\n  publicAPI.getMaxYBound = () => publicAPI.getBounds()[3];\n\n  // Get the minimum Z bound\n  publicAPI.getMinZBound = () => publicAPI.getBounds()[4];\n\n  // Get the maximum Z bound\n  publicAPI.getMaxZBound = () => publicAPI.getBounds()[5];\n  publicAPI.getMTime = () => {\n    let mt = model.mtime;\n    if (model.property !== null) {\n      const time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    return mt;\n  };\n  publicAPI.getRedrawMTime = () => {\n    let mt = model.mtime;\n    if (model.mapper !== null) {\n      let time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    if (model.property !== null) {\n      let time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.property.getRGBTransferFunction() !== null) {\n        time = model.property.getRGBTransferFunction().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    return mt;\n  };\n  publicAPI.getSupportsSelection = () => model.mapper ? model.mapper.getSupportsSelection() : false;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  forceOpaque: false,\n  forceTranslucent: false,\n  bounds: [...vtkBoundingBox.INIT_BOUNDS]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp3D.extend(publicAPI, model, initialValues);\n\n  // vtkTimeStamp\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime);\n\n  // Build VTK API\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['mapper', 'forceOpaque', 'forceTranslucent']);\n  macro.getArray(publicAPI, model, ['bounds'], 6);\n\n  // Object methods\n  vtkImageSlice(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageSlice');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageSlice$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkImageSlice$1 as default, extend, newInstance };\n","const SlabTypes = {\n  MIN: 0,\n  MAX: 1,\n  MEAN: 2,\n  SUM: 3\n};\nvar Constants = {\n  SlabTypes\n};\n\nexport { SlabTypes, Constants as default };\n","import { m as macro } from '../../macros2.js';\nimport vtkAbstractMapper3D from './AbstractMapper3D.js';\nimport { H as createUninitializedBounds } from '../../Common/Core/Math/index.js';\n\n// ----------------------------------------------------------------------------\n// vtkAbstractImageMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkAbstractImageMapper(publicAPI, model) {\n  model.classHierarchy.push('vtkAbstractImageMapper');\n  publicAPI.getIsOpaque = () => true;\n  publicAPI.getCurrentImage = () => null;\n  publicAPI.getBoundsForSlice = () => {\n    macro.vtkErrorMacro('vtkAbstractImageMapper.getBoundsForSlice - NOT IMPLEMENTED');\n    return createUninitializedBounds();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  slice: 0,\n  customDisplayExtent: [0, 0, 0, 0, 0, 0],\n  useCustomExtents: false,\n  backgroundColor: [0, 0, 0, 1]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  vtkAbstractMapper3D.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['slice', 'useCustomExtents']);\n  macro.setGetArray(publicAPI, model, ['customDisplayExtent'], 6);\n  macro.setGetArray(publicAPI, model, ['backgroundColor'], 4);\n  vtkAbstractImageMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\nvar vtkAbstractImageMapper$1 = {\n  extend\n};\n\nexport { vtkAbstractImageMapper$1 as default, extend };\n","import CoincidentTopologyHelper from './Mapper/CoincidentTopologyHelper.js';\nimport Constants from './ImageResliceMapper/Constants.js';\nimport { m as macro } from '../../macros2.js';\nimport vtkAbstractImageMapper from './AbstractImageMapper.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\n\nconst {\n  SlabTypes\n} = Constants;\nconst {\n  staticOffsetAPI,\n  otherStaticMethods\n} = CoincidentTopologyHelper;\n\n// ----------------------------------------------------------------------------\n// vtkImageResliceMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageResliceMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageResliceMapper');\n  publicAPI.getBounds = () => {\n    let bds = [...vtkBoundingBox.INIT_BOUNDS];\n    const image = publicAPI.getInputData();\n    if (publicAPI.getSlicePolyData()) {\n      bds = publicAPI.getSlicePolyData().getBounds();\n    } else if (image) {\n      bds = image.getBounds();\n      if (publicAPI.getSlicePlane()) {\n        vtkBoundingBox.cutWithPlane(bds, publicAPI.getSlicePlane().getOrigin(), publicAPI.getSlicePlane().getNormal());\n      }\n    }\n    return bds;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  slabThickness: 0.0,\n  slabTrapezoidIntegration: 0,\n  slabType: SlabTypes.MEAN,\n  slicePlane: null,\n  slicePolyData: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  vtkAbstractImageMapper.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['slabThickness', 'slabTrapezoidIntegration', 'slabType', 'slicePlane', 'slicePolyData']);\n  CoincidentTopologyHelper.implementCoincidentTopologyMethods(publicAPI, model);\n\n  // Object methods\n  vtkImageResliceMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageResliceMapper');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageResliceMapper$1 = {\n  newInstance,\n  extend,\n  ...staticOffsetAPI,\n  ...otherStaticMethods\n};\n\nexport { vtkImageResliceMapper$1 as default, extend, newInstance };\n","import { mat4, vec3 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkProp3D from './Prop3D.js';\nimport vtkProperty from './Property.js';\n\nconst {\n  vtkDebugMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkActor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkActor');\n\n  // Capture 'parentClass' api for internal use\n  const superClass = {\n    ...publicAPI\n  };\n  publicAPI.getActors = () => [publicAPI];\n  publicAPI.getIsOpaque = () => {\n    if (model.forceOpaque) {\n      return true;\n    }\n    if (model.forceTranslucent) {\n      return false;\n    }\n    // make sure we have a property\n    if (!model.property) {\n      // force creation of a property\n      publicAPI.getProperty();\n    }\n    let isOpaque = model.property.getOpacity() >= 1.0;\n\n    // are we using an opaque texture, if any?\n    isOpaque = isOpaque && (!model.texture || !model.texture.isTranslucent());\n\n    // are we using an opaque scalar array, if any?\n    isOpaque = isOpaque && (!model.mapper || model.mapper.getIsOpaque());\n    return isOpaque;\n  };\n  publicAPI.hasTranslucentPolygonalGeometry = () => {\n    if (model.mapper === null) {\n      return false;\n    }\n    // make sure we have a property\n    if (model.property === null) {\n      // force creation of a property\n      publicAPI.setProperty(publicAPI.makeProperty());\n    }\n\n    // is this actor opaque ?\n    return !publicAPI.getIsOpaque();\n  };\n  publicAPI.makeProperty = vtkProperty.newInstance;\n  publicAPI.getProperty = () => {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n    return model.property;\n  };\n  publicAPI.getBounds = () => {\n    if (model.mapper === null) {\n      return model.bounds;\n    }\n\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBounds();\n    if (!bds || bds.length !== 6) {\n      return bds;\n    }\n\n    // Check for the special case when the actor is empty.\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    }\n\n    // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n    if (!model.mapperBounds || bds[0] !== model.mapperBounds[0] || bds[1] !== model.mapperBounds[1] || bds[2] !== model.mapperBounds[2] || bds[3] !== model.mapperBounds[3] || bds[4] !== model.mapperBounds[4] || bds[5] !== model.mapperBounds[5] || publicAPI.getMTime() > model.boundsMTime.getMTime()) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n      const bbox = [];\n      vtkBoundingBox.getCorners(bds, bbox);\n      publicAPI.computeMatrix();\n      const tmp4 = new Float64Array(16);\n      mat4.transpose(tmp4, model.matrix);\n      bbox.forEach(pt => vec3.transformMat4(pt, pt, tmp4));\n\n      /* eslint-disable no-multi-assign */\n      model.bounds[0] = model.bounds[2] = model.bounds[4] = Number.MAX_VALUE;\n      model.bounds[1] = model.bounds[3] = model.bounds[5] = -Number.MAX_VALUE;\n      /* eslint-enable no-multi-assign */\n\n      model.bounds = model.bounds.map((d, i) => i % 2 === 0 ? bbox.reduce((a, b) => a > b[i / 2] ? b[i / 2] : a, d) : bbox.reduce((a, b) => a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a, d));\n      model.boundsMTime.modified();\n    }\n    return model.bounds;\n  };\n  publicAPI.getMTime = () => {\n    let mt = superClass.getMTime();\n    if (model.property !== null) {\n      const time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    if (model.backfaceProperty !== null) {\n      const time = model.backfaceProperty.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    return mt;\n  };\n  publicAPI.getRedrawMTime = () => {\n    let mt = model.mtime;\n    if (model.mapper !== null) {\n      let time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    return mt;\n  };\n  publicAPI.getSupportsSelection = () => model.mapper ? model.mapper.getSupportsSelection() : false;\n  publicAPI.processSelectorPixelBuffers = (selector, pixelOffsets) => {\n    if (model.mapper && model.mapper.processSelectorPixelBuffers) {\n      model.mapper.processSelectorPixelBuffers(selector, pixelOffsets);\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  backfaceProperty: null,\n  forceOpaque: false,\n  forceTranslucent: false,\n  bounds: [1, -1, 1, -1, 1, -1]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp3D.extend(publicAPI, model, initialValues);\n\n  // vtkTimeStamp\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime);\n\n  // Build VTK API\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['backfaceProperty', 'forceOpaque', 'forceTranslucent', 'mapper']);\n\n  // Object methods\n  vtkActor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkActor');\n\n// ----------------------------------------------------------------------------\n\nvar vtkActor$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkActor$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkBoundingBox from './BoundingBox.js';\nimport vtkImplicitFunction from './ImplicitFunction.js';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n//------------------------------------------------------------------------------\n// Bounding box intersection code from David Gobbi.  Go through the\n// bounding planes one at a time and compute the parametric coordinate\n// of each intersection and return the parametric values and the calculated points\nfunction intersectWithLine(bounds, p1, p2) {\n  let plane1 = -1;\n  let plane2 = -1;\n  let t1 = 0.0;\n  let t2 = 1.0;\n  for (let j = 0; j < 3; j++) {\n    for (let k = 0; k < 2; k++) {\n      // Compute distances of p1 and p2 from the plane along the plane normal\n      const i = 2 * j + k;\n      const d1 = (bounds[i] - p1[j]) * (1 - 2 * k);\n      const d2 = (bounds[i] - p2[j]) * (1 - 2 * k);\n\n      // If both distances are positive, both points are outside\n      if (d1 > 0 && d2 > 0) {\n        return;\n      }\n      // If one of the distances is positive, the line crosses the plane\n      if (d1 > 0 || d2 > 0) {\n        // Compute fractional distance \"t\" of the crossing between p1 & p2\n        let t = 0.0;\n        if (d1 !== 0) {\n          t = d1 / (d1 - d2);\n        }\n\n        // If point p1 was clipped, adjust t1\n        if (d1 > 0) {\n          if (t >= t1) {\n            t1 = t;\n            plane1 = i;\n          }\n        }\n        // else point p2 was clipped, so adjust t2\n        else if (t <= t2) {\n          t2 = t;\n          plane2 = i;\n        }\n        // If this happens, there's no line left\n        if (t1 > t2) {\n          // Allow for planes that are coincident or slightly inverted\n          if (plane1 < 0 || plane2 < 0) {\n            return;\n          }\n        }\n      }\n    }\n  }\n  function getValues(plane, t) {\n    const x = [0, 0, 0];\n    for (let count = 0; count < 2; count++) {\n      for (let i = 0; i < 3; i++) {\n        if (plane === 2 * i || plane === 2 * i + 1) {\n          x[i] = bounds[plane];\n        } else {\n          x[i] = p1[i] * (1.0 - t) + p2[i] * t;\n          if (x[i] < bounds[2 * i]) {\n            x[i] = bounds[2 * i];\n          }\n          if (x[i] > bounds[2 * i + 1]) {\n            x[i] = bounds[2 * i + 1];\n          }\n        }\n      }\n    }\n    return x;\n  }\n  const x1 = getValues(plane1, t1);\n  const x2 = getValues(plane2, t2);\n  const outObject = {\n    t1,\n    t2,\n    x1,\n    x2\n  };\n\n  // eslint-disable-next-line consistent-return\n  return outObject;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst STATIC = {};\n\n// ----------------------------------------------------------------------------\n// vtkBox methods\n// ----------------------------------------------------------------------------\nfunction vtkBox(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkBox');\n\n  // TODO: replace with macro.setArray ?\n  publicAPI.setBounds = function () {\n    let boundsArray = [];\n    for (var _len = arguments.length, bounds = new Array(_len), _key = 0; _key < _len; _key++) {\n      bounds[_key] = arguments[_key];\n    }\n    if (Array.isArray(bounds[0])) {\n      boundsArray = bounds[0];\n    } else {\n      for (let i = 0; i < bounds.length; i++) {\n        boundsArray.push(bounds[i]);\n      }\n    }\n    if (boundsArray.length !== 6) {\n      console.log('vtkBox.setBounds', boundsArray, bounds);\n      return;\n    }\n    vtkBoundingBox.setBounds(model.bbox, boundsArray);\n  };\n  publicAPI.getBounds = () => model.bbox;\n  publicAPI.evaluateFunction = (x, y, z) => {\n    const point = Array.isArray(x) ? x : [x, y, z];\n    let diff;\n    let dist;\n    let t;\n    let minDistance = -Number.MAX_VALUE;\n    let distance = 0;\n    const minPoint = vtkBoundingBox.getMinPoint(model.bbox);\n    const maxPoint = vtkBoundingBox.getMaxPoint(model.bbox);\n    let inside = 1;\n    for (let i = 0; i < 3; i++) {\n      diff = vtkBoundingBox.getLength(model.bbox, i);\n      if (diff !== 0.0) {\n        t = (point[i] - minPoint[i]) / diff;\n        if (t < 0.0) {\n          inside = 0;\n          dist = minPoint[i] - point[i];\n        } else if (t > 1.0) {\n          inside = 0;\n          dist = point[i] - maxPoint[i];\n        } else {\n          // want negative distance, we are inside\n          if (t <= 0.5) {\n            dist = minPoint[i] - point[i];\n          } else {\n            dist = point[i] - maxPoint[i];\n          }\n          if (dist > minDistance) {\n            // remember, it's negative\n            minDistance = dist;\n          }\n        } // end if inside\n      } else {\n        dist = Math.abs(point[i] - minPoint[i]);\n        if (dist > 0.0) {\n          inside = 0;\n        }\n      }\n      if (dist > 0.0) {\n        distance += dist * dist;\n      }\n    } // end for i\n    distance = Math.sqrt(distance);\n    if (inside) {\n      return minDistance;\n    }\n    return distance;\n  };\n  publicAPI.addBounds = function () {\n    let boundsArray = [];\n    if (Array.isArray(arguments.length <= 0 ? undefined : arguments[0])) {\n      boundsArray = arguments.length <= 0 ? undefined : arguments[0];\n    } else {\n      for (let i = 0; i < arguments.length; i++) {\n        boundsArray.push(i < 0 || arguments.length <= i ? undefined : arguments[i]);\n      }\n    }\n    if (boundsArray.length !== 6) {\n      return;\n    }\n    vtkBoundingBox.addBounds(model.bbox, ...boundsArray);\n    publicAPI.modified();\n  };\n  publicAPI.addBox = other => publicAPI.addBounds(other.getBounds());\n  publicAPI.intersectWithLine = (p1, p2) => intersectWithLine(model.bbox, p1, p2);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  bbox: [...vtkBoundingBox.INIT_BOUNDS]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  vtkImplicitFunction.extend(publicAPI, model, initialValues);\n  vtkBox(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkBox');\n\n// ----------------------------------------------------------------------------\n\nvar vtkBox$1 = {\n  newInstance,\n  extend,\n  intersectWithLine,\n  ...STATIC\n};\n\nexport { STATIC, vtkBox$1 as default, extend, intersectWithLine, newInstance };\n","import { mat4, vec3 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport { s as subtract, l as normalize, d as dot, j as cross, r as radiansFromDegrees } from '../../Common/Core/Math/index.js';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\n\nconst {\n  vtkWarningMacro\n} = macro;\nconst EPSILON = 1e-6;\n\n// ----------------------------------------------------------------------------\n// vtkPlaneSource methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPlaneSource(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPlaneSource');\n  publicAPI.requestData = (inData, outData) => {\n    if (model.deleted) {\n      return;\n    }\n    const dataset = outData[0];\n\n    // Check input\n    const pointDataType = dataset ? dataset.getPoints().getDataType() : model.pointType;\n    const pd = vtkPolyData.newInstance();\n    const v10 = [];\n    const v20 = [];\n    subtract(model.point1, model.origin, v10);\n    subtract(model.point2, model.origin, v20);\n    if (!publicAPI.updatePlane(v10, v20)) {\n      vtkWarningMacro('Bad plane definition');\n      return;\n    }\n\n    // hand create a plane with special scalars\n    const xres = model.xResolution;\n    const yres = model.yResolution;\n    const numPts = (xres + 1) * (yres + 1);\n    const numPolys = xres * yres;\n\n    // Points\n    const points = macro.newTypedArray(pointDataType, numPts * 3);\n    pd.getPoints().setData(points, 3);\n\n    // Cells\n    const polys = new Uint32Array(5 * numPolys);\n    pd.getPolys().setData(polys, 1);\n\n    // Normals\n    const normalsData = new Float32Array(numPts * 3);\n    const normals = vtkDataArray.newInstance({\n      numberOfComponents: 3,\n      values: normalsData,\n      name: 'Normals'\n    });\n    pd.getPointData().setNormals(normals);\n\n    // Texture coords\n    const tcData = new Float32Array(numPts * 2);\n    const tcoords = vtkDataArray.newInstance({\n      numberOfComponents: 2,\n      values: tcData,\n      name: 'TextureCoordinates'\n    });\n    pd.getPointData().setTCoords(tcoords);\n    const tc = new Float32Array(2);\n    let idx = 0;\n    for (let j = 0; j < yres + 1; j++) {\n      tc[1] = j / yres;\n      for (let i = 0; i < xres + 1; i++) {\n        tc[0] = i / xres;\n        points[idx * 3] = model.origin[0] + tc[0] * v10[0] + tc[1] * v20[0];\n        points[idx * 3 + 1] = model.origin[1] + tc[0] * v10[1] + tc[1] * v20[1];\n        points[idx * 3 + 2] = model.origin[2] + tc[0] * v10[2] + tc[1] * v20[2];\n        tcData[idx * 2] = tc[0];\n        tcData[idx * 2 + 1] = tc[1];\n        normalsData[idx * 3] = model.normal[0];\n        normalsData[idx * 3 + 1] = model.normal[1];\n        normalsData[idx * 3 + 2] = model.normal[2];\n        idx++;\n      }\n    }\n\n    // Generate polygon connectivity\n    //\n    idx = 0;\n    for (let j = 0; j < yres; j++) {\n      for (let i = 0; i < xres; i++) {\n        polys[idx * 5 + 0] = 4;\n        polys[idx * 5 + 1] = i + j * (xres + 1);\n        polys[idx * 5 + 2] = polys[idx * 5 + 1] + 1;\n        polys[idx * 5 + 3] = polys[idx * 5 + 1] + xres + 2;\n        polys[idx * 5 + 4] = polys[idx * 5 + 1] + xres + 1;\n        idx++;\n      }\n    }\n\n    // Update output\n    outData[0] = pd;\n  };\n  publicAPI.setNormal = function () {\n    let n = [];\n    if (arguments.length === 1 || Array.isArray(arguments.length <= 0 ? undefined : arguments[0])) {\n      n = [...(arguments.length <= 0 ? undefined : arguments[0])];\n    } else if (arguments.length === 3) {\n      n = [arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]];\n    }\n    if (normalize(n) !== 0) {\n      const dp = dot(model.normal, n);\n      let theta = 0;\n      const rotationVector = [];\n      if (dp < 1.0) {\n        if (dp <= -1.0) {\n          theta = radiansFromDegrees(180.0);\n          subtract(model.point1, model.origin, rotationVector);\n        } else {\n          cross(model.normal, n, rotationVector);\n          theta = Math.acos(dp);\n        }\n        publicAPI.rotate(theta, rotationVector);\n      }\n    }\n  };\n\n  /**\n   * Rotate plane around a given axis\n   * @param {float} theta Angle (radian) to rotate about\n   * @param {vec3} rotationAxis Axis to rotate around\n   */\n  publicAPI.rotate = (angle, rotationAxis) => {\n    if (Math.abs(angle) < EPSILON) {\n      return;\n    }\n    // Create rotation matrix\n    const transform = mat4.identity(new Float64Array(16));\n    const negCenter = [];\n    vec3.negate(negCenter, model.center);\n    mat4.translate(transform, transform, model.center);\n    mat4.rotate(transform, transform, angle, rotationAxis);\n    mat4.translate(transform, transform, negCenter);\n    vec3.transformMat4(model.origin, model.origin, transform);\n    vec3.transformMat4(model.point1, model.point1, transform);\n    vec3.transformMat4(model.point2, model.point2, transform);\n    vtkMatrixBuilder.buildFromRadian().rotate(angle, rotationAxis).apply(model.normal);\n    publicAPI.modified();\n  };\n  publicAPI.setCenter = function () {\n    let c = [];\n    if (arguments.length === 1 || Array.isArray(arguments.length <= 0 ? undefined : arguments[0])) {\n      c = [...(arguments.length <= 0 ? undefined : arguments[0])];\n    } else if (arguments.length === 3) {\n      c = [arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]];\n    }\n    if (!vec3.exactEquals(c, model.center)) {\n      const v1 = [];\n      subtract(model.point1, model.origin, v1);\n      const v2 = [];\n      subtract(model.point2, model.origin, v2);\n      for (let i = 0; i < 3; i++) {\n        model.center[i] = c[i];\n        model.origin[i] = model.center[i] - 0.5 * (v1[i] + v2[i]);\n        model.point1[i] = model.origin[i] + v1[i];\n        model.point2[i] = model.origin[i] + v2[i];\n      }\n      publicAPI.modified();\n    }\n  };\n  publicAPI.setPoint1 = function () {\n    let point1 = [];\n    if (arguments.length === 1 || Array.isArray(arguments.length <= 0 ? undefined : arguments[0])) {\n      point1 = [...(arguments.length <= 0 ? undefined : arguments[0])];\n    } else if (arguments.length === 3) {\n      point1 = [arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]];\n    }\n    if (!vec3.exactEquals(point1, model.point1)) {\n      const v1 = [];\n      const v2 = [];\n      model.point1 = [...point1];\n      subtract(model.point1, model.origin, v1);\n      subtract(model.point2, model.origin, v2);\n\n      // set plane normal\n      publicAPI.updatePlane(v1, v2);\n      publicAPI.modified();\n    }\n  };\n  publicAPI.setPoint2 = function () {\n    let point2 = [];\n    if (arguments.length === 1 || Array.isArray(arguments.length <= 0 ? undefined : arguments[0])) {\n      point2 = [...(arguments.length <= 0 ? undefined : arguments[0])];\n    } else if (arguments.length === 3) {\n      point2 = [arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]];\n    }\n    if (!vec3.exactEquals(point2, model.point2)) {\n      const v1 = [];\n      const v2 = [];\n      model.point2 = [...point2];\n      subtract(model.point1, model.origin, v1);\n      subtract(model.point2, model.origin, v2);\n\n      // set plane normal\n      publicAPI.updatePlane(v1, v2);\n      publicAPI.modified();\n    }\n  };\n  publicAPI.updatePlane = (v1, v2) => {\n    // set plane center\n    for (let i = 0; i < 3; i++) {\n      model.center[i] = model.origin[i] + 0.5 * (v1[i] + v2[i]);\n    }\n\n    // set plane normal\n    cross(v1, v2, model.normal);\n    return normalize(model.normal) !== 0.0;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  xResolution: 10,\n  yResolution: 10,\n  origin: [0, 0, 0],\n  point1: [1, 0, 0],\n  point2: [0, 1, 0],\n  pointType: 'Float64Array'\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  model.normal = [0, 0, 1];\n  model.center = [0, 0, 0];\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['xResolution', 'yResolution']);\n  macro.setGetArray(publicAPI, model, ['origin'], 3);\n  macro.getArray(publicAPI, model, ['point1', 'point2', 'normal', 'center'], 3);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkPlaneSource(publicAPI, model);\n  publicAPI.setPoint1(model.point1);\n  publicAPI.setPoint2(model.point2);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkPlaneSource');\n\n// ----------------------------------------------------------------------------\n\nvar vtkPlaneSource$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkPlaneSource$1 as default, extend, newInstance };\n","const OrientationModes = {\n  DIRECTION: 0,\n  ROTATION: 1,\n  MATRIX: 2\n};\nconst ScaleModes = {\n  SCALE_BY_CONSTANT: 0,\n  SCALE_BY_MAGNITUDE: 1,\n  SCALE_BY_COMPONENTS: 2\n};\nvar Constants = {\n  OrientationModes,\n  ScaleModes\n};\n\nexport { OrientationModes, ScaleModes, Constants as default };\n","import { mat4, vec3, mat3 } from 'gl-matrix';\nimport Constants from './Glyph3DMapper/Constants.js';\nimport { m as macro } from '../../macros2.js';\nimport vtkMapper from './Mapper.js';\nimport { H as createUninitializedBounds, n as norm } from '../../Common/Core/Math/index.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\n\nconst {\n  OrientationModes,\n  ScaleModes\n} = Constants;\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// class methods\n// ----------------------------------------------------------------------------\n\nfunction vtkGlyph3DMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkGlyph3DMapper');\n\n  /**\n   * An orientation array is a vtkDataArray with 3 components. The first\n   * component is the angle of rotation along the X axis. The second\n   * component is the angle of rotation along the Y axis. The third\n   * component is the angle of rotation along the Z axis. Orientation is\n   * specified in X,Y,Z order but the rotations are performed in Z,X an Y.\n   * This definition is compliant with SetOrientation method on vtkProp3D.\n   * By using vector or normal there is a degree of freedom or rotation\n   * left (underconstrained). With the orientation array, there is no degree of\n   * freedom left.\n   */\n  publicAPI.getOrientationModeAsString = () => macro.enumToString(OrientationModes, model.orientationMode);\n  publicAPI.setOrientationModeToDirection = () => publicAPI.setOrientationMode(OrientationModes.DIRECTION);\n  publicAPI.setOrientationModeToRotation = () => publicAPI.setOrientationMode(OrientationModes.ROTATION);\n  publicAPI.setOrientationModeToMatrix = () => publicAPI.setOrientationMode(OrientationModes.MATRIX);\n  publicAPI.getOrientationArrayData = () => {\n    const idata = publicAPI.getInputData(0);\n    if (!idata || !idata.getPointData()) {\n      return null;\n    }\n    if (!model.orientationArray) {\n      return idata.getPointData().getVectors();\n    }\n    return idata.getPointData().getArray(model.orientationArray);\n  };\n  publicAPI.getScaleModeAsString = () => macro.enumToString(ScaleModes, model.scaleMode);\n  publicAPI.setScaleModeToScaleByMagnitude = () => publicAPI.setScaleMode(ScaleModes.SCALE_BY_MAGNITUDE);\n  publicAPI.setScaleModeToScaleByComponents = () => publicAPI.setScaleMode(ScaleModes.SCALE_BY_COMPONENTS);\n  publicAPI.setScaleModeToScaleByConstant = () => publicAPI.setScaleMode(ScaleModes.SCALE_BY_CONSTANT);\n  publicAPI.getScaleArrayData = () => {\n    const idata = publicAPI.getInputData(0);\n    if (!idata || !idata.getPointData()) {\n      return null;\n    }\n    if (!model.scaleArray) {\n      return idata.getPointData().getScalars();\n    }\n    return idata.getPointData().getArray(model.scaleArray);\n  };\n  publicAPI.getBounds = () => {\n    const idata = publicAPI.getInputData(0);\n    const gdata = publicAPI.getInputData(1);\n    if (!idata || !gdata) {\n      return createUninitializedBounds();\n    }\n\n    // first we build the arrays used for the glyphing\n    publicAPI.buildArrays();\n    return model.bounds;\n  };\n  publicAPI.buildArrays = () => {\n    // if the mtgime requires it, rebuild\n    const idata = publicAPI.getInputData(0);\n    const gdata = publicAPI.getInputData(1);\n    if (model.buildTime.getMTime() < gdata.getMTime() || model.buildTime.getMTime() < idata.getMTime() || model.buildTime.getMTime() < publicAPI.getMTime()) {\n      const pts = idata.getPoints().getData();\n      let sArray = publicAPI.getScaleArrayData();\n      let sData = null;\n      let numSComp = 0;\n      if (sArray) {\n        sData = sArray.getData();\n        numSComp = sArray.getNumberOfComponents();\n      }\n      if (model.scaling && sArray && model.scaleMode === ScaleModes.SCALE_BY_COMPONENTS && sArray.getNumberOfComponents() !== 3) {\n        vtkErrorMacro('Cannot scale by components since scale array does not have 3 components.');\n        sArray = null;\n      }\n\n      // get the glyph bounds\n      const gbounds = gdata.getBounds();\n      // convert them to 8 points so we can compute the\n      // overall bounds while building the arrays\n      const corners = [];\n      vtkBoundingBox.getCorners(gbounds, corners);\n      model.bounds[0] = vtkBoundingBox.INIT_BOUNDS[0];\n      model.bounds[1] = vtkBoundingBox.INIT_BOUNDS[1];\n      model.bounds[2] = vtkBoundingBox.INIT_BOUNDS[2];\n      model.bounds[3] = vtkBoundingBox.INIT_BOUNDS[3];\n      model.bounds[4] = vtkBoundingBox.INIT_BOUNDS[4];\n      model.bounds[5] = vtkBoundingBox.INIT_BOUNDS[5];\n      const tcorner = new Float64Array(3);\n      const oArray = publicAPI.getOrientationArrayData();\n      const identity = mat4.identity(new Float64Array(16));\n      const trans = [];\n      const scale = [];\n      const numPts = pts.length / 3;\n      model.matrixArray = new Float32Array(16 * numPts);\n      const mbuff = model.matrixArray.buffer;\n      model.normalArray = new Float32Array(9 * numPts);\n      const nbuff = model.normalArray.buffer;\n      const tuple = [];\n      const orientation = [];\n      for (let i = 0; i < numPts; ++i) {\n        const z = new Float32Array(mbuff, i * 64, 16);\n        trans[0] = pts[i * 3];\n        trans[1] = pts[i * 3 + 1];\n        trans[2] = pts[i * 3 + 2];\n        mat4.translate(z, identity, trans);\n        if (oArray) {\n          oArray.getTuple(i, orientation);\n          switch (model.orientationMode) {\n            case OrientationModes.MATRIX:\n              {\n                // prettier-ignore\n                const rotMat4 = [...orientation.slice(0, 3), 0, ...orientation.slice(3, 6), 0, ...orientation.slice(6, 9), 0, 0, 0, 0, 1];\n                mat4.multiply(z, z, rotMat4);\n                break;\n              }\n            case OrientationModes.ROTATION:\n              mat4.rotateZ(z, z, orientation[2]);\n              mat4.rotateX(z, z, orientation[0]);\n              mat4.rotateY(z, z, orientation[1]);\n              break;\n            case OrientationModes.DIRECTION:\n              if (orientation[1] === 0.0 && orientation[2] === 0.0) {\n                if (orientation[0] < 0) {\n                  mat4.rotateY(z, z, 3.1415926);\n                }\n              } else {\n                const vMag = norm(orientation);\n                const vNew = [];\n                vNew[0] = (orientation[0] + vMag) / 2.0;\n                vNew[1] = orientation[1] / 2.0;\n                vNew[2] = orientation[2] / 2.0;\n                mat4.rotate(z, z, 3.1415926, vNew);\n              }\n              break;\n          }\n        }\n\n        // scale data if appropriate\n        if (model.scaling) {\n          scale[0] = model.scaleFactor;\n          scale[1] = model.scaleFactor;\n          scale[2] = model.scaleFactor;\n          // Get the scalar and vector data\n          if (sArray) {\n            switch (model.scaleMode) {\n              case ScaleModes.SCALE_BY_MAGNITUDE:\n                for (let t = 0; t < numSComp; ++t) {\n                  tuple[t] = sData[i * numSComp + t];\n                }\n                scale[0] *= norm(tuple, numSComp);\n                scale[1] = scale[0];\n                scale[2] = scale[0];\n                break;\n              case ScaleModes.SCALE_BY_COMPONENTS:\n                for (let t = 0; t < numSComp; ++t) {\n                  tuple[t] = sData[i * numSComp + t];\n                }\n                scale[0] *= tuple[0];\n                scale[1] *= tuple[1];\n                scale[2] *= tuple[2];\n                break;\n              case ScaleModes.SCALE_BY_CONSTANT:\n            }\n          }\n          if (scale[0] === 0.0) {\n            scale[0] = 1.0e-10;\n          }\n          if (scale[1] === 0.0) {\n            scale[1] = 1.0e-10;\n          }\n          if (scale[2] === 0.0) {\n            scale[2] = 1.0e-10;\n          }\n          mat4.scale(z, z, scale);\n        }\n\n        // update bounds\n        for (let p = 0; p < 8; ++p) {\n          vec3.transformMat4(tcorner, corners[p], z);\n          if (tcorner[0] < model.bounds[0]) {\n            model.bounds[0] = tcorner[0];\n          }\n          if (tcorner[1] < model.bounds[2]) {\n            model.bounds[2] = tcorner[1];\n          }\n          if (tcorner[2] < model.bounds[4]) {\n            model.bounds[4] = tcorner[2];\n          }\n          if (tcorner[0] > model.bounds[1]) {\n            model.bounds[1] = tcorner[0];\n          }\n          if (tcorner[1] > model.bounds[3]) {\n            model.bounds[3] = tcorner[1];\n          }\n          if (tcorner[2] > model.bounds[5]) {\n            model.bounds[5] = tcorner[2];\n          }\n        }\n        const n = new Float32Array(nbuff, i * 36, 9);\n        mat3.fromMat4(n, z);\n        mat3.invert(n, n);\n        mat3.transpose(n, n);\n      }\n\n      // map scalars as well\n      const scalars = publicAPI.getAbstractScalars(idata, model.scalarMode, model.arrayAccessMode, model.arrayId, model.colorByArrayName).scalars;\n      if (!model.useLookupTableScalarRange) {\n        publicAPI.getLookupTable().setRange(model.scalarRange[0], model.scalarRange[1]);\n      }\n      model.colorArray = null;\n      const lut = publicAPI.getLookupTable();\n      if (lut && scalars) {\n        // Ensure that the lookup table is built\n        lut.build();\n        model.colorArray = lut.mapScalars(scalars, model.colorMode, 0);\n      }\n      model.buildTime.modified();\n    }\n  };\n  publicAPI.getPrimitiveCount = () => {\n    const glyph = publicAPI.getInputData(1);\n    const mult = publicAPI.getInputData().getPoints().getNumberOfValues() / 3;\n    const pcount = {\n      points: mult * glyph.getPoints().getNumberOfValues() / 3,\n      verts: mult * (glyph.getVerts().getNumberOfValues() - glyph.getVerts().getNumberOfCells()),\n      lines: mult * (glyph.getLines().getNumberOfValues() - 2 * glyph.getLines().getNumberOfCells()),\n      triangles: mult * (glyph.getPolys().getNumberOfValues() - 3 * glyph.getLines().getNumberOfCells())\n    };\n    return pcount;\n  };\n  publicAPI.setSourceConnection = outputPort => publicAPI.setInputConnection(outputPort, 1);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  orient: true,\n  orientationMode: OrientationModes.DIRECTION,\n  orientationArray: null,\n  scaling: true,\n  scaleFactor: 1.0,\n  scaleMode: ScaleModes.SCALE_BY_MAGNITUDE,\n  scaleArray: null,\n  matrixArray: null,\n  normalArray: null,\n  colorArray: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkMapper.extend(publicAPI, model, initialValues);\n  macro.algo(publicAPI, model, 2, 0);\n  model.buildTime = {};\n  macro.obj(model.buildTime, {\n    mtime: 0\n  });\n  model.boundsTime = {};\n  macro.obj(model.boundsTime, {\n    mtime: 0\n  });\n  macro.setGet(publicAPI, model, ['orient', 'orientationMode', 'orientationArray', 'scaleArray', 'scaleFactor', 'scaleMode', 'scaling']);\n  macro.get(publicAPI, model, ['colorArray', 'matrixArray', 'normalArray', 'buildTime']);\n\n  // Object methods\n  vtkGlyph3DMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkGlyph3DMapper');\n\n// ----------------------------------------------------------------------------\n\nvar vtkGlyph3DMapper$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkGlyph3DMapper$1 as default, extend, newInstance };\n","import vtkWidgetRepresentation from './WidgetRepresentation.js';\nimport { Behavior } from './WidgetRepresentation/Constants.js';\n\n// ----------------------------------------------------------------------------\n// vtkHandleRepresentation methods\n// ----------------------------------------------------------------------------\n\nfunction vtkHandleRepresentation(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkHandleRepresentation');\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  behavior: Behavior.HANDLE,\n  pickable: true,\n  dragable: true,\n  scaleInPixels: true\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const newDefault = {\n    ...DEFAULT_VALUES,\n    ...initialValues\n  };\n  vtkWidgetRepresentation.extend(publicAPI, model, newDefault);\n  vtkHandleRepresentation(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nvar vtkHandleRepresentation$1 = {\n  extend\n};\n\nexport { vtkHandleRepresentation$1 as default, extend };\n","import { m as macro } from '../../macros2.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\n\n// ----------------------------------------------------------------------------\n// vtkSphereSource methods\n// ----------------------------------------------------------------------------\n\nfunction vtkSphereSource(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkSphereSource');\n  publicAPI.requestData = (inData, outData) => {\n    if (model.deleted) {\n      return;\n    }\n    let dataset = outData[0];\n    const pointDataType = dataset ? dataset.getPoints().getDataType() : model.pointType;\n    dataset = vtkPolyData.newInstance();\n\n    // ----------------------------------------------------------------------\n    let numPoles = 0;\n\n    // Check data, determine increments, and convert to radians\n    let {\n      thetaResolution\n    } = model;\n    let startTheta = model.startTheta < model.endTheta ? model.startTheta : model.endTheta;\n    startTheta *= Math.PI / 180.0;\n    let endTheta = model.endTheta > model.startTheta ? model.endTheta : model.startTheta;\n    endTheta *= Math.PI / 180.0;\n    let startPhi = model.startPhi < model.endPhi ? model.startPhi : model.endPhi;\n    startPhi *= Math.PI / 180.0;\n    let endPhi = model.endPhi > model.startPhi ? model.endPhi : model.startPhi;\n    endPhi *= Math.PI / 180.0;\n    if (Math.abs(startTheta - endTheta) < 2.0 * Math.PI) {\n      ++thetaResolution;\n    }\n    const deltaTheta = (endTheta - startTheta) / model.thetaResolution;\n    const jStart = model.startPhi <= 0.0 ? 1 : 0;\n    const jEnd = model.phiResolution + (model.endPhi >= 180.0 ? -1 : 0);\n    const numPts = model.phiResolution * thetaResolution + 2;\n    const numPolys = model.phiResolution * 2 * model.thetaResolution;\n\n    // Points\n    let pointIdx = 0;\n    let points = macro.newTypedArray(pointDataType, numPts * 3);\n\n    // Normals\n    let normals = new Float32Array(numPts * 3);\n\n    // Cells\n    let cellLocation = 0;\n    let polys = new Uint32Array(numPolys * 5);\n\n    // Create north pole if needed\n    if (model.startPhi <= 0.0) {\n      points[pointIdx * 3 + 0] = model.center[0];\n      points[pointIdx * 3 + 1] = model.center[1];\n      points[pointIdx * 3 + 2] = model.center[2] + model.radius;\n      normals[pointIdx * 3 + 0] = 0;\n      normals[pointIdx * 3 + 1] = 0;\n      normals[pointIdx * 3 + 2] = 1;\n      pointIdx++;\n      numPoles++;\n    }\n\n    // Create south pole if needed\n    if (model.endPhi >= 180.0) {\n      points[pointIdx * 3 + 0] = model.center[0];\n      points[pointIdx * 3 + 1] = model.center[1];\n      points[pointIdx * 3 + 2] = model.center[2] - model.radius;\n      normals[pointIdx * 3 + 0] = 0;\n      normals[pointIdx * 3 + 1] = 0;\n      normals[pointIdx * 3 + 2] = -1;\n      pointIdx++;\n      numPoles++;\n    }\n    const phiResolution = model.phiResolution - numPoles;\n    const deltaPhi = (endPhi - startPhi) / (model.phiResolution - 1);\n\n    // Create intermediate points\n    for (let i = 0; i < thetaResolution; i++) {\n      const theta = startTheta + i * deltaTheta;\n      for (let j = jStart; j < jEnd; j++) {\n        const phi = startPhi + j * deltaPhi;\n        const radius = model.radius * Math.sin(phi);\n        normals[pointIdx * 3 + 0] = radius * Math.cos(theta);\n        normals[pointIdx * 3 + 1] = radius * Math.sin(theta);\n        normals[pointIdx * 3 + 2] = model.radius * Math.cos(phi);\n        points[pointIdx * 3 + 0] = normals[pointIdx * 3 + 0] + model.center[0];\n        points[pointIdx * 3 + 1] = normals[pointIdx * 3 + 1] + model.center[1];\n        points[pointIdx * 3 + 2] = normals[pointIdx * 3 + 2] + model.center[2];\n        let norm = Math.sqrt(normals[pointIdx * 3 + 0] * normals[pointIdx * 3 + 0] + normals[pointIdx * 3 + 1] * normals[pointIdx * 3 + 1] + normals[pointIdx * 3 + 2] * normals[pointIdx * 3 + 2]);\n        norm = norm === 0 ? 1 : norm;\n        normals[pointIdx * 3 + 0] /= norm;\n        normals[pointIdx * 3 + 1] /= norm;\n        normals[pointIdx * 3 + 2] /= norm;\n        pointIdx++;\n      }\n    }\n\n    // Generate mesh connectivity\n    const base = phiResolution * thetaResolution;\n    if (Math.abs(startTheta - endTheta) < 2.0 * Math.PI) {\n      --thetaResolution;\n    }\n\n    // around north pole\n    if (model.startPhi <= 0.0) {\n      for (let i = 0; i < thetaResolution; i++) {\n        polys[cellLocation++] = 3;\n        polys[cellLocation++] = phiResolution * i + numPoles;\n        polys[cellLocation++] = phiResolution * (i + 1) % base + numPoles;\n        polys[cellLocation++] = 0;\n      }\n    }\n\n    // around south pole\n    if (model.endPhi >= 180.0) {\n      const numOffset = phiResolution - 1 + numPoles;\n      for (let i = 0; i < thetaResolution; i++) {\n        polys[cellLocation++] = 3;\n        polys[cellLocation++] = phiResolution * i + numOffset;\n        polys[cellLocation++] = numPoles - 1;\n        polys[cellLocation++] = phiResolution * (i + 1) % base + numOffset;\n      }\n    }\n\n    // bands in-between poles\n    for (let i = 0; i < thetaResolution; i++) {\n      for (let j = 0; j < phiResolution - 1; j++) {\n        const a = phiResolution * i + j + numPoles;\n        const b = a + 1;\n        const c = (phiResolution * (i + 1) + j) % base + numPoles + 1;\n        if (!model.latLongTessellation) {\n          polys[cellLocation++] = 3;\n          polys[cellLocation++] = a;\n          polys[cellLocation++] = b;\n          polys[cellLocation++] = c;\n          polys[cellLocation++] = 3;\n          polys[cellLocation++] = a;\n          polys[cellLocation++] = c;\n          polys[cellLocation++] = c - 1;\n        } else {\n          polys[cellLocation++] = 4;\n          polys[cellLocation++] = a;\n          polys[cellLocation++] = b;\n          polys[cellLocation++] = c;\n          polys[cellLocation++] = c - 1;\n        }\n      }\n    }\n\n    // Squeeze\n    points = points.subarray(0, pointIdx * 3);\n    dataset.getPoints().setData(points, 3);\n    normals = normals.subarray(0, pointIdx * 3);\n    const normalArray = vtkDataArray.newInstance({\n      name: 'Normals',\n      values: normals,\n      numberOfComponents: 3\n    });\n    dataset.getPointData().setNormals(normalArray);\n    polys = polys.subarray(0, cellLocation);\n    dataset.getPolys().setData(polys, 1);\n\n    // Update output\n    outData[0] = dataset;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  radius: 0.5,\n  latLongTessellation: false,\n  thetaResolution: 8,\n  startTheta: 0.0,\n  endTheta: 360.0,\n  phiResolution: 8,\n  startPhi: 0.0,\n  endPhi: 180.0,\n  center: [0, 0, 0],\n  pointType: 'Float64Array'\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['radius', 'latLongTessellation', 'thetaResolution', 'startTheta', 'endTheta', 'phiResolution', 'startPhi', 'endPhi']);\n  macro.setGetArray(publicAPI, model, ['center'], 3);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkSphereSource(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkSphereSource');\n\n// ----------------------------------------------------------------------------\n\nvar vtkSphereSource$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkSphereSource$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkActor from '../../Rendering/Core/Actor.js';\nimport vtkGlyph3DMapper from '../../Rendering/Core/Glyph3DMapper.js';\nimport vtkHandleRepresentation from './HandleRepresentation.js';\nimport vtkContextRepresentation from './ContextRepresentation.js';\nimport vtkSphereSource from '../../Filters/Sources/SphereSource.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport { ScalarMode } from '../../Rendering/Core/Mapper/Constants.js';\nimport { getPixelWorldHeightAtCoord } from '../Core/WidgetManager.js';\nimport vtkWidgetRepresentation, { allocateArray } from './WidgetRepresentation.js';\nimport { Behavior } from './WidgetRepresentation/Constants.js';\nimport { OrientationModes } from '../../Rendering/Core/Glyph3DMapper/Constants.js';\n\n// ----------------------------------------------------------------------------\n// vtkGlyphRepresentation methods\n// ----------------------------------------------------------------------------\nfunction origin(publicAPI, model) {\n  return (polyData, states) => {\n    const points = allocateArray(polyData, 'points', states.length).getData();\n    let j = 0;\n    for (let i = 0; i < states.length; ++i) {\n      const coord = states[i].getOrigin(model.scaleInPixels && model.displayScaleParams);\n      points[j++] = coord[0];\n      points[j++] = coord[1];\n      points[j++] = coord[2];\n    }\n  };\n}\nfunction noPosition(publicAPI, model) {\n  return (polyData, states) => {\n    allocateArray(polyData, 'points', 0);\n  };\n}\nfunction color3(publicAPI, model) {\n  return (polyData, states) => {\n    model._pipeline.mapper.setColorByArrayName('color');\n    const colorArray = allocateArray(polyData, 'color', states.length, 'Uint8Array',\n    // RGBA\n    4);\n    const colors = colorArray.getData();\n    let j = 0;\n    for (let i = 0; i < states.length; ++i) {\n      let c3 = states[i].getColor3();\n      if (states[i].getActive() && model.useActiveColor) {\n        c3 = model.activeColor;\n      }\n      colors[j++] = c3[0];\n      colors[j++] = c3[1];\n      colors[j++] = c3[2];\n      colors[j++] = states[i].getOpacity();\n    }\n    colorArray.dataChange();\n  };\n}\nfunction color(publicAPI, model) {\n  return (polyData, states) => {\n    model._pipeline.mapper.setColorByArrayName('color');\n    const colors = allocateArray(polyData, 'color', states.length).getData();\n    for (let i = 0; i < states.length; ++i) {\n      let c = states[i].getColor();\n      if (states[i].getActive() && model.useActiveColor) {\n        c = model.activeColor;\n      }\n      colors[i] = c;\n    }\n  };\n}\nfunction noColor(publicAPI, model) {\n  return (polyData, states) => {\n    model._pipeline.mapper.setColorByArrayName(null);\n  };\n}\nfunction scale3(publicAPI, model) {\n  return (polyData, states) => {\n    model._pipeline.mapper.setScaleArray('scale');\n    model._pipeline.mapper.setScaleFactor(1);\n    model._pipeline.mapper.setScaling(true);\n    model._pipeline.mapper.setScaleMode(vtkGlyph3DMapper.ScaleModes.SCALE_BY_COMPONENTS);\n    const scales = allocateArray(polyData, 'scale', states.length, 'Float32Array', 3).getData();\n    let j = 0;\n    for (let i = 0; i < states.length; ++i) {\n      const state = states[i];\n      let scaleFactor = state.getActive() ? model.activeScaleFactor : 1;\n      if (publicAPI.getScaleInPixels()) {\n        scaleFactor *= getPixelWorldHeightAtCoord(state.getOrigin(), model.displayScaleParams);\n      }\n      const scale = state.getScale3?.() ?? model.defaultScale;\n      scales[j++] = scaleFactor * scale[0];\n      scales[j++] = scaleFactor * scale[1];\n      scales[j++] = scaleFactor * scale[2];\n    }\n  };\n}\nfunction scale1(publicAPI, model) {\n  return (polyData, states) => {\n    model._pipeline.mapper.setScaleArray('scale');\n    model._pipeline.mapper.setScaleFactor(1);\n    model._pipeline.mapper.setScaling(true);\n    const scales = allocateArray(polyData, 'scale', states.length).getData();\n    for (let i = 0; i < states.length; ++i) {\n      const state = states[i];\n      let scaleFactor = state.getActive() ? model.activeScaleFactor : 1;\n      if (publicAPI.getScaleInPixels()) {\n        scaleFactor *= getPixelWorldHeightAtCoord(state.getOrigin(), model.displayScaleParams);\n      }\n      const scale = state.getScale1?.() ?? model.defaultScale;\n      scales[i] = scaleFactor * scale;\n    }\n  };\n}\nfunction noScale(publicAPI, model) {\n  return (polyData, states) => {\n    model._pipeline.mapper.setScaleArray(null);\n    model._pipeline.mapper.setScaleFactor(model.defaultScale);\n    model._pipeline.mapper.setScaling(model.defaultScale !== 1);\n  };\n}\nfunction direction(publicAPI, model) {\n  return (polyData, states) => {\n    model._pipeline.mapper.setOrientationArray('orientation');\n    model._pipeline.mapper.setOrientationMode(OrientationModes.MATRIX);\n    const orientation = allocateArray(polyData, 'orientation', states.length, 'Float64Array', 9).getData();\n    for (let i = 0; i < states.length; ++i) {\n      const state = states[i];\n      const right = state.getRight ? state.getRight() : [1, 0, 0];\n      const up = state.getUp ? state.getUp() : [0, 1, 0];\n      const dir = state.getDirection ? state.getDirection() : [0, 0, 1];\n      orientation.set(right, 9 * i);\n      orientation.set(up, 9 * i + 3);\n      orientation.set(dir, 9 * i + 6);\n    }\n  };\n}\nfunction noOrientation(publicAPI, model) {\n  return (polyData, states) => {\n    model._pipeline.mapper.setOrientationArray(null);\n  };\n}\nfunction vtkGlyphRepresentation(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkGlyphRepresentation');\n  const superClass = {\n    ...publicAPI\n  };\n  const internalPolyData = vtkPolyData.newInstance({\n    mtime: 0\n  });\n  function hasMixin(states) {\n    for (var _len = arguments.length, requiredMixins = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      requiredMixins[_key - 1] = arguments[_key];\n    }\n    return requiredMixins.every(requiredMixin => states[0]?.[`get${macro.capitalize(requiredMixin)}`]?.() != null);\n  }\n  // --------------------------------------------------------------------------\n  // Generic rendering pipeline\n  // --------------------------------------------------------------------------\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.getRepresentationStates = function () {\n    let input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : model.inputData[0];\n    return superClass.getRepresentationStates(input).filter(state => state.getOrigin?.() && (state.isVisible?.() ?? true));\n  };\n\n  // --------------------------------------------------------------------------\n  publicAPI.getMixins = states => {\n    const glyphProperties = {};\n    if (hasMixin(states, 'origin')) {\n      glyphProperties.position = model.applyMixin.origin;\n    } else {\n      glyphProperties.position = model.applyMixin.noPosition;\n    }\n    if (hasMixin(states, 'color3')) {\n      glyphProperties.color = model.applyMixin.color3;\n    } else if (hasMixin(states, 'color')) {\n      glyphProperties.color = model.applyMixin.color;\n    } else {\n      glyphProperties.color = model.applyMixin.noColor;\n    }\n    if (hasMixin(states, 'scale3')) {\n      glyphProperties.scale = model.applyMixin.scale3;\n    } else if (hasMixin(states, 'scale1')) {\n      glyphProperties.scale = model.applyMixin.scale1;\n    } else {\n      glyphProperties.scale = model.applyMixin.noScale;\n    }\n    if (hasMixin(states, 'direction')) {\n      glyphProperties.orientation = model.applyMixin.direction;\n    } else {\n      glyphProperties.orientation = model.applyMixin.noOrientation;\n    }\n    return glyphProperties;\n  };\n  publicAPI.requestData = (inData, outData) => {\n    const states = publicAPI.getRepresentationStates(inData[0]);\n    outData[0] = internalPolyData;\n    const glyphProperties = publicAPI.getMixins(states);\n    Object.values(glyphProperties).forEach(property => property(internalPolyData, states));\n    internalPolyData.getPoints().modified();\n    internalPolyData.modified();\n  };\n  vtkWidgetRepresentation.connectPipeline(model._pipeline);\n  publicAPI.addActor(model._pipeline.actor);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nfunction defaultValues(publicAPI, model, initialValues) {\n  return {\n    defaultScale: 1,\n    ...initialValues,\n    _pipeline: {\n      source: initialValues._pipeline?.source ?? publicAPI,\n      glyph: initialValues._pipeline?.glyph ??\n      // in case glyph was provided\n      vtkSphereSource.newInstance({\n        phiResolution: 8,\n        thetaResolution: 8\n      }),\n      mapper: initialValues._pipeline?.mapper ??\n      // in case mapper was provided\n      vtkGlyph3DMapper.newInstance({\n        scalarMode: ScalarMode.USE_POINT_FIELD_DATA\n      }),\n      actor: initialValues._pipeline?.actor ??\n      // in case actor was provided\n      vtkActor.newInstance({\n        parentProp: publicAPI\n      }),\n      ...initialValues._pipeline // in case there is something else to add to pipeline\n    },\n\n    applyMixin: {\n      origin: initialValues.applyMixin?.origin ?? origin(publicAPI, model),\n      noPosition: initialValues.applyMixin?.noPosition ?? noPosition(),\n      color3: initialValues.applyMixin?.color3 ?? color3(publicAPI, model),\n      color: initialValues.applyMixin?.color ?? color(publicAPI, model),\n      noColor: initialValues.applyMixin?.noColor ?? noColor(publicAPI, model),\n      scale3: initialValues.applyMixin?.scale3 ?? scale3(publicAPI, model),\n      scale1: initialValues.applyMixin?.scale1 ?? scale1(publicAPI, model),\n      noScale: initialValues.applyMixin?.noScale ?? noScale(publicAPI, model),\n      direction: initialValues.applyMixin?.direction ?? direction(publicAPI, model),\n      noOrientation: initialValues.applyMixin?.noOrientation ?? noOrientation(publicAPI, model),\n      ...initialValues.applyMixin\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (initialValues.behavior === Behavior.CONTEXT) {\n    vtkContextRepresentation.extend(publicAPI, model, defaultValues(publicAPI, model, initialValues));\n  } else {\n    vtkHandleRepresentation.extend(publicAPI, model, defaultValues(publicAPI, model, initialValues));\n  }\n  if ('lighting' in initialValues) {\n    model._pipeline.actor.getProperty().setLighting(initialValues.lighting);\n  }\n  macro.setGet(publicAPI, model._pipeline, ['defaultScale']);\n  macro.get(publicAPI, model._pipeline, ['glyph', 'mapper', 'actor']);\n  // Expose the mixin functions to allow overwriting\n  macro.setGet(publicAPI, model.applyMixin, Object.keys(model.applyMixin));\n\n  // Object specific methods\n  vtkGlyphRepresentation(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkGlyphRepresentation');\n\n// ----------------------------------------------------------------------------\n\nvar vtkGlyphRepresentation$1 = {\n  newInstance,\n  extend\n};\n\nexport { color, color3, vtkGlyphRepresentation$1 as default, direction, extend, newInstance, noColor, noOrientation, noPosition, noScale, origin, scale1, scale3 };\n","import { mat4, vec3 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkMapper from './Mapper.js';\n\n// ----------------------------------------------------------------------------\n// vtkPixelSpaceCallbackMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPixelSpaceCallbackMapper(publicAPI, model) {\n  model.classHierarchy.push('vtkPixelSpaceCallbackMapper');\n  if (!model.callback) {\n    model.callback = () => {};\n  }\n  publicAPI.invokeCallback = (dataset, camera, aspect, windowSize, depthValues) => {\n    if (!model.callback) {\n      return;\n    }\n    const matrix = camera.getCompositeProjectionMatrix(aspect, -1, 1);\n    mat4.transpose(matrix, matrix);\n    const dataPoints = dataset.getPoints();\n    const result = new Float64Array(3);\n    const width = windowSize.usize;\n    const height = windowSize.vsize;\n    const hw = width / 2;\n    const hh = height / 2;\n    const coords = [];\n    for (let pidx = 0; pidx < dataPoints.getNumberOfPoints(); pidx += 1) {\n      const point = dataPoints.getPoint(pidx);\n      vec3.transformMat4(result, point, matrix);\n      const coord = [result[0] * hw + hw, result[1] * hh + hh, result[2], 0];\n      if (depthValues) {\n        const linIdx = Math.floor(coord[1]) * width + Math.floor(coord[0]);\n        const idx = linIdx * 4;\n        const r = depthValues[idx] / 255;\n        const g = depthValues[idx + 1] / 255;\n        const z = (r * 256 + g) / 257;\n        coord[3] = z * 2 - 1;\n      }\n      coords.push(coord);\n    }\n    model.callback(coords, camera, aspect, depthValues, [width, height]);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  callback: null,\n  useZValues: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkMapper.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['callback', 'useZValues']);\n\n  // Object methods\n  vtkPixelSpaceCallbackMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkPixelSpaceCallbackMapper');\n\n// ----------------------------------------------------------------------------\n\nvar vtkPixelSpaceCallbackMapper$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkPixelSpaceCallbackMapper$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\n\n// ----------------------------------------------------------------------------\n// vtkCylinderSource methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCylinderSource(publicAPI, model) {\n  // Set our classname\n  model.classHierarchy.push('vtkCylinderSource');\n  function requestData(inData, outData) {\n    if (model.deleted) {\n      return;\n    }\n    let dataset = outData[0];\n    const angle = 2.0 * Math.PI / model.resolution;\n    let numberOfPoints = 2 * model.resolution;\n    let numberOfPolys = 5 * model.resolution;\n    if (model.capping) {\n      numberOfPoints = 4 * model.resolution;\n      numberOfPolys = 7 * model.resolution + 2;\n    }\n\n    // Points\n    const points = macro.newTypedArray(model.pointType, numberOfPoints * 3);\n\n    // Cells\n    let cellLocation = 0;\n    const polys = new Uint32Array(numberOfPolys);\n\n    // Normals\n    const normalsData = new Float32Array(numberOfPoints * 3);\n    const normals = vtkDataArray.newInstance({\n      numberOfComponents: 3,\n      values: normalsData,\n      name: 'Normals'\n    });\n\n    // Texture coords\n    const tcData = new Float32Array(numberOfPoints * 2);\n    const tcoords = vtkDataArray.newInstance({\n      numberOfComponents: 2,\n      values: tcData,\n      name: 'TCoords'\n    });\n\n    // Generate points for all sides\n    const nbot = [0.0, 0.0, 0.0];\n    const ntop = [0.0, 0.0, 0.0];\n    const xbot = [0.0, 0.0, 0.0];\n    const xtop = [0.0, 0.0, 0.0];\n    const tcbot = [0.0, 0.0];\n    const tctop = [0.0, 0.0];\n    const otherRadius = model.otherRadius == null ? model.radius : model.otherRadius;\n    for (let i = 0; i < model.resolution; i++) {\n      // x coordinate\n      nbot[0] = Math.cos(i * angle + model.initAngle);\n      ntop[0] = nbot[0];\n      xbot[0] = model.radius * nbot[0] + model.center[0];\n      xtop[0] = xbot[0];\n      tcbot[0] = Math.abs(2.0 * i / model.resolution - 1.0);\n      tctop[0] = tcbot[0];\n\n      // y coordinate\n      xbot[1] = 0.5 * model.height + model.center[1];\n      xtop[1] = -0.5 * model.height + model.center[1];\n      tcbot[1] = 0.0;\n      tctop[1] = 1.0;\n\n      // z coordinate\n      nbot[2] = -Math.sin(i * angle + model.initAngle);\n      ntop[2] = nbot[2];\n      xbot[2] = otherRadius * nbot[2] + model.center[2];\n      xtop[2] = xbot[2];\n      const pointIdx = 2 * i;\n      for (let j = 0; j < 3; j++) {\n        normalsData[pointIdx * 3 + j] = nbot[j];\n        normalsData[(pointIdx + 1) * 3 + j] = ntop[j];\n        points[pointIdx * 3 + j] = xbot[j];\n        points[(pointIdx + 1) * 3 + j] = xtop[j];\n        if (j < 2) {\n          tcData[pointIdx * 2 + j] = tcbot[j];\n          tcData[(pointIdx + 1) * 2 + j] = tctop[j];\n        }\n      }\n    }\n\n    // Generate polygons for sides\n    for (let i = 0; i < model.resolution; i++) {\n      polys[cellLocation++] = 4;\n      polys[cellLocation++] = 2 * i;\n      polys[cellLocation++] = 2 * i + 1;\n      const pt = (2 * i + 3) % (2 * model.resolution);\n      polys[cellLocation++] = pt;\n      polys[cellLocation++] = pt - 1;\n    }\n    if (model.capping) {\n      // Generate points for top/bottom polygons\n      for (let i = 0; i < model.resolution; i++) {\n        // x coordinate\n        xbot[0] = model.radius * Math.cos(i * angle + model.initAngle);\n        xtop[0] = xbot[0];\n        tcbot[0] = xbot[0];\n        tctop[0] = xbot[0];\n        xbot[0] += model.center[0];\n        xtop[0] += model.center[0];\n\n        // y coordinate\n        nbot[1] = 1.0;\n        ntop[1] = -1.0;\n        xbot[1] = 0.5 * model.height + model.center[1];\n        xtop[1] = -0.5 * model.height + model.center[1];\n\n        // z coordinate\n        xbot[2] = -otherRadius * Math.sin(i * angle + model.initAngle);\n        xtop[2] = xbot[2];\n        tcbot[1] = xbot[2];\n        tctop[1] = xbot[2];\n        xbot[2] += model.center[2];\n        xtop[2] += model.center[2];\n        const botIdx = 2 * model.resolution + i;\n        const topIdx = 3 * model.resolution + model.resolution - i - 1;\n        for (let j = 0; j < 3; j++) {\n          normalsData[3 * botIdx + j] = nbot[j];\n          normalsData[3 * topIdx + j] = ntop[j];\n          points[3 * botIdx + j] = xbot[j];\n          points[3 * topIdx + j] = xtop[j];\n          if (j < 2) {\n            tcData[2 * botIdx + j] = tcbot[j];\n            tcData[2 * topIdx + j] = tctop[j];\n          }\n        }\n      }\n\n      // Generate polygons for top/bottom\n      polys[cellLocation++] = model.resolution;\n      for (let i = 0; i < model.resolution; i++) {\n        polys[cellLocation++] = 2 * model.resolution + i;\n      }\n      polys[cellLocation++] = model.resolution;\n      for (let i = 0; i < model.resolution; i++) {\n        polys[cellLocation++] = 3 * model.resolution + i;\n      }\n    }\n\n    // Apply transformation to the points coordinates\n    vtkMatrixBuilder.buildFromRadian().translate(...model.center).rotateFromDirections([0, 1, 0], model.direction).translate(...model.center.map(c => c * -1)).apply(points);\n    dataset = vtkPolyData.newInstance();\n    dataset.getPoints().setData(points, 3);\n    dataset.getPolys().setData(polys, 1);\n    dataset.getPointData().setNormals(normals);\n    dataset.getPointData().setTCoords(tcoords);\n\n    // Update output\n    outData[0] = dataset;\n  }\n\n  // Expose methods\n  publicAPI.requestData = requestData;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  height: 1.0,\n  initAngle: 0,\n  radius: 1.0,\n  resolution: 6,\n  center: [0, 0, 0],\n  direction: [0.0, 1.0, 0.0],\n  capping: true,\n  pointType: 'Float64Array'\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['height', 'initAngle', 'otherRadius', 'radius', 'resolution', 'capping']);\n  macro.setGetArray(publicAPI, model, ['center', 'direction'], 3);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkCylinderSource(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkCylinderSource');\n\n// ----------------------------------------------------------------------------\n\nvar vtkCylinderSource$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkCylinderSource$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkActor from '../../Rendering/Core/Actor.js';\nimport vtkGlyphRepresentation from './GlyphRepresentation.js';\nimport vtkPixelSpaceCallbackMapper from '../../Rendering/Core/PixelSpaceCallbackMapper.js';\nimport vtkCylinderSource from '../../Filters/Sources/CylinderSource.js';\nimport { allocateArray } from './WidgetRepresentation.js';\nimport { getPixelWorldHeightAtCoord } from '../Core/WidgetManager.js';\nimport { vec3 } from 'gl-matrix';\n\nconst INFINITE_RATIO = 100000;\n\n// ----------------------------------------------------------------------------\n// vtkLineHandleRepresentation methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLineHandleRepresentation(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLineHandleRepresentation');\n\n  // --------------------------------------------------------------------------\n  // Generic rendering pipeline\n  // --------------------------------------------------------------------------\n\n  /*\n   * displayActors and displayMappers are used to render objects in HTML, allowing objects\n   * to be 'rendered' internally in a VTK scene without being visible on the final output\n   */\n\n  model.displayMapper = vtkPixelSpaceCallbackMapper.newInstance();\n  model.displayActor = vtkActor.newInstance({\n    parentProp: publicAPI\n  });\n  // model.displayActor.getProperty().setOpacity(0); // don't show in 3D\n  model.displayActor.setMapper(model.displayMapper);\n  model.displayMapper.setInputConnection(publicAPI.getOutputPort());\n  publicAPI.addActor(model.displayActor);\n  model.alwaysVisibleActors = [model.displayActor];\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.setGlyphResolution = macro.chain(publicAPI.setGlyphResolution, model._pipeline.glyph.setThetaResolution, model._pipeline.glyph.setPhiResolution);\n\n  // --------------------------------------------------------------------------\n\n  function callbackProxy(coords) {\n    if (model.displayCallback) {\n      const filteredList = [];\n      const states = publicAPI.getRepresentationStates();\n      for (let i = 0; i < states.length; i++) {\n        if (states[i].getActive()) {\n          filteredList.push(coords[i]);\n        }\n      }\n      if (filteredList.length) {\n        model.displayCallback(filteredList);\n        return;\n      }\n    }\n    model.displayCallback();\n  }\n  publicAPI.setDisplayCallback = callback => {\n    model.displayCallback = callback;\n    model.displayMapper.setCallback(callback ? callbackProxy : null);\n  };\n  const superPublicAPI = {\n    ...publicAPI\n  };\n  publicAPI.requestData = (inData, outData) => {\n    superPublicAPI.requestData(inData, outData);\n    if (!model.holeWidth) {\n      return;\n    }\n    const internalPolyData = outData[0];\n\n    // Duplicate points and point data\n    const points = internalPolyData.getPoints();\n    const dataArrays = internalPolyData.getPointData().getArrays();\n    [points, ...dataArrays].forEach(array => {\n      const oldNumberOfValues = array.getNumberOfValues();\n      array.resize(2 * array.getNumberOfTuples());\n      const arrayData = array.getData();\n      for (let i = 0; i < oldNumberOfValues; ++i) {\n        arrayData[i + oldNumberOfValues] = arrayData[i];\n      }\n    });\n\n    // Change the scale and origin of each line\n    const states = publicAPI.getRepresentationStates(inData[0]);\n    const nStates = states.length;\n    const scaleArray = internalPolyData.getPointData().getArrayByName('scale');\n    const orientationArray = internalPolyData.getPointData().getArrayByName('orientation');\n    const defaultScale = [1, 1, 1];\n    const defaultOrientation = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    for (let i = 0; i < nStates; ++i) {\n      const j = i + nStates;\n      const scale = scaleArray?.getTuple(i) ?? defaultScale;\n      const orientationMatrix = orientationArray?.getTuple(i) ?? defaultOrientation;\n      const originalPoint = points.getTuple(i);\n\n      // Divide the scale by two in the direction of the cylinder, as we duplicate the line\n      scale[2] *= 0.5;\n      scaleArray?.setTuple(i, scale);\n      scaleArray?.setTuple(j, scale);\n\n      // Add or subtract an offset to each point depending on the hole width\n      let holeWidth = model.holeWidth;\n      if (publicAPI.getScaleInPixels()) {\n        holeWidth *= getPixelWorldHeightAtCoord(originalPoint, model.displayScaleParams);\n      }\n      const offset = vec3.fromValues(0, 0, 0.5 * scale[2] + holeWidth);\n      vec3.transformMat3(offset, offset, orientationMatrix);\n      points.setTuple(i, vec3.add(vec3.create(), originalPoint, offset));\n      points.setTuple(j, vec3.sub(vec3.create(), originalPoint, offset));\n    }\n  };\n  publicAPI.getSelectedState = (prop, compositeID) => {\n    const representationStates = publicAPI.getRepresentationStates();\n    return representationStates[compositeID % representationStates.length];\n  };\n\n  /**\n   * Overwrite scale3 to optionally make lines infinite\n   */\n  const superScale3 = publicAPI.getScale3();\n  publicAPI.setScale3((polyData, states) => {\n    superScale3(polyData, states);\n    if (model.infiniteLine) {\n      const scales = allocateArray(polyData, 'scale', states.length, 'Float32Array', 3).getData();\n      for (let i = 0; i < states.length; ++i) {\n        scales[3 * i + 2] = INFINITE_RATIO;\n      }\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nfunction defaultValues(initialValues) {\n  return {\n    infiniteLine: true,\n    glyphResolution: 4,\n    holeWidth: 0,\n    _pipeline: {\n      glyph: vtkCylinderSource.newInstance({\n        resolution: initialValues.glyphResolution ?? 4,\n        initAngle: initialValues.glyphAngle ?? Math.PI / 4,\n        direction: [0, 0, 1]\n      })\n    },\n    ...initialValues\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  vtkGlyphRepresentation.extend(publicAPI, model, defaultValues(initialValues));\n  macro.setGet(publicAPI, model, ['infiniteLine', 'glyphResolution', 'holeWidth']);\n\n  // Object specific methods\n  vtkLineHandleRepresentation(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkLineHandleRepresentation');\n\n// ----------------------------------------------------------------------------\n\nvar vtkLineHandleRepresentation$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkLineHandleRepresentation$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkActor from '../../Rendering/Core/Actor.js';\nimport vtkGlyphRepresentation from './GlyphRepresentation.js';\nimport vtkPixelSpaceCallbackMapper from '../../Rendering/Core/PixelSpaceCallbackMapper.js';\n\n// ----------------------------------------------------------------------------\n// vtkSphereHandleRepresentation methods\n// ----------------------------------------------------------------------------\n\nfunction vtkSphereHandleRepresentation(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkSphereHandleRepresentation');\n\n  // --------------------------------------------------------------------------\n  // Generic rendering pipeline\n  // --------------------------------------------------------------------------\n\n  /*\n   * displayActors and displayMappers are used to render objects in HTML, allowing objects\n   * to be 'rendered' internally in a VTK scene without being visible on the final output\n   */\n\n  model.displayMapper = vtkPixelSpaceCallbackMapper.newInstance();\n  model.displayActor = vtkActor.newInstance({\n    parentProp: publicAPI\n  });\n  // model.displayActor.getProperty().setOpacity(0); // don't show in 3D\n  model.displayActor.setMapper(model.displayMapper);\n  model.displayMapper.setInputConnection(publicAPI.getOutputPort());\n  publicAPI.addActor(model.displayActor);\n  model.alwaysVisibleActors = [model.displayActor];\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.getGlyphResolution = () => model._pipeline.glyph.getPhiResolution();\n  publicAPI.setGlyphResolution = resolution => model._pipeline.glyph.setPhiResolution(resolution) || model._pipeline.glyph.setThetaResolution(resolution);\n\n  // --------------------------------------------------------------------------\n\n  function callbackProxy(coords) {\n    if (model.displayCallback) {\n      const filteredList = [];\n      const states = publicAPI.getRepresentationStates();\n      for (let i = 0; i < states.length; i++) {\n        if (states[i].getActive()) {\n          filteredList.push(coords[i]);\n        }\n      }\n      if (filteredList.length) {\n        model.displayCallback(filteredList);\n        return;\n      }\n    }\n    model.displayCallback();\n  }\n  publicAPI.setDisplayCallback = callback => {\n    model.displayCallback = callback;\n    model.displayMapper.setCallback(callback ? callbackProxy : null);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  vtkGlyphRepresentation.extend(publicAPI, model, initialValues);\n\n  // Object specific methods\n  vtkSphereHandleRepresentation(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkSphereHandleRepresentation');\n\n// ----------------------------------------------------------------------------\n\nvar vtkSphereHandleRepresentation$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkSphereHandleRepresentation$1 as default, extend, newInstance };\n","import { ViewTypes } from '../../Core/WidgetManager/Constants.js';\n\nconst ScrollingMethods = {\n  MIDDLE_MOUSE_BUTTON: 0,\n  LEFT_MOUSE_BUTTON: 1,\n  RIGHT_MOUSE_BUTTON: 2\n};\n\n// Note: These strings are used in ResliceCursorWidget/behavior.js\n// as method's names\nconst InteractionMethodsName = {\n  TranslateAxis: 'translateAxis',\n  RotateLine: 'rotateLine',\n  TranslateCenter: 'translateCenter',\n  TranslateCenterAndUpdatePlanes: 'translateCenterAndUpdatePlanes'\n};\nconst defaultViewUpFromViewType = {\n  [ViewTypes.YZ_PLANE]: [0, 0, 1],\n  // Sagittal\n  [ViewTypes.XZ_PLANE]: [0, 0, 1],\n  // Coronal\n  [ViewTypes.XY_PLANE]: [0, -1, 0] // Axial\n};\n\nconst xyzToViewType = [ViewTypes.YZ_PLANE, ViewTypes.XZ_PLANE, ViewTypes.XY_PLANE];\nconst viewTypeToXYZ = {\n  [ViewTypes.YZ_PLANE]: 0,\n  [ViewTypes.XZ_PLANE]: 1,\n  [ViewTypes.XY_PLANE]: 2\n};\nconst planeNames = ['X', 'Y', 'Z'];\nconst viewTypeToPlaneName = {\n  [ViewTypes.YZ_PLANE]: 'X',\n  [ViewTypes.XZ_PLANE]: 'Y',\n  [ViewTypes.XY_PLANE]: 'Z'\n};\nconst planeNameToViewType = {\n  X: ViewTypes.YZ_PLANE,\n  Y: ViewTypes.XZ_PLANE,\n  Z: ViewTypes.XY_PLANE\n};\nconst lineNames = ['YinX', 'ZinX', 'XinY', 'ZinY', 'XinZ', 'YinZ'];\nvar Constants = {\n  ScrollingMethods,\n  InteractionMethodsName,\n  xyzToViewType,\n  viewTypeToXYZ,\n  planeNames,\n  viewTypeToPlaneName,\n  planeNameToViewType,\n  lineNames\n};\n\nexport { InteractionMethodsName, ScrollingMethods, Constants as default, defaultViewUpFromViewType, lineNames, planeNameToViewType, planeNames, viewTypeToPlaneName, viewTypeToXYZ, xyzToViewType };\n","import vtkBoundingBox, { STATIC } from '../../../Common/DataModel/BoundingBox.js';\nimport vtkCubeSource from '../../../Filters/Sources/CubeSource.js';\nimport vtkCutter from '../../../Filters/Core/Cutter.js';\nimport vtkPlane from '../../../Common/DataModel/Plane.js';\nimport { s as subtract, l as normalize, j as cross, w as multiplyScalar, m as multiplyAccumulate, X as signedAngleBetweenVectors } from '../../../Common/Core/Math/index.js';\nimport vtkMatrixBuilder from '../../../Common/Core/MatrixBuilder.js';\nimport { viewTypeToPlaneName, planeNameToViewType, planeNames } from './Constants.js';\n\nconst EPSILON = 10e-7;\n\n/**\n * Fit the plane defined by origin, p1, p2 onto the bounds.\n * Plane is untouched if does not intersect bounds.\n * @param {Array} bounds\n * @param {Array} origin\n * @param {Array} p1\n * @param {Array} p2\n * @return {Boolean} false if no bounds have been found, else true\n */\nfunction boundPlane(bounds, origin, p1, p2) {\n  const v1 = [];\n  subtract(p1, origin, v1);\n  normalize(v1);\n  const v2 = [];\n  subtract(p2, origin, v2);\n  normalize(v2);\n  const n = [0, 0, 1];\n  cross(v1, v2, n);\n  normalize(n);\n\n  // Inflate bounds in order to avoid precision error when cutting cubesource\n  const inflatedBounds = [...bounds];\n  const eps = [...n];\n  multiplyScalar(eps, EPSILON);\n  vtkBoundingBox.addBounds(inflatedBounds, bounds[0] + eps[0], bounds[1] + eps[0], bounds[2] + eps[1], bounds[3] + eps[1], bounds[4] + eps[2], bounds[5] + eps[2]);\n  vtkBoundingBox.addBounds(inflatedBounds, bounds[0] - eps[0], bounds[1] - eps[0], bounds[2] - eps[1], bounds[3] - eps[1], bounds[4] - eps[2], bounds[5] - eps[2]);\n  const plane = vtkPlane.newInstance();\n  plane.setOrigin(...origin);\n  plane.setNormal(...n);\n  const cubeSource = vtkCubeSource.newInstance();\n  cubeSource.setBounds(inflatedBounds);\n  const cutter = vtkCutter.newInstance();\n  cutter.setCutFunction(plane);\n  cutter.setInputConnection(cubeSource.getOutputPort());\n  const cutBounds = cutter.getOutputData();\n  if (cutBounds.getNumberOfPoints() === 0) {\n    return false;\n  }\n  const localBounds = STATIC.computeLocalBounds(cutBounds.getPoints(), v1, v2, n);\n  for (let i = 0; i < 3; i += 1) {\n    origin[i] = localBounds[0] * v1[i] + localBounds[2] * v2[i] + localBounds[4] * n[i];\n    p1[i] = localBounds[1] * v1[i] + localBounds[2] * v2[i] + localBounds[4] * n[i];\n    p2[i] = localBounds[0] * v1[i] + localBounds[3] * v2[i] + localBounds[4] * n[i];\n  }\n  return true;\n}\n// Project point (inPoint) to the bounds of the image according to a plane\n// defined by two vectors (v1, v2)\nfunction boundPoint(inPoint, v1, v2, bounds) {\n  const absT1 = v1.map(val => Math.abs(val));\n  const absT2 = v2.map(val => Math.abs(val));\n  let o1 = 0.0;\n  let o2 = 0.0;\n  for (let i = 0; i < 3; i++) {\n    let axisOffset = 0;\n    const useT1 = absT1[i] > absT2[i];\n    const t = useT1 ? v1 : v2;\n    const absT = useT1 ? absT1 : absT2;\n    if (inPoint[i] < bounds[i * 2]) {\n      axisOffset = absT[i] > EPSILON ? (bounds[2 * i] - inPoint[i]) / t[i] : 0;\n    } else if (inPoint[i] > bounds[2 * i + 1]) {\n      axisOffset = absT[i] > EPSILON ? (bounds[2 * i + 1] - inPoint[i]) / t[i] : 0;\n    }\n    if (useT1) {\n      if (Math.abs(axisOffset) > Math.abs(o1)) {\n        o1 = axisOffset;\n      }\n    } else if (Math.abs(axisOffset) > Math.abs(o2)) {\n      o2 = axisOffset;\n    }\n  }\n  const outPoint = [inPoint[0], inPoint[1], inPoint[2]];\n  if (o1 !== 0.0) {\n    multiplyAccumulate(outPoint, v1, o1, outPoint);\n  }\n  if (o2 !== 0.0) {\n    multiplyAccumulate(outPoint, v2, o2, outPoint);\n  }\n  return outPoint;\n}\n\n// Compute the intersection between p1 and p2 on bounds\nfunction boundPointOnPlane(p1, p2, bounds) {\n  const dir12 = [0, 0, 0];\n  subtract(p2, p1, dir12);\n  const out = [0, 0, 0];\n  const tolerance = [0, 0, 0];\n  vtkBoundingBox.intersectBox(bounds, p1, dir12, out, tolerance);\n  return out;\n}\n\n/**\n * Rotates a vector around another.\n * @param {vec3} vectorToBeRotated Vector to rate\n * @param {vec3} axis Axis to rotate around\n * @param {Number} angle Angle in radian\n * @returns The rotated vector\n */\nfunction rotateVector(vectorToBeRotated, axis, angle) {\n  const rotatedVector = [...vectorToBeRotated];\n  vtkMatrixBuilder.buildFromRadian().rotate(angle, axis).apply(rotatedVector);\n  return rotatedVector;\n}\n\n/**\n * Return ['X'] if there are only 1 plane defined in the widget state.\n * Return ['X', 'Y'] if there are only 2 planes defined in the widget state.\n * Return ['X', 'Y', 'Z'] if there are 3 planes defined in the widget state.\n * @param {object} widgetState the state of the widget\n * @returns An array of plane names\n */\nfunction getPlaneNames(widgetState) {\n  return Object.keys(widgetState.getPlanes()).map(viewType => viewTypeToPlaneName[viewType]);\n}\n\n/**\n * Return X if lineName == XinY|XinZ, Y if lineName == YinX|YinZ and Z otherwise\n * @param {string} lineName name of the line (YinX, ZinX, XinY, ZinY, XinZ, YinZ)\n */\nfunction getLinePlaneName(lineName) {\n  return lineName[0];\n}\n/**\n * Return X if lineName == YinX|ZinX, Y if lineName == XinY|ZinY and Z otherwise\n * @param {string} lineName name of the line (YinX, ZinX, XinY, ZinY, XinZ, YinZ)\n */\nfunction getLineInPlaneName(lineName) {\n  return lineName[3];\n}\n\n/**\n * Returns ['XinY', 'YinX'] if planes == ['X', 'Y']\n * ['XinY', 'XinZ', 'YinX', 'YinZ', 'ZinX', 'ZinY'] if planes == ['X', 'Y', 'Z']\n * @param {string} planes name of the planes (e.g. ['X', 'Y'])\n */\nfunction getPlanesLineNames() {\n  let planes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : planeNames;\n  const lines = [];\n  planes.forEach(plane => {\n    planes.forEach(inPlane => {\n      if (plane !== inPlane) {\n        lines.push(`${plane}in${inPlane}`);\n      }\n    });\n  });\n  return lines;\n}\nfunction getLineNames(widgetState) {\n  const planes = Object.keys(widgetState.getPlanes()).map(viewType => viewTypeToPlaneName[viewType]);\n  return getPlanesLineNames(planes);\n}\n\n/**\n * Return ZinX if lineName == YinX, YinX if lineName == ZinX, ZinY if lineName == XinY...\n * @param {string} lineName name of the line (YinX, ZinX, XinY, ZinY, XinZ, YinZ)\n */\nfunction getOtherLineName(widgetState, lineName) {\n  const linePlaneName = getLinePlaneName(lineName);\n  const lineInPlaneName = getLineInPlaneName(lineName);\n  const otherLineName = getPlaneNames(widgetState).find(planeName => planeName !== linePlaneName && planeName !== lineInPlaneName);\n  return `${otherLineName}in${lineInPlaneName}`;\n}\n\n// Compute the offset of the rotation handle origin\nfunction computeRotationHandleOriginOffset(axis, rotationHandlePosition, volumeDiagonalLength, scaleInPixels) {\n  // FIXME: p1 and p2 could be placed on the exact boundaries of the volume.\n  return multiplyScalar([...axis], rotationHandlePosition * (scaleInPixels ? 1 : volumeDiagonalLength) / 2);\n}\n\n// Update the reslice cursor state according to the three planes normals and the origin\nfunction updateState(widgetState, scaleInPixels, rotationHandlePosition) {\n  const planes = Object.keys(widgetState.getPlanes()).map(viewType => viewTypeToPlaneName[viewType]);\n  // Generates an object as such:\n  // axes = {'XY': cross(X, Y), 'YX': cross(X, Y), 'YZ': cross(Y, Z)...}\n  const axes = planes.reduce((res, plane) => {\n    planes.filter(otherPlane => plane !== otherPlane).forEach(otherPlane => {\n      const cross$1 = cross(widgetState.getPlanes()[planeNameToViewType[plane]].normal, widgetState.getPlanes()[planeNameToViewType[otherPlane]].normal, []);\n      res[`${plane}${otherPlane}`] = cross$1;\n      res[`${otherPlane}${plane}`] = cross$1;\n    });\n    return res;\n  }, {});\n  const bounds = widgetState.getImage().getBounds();\n  const center = widgetState.getCenter();\n\n  // Length of the principal diagonal.\n  const pdLength = vtkBoundingBox.getDiagonalLength(bounds);\n  widgetState.getCenterHandle().setOrigin(center);\n  getPlanesLineNames(planes).forEach(lineName => {\n    const planeName = getLinePlaneName(lineName);\n    const inPlaneName = getLineInPlaneName(lineName);\n    const direction = axes[`${planeName}${inPlaneName}`];\n    widgetState[`getRotationHandle${lineName}0`]().setOrigin(center);\n    widgetState[`getRotationHandle${lineName}0`]().getManipulator()?.setHandleOrigin(center);\n    widgetState[`getRotationHandle${lineName}0`]().getManipulator()?.setHandleNormal(widgetState.getPlanes()[planeNameToViewType[planeName]].normal);\n    widgetState[`getRotationHandle${lineName}0`]().setOffset(computeRotationHandleOriginOffset(direction, rotationHandlePosition, pdLength, scaleInPixels));\n    widgetState[`getRotationHandle${lineName}1`]().setOrigin(center);\n    widgetState[`getRotationHandle${lineName}1`]().getManipulator()?.setHandleOrigin(center);\n    widgetState[`getRotationHandle${lineName}1`]().getManipulator()?.setHandleNormal(widgetState.getPlanes()[planeNameToViewType[planeName]].normal);\n    widgetState[`getRotationHandle${lineName}1`]().setOffset(computeRotationHandleOriginOffset(direction, -rotationHandlePosition, pdLength, scaleInPixels));\n    const lineHandle = widgetState[`getAxis${lineName}`]();\n    lineHandle.setOrigin(center);\n    lineHandle.getManipulator()?.setHandleOrigin(center);\n    lineHandle.getManipulator()?.setHandleNormal(widgetState.getPlanes()[planeNameToViewType[planeName]].normal);\n    normalize(direction);\n    const right = widgetState.getPlanes()[planeNameToViewType[inPlaneName]].normal;\n    const up = cross(direction, right, []);\n    lineHandle.setRight(right);\n    lineHandle.setUp(up);\n    lineHandle.setDirection(direction);\n  });\n}\n\n/**\n * First rotate planeToTransform to match targetPlane normal.\n * Then rotate around targetNormal to enforce targetViewUp \"up\" vector (i.e. Origin->p2 ).\n * There is an infinite number of options to rotate a plane normal to another. Here we attempt to\n * preserve Origin, P1 and P2 when rotating around targetPlane.\n * @param {vtkPlaneSource} planeToTransform\n * @param {vec3} targetOrigin Center of the plane\n * @param {vec3} targetNormal Normal to state to the plane\n * @param {vec3} viewType Vector that enforces view up\n */\nfunction transformPlane(planeToTransform, targetCenter, targetNormal, targetViewUp) {\n  planeToTransform.setNormal(targetNormal);\n  const viewUp = subtract(planeToTransform.getPoint2(), planeToTransform.getOrigin(), []);\n  const angle = signedAngleBetweenVectors(viewUp, targetViewUp, targetNormal);\n  planeToTransform.rotate(angle, targetNormal);\n  planeToTransform.setCenter(targetCenter);\n}\n\nexport { boundPlane, boundPoint, boundPointOnPlane, getLineInPlaneName, getLineNames, getLinePlaneName, getOtherLineName, getPlaneNames, getPlanesLineNames, rotateVector, transformPlane, updateState };\n","import { m as macro } from '../../../macros2.js';\nimport vtkBoundingBox from '../../../Common/DataModel/BoundingBox.js';\nimport vtkLine from '../../../Common/DataModel/Line.js';\nimport { k as add, l as normalize, s as subtract, d as dot, j as cross, m as multiplyAccumulate, w as multiplyScalar, X as signedAngleBetweenVectors } from '../../../Common/Core/Math/index.js';\nimport { getLineNames, getOtherLineName, updateState, boundPointOnPlane, getLinePlaneName, getLineInPlaneName, rotateVector } from './helpers.js';\nimport { InteractionMethodsName, ScrollingMethods, planeNameToViewType } from './Constants.js';\n\nfunction widgetBehavior(publicAPI, model) {\n  model._isDragging = false;\n  let isScrolling = false;\n  let previousPosition;\n  macro.setGet(publicAPI, model, ['keepOrthogonality', {\n    type: 'object',\n    name: 'cursorStyles'\n  }]);\n\n  // Set default value for cursorStyles\n  publicAPI.setCursorStyles({\n    [InteractionMethodsName.TranslateCenter]: 'move',\n    [InteractionMethodsName.RotateLine]: 'alias',\n    [InteractionMethodsName.TranslateAxis]: 'pointer',\n    default: 'default'\n  });\n  publicAPI.setEnableTranslation = enable => {\n    model.representations[0].setPickable(enable); // line handle\n    model.representations[2].setPickable(enable); // center handle\n  };\n\n  publicAPI.setEnableRotation = enable => {\n    model.representations[1].setPickable(enable); // rotation handle\n  };\n\n  // FIXME: label information should be accessible from activeState instead of parent state.\n  publicAPI.getActiveInteraction = () => {\n    if (model.widgetState.getStatesWithLabel('rotation').includes(model.activeState)) {\n      return InteractionMethodsName.RotateLine;\n    }\n    if (model.widgetState.getStatesWithLabel('line').includes(model.activeState)) {\n      return InteractionMethodsName.TranslateAxis;\n    }\n    if (model.widgetState.getStatesWithLabel('center').includes(model.activeState)) {\n      return InteractionMethodsName.TranslateCenter;\n    }\n    return null;\n  };\n\n  /**\n   * ActiveState can be RotationHandle or a LineHandle\n   * @returns 'YinX', 'ZinX', 'XinY', 'ZinY', 'XinZ' or 'YinZ'\n   */\n  publicAPI.getActiveLineName = () => getLineNames(model.widgetState).find(lineName => model.widgetState.getStatesWithLabel(lineName).includes(model.activeState));\n\n  // FIXME: label information should be accessible from activeState instead of parent state.\n  publicAPI.getActiveLineHandle = () => model.widgetState[`getAxis${publicAPI.getActiveLineName()}`]?.();\n\n  /**\n   * Return the line handle of the other line in the same view.\n   * @param {string} lineName name of the line (YinX, ZinX, XinY, ZinY, XinZ, YinZ)\n   * @returns ZinX if lineName == YinX, YinX if lineName == ZinX, ZinY if lineName == XinY...\n   */\n  publicAPI.getOtherLineHandle = lineName => model.widgetState[`getAxis${getOtherLineName(model.widgetState, lineName)}`]?.();\n\n  // FIXME: label information should be accessible from activeState instead of parent state.\n  /**\n   * There are 2 rotation handles per axis: 'point0' and 'point1'.\n   * This function returns which rotation handle (point0 or point1) is currently active.\n   * ActiveState must be a RotationHandle.\n   * @returns 'point0', 'point1' or null if no point is active (e.g. line is being rotated)\n   */\n  publicAPI.getActiveRotationPointName = () => {\n    if (model.widgetState.getStatesWithLabel('point0').includes(model.activeState)) {\n      return 'point0';\n    }\n    if (model.widgetState.getStatesWithLabel('point1').includes(model.activeState)) {\n      return 'point1';\n    }\n    return null;\n  };\n  publicAPI.startScrolling = newPosition => {\n    if (newPosition) {\n      previousPosition = newPosition;\n    }\n    isScrolling = true;\n    publicAPI.startInteraction();\n  };\n  publicAPI.endScrolling = () => {\n    isScrolling = false;\n    publicAPI.endInteraction();\n  };\n  publicAPI.updateCursor = () => {\n    const cursorStyles = publicAPI.getCursorStyles();\n    if (cursorStyles) {\n      switch (publicAPI.getActiveInteraction()) {\n        case InteractionMethodsName.TranslateCenter:\n          model._apiSpecificRenderWindow.setCursor(cursorStyles.translateCenter);\n          break;\n        case InteractionMethodsName.RotateLine:\n          model._apiSpecificRenderWindow.setCursor(cursorStyles.rotateLine);\n          break;\n        case InteractionMethodsName.TranslateAxis:\n          model._apiSpecificRenderWindow.setCursor(cursorStyles.translateAxis);\n          break;\n        default:\n          model._apiSpecificRenderWindow.setCursor(cursorStyles.default);\n          break;\n      }\n    }\n  };\n  publicAPI.handleLeftButtonPress = callData => {\n    if (model.activeState && model.activeState.getActive()) {\n      model._isDragging = true;\n      const viewType = model.viewType;\n      const currentPlaneNormal = model.widgetState.getPlanes()[viewType].normal;\n      const manipulator = model.activeState?.getManipulator?.() ?? model.manipulator;\n      manipulator.setWidgetOrigin(model.widgetState.getCenter());\n      manipulator.setWidgetNormal(currentPlaneNormal);\n      const {\n        worldCoords\n      } = manipulator.handleEvent(callData, model._apiSpecificRenderWindow);\n      previousPosition = worldCoords;\n      publicAPI.startInteraction();\n    } else if (model.widgetState.getScrollingMethod() === ScrollingMethods.LEFT_MOUSE_BUTTON) {\n      publicAPI.startScrolling(callData.position);\n    } else {\n      return macro.VOID;\n    }\n    return macro.EVENT_ABORT;\n  };\n  publicAPI.handleMouseMove = callData => {\n    if (model._isDragging) {\n      return publicAPI.handleEvent(callData);\n    }\n    if (isScrolling) {\n      if (previousPosition.y !== callData.position.y) {\n        const step = previousPosition.y - callData.position.y;\n        publicAPI.translateCenterOnPlaneDirection(step);\n        previousPosition = callData.position;\n        publicAPI.invokeInteractionEvent(publicAPI.getActiveInteraction());\n      }\n    }\n    return macro.VOID;\n  };\n  publicAPI.handleLeftButtonRelease = () => {\n    if (model._isDragging || isScrolling) {\n      publicAPI.endScrolling();\n    }\n    model._isDragging = false;\n    model.widgetState.deactivate();\n  };\n  publicAPI.handleRightButtonPress = calldata => {\n    if (model.widgetState.getScrollingMethod() === ScrollingMethods.RIGHT_MOUSE_BUTTON) {\n      publicAPI.startScrolling(calldata.position);\n    }\n  };\n  publicAPI.handleRightButtonRelease = () => {\n    if (model.widgetState.getScrollingMethod() === ScrollingMethods.RIGHT_MOUSE_BUTTON) {\n      publicAPI.endScrolling();\n    }\n  };\n  publicAPI.handleStartMouseWheel = () => {\n    publicAPI.startInteraction();\n  };\n  publicAPI.handleMouseWheel = calldata => {\n    const step = calldata.spinY;\n    isScrolling = true;\n    publicAPI.translateCenterOnPlaneDirection(step);\n    publicAPI.invokeInteractionEvent(\n    // Force interaction mode because mouse cursor could be above rotation handle\n    InteractionMethodsName.TranslateCenter);\n    isScrolling = false;\n    return macro.EVENT_ABORT;\n  };\n  publicAPI.handleEndMouseWheel = () => {\n    publicAPI.endScrolling();\n  };\n  publicAPI.handleMiddleButtonPress = calldata => {\n    if (model.widgetState.getScrollingMethod() === ScrollingMethods.MIDDLE_MOUSE_BUTTON) {\n      publicAPI.startScrolling(calldata.position);\n    }\n  };\n  publicAPI.handleMiddleButtonRelease = () => {\n    if (model.widgetState.getScrollingMethod() === ScrollingMethods.MIDDLE_MOUSE_BUTTON) {\n      publicAPI.endScrolling();\n    }\n  };\n  publicAPI.handleEvent = callData => {\n    if (model.activeState.getActive()) {\n      const methodName = publicAPI.getActiveInteraction();\n      publicAPI[methodName](callData);\n      publicAPI.invokeInteractionEvent(methodName);\n      return macro.EVENT_ABORT;\n    }\n    return macro.VOID;\n  };\n  publicAPI.startInteraction = () => {\n    publicAPI.invokeStartInteractionEvent();\n    // When interacting, plane actor and lines must be re-rendered on other views\n    publicAPI.getViewWidgets().forEach(viewWidget => {\n      viewWidget.getInteractor().requestAnimation(publicAPI);\n    });\n  };\n  publicAPI.endInteraction = () => {\n    publicAPI.invokeEndInteractionEvent();\n    publicAPI.getViewWidgets().forEach(viewWidget => {\n      viewWidget.getInteractor().cancelAnimation(publicAPI);\n    });\n  };\n  publicAPI.translateCenterOnPlaneDirection = nbSteps => {\n    const dirProj = model.widgetState.getPlanes()[model.viewType].normal;\n    const oldCenter = model.widgetState.getCenter();\n    const image = model.widgetState.getImage();\n    const imageSpacing = image.getSpacing();\n\n    // Use Chebyshev norm\n    // https://math.stackexchange.com/questions/71423/what-is-the-term-for-the-projection-of-a-vector-onto-the-unit-cube\n    const absDirProj = dirProj.map(value => Math.abs(value));\n    const index = absDirProj.indexOf(Math.max(...absDirProj));\n    const movingFactor = nbSteps * imageSpacing[index] / Math.abs(dirProj[index]);\n\n    // Define the potentially new center\n    let newCenter = [oldCenter[0] + movingFactor * dirProj[0], oldCenter[1] + movingFactor * dirProj[1], oldCenter[2] + movingFactor * dirProj[2]];\n    newCenter = publicAPI.getBoundedCenter(newCenter);\n    model.widgetState.setCenter(newCenter);\n    updateState(model.widgetState, model._factory.getScaleInPixels(), model._factory.getRotationHandlePosition());\n  };\n  publicAPI[InteractionMethodsName.TranslateAxis] = calldata => {\n    const lineHandle = publicAPI.getActiveLineHandle();\n    const lineName = publicAPI.getActiveLineName();\n    const pointOnLine = add(lineHandle.getOrigin(), lineHandle.getDirection(), []);\n    const currentLineVector = lineHandle.getDirection();\n    normalize(currentLineVector);\n\n    // Translate the current line along the other line\n    const otherLineHandle = publicAPI.getOtherLineHandle(lineName);\n    const center = model.widgetState.getCenter();\n    const manipulator = model.activeState?.getManipulator?.() ?? model.manipulator;\n    let worldCoords = null;\n    let newOrigin = [];\n    if (model.activeState?.getManipulator?.()) {\n      worldCoords = manipulator.handleEvent(calldata, model._apiSpecificRenderWindow).worldCoords;\n      const translation = subtract(worldCoords, previousPosition, []);\n      add(center, translation, newOrigin);\n    } else if (otherLineHandle) {\n      const otherLineVector = otherLineHandle.getDirection();\n      normalize(otherLineVector);\n      const axisTranslation = otherLineVector;\n      const dot$1 = dot(currentLineVector, otherLineVector);\n      // lines are colinear, translate along perpendicular axis from current line\n      if (dot$1 === 1 || dot$1 === -1) {\n        cross(currentLineVector, manipulator.getWidgetNormal(), axisTranslation);\n      }\n      const closestPoint = [];\n      worldCoords = manipulator.handleEvent(calldata, model._apiSpecificRenderWindow).worldCoords;\n      vtkLine.distanceToLine(worldCoords, lineHandle.getOrigin(), pointOnLine, closestPoint);\n      const translationVector = subtract(worldCoords, closestPoint, []);\n      const translationDistance = dot(translationVector, axisTranslation);\n      newOrigin = multiplyAccumulate(center, axisTranslation, translationDistance, newOrigin);\n    }\n    newOrigin = publicAPI.getBoundedCenter(newOrigin);\n    model.widgetState.setCenter(newOrigin);\n    updateState(model.widgetState, model._factory.getScaleInPixels(), model._factory.getRotationHandlePosition());\n    previousPosition = worldCoords;\n  };\n  publicAPI.getBoundedCenter = newCenter => {\n    const oldCenter = model.widgetState.getCenter();\n    const imageBounds = model.widgetState.getImage().getBounds();\n    if (vtkBoundingBox.containsPoint(imageBounds, ...newCenter)) {\n      return newCenter;\n    }\n    return boundPointOnPlane(newCenter, oldCenter, imageBounds);\n  };\n  publicAPI[InteractionMethodsName.TranslateCenter] = calldata => {\n    const manipulator = model.activeState?.getManipulator?.() ?? model.manipulator;\n    const {\n      worldCoords\n    } = manipulator.handleEvent(calldata, model._apiSpecificRenderWindow);\n    const translation = subtract(worldCoords, previousPosition, []);\n    previousPosition = worldCoords;\n    let newCenter = add(model.widgetState.getCenter(), translation, []);\n    newCenter = publicAPI.getBoundedCenter(newCenter);\n    model.widgetState.setCenter(newCenter);\n    updateState(model.widgetState, model._factory.getScaleInPixels(), model._factory.getRotationHandlePosition());\n  };\n  publicAPI[InteractionMethodsName.RotateLine] = calldata => {\n    const activeLineHandle = publicAPI.getActiveLineHandle();\n    const manipulator = model.activeState?.getManipulator?.() ?? model.manipulator;\n    const planeNormal = manipulator.getWidgetNormal();\n    const {\n      worldCoords\n    } = manipulator.handleEvent(calldata, model._apiSpecificRenderWindow);\n    if (!worldCoords || !worldCoords.length) {\n      return;\n    }\n    const center = model.widgetState.getCenter();\n    const currentVectorToOrigin = [0, 0, 0];\n    subtract(worldCoords, center, currentVectorToOrigin);\n    normalize(currentVectorToOrigin);\n    const previousLineDirection = activeLineHandle.getDirection();\n    normalize(previousLineDirection);\n    const activePointName = publicAPI.getActiveRotationPointName();\n    if (activePointName === 'point1' || !activePointName && dot(currentVectorToOrigin, previousLineDirection) < 0) {\n      multiplyScalar(previousLineDirection, -1);\n    }\n    const radianAngle = signedAngleBetweenVectors(previousLineDirection, currentVectorToOrigin, planeNormal);\n    publicAPI.rotateLineInView(publicAPI.getActiveLineName(), radianAngle);\n  };\n\n  /**\n   * Rotate a line by a specified angle\n   * @param {string} lineName The line name to rotate (e.g. YinX, ZinX, XinY, ZinY, XinZ, YinZ)\n   * @param {Number} radianAngle Applied angle in radian\n   */\n  publicAPI.rotateLineInView = (lineName, radianAngle) => {\n    const viewType = planeNameToViewType[getLinePlaneName(lineName)];\n    const inViewType = planeNameToViewType[getLineInPlaneName(lineName)];\n    const planeNormal = model.widgetState.getPlanes()[inViewType].normal;\n    publicAPI.rotatePlane(viewType, radianAngle, planeNormal);\n    if (publicAPI.getKeepOrthogonality()) {\n      const otherLineName = getOtherLineName(model.widgetState, lineName);\n      const otherPlaneName = getLinePlaneName(otherLineName);\n      publicAPI.rotatePlane(planeNameToViewType[otherPlaneName], radianAngle, planeNormal);\n    }\n    updateState(model.widgetState, model._factory.getScaleInPixels(), model._factory.getRotationHandlePosition());\n  };\n\n  /**\n   * Rotate a specified plane around an other specified plane.\n   * @param {ViewTypes} viewType Define which plane will be rotated\n   * @param {Number} radianAngle Applied angle in radian\n   * @param {vec3} planeNormal Define the axis to rotate around\n   */\n  publicAPI.rotatePlane = (viewType, radianAngle, planeNormal) => {\n    const {\n      normal,\n      viewUp\n    } = model.widgetState.getPlanes()[viewType];\n    const newNormal = rotateVector(normal, planeNormal, radianAngle);\n    const newViewUp = rotateVector(viewUp, planeNormal, radianAngle);\n    model.widgetState.getPlanes()[viewType] = {\n      normal: newNormal,\n      viewUp: newViewUp\n    };\n  };\n\n  /**\n   * Rotate a line by a specified angle\n   * @param {string} lineName The line name to rotate (e.g. YinX, ZinX, XinY, ZinY, XinZ, YinZ)\n   * @param {Number} radianAngle Applied angle in radian\n   */\n  publicAPI.setViewPlane = (viewType, normal, viewUp) => {\n    let newViewUp = viewUp;\n    if (newViewUp == null) {\n      newViewUp = model.widgetState.getPlanes()[viewType].viewUp;\n    }\n    model.widgetState.getPlanes()[viewType] = {\n      normal,\n      viewUp: newViewUp\n    };\n    updateState(model.widgetState, model._factory.getScaleInPixels(), model._factory.getRotationHandlePosition());\n  };\n\n  // --------------------------------------------------------------------------\n  // initialization\n  // --------------------------------------------------------------------------\n}\n\nexport { widgetBehavior as default };\n","import vtkStateBuilder from '../../Core/StateBuilder.js';\nimport { planeNameToViewType, ScrollingMethods, planeNames } from './Constants.js';\n\nconst defaultPlanes = {\n  X: {\n    normal: [1, 0, 0],\n    viewUp: [0, 0, 1],\n    color3: [255, 0, 0]\n  },\n  Y: {\n    normal: [0, -1, 0],\n    viewUp: [0, 0, 1],\n    color3: [0, 255, 0]\n  },\n  Z: {\n    normal: [0, 0, -1],\n    viewUp: [0, -1, 0],\n    color3: [0, 0, 255]\n  }\n};\nconst viewsColor3 = {\n  X: [255, 0, 0],\n  // red\n  Y: [0, 255, 0],\n  // green\n  Z: [0, 0, 255] // blue\n};\n\nfunction generateState() {\n  let planes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : planeNames;\n  const state = vtkStateBuilder.createBuilder().addField({\n    name: 'center',\n    initialValue: [0, 0, 0]\n  }).addField({\n    name: 'image',\n    initialValue: null\n  }).addField({\n    name: 'activeViewType',\n    initialValue: null\n  }).addField({\n    name: 'planes',\n    initialValue: planes.reduce((res, planeName) => ({\n      ...res,\n      [planeNameToViewType[planeName]]: {\n        normal: defaultPlanes[planeName].normal,\n        viewUp: defaultPlanes[planeName].viewUp\n      }\n    }), {})\n  }).addField({\n    name: 'scrollingMethod',\n    initialValue: ScrollingMethods.MIDDLE_MOUSE_BUTTON\n  }).addField({\n    name: 'cameraOffsets',\n    initialValue: {}\n  }).addField({\n    name: 'viewUpFromViewType',\n    initialValue: {}\n  }).addStateFromMixin({\n    labels: ['handles', 'sphere', 'center'],\n    mixins: ['origin', 'color3', 'scale1', 'visible', 'manipulator'],\n    name: 'centerHandle',\n    initialValues: {\n      scale1: 30,\n      color3: [255, 255, 255]\n    }\n  });\n  planes.reduce((viewState, view) => planes.filter(v => v !== view).reduce((axisState, axis) => {\n    // Line handle\n    axisState.addStateFromMixin({\n      labels: ['handles', 'line', `lineIn${view}`, `${axis}in${view}`],\n      mixins: ['origin', 'color3', 'scale3', 'orientation', 'visible', 'manipulator'],\n      name: `axis${axis}in${view}`,\n      initialValues: {\n        scale3: [4, 4, 4],\n        color3: viewsColor3[axis]\n      }\n    });\n    // Rotation handle\n    for (let rotationHandle = 0; rotationHandle < 2; ++rotationHandle) {\n      axisState.addStateFromMixin({\n        labels: ['handles', 'sphere', 'rotation', `rotationIn${view}`, `${axis}in${view}`, `point${rotationHandle}`],\n        mixins: ['origin', 'color3', 'scale1', 'visible', 'manipulator'],\n        name: `rotationHandle${axis}in${view}${rotationHandle}`,\n        initialValues: {\n          scale1: 30,\n          color3: viewsColor3[axis]\n        }\n      });\n    }\n    return axisState;\n  }, viewState), state);\n  return state.build();\n}\n\nexport { generateState as default };\n","import { m as macro } from '../../macros2.js';\nimport vtkAbstractWidgetFactory from '../Core/AbstractWidgetFactory.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkBox from '../../Common/DataModel/Box.js';\nimport vtkPlane from '../../Common/DataModel/Plane.js';\nimport vtkPlaneSource from '../../Filters/Sources/PlaneSource.js';\nimport vtkPlanePointManipulator from '../Manipulators/PlaneManipulator.js';\nimport vtkLineHandleRepresentation from '../Representations/LineHandleRepresentation.js';\nimport vtkSphereHandleRepresentation from '../Representations/SphereHandleRepresentation.js';\nimport { e as distance2BetweenPoints, m as multiplyAccumulate, s as subtract, l as normalize, w as multiplyScalar, k as add } from '../../Common/Core/Math/index.js';\nimport widgetBehavior from './ResliceCursorWidget/behavior.js';\nimport generateState from './ResliceCursorWidget/state.js';\nimport { updateState, transformPlane, boundPlane } from './ResliceCursorWidget/helpers.js';\nimport { viewTypeToPlaneName } from './ResliceCursorWidget/Constants.js';\nimport { ViewTypes } from '../Core/WidgetManager/Constants.js';\nimport { mat4 } from 'gl-matrix';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\n\nconst VTK_INT_MAX = 2147483647;\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Factory\n// ----------------------------------------------------------------------------\n\nfunction vtkResliceCursorWidget(publicAPI, model) {\n  model.classHierarchy.push('vtkResliceCursorWidget');\n  model.methodsToLink = [\n  // For all representations\n  'scaleInPixels',\n  // For line representations\n  'holeWidth', 'infiniteLine'];\n\n  // --------------------------------------------------------------------------\n  // Private methods\n  // --------------------------------------------------------------------------\n\n  /**\n   * Compute the origin of the reslice plane prior to transformations\n   * It does not take into account the current view normal. (always axis aligned)\n   * @param {*} viewType axial, coronal or sagittal\n   */\n  function computeReslicePlaneOrigin(viewType) {\n    const bounds = model.widgetState.getImage().getBounds();\n    const center = publicAPI.getWidgetState().getCenter();\n    const imageCenter = model.widgetState.getImage().getCenter();\n\n    // Offset based on the center of the image and how far from it the\n    // reslice cursor is. This allows us to capture the whole image even\n    // if we resliced in awkward places.\n    const offset = [];\n    for (let i = 0; i < 3; i++) {\n      offset[i] = -Math.abs(center[i] - imageCenter[i]);\n      offset[i] *= 2; // give us room\n    }\n\n    // Now set the size of the plane based on the location of the cursor so as to\n    // at least completely cover the viewed region\n    const planeSource = vtkPlaneSource.newInstance();\n    if (viewType === ViewTypes.XZ_PLANE) {\n      planeSource.setOrigin(bounds[0] + offset[0], center[1], bounds[4] + offset[2]);\n      planeSource.setPoint1(bounds[1] - offset[0], center[1], bounds[4] + offset[2]);\n      planeSource.setPoint2(bounds[0] + offset[0], center[1], bounds[5] - offset[2]);\n    } else if (viewType === ViewTypes.XY_PLANE) {\n      planeSource.setOrigin(bounds[0] + offset[0], bounds[2] + offset[1], center[2]);\n      planeSource.setPoint1(bounds[1] - offset[0], bounds[2] + offset[1], center[2]);\n      planeSource.setPoint2(bounds[0] + offset[0], bounds[3] - offset[1], center[2]);\n    } else if (viewType === ViewTypes.YZ_PLANE) {\n      planeSource.setOrigin(center[0], bounds[2] + offset[1], bounds[4] + offset[2]);\n      planeSource.setPoint1(center[0], bounds[3] - offset[1], bounds[4] + offset[2]);\n      planeSource.setPoint2(center[0], bounds[2] + offset[1], bounds[5] - offset[2]);\n    }\n    return planeSource;\n  }\n\n  /**\n   * Compute the offset between display reslice cursor position and\n   * display focal point position\n   * This will be used to keep the same offset between reslice cursor\n   * center and focal point when needed.\n   */\n  function computeFocalPointOffsetFromResliceCursorCenter(viewType, renderer) {\n    const worldFocalPoint = renderer.getActiveCamera().getFocalPoint();\n    const worldResliceCenter = model.widgetState.getCenter();\n    const view = renderer.getRenderWindow().getViews()[0];\n    const dims = view.getViewportSize(renderer);\n    const aspect = dims[0] / dims[1];\n    const displayFocalPoint = renderer.worldToNormalizedDisplay(...worldFocalPoint, aspect);\n    const displayResliceCenter = renderer.worldToNormalizedDisplay(...worldResliceCenter, aspect);\n    const newOffset = subtract(displayFocalPoint, displayResliceCenter, [0, 0, 0]);\n    const cameraOffsets = model.widgetState.getCameraOffsets();\n    cameraOffsets[viewType] = newOffset;\n    model.widgetState.setCameraOffsets(cameraOffsets);\n  }\n  function updateCamera(renderer, normal, viewType, resetFocalPoint, keepCenterFocalDistance) {\n    // When the reslice plane is changed, update the camera to look at the\n    // normal to the reslice plane.\n\n    const focalPoint = renderer.getActiveCamera().getFocalPoint();\n    const distance = renderer.getActiveCamera().getDistance();\n    const estimatedCameraPosition = multiplyAccumulate(focalPoint, normal, distance, [0, 0, 0]);\n    let newFocalPoint = focalPoint;\n    if (resetFocalPoint) {\n      // intersect with the plane to get updated focal point\n      const intersection = vtkPlane.intersectWithLine(focalPoint, estimatedCameraPosition, model.widgetState.getCenter(),\n      // reslice cursor center\n      normal);\n      newFocalPoint = intersection.x;\n    }\n\n    // Update the estimated focal point so that it will be at the same\n    // distance from the reslice center\n    if (keepCenterFocalDistance) {\n      const worldResliceCenter = model.widgetState.getCenter();\n      const view = renderer.getRenderWindow().getViews()[0];\n      const dims = view.getViewportSize(renderer);\n      const aspect = dims[0] / dims[1];\n      const displayResliceCenter = renderer.worldToNormalizedDisplay(...worldResliceCenter, aspect);\n      const realOffset = model.widgetState.getCameraOffsets()[viewType];\n      const displayFocal = add(displayResliceCenter, realOffset, [0, 0, 0]);\n      const worldFocal = renderer.normalizedDisplayToWorld(...displayFocal, aspect);\n\n      // Reproject focal point on slice in order to keep it on the\n      // same plane as the reslice cursor center\n      const intersection2 = vtkPlane.intersectWithLine(worldFocal, estimatedCameraPosition, worldResliceCenter, normal);\n      newFocalPoint[0] = intersection2.x[0];\n      newFocalPoint[1] = intersection2.x[1];\n      newFocalPoint[2] = intersection2.x[2];\n    }\n    renderer.getActiveCamera().setFocalPoint(newFocalPoint[0], newFocalPoint[1], newFocalPoint[2]);\n    const newCameraPosition = multiplyAccumulate(newFocalPoint, normal, distance, [0, 0, 0]);\n    renderer.getActiveCamera().setPosition(newCameraPosition[0], newCameraPosition[1], newCameraPosition[2]);\n\n    // Don't clip away any part of the data.\n    // Renderer may not have yet actor bounds\n    const bounds = model.widgetState.getImage().getBounds();\n    if (resetFocalPoint) {\n      renderer.resetCamera(bounds);\n    }\n    renderer.resetCameraClippingRange(bounds);\n  }\n\n  /**\n   * Convenient function to return the widget for a given viewType\n   * @param {string} viewType\n   * @returns the widget instanced in the given viewType.\n   */\n  function findWidgetForViewType(viewType) {\n    return publicAPI.getViewIds().map(viewId => publicAPI.getWidgetForView({\n      viewId\n    })).find(widget => widget.getViewType() === viewType);\n  }\n  /**\n   * Convenient function to return the ResliceCursorRepresentation for a given viewType\n   * @param {string} viewType\n   * @returns an array of 3 representations (for line handles, rotation handles, center handle)\n   * or an empty array if the widget has not yet been added to the view type.\n   */\n  function findRepresentationsForViewType(viewType) {\n    const widgetForViewType = findWidgetForViewType(viewType);\n    return widgetForViewType ? widgetForViewType.getRepresentations() : [];\n  }\n\n  // --------------------------------------------------------------------------\n  // initialization\n  // --------------------------------------------------------------------------\n\n  publicAPI.getRepresentationsForViewType = viewType => {\n    switch (viewType) {\n      case ViewTypes.XY_PLANE:\n      case ViewTypes.XZ_PLANE:\n      case ViewTypes.YZ_PLANE:\n        return [{\n          builder: vtkLineHandleRepresentation,\n          labels: [`lineIn${viewTypeToPlaneName[viewType]}`],\n          initialValues: {\n            useActiveColor: false,\n            scaleInPixels: model.scaleInPixels\n          }\n        }, {\n          builder: vtkSphereHandleRepresentation,\n          labels: [`rotationIn${viewTypeToPlaneName[viewType]}`],\n          initialValues: {\n            useActiveColor: false,\n            scaleInPixels: model.scaleInPixels,\n            lighting: false\n          }\n        }, {\n          builder: vtkSphereHandleRepresentation,\n          labels: ['center'],\n          initialValues: {\n            useActiveColor: false,\n            scaleInPixels: model.scaleInPixels,\n            lighting: false\n          }\n        }];\n      case ViewTypes.DEFAULT:\n      case ViewTypes.GEOMETRY:\n      case ViewTypes.SLICE:\n      case ViewTypes.VOLUME:\n      default:\n        return [];\n    }\n  };\n  publicAPI.setImage = image => {\n    model.widgetState.setImage(image);\n    const center = image.getCenter();\n    publicAPI.setCenter(center);\n  };\n  publicAPI.setCenter = center => {\n    model.widgetState.setCenter(center);\n    updateState(model.widgetState, model.scaleInPixels, model.rotationHandlePosition);\n    publicAPI.modified();\n  };\n\n  // --------------------------------------------------------------------------\n  // Methods\n  // --------------------------------------------------------------------------\n\n  publicAPI.updateCameraPoints = (renderer, viewType, resetFocalPoint, computeFocalPointOffset) => {\n    publicAPI.resetCamera(renderer, viewType, resetFocalPoint, !computeFocalPointOffset);\n    if (computeFocalPointOffset) {\n      computeFocalPointOffsetFromResliceCursorCenter(viewType, renderer);\n    }\n  };\n\n  /**\n   *\n   * @param {*} renderer\n   * @param {*} viewType\n   * @param {*} resetFocalPoint Defines if the focal point is reset to the image center\n   * @param {*} keepCenterFocalDistance Defines if the estimated focal point has to be updated\n   * in order to keep the same distance to the center (according to the computed focal point\n   * shift)\n   */\n  publicAPI.resetCamera = (renderer, viewType, resetFocalPoint, keepCenterFocalDistance) => {\n    const center = model.widgetState.getImage().getCenter();\n    const focalPoint = renderer.getActiveCamera().getFocalPoint();\n    const position = renderer.getActiveCamera().getPosition();\n\n    // Distance is preserved\n    const distance = Math.sqrt(distance2BetweenPoints(position, focalPoint));\n    const normal = publicAPI.getPlaneNormalFromViewType(viewType);\n\n    // ResetFocalPoint will reset focal point to the center of the image\n    const estimatedFocalPoint = resetFocalPoint ? center : focalPoint;\n    const estimatedCameraPosition = multiplyAccumulate(estimatedFocalPoint, normal, distance, [0, 0, 0]);\n    renderer.getActiveCamera().setFocalPoint(...estimatedFocalPoint);\n    renderer.getActiveCamera().setPosition(...estimatedCameraPosition);\n    renderer.getActiveCamera().setViewUp(model.widgetState.getPlanes()[viewType].viewUp);\n\n    // Project focalPoint onto image plane and preserve distance\n    updateCamera(renderer, normal, viewType, resetFocalPoint, keepCenterFocalDistance);\n  };\n  publicAPI.getPlaneSource = viewType => {\n    // Compute original (i.e. before rotation) plane (i.e. origin, p1, p2)\n    // centered on cursor center.\n    const planeSource = computeReslicePlaneOrigin(viewType);\n    const {\n      normal,\n      viewUp\n    } = model.widgetState.getPlanes()[viewType];\n    // Adapt plane orientation in order to fit the correct viewUp\n    // so that the rotations will be more understandable than now.\n    transformPlane(planeSource, model.widgetState.getCenter(), normal, viewUp);\n\n    // Clip to bounds\n    const boundedOrigin = [...planeSource.getOrigin()];\n    const boundedP1 = [...planeSource.getPoint1()];\n    const boundedP2 = [...planeSource.getPoint2()];\n    boundPlane(model.widgetState.getImage().getBounds(), boundedOrigin, boundedP1, boundedP2);\n    planeSource.setOrigin(...boundedOrigin);\n    planeSource.setPoint1(...boundedP1);\n    planeSource.setPoint2(...boundedP2);\n    return planeSource;\n  };\n  publicAPI.getResliceAxes = viewType => {\n    // Compute original (i.e. before rotation) plane (i.e. origin, p1, p2)\n    // centered on cursor center.\n    const planeSource = publicAPI.getPlaneSource(viewType);\n\n    // TBD: use normal from planeSource ?\n    const {\n      normal\n    } = model.widgetState.getPlanes()[viewType];\n    const planeOrigin = planeSource.getOrigin();\n    const p1 = planeSource.getPoint1();\n    const planeAxis1 = [];\n    subtract(p1, planeOrigin, planeAxis1);\n    normalize(planeAxis1);\n    const p2 = planeSource.getPoint2();\n    const planeAxis2 = [];\n    subtract(p2, planeOrigin, planeAxis2);\n    normalize(planeAxis2);\n    const newResliceAxes = mat4.identity(new Float64Array(16));\n    for (let i = 0; i < 3; i++) {\n      newResliceAxes[i] = planeAxis1[i];\n      newResliceAxes[4 + i] = planeAxis2[i];\n      newResliceAxes[8 + i] = normal[i];\n      newResliceAxes[12 + i] = planeOrigin[i];\n    }\n    return newResliceAxes;\n  };\n  publicAPI.updateReslicePlane = (imageReslice, viewType) => {\n    // Calculate appropriate pixel spacing for the reslicing\n    const spacing = model.widgetState.getImage().getSpacing();\n    const planeSource = publicAPI.getPlaneSource(viewType);\n    const newResliceAxes = publicAPI.getResliceAxes(viewType);\n    const planeOrigin = planeSource.getOrigin();\n    const p1 = planeSource.getPoint1();\n    const planeAxis1 = subtract(p1, planeOrigin, []);\n    const planeSizeX = normalize(planeAxis1);\n    const p2 = planeSource.getPoint2();\n    const planeAxis2 = subtract(p2, planeOrigin, []);\n    const planeSizeY = normalize(planeAxis2);\n    const spacingX = Math.abs(planeAxis1[0] * spacing[0]) + Math.abs(planeAxis1[1] * spacing[1]) + Math.abs(planeAxis1[2] * spacing[2]);\n    const spacingY = Math.abs(planeAxis2[0] * spacing[0]) + Math.abs(planeAxis2[1] * spacing[1]) + Math.abs(planeAxis2[2] * spacing[2]);\n\n    // Compute a new set of resliced extents\n    let extentX = 0;\n    let extentY = 0;\n\n    // Pad extent up to a power of two for efficient texture mapping\n    // make sure we're working with valid values\n    const realExtentX = spacingX === 0 ? Number.MAX_SAFE_INTEGER : planeSizeX / spacingX;\n\n    // Sanity check the input data:\n    // * if realExtentX is too large, extentX will wrap\n    // * if spacingX is 0, things will blow up.\n\n    const value = VTK_INT_MAX >> 1; // eslint-disable-line no-bitwise\n\n    if (realExtentX > value) {\n      vtkErrorMacro('Invalid X extent: ', realExtentX, ' on view type : ', viewType);\n      extentX = 0;\n    } else {\n      extentX = 1;\n      while (extentX < realExtentX) {\n        extentX <<= 1; // eslint-disable-line no-bitwise\n      }\n    }\n\n    // make sure extentY doesn't wrap during padding\n    const realExtentY = spacingY === 0 ? Number.MAX_SAFE_INTEGER : planeSizeY / spacingY;\n    if (realExtentY > value) {\n      vtkErrorMacro('Invalid Y extent:', realExtentY, ' on view type : ', viewType);\n      extentY = 0;\n    } else {\n      extentY = 1;\n      while (extentY < realExtentY) {\n        extentY <<= 1; // eslint-disable-line no-bitwise\n      }\n    }\n\n    const outputSpacingX = extentX === 0 ? 1.0 : planeSizeX / extentX;\n    const outputSpacingY = extentY === 0 ? 1.0 : planeSizeY / extentY;\n    let modified = imageReslice.setResliceAxes(newResliceAxes);\n    modified = imageReslice.setOutputSpacing([outputSpacingX, outputSpacingY, 1]) || modified;\n    modified = imageReslice.setOutputOrigin([0.5 * outputSpacingX, 0.5 * outputSpacingY, 0]) || modified;\n    modified = imageReslice.setOutputExtent([0, extentX - 1, 0, extentY - 1, 0, 0]) || modified;\n    return modified;\n  };\n\n  /**\n   * Returns a plane source with origin at cursor center and\n   * normal from the view.\n   * @param {ViewType} type: Axial, Coronal or Sagittal\n   */\n  publicAPI.getPlaneSourceFromViewType = type => {\n    const planeSource = vtkPlaneSource.newInstance();\n    const origin = publicAPI.getWidgetState().getCenter();\n    const planeNormal = publicAPI.getPlaneNormalFromViewType(type);\n    planeSource.setNormal(planeNormal);\n    planeSource.setOrigin(origin);\n    return planeSource;\n  };\n  publicAPI.getPlaneNormalFromViewType = viewType => publicAPI.getWidgetState().getPlanes()[viewType].normal;\n\n  /**\n   * Returns the normals of the planes that are not viewType.\n   * @param {ViewType} viewType ViewType to extract other normals\n   */\n  publicAPI.getOtherPlaneNormals = viewType => [ViewTypes.YZ_PLANE, ViewTypes.XZ_PLANE, ViewTypes.XY_PLANE].filter(vt => vt !== viewType).map(vt => publicAPI.getPlaneNormalFromViewType(vt));\n\n  /**\n   * Return the reslice cursor matrix built as such: [YZ, XZ, XY, center]\n   */\n  publicAPI.getResliceMatrix = () => {\n    const resliceMatrix = mat4.identity(new Float64Array(16));\n    for (let i = 0; i < 3; i++) {\n      resliceMatrix[4 * i + 0] = publicAPI.getPlaneNormalFromViewType(ViewTypes.YZ_PLANE)[i];\n      resliceMatrix[4 * i + 1] = publicAPI.getPlaneNormalFromViewType(ViewTypes.XZ_PLANE)[i];\n      resliceMatrix[4 * i + 2] = publicAPI.getPlaneNormalFromViewType(ViewTypes.XY_PLANE)[i];\n    }\n    const origin = publicAPI.getWidgetState().getCenter();\n    const m = vtkMatrixBuilder.buildFromRadian().translate(...origin).multiply(resliceMatrix).translate(...multiplyScalar([...origin], -1)).getMatrix();\n    return m;\n  };\n  publicAPI.getDisplayScaleParams = () => [ViewTypes.YZ_PLANE, ViewTypes.XZ_PLANE, ViewTypes.XY_PLANE].reduce((res, viewType) => {\n    res[viewType] = findRepresentationsForViewType(viewType)[0]?.getDisplayScaleParams?.();\n    return res;\n  }, {});\n  publicAPI.setScaleInPixels = macro.chain(publicAPI.setScaleInPixels, scale => {\n    publicAPI.getViewWidgets().forEach(w => w.setScaleInPixels(scale));\n    updateState(model.widgetState, model.scaleInPixels, model.rotationHandlePosition);\n  });\n  publicAPI.getPlaneExtremities = viewType => {\n    const dirProj = publicAPI.getWidgetState().getPlanes()[viewType].normal;\n    const length = vtkBoundingBox.getDiagonalLength(publicAPI.getWidgetState().getImage().getBounds());\n    const p1 = multiplyAccumulate(publicAPI.getWidgetState().getCenter(), dirProj, -length, []);\n    const p2 = multiplyAccumulate(publicAPI.getWidgetState().getCenter(), dirProj, length, []);\n    // FIXME: support oriented bounds\n    const intersectionPoints = vtkBox.intersectWithLine(publicAPI.getWidgetState().getImage().getBounds(), p1, p2);\n    return [intersectionPoints.x1, intersectionPoints.x2];\n  };\n}\n\n// ----------------------------------------------------------------------------\n/**\n * Initializes the model.\n * @param {*} initialValues optional object of member variables. initialValues.planes is an optional list of axis names (e.g. ['X', 'Y'])\n * @returns the initial model object\n */\nconst defaultValues = initialValues => ({\n  behavior: widgetBehavior,\n  widgetState: generateState(initialValues.planes),\n  rotationHandlePosition: 0.5,\n  scaleInPixels: true,\n  manipulator: vtkPlanePointManipulator.newInstance(),\n  ...initialValues\n});\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, defaultValues(initialValues));\n  vtkAbstractWidgetFactory.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['scaleInPixels', 'rotationHandlePosition', 'manipulator']);\n  vtkResliceCursorWidget(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkResliceCursorWidget');\n\n// ----------------------------------------------------------------------------\n\nvar vtkResliceCursorWidget$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkResliceCursorWidget$1 as default, extend, newInstance };\n","import { m as macro, v as vtkWarningMacro } from '../../macros2.js';\nimport vtkCompositeMouseManipulator from './CompositeMouseManipulator.js';\n\n// ----------------------------------------------------------------------------\n// vtkMouseRangeManipulator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkMouseRangeManipulator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkMouseRangeManipulator');\n\n  // Keep track of delta that is below the value\n  // of one step to progressively increment it\n  const incrementalDelta = new Map();\n\n  // Internal methods\n  //-------------------------------------------------------------------------\n  function scaleDeltaToRange(listener, normalizedDelta) {\n    return normalizedDelta * ((listener.max - listener.min) / (listener.step + 1));\n  }\n\n  //-------------------------------------------------------------------------\n  function processDelta(listener, delta) {\n    const oldValue = listener.getValue();\n\n    // if exponential scroll is enabled, we raise our scale to the\n    //  exponent of the net delta of the interaction. The further away\n    // the user's cursor is from the start of the interaction, the more\n    // their movements will effect the value.\n    let scalingFactor = listener.exponentialScroll ? listener.scale ** Math.log2(Math.abs(model.interactionNetDelta) + 2) : listener.scale;\n\n    // Preserve the sign of scale (which can be used to invert the scrolling direction)\n    // after the power operation above (in case of exponentialScroll).\n    scalingFactor = Math.abs(scalingFactor) * Math.sign(listener.scale);\n    const newDelta = delta * scalingFactor + incrementalDelta.get(listener);\n\n    // Compute new value based on step\n    // In the following line, Math.abs is required so that the floor function\n    // consistently rounds to the lowest absolute integer.\n    const stepsToDifference = Math.floor(Math.abs(newDelta / listener.step));\n    let value = oldValue + listener.step * stepsToDifference * Math.sign(newDelta);\n    value = Math.max(value, listener.min);\n    value = Math.min(value, listener.max);\n    if (value !== oldValue) {\n      // Update value\n      listener.setValue(value);\n      incrementalDelta.set(listener, 0);\n    } else if (value === listener.min && newDelta < 0 || value === listener.max && newDelta > 0) {\n      // Do not allow incremental delta to go past range\n      incrementalDelta.set(listener, 0);\n    } else {\n      // Store delta for the next iteration\n      incrementalDelta.set(listener, newDelta);\n    }\n  }\n\n  // Public API methods\n\n  // min:number = minimum allowable value\n  // max:number = maximum allowable value\n  // step:number = value per step -- smaller = more steps over a given distance, larger = fewer steps over a given distance\n  // getValue:fn = function that returns current value\n  // setValue:fn = function to set value\n  // scale:number = scale value is applied to mouse event to allow users accelerate or decelerate delta without emitting more events\n  //-------------------------------------------------------------------------\n  publicAPI.setHorizontalListener = function (min, max, step, getValue, setValue) {\n    let scale = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n    let exponentialScroll = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n    const getFn = Number.isFinite(getValue) ? () => getValue : getValue;\n    model.horizontalListener = {\n      min,\n      max,\n      step,\n      getValue: getFn,\n      setValue,\n      scale,\n      exponentialScroll\n    };\n    incrementalDelta.set(model.horizontalListener, 0);\n    publicAPI.modified();\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.setVerticalListener = function (min, max, step, getValue, setValue) {\n    let scale = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n    let exponentialScroll = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n    const getFn = Number.isFinite(getValue) ? () => getValue : getValue;\n    model.verticalListener = {\n      min,\n      max,\n      step,\n      getValue: getFn,\n      setValue,\n      scale,\n      exponentialScroll\n    };\n    incrementalDelta.set(model.verticalListener, 0);\n    publicAPI.modified();\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.setScrollListener = function (min, max, step, getValue, setValue) {\n    let scale = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n    let exponentialScroll = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n    if (step < 0) {\n      vtkWarningMacro('Value of step cannot be negative. If you want to invert the scrolling direction, use a negative scale value instead.');\n    }\n    const stepSize = Math.abs(step);\n    const getFn = Number.isFinite(getValue) ? () => getValue : getValue;\n    model.scrollListener = {\n      min,\n      max,\n      step: stepSize,\n      getValue: getFn,\n      setValue,\n      scale,\n      exponentialScroll\n    };\n    incrementalDelta.set(model.scrollListener, 0);\n    publicAPI.modified();\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.removeHorizontalListener = () => {\n    if (model.horizontalListener) {\n      incrementalDelta.delete(model.horizontalListener);\n      delete model.horizontalListener;\n      publicAPI.modified();\n    }\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.removeVerticalListener = () => {\n    if (model.verticalListener) {\n      incrementalDelta.delete(model.verticalListener);\n      delete model.verticalListener;\n      publicAPI.modified();\n    }\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.removeScrollListener = () => {\n    if (model.scrollListener) {\n      incrementalDelta.delete(model.scrollListener);\n      delete model.scrollListener;\n      publicAPI.modified();\n    }\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.removeAllListeners = () => {\n    publicAPI.removeHorizontalListener();\n    publicAPI.removeVerticalListener();\n    publicAPI.removeScrollListener();\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.onButtonDown = (interactor, renderer, position) => {\n    model.previousPosition = position;\n    model.interactionNetDelta = 0;\n    const glRenderWindow = interactor.getView();\n    // Ratio is the dom size vs renderwindow size\n    const ratio = glRenderWindow.getContainerSize()[0] / glRenderWindow.getSize()[0];\n    // Get proper pixel range used by viewport in rw size space\n    const size = glRenderWindow.getViewportSize(renderer);\n    // rescale size to match mouse event position\n    model.containerSize = size.map(v => v * ratio);\n  };\n  publicAPI.onButtonUp = interactor => {\n    interactor.exitPointerLock();\n  };\n\n  //--------------------------------------------------------------------------\n\n  // TODO: at some point, this should perhaps be done in\n  // RenderWindowInteractor instead of here.\n  // We need to hook into mousemove directly for two reasons:\n  // 1. We need to keep receiving mouse move events after the mouse button\n  //    is released. This is currently not possible with\n  //    vtkInteractorStyleManipulator.\n  // 2. Since the mouse is stationary in pointer lock mode, we need the\n  //    event.movementX and event.movementY info, which are not currently\n  //    passed via interactor.onMouseMove.\n  publicAPI.startPointerLockEvent = (interactor, renderer) => {\n    const handlePointerLockMove = event => {\n      publicAPI.onPointerLockMove(interactor, renderer, event);\n    };\n    document.addEventListener('mousemove', handlePointerLockMove);\n    let subscription = null;\n    const endInteraction = () => {\n      document.removeEventListener('mousemove', handlePointerLockMove);\n      subscription?.unsubscribe();\n    };\n    subscription = interactor?.onEndPointerLock(endInteraction);\n  };\n  publicAPI.onPointerLockMove = (interactor, renderer, event) => {\n    // There is a slight delay between the `onEndPointerLock` call\n    // and the last `onMouseMove` event, we must make sure the pointer\n    // is still locked before we run this logic otherwise we may\n    // get a `onMouseMove` call after the pointer has been unlocked.\n    if (!interactor.isPointerLocked()) return;\n\n    // previousPosition could be undefined if for some reason the\n    // `startPointerLockEvent` method is called before the `onButtonDown` one.\n    if (model.previousPosition == null) return;\n    model.previousPosition.x += event.movementX;\n    model.previousPosition.y += event.movementY;\n    publicAPI.onMouseMove(interactor, renderer, model.previousPosition);\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.onMouseMove = (interactor, renderer, position) => {\n    if (!model.verticalListener && !model.horizontalListener) {\n      return;\n    }\n\n    // We only want to initialize the pointer lock listener\n    // after the user starts moving their mouse, this way\n    // we don't interfere with other events such as doubleClick,\n    // for this reason we don't call this from `onButtonDown`\n    if (model.usePointerLock && !interactor.isPointerLocked()) {\n      interactor.requestPointerLock();\n      publicAPI.startPointerLockEvent(interactor, renderer);\n    }\n    if (!position) {\n      return;\n    }\n    if (model.horizontalListener) {\n      const dxNorm = (position.x - model.previousPosition.x) / model.containerSize[0];\n      const dx = scaleDeltaToRange(model.horizontalListener, dxNorm);\n      model.interactionNetDelta += dx;\n      processDelta(model.horizontalListener, dx);\n    }\n    if (model.verticalListener) {\n      const dyNorm = (position.y - model.previousPosition.y) / model.containerSize[1];\n      const dy = scaleDeltaToRange(model.verticalListener, dyNorm);\n      model.interactionNetDelta += dy;\n      processDelta(model.verticalListener, dy);\n    }\n    model.previousPosition = position;\n  };\n\n  //-------------------------------------------------------------------------\n  publicAPI.onScroll = (interactor, renderer, delta) => {\n    if (!model.scrollListener || !delta) {\n      return;\n    }\n    model.interactionNetDelta += delta * model.scrollListener.step;\n    processDelta(model.scrollListener, delta * model.scrollListener.step);\n  };\n  publicAPI.onStartScroll = () => {\n    model.interactionNetDelta = 0;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  horizontalListener: null,\n  verticalListener: null,\n  scrollListener: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  macro.obj(publicAPI, model);\n  vtkCompositeMouseManipulator.extend(publicAPI, model, initialValues);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['usePointerLock']);\n\n  // Object specific methods\n  vtkMouseRangeManipulator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkMouseRangeManipulator');\n\n// ----------------------------------------------------------------------------\n\nvar vtkMouseRangeManipulator$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkMouseRangeManipulator$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkInteractorStyleManipulator from '../Style/InteractorStyleManipulator.js';\nimport vtkMouseCameraTrackballZoomManipulator from './MouseCameraTrackballZoomManipulator.js';\n\n// ----------------------------------------------------------------------------\n// vtkMouseCameraTrackballZoomToMouseManipulator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkMouseCameraTrackballZoomToMouseManipulator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkMouseCameraTrackballZoomToMouseManipulator');\n  const superOnButtonDown = publicAPI.onButtonDown;\n  publicAPI.onButtonDown = (interactor, renderer, position) => {\n    superOnButtonDown(interactor, renderer, position);\n    model.zoomPosition = position;\n  };\n  publicAPI.onMouseMove = (interactor, renderer, position) => {\n    if (!position) {\n      return;\n    }\n    const dy = model.previousPosition.y - position.y;\n    const k = dy * model.zoomScale;\n    vtkInteractorStyleManipulator.dollyToPosition(1.0 - k, model.zoomPosition, renderer, interactor);\n    if (interactor.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n    model.previousPosition = position;\n  };\n  publicAPI.onScroll = (interactor, renderer, delta, position) => {\n    if (!delta || !position) {\n      return;\n    }\n    const dyf = 1 - delta * 0.1;\n    vtkInteractorStyleManipulator.dollyToPosition(dyf, position, renderer, interactor);\n    if (interactor.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  zoomPosition: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkMouseCameraTrackballZoomManipulator.extend(publicAPI, model, initialValues);\n\n  // Object specific methods\n  vtkMouseCameraTrackballZoomToMouseManipulator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkMouseCameraTrackballZoomToMouseManipulator');\n\n// ----------------------------------------------------------------------------\n\nvar vtkMouseCameraTrackballZoomToMouseManipulator$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkMouseCameraTrackballZoomToMouseManipulator$1 as default, extend, newInstance };\n","import { vec3 } from 'gl-matrix';\nimport vtkPlane from '../../../Common/DataModel/Plane.js';\n\n/**\n * Perform plane-line intersection, where the line is defined by two points (p1, p2),\n * and the plane is defined by the imageData and slice number.\n *\n * @param {Vector3} p1\n * @param {Vector3} p2\n * @param {vtkImageMapper|vtkImageArrayMapper} mapper\n */\nfunction doPicking(p1, p2, mapper) {\n  const imageData = mapper.getCurrentImage();\n  const extent = imageData.getExtent();\n\n  // Slice origin\n  const ijk = [extent[0], extent[2], extent[4]];\n  const {\n    ijkMode\n  } = mapper.getClosestIJKAxis();\n  let nSlice = mapper.isA('vtkImageArrayMapper') ? mapper.getSubSlice() : mapper.getSlice();\n  if (ijkMode !== mapper.getSlicingMode()) {\n    // If not IJK slicing, get the IJK slice from the XYZ position/slice\n    nSlice = mapper.getSliceAtPosition(nSlice);\n  }\n  ijk[ijkMode] += nSlice;\n  const worldOrigin = [0, 0, 0];\n  imageData.indexToWorld(ijk, worldOrigin);\n\n  // Normal computation\n  ijk[ijkMode] += 1;\n  const worldNormal = [0, 0, 0];\n  imageData.indexToWorld(ijk, worldNormal);\n  worldNormal[0] -= worldOrigin[0];\n  worldNormal[1] -= worldOrigin[1];\n  worldNormal[2] -= worldOrigin[2];\n  vec3.normalize(worldNormal, worldNormal);\n  const intersect = vtkPlane.intersectWithLine(p1, p2, worldOrigin, worldNormal);\n  if (intersect.intersection) {\n    const point = intersect.x;\n    const absoluteIJK = [0, 0, 0];\n    imageData.worldToIndex(point, absoluteIJK);\n    // `t` is the parametric position along the line\n    // defined in Plane.intersectWithLine\n    return {\n      t: intersect.t,\n      absoluteIJK\n    };\n  }\n  return null;\n}\n\n/**\n * Implement point picking for image plane.\n * The plane is defined by the imageData and current slice number,\n * set in the input mapper.\n *\n * @param {Vector3} p1\n * @param {Vector3} p2\n * @param {vtkImageMapper|vtkImageArrayMapper} mapper\n */\nfunction intersectWithLineForPointPicking(p1, p2, mapper) {\n  const pickingData = doPicking(p1, p2, mapper);\n  if (pickingData) {\n    const imageData = mapper.getCurrentImage();\n    const extent = imageData.getExtent();\n\n    // Get closer integer ijk\n    // NB: point picking means closest slice, means rounding\n    const ijk = [Math.round(pickingData.absoluteIJK[0]), Math.round(pickingData.absoluteIJK[1]), Math.round(pickingData.absoluteIJK[2])];\n\n    // Are we outside our actual extent\n    if (ijk[0] < extent[0] || ijk[0] > extent[1] || ijk[1] < extent[2] || ijk[1] > extent[3] || ijk[2] < extent[4] || ijk[2] > extent[5]) {\n      return null;\n    }\n    return {\n      t: pickingData.t,\n      ijk\n    };\n  }\n  return null;\n}\n\n/**\n * Implement cell picking for image plane.\n * The plane is defined by the imageData and current slice number,\n * set in the input mapper.\n *\n * @param {Vector3} p1\n * @param {Vector3} p2\n * @param {vtkImageMapper|vtkImageArrayMapper} mapper\n */\nfunction intersectWithLineForCellPicking(p1, p2, mapper) {\n  const pickingData = doPicking(p1, p2, mapper);\n  if (pickingData) {\n    const imageData = mapper.getCurrentImage();\n    const extent = imageData.getExtent();\n    const absIJK = pickingData.absoluteIJK;\n\n    // Get closer integer ijk\n    // NB: cell picking means closest voxel, means flooring\n    const ijk = [Math.floor(absIJK[0]), Math.floor(absIJK[1]), Math.floor(absIJK[2])];\n\n    // Are we outside our actual extent\n    if (ijk[0] < extent[0] || ijk[0] > extent[1] - 1 || ijk[1] < extent[2] || ijk[1] > extent[3] - 1 || ijk[2] < extent[4] ||\n    // handle single-slice images\n    ijk[2] > (extent[5] ? extent[5] - 1 : extent[5])) {\n      return null;\n    }\n\n    // Parametric coordinates within cell\n    const pCoords = [absIJK[0] - ijk[0], absIJK[1] - ijk[1], absIJK[2] - ijk[2]];\n    return {\n      t: pickingData.t,\n      ijk,\n      pCoords\n    };\n  }\n  return null;\n}\n\nexport { intersectWithLineForCellPicking, intersectWithLineForPointPicking };\n","import Constants from './ImageMapper/Constants.js';\nimport { m as macro } from '../../macros2.js';\nimport vtkAbstractImageMapper from './AbstractImageMapper.js';\nimport { intersectWithLineForPointPicking, intersectWithLineForCellPicking } from './AbstractImageMapper/helper.js';\nimport { E as clampValue, S as multiply3x3_vect3, H as createUninitializedBounds, T as getSparseOrthogonalMatrix } from '../../Common/Core/Math/index.js';\nimport CoincidentTopologyHelper from './Mapper/CoincidentTopologyHelper.js';\n\nconst {\n  staticOffsetAPI,\n  otherStaticMethods\n} = CoincidentTopologyHelper;\nconst {\n  SlicingMode\n} = Constants;\n\n// ----------------------------------------------------------------------------\n// vtkImageMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageMapper');\n  publicAPI.getSliceAtPosition = pos => {\n    const image = publicAPI.getCurrentImage();\n    let pos3;\n    if (pos.length === 3) {\n      pos3 = pos;\n    } else if (Number.isFinite(pos)) {\n      const bds = image.getBounds();\n      switch (model.slicingMode) {\n        case SlicingMode.X:\n          pos3 = [pos, (bds[3] + bds[2]) / 2, (bds[5] + bds[4]) / 2];\n          break;\n        case SlicingMode.Y:\n          pos3 = [(bds[1] + bds[0]) / 2, pos, (bds[5] + bds[4]) / 2];\n          break;\n        case SlicingMode.Z:\n          pos3 = [(bds[1] + bds[0]) / 2, (bds[3] + bds[2]) / 2, pos];\n          break;\n      }\n    }\n    const ijk = [0, 0, 0];\n    image.worldToIndex(pos3, ijk);\n    const ex = image.getExtent();\n    const {\n      ijkMode\n    } = publicAPI.getClosestIJKAxis();\n    let slice = 0;\n    switch (ijkMode) {\n      case SlicingMode.I:\n        slice = clampValue(ijk[0], ex[0], ex[1]);\n        break;\n      case SlicingMode.J:\n        slice = clampValue(ijk[1], ex[2], ex[3]);\n        break;\n      case SlicingMode.K:\n        slice = clampValue(ijk[2], ex[4], ex[5]);\n        break;\n      default:\n        return 0;\n    }\n    return slice;\n  };\n  publicAPI.setSliceFromCamera = cam => {\n    const fp = cam.getFocalPoint();\n    switch (model.slicingMode) {\n      case SlicingMode.I:\n      case SlicingMode.J:\n      case SlicingMode.K:\n        {\n          const slice = publicAPI.getSliceAtPosition(fp);\n          publicAPI.setSlice(slice);\n        }\n        break;\n      case SlicingMode.X:\n        publicAPI.setSlice(fp[0]);\n        break;\n      case SlicingMode.Y:\n        publicAPI.setSlice(fp[1]);\n        break;\n      case SlicingMode.Z:\n        publicAPI.setSlice(fp[2]);\n        break;\n    }\n  };\n  publicAPI.setXSlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.X);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.setYSlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.Y);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.setZSlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.Z);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.setISlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.I);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.setJSlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.J);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.setKSlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.K);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.getSlicingModeNormal = () => {\n    const out = [0, 0, 0];\n    const mat3 = publicAPI.getCurrentImage().getDirection();\n    switch (model.slicingMode) {\n      case SlicingMode.X:\n        out[0] = 1;\n        break;\n      case SlicingMode.Y:\n        out[1] = 1;\n        break;\n      case SlicingMode.Z:\n        out[2] = 1;\n        break;\n      case SlicingMode.I:\n        multiply3x3_vect3(mat3, [1, 0, 0], out);\n        break;\n      case SlicingMode.J:\n        multiply3x3_vect3(mat3, [0, 1, 0], out);\n        break;\n      case SlicingMode.K:\n        multiply3x3_vect3(mat3, [0, 0, 1], out);\n        break;\n    }\n    return out;\n  };\n  function computeClosestIJKAxis() {\n    let xyzMode;\n    switch (model.slicingMode) {\n      case SlicingMode.X:\n        xyzMode = 0;\n        break;\n      case SlicingMode.Y:\n        xyzMode = 1;\n        break;\n      case SlicingMode.Z:\n        xyzMode = 2;\n        break;\n      default:\n        model.closestIJKAxis = {\n          ijkMode: model.slicingMode,\n          flip: false\n        };\n        return;\n    }\n\n    // The direction matrix in vtkImageData is the indexToWorld rotation matrix\n    // with a column-major data layout since it is stored as a WebGL matrix.\n    const direction = publicAPI.getCurrentImage().getDirection();\n    const newMatrix = getSparseOrthogonalMatrix(direction);\n    // With {foo}Vector filled with 0s except at {foo}Mode position where it is 1\n    // We have xyzVector = (+/-) newMatrix * ijkVector\n    let ijkMode = 0;\n    for (; ijkMode < 3; ++ijkMode) {\n      if (newMatrix[xyzMode + 3 * ijkMode] !== 0) {\n        break;\n      }\n    }\n    const flip = newMatrix[xyzMode + 3 * ijkMode] < 0;\n    model.closestIJKAxis = {\n      ijkMode,\n      flip\n    };\n  }\n  publicAPI.setSlicingMode = mode => {\n    if (model.slicingMode === mode) {\n      return;\n    }\n    model.slicingMode = mode;\n    if (publicAPI.getCurrentImage()) {\n      computeClosestIJKAxis();\n    }\n    publicAPI.modified();\n  };\n  publicAPI.getClosestIJKAxis = () => {\n    if ((model.closestIJKAxis === undefined || model.closestIJKAxis.ijkMode === SlicingMode.NONE) && publicAPI.getCurrentImage()) {\n      computeClosestIJKAxis();\n    }\n    return model.closestIJKAxis;\n  };\n  publicAPI.getBounds = () => {\n    const image = publicAPI.getCurrentImage();\n    if (!image) {\n      return createUninitializedBounds();\n    }\n    if (!model.useCustomExtents) {\n      return image.getBounds();\n    }\n    const ex = model.customDisplayExtent.slice();\n    const {\n      ijkMode\n    } = publicAPI.getClosestIJKAxis();\n    let nSlice = model.slice;\n    if (ijkMode !== model.slicingMode) {\n      // If not IJK slicing, get the IJK slice from the XYZ position/slice\n      nSlice = publicAPI.getSliceAtPosition(model.slice);\n    }\n    switch (ijkMode) {\n      case SlicingMode.I:\n        ex[0] = nSlice;\n        ex[1] = nSlice;\n        break;\n      case SlicingMode.J:\n        ex[2] = nSlice;\n        ex[3] = nSlice;\n        break;\n      case SlicingMode.K:\n        ex[4] = nSlice;\n        ex[5] = nSlice;\n        break;\n    }\n    return image.extentToBounds(ex);\n  };\n  publicAPI.getBoundsForSlice = function () {\n    let slice = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : model.slice;\n    let halfThickness = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const image = publicAPI.getCurrentImage();\n    if (!image) {\n      return createUninitializedBounds();\n    }\n    const extent = image.getSpatialExtent();\n    const {\n      ijkMode\n    } = publicAPI.getClosestIJKAxis();\n    let nSlice = slice;\n    if (ijkMode !== model.slicingMode) {\n      // If not IJK slicing, get the IJK slice from the XYZ position/slice\n      nSlice = publicAPI.getSliceAtPosition(slice);\n    }\n    switch (ijkMode) {\n      case SlicingMode.I:\n        extent[0] = nSlice - halfThickness;\n        extent[1] = nSlice + halfThickness;\n        break;\n      case SlicingMode.J:\n        extent[2] = nSlice - halfThickness;\n        extent[3] = nSlice + halfThickness;\n        break;\n      case SlicingMode.K:\n        extent[4] = nSlice - halfThickness;\n        extent[5] = nSlice + halfThickness;\n        break;\n    }\n    return image.extentToBounds(extent);\n  };\n  publicAPI.intersectWithLineForPointPicking = (p1, p2) => intersectWithLineForPointPicking(p1, p2, publicAPI);\n  publicAPI.intersectWithLineForCellPicking = (p1, p2) => intersectWithLineForCellPicking(p1, p2, publicAPI);\n  publicAPI.getCurrentImage = () => publicAPI.getInputData();\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  slicingMode: SlicingMode.NONE,\n  closestIJKAxis: {\n    ijkMode: SlicingMode.NONE,\n    flip: false\n  },\n  renderToRectangle: false,\n  sliceAtFocalPoint: false,\n  preferSizeOverAccuracy: false // Whether to use halfFloat representation of float, when it is inaccurate\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  vtkAbstractImageMapper.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['slicingMode']);\n  macro.setGet(publicAPI, model, ['closestIJKAxis', 'renderToRectangle', 'sliceAtFocalPoint', 'preferSizeOverAccuracy']);\n  CoincidentTopologyHelper.implementCoincidentTopologyMethods(publicAPI, model);\n\n  // Object methods\n  vtkImageMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageMapper');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageMapper$1 = {\n  newInstance,\n  extend,\n  ...staticOffsetAPI,\n  ...otherStaticMethods,\n  ...Constants\n};\n\nexport { vtkImageMapper$1 as default, extend, newInstance };\n","const ColorSpace = {\n  RGB: 0,\n  HSV: 1,\n  LAB: 2,\n  DIVERGING: 3\n};\nconst Scale = {\n  LINEAR: 0,\n  LOG10: 1\n};\nvar Constants = {\n  ColorSpace,\n  Scale\n};\n\nexport { ColorSpace, Scale, Constants as default };\n","import { m as macro } from '../../macros2.js';\nimport { h as hsv2rgb, i as isNan, K as floor, L as isInf, M as rgb2hsv, N as rgb2lab, O as lab2rgb } from '../../Common/Core/Math/index.js';\nimport vtkScalarsToColors from '../../Common/Core/ScalarsToColors.js';\nimport Constants from './ColorTransferFunction/Constants.js';\n\nconst {\n  ColorSpace,\n  Scale\n} = Constants;\nconst {\n  ScalarMappingTarget\n} = vtkScalarsToColors;\nconst {\n  vtkDebugMacro,\n  vtkErrorMacro,\n  vtkWarningMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n/* eslint-disable no-continue                                                */\n\n// Convert to and from a special polar version of CIELAB (useful for creating\n// continuous diverging color maps).\nfunction vtkColorTransferFunctionLabToMsh(lab, msh) {\n  const L = lab[0];\n  const a = lab[1];\n  const b = lab[2];\n  const M = Math.sqrt(L * L + a * a + b * b);\n  const s = M > 0.001 ? Math.acos(L / M) : 0.0;\n  const h = s > 0.001 ? Math.atan2(b, a) : 0.0;\n  msh[0] = M;\n  msh[1] = s;\n  msh[2] = h;\n}\nfunction vtkColorTransferFunctionMshToLab(msh, lab) {\n  const M = msh[0];\n  const s = msh[1];\n  const h = msh[2];\n  lab[0] = M * Math.cos(s);\n  lab[1] = M * Math.sin(s) * Math.cos(h);\n  lab[2] = M * Math.sin(s) * Math.sin(h);\n}\n\n// For the case when interpolating from a saturated color to an unsaturated\n// color, find a hue for the unsaturated color that makes sense.\nfunction vtkColorTransferFunctionAdjustHue(msh, unsatM) {\n  if (msh[0] >= unsatM - 0.1) {\n    // The best we can do is hold hue constant.\n    return msh[2];\n  }\n\n  // This equation is designed to make the perceptual change of the\n  // interpolation to be close to constant.\n  const hueSpin = msh[1] * Math.sqrt(unsatM * unsatM - msh[0] * msh[0]) / (msh[0] * Math.sin(msh[1]));\n  // Spin hue away from 0 except in purple hues.\n  if (msh[2] > -0.3 * Math.PI) {\n    return msh[2] + hueSpin;\n  }\n  return msh[2] - hueSpin;\n}\nfunction vtkColorTransferFunctionAngleDiff(a1, a2) {\n  let adiff = a1 - a2;\n  if (adiff < 0.0) {\n    adiff = -adiff;\n  }\n  while (adiff >= 2.0 * Math.PI) {\n    adiff -= 2.0 * Math.PI;\n  }\n  if (adiff > Math.PI) {\n    adiff = 2.0 * Math.PI - adiff;\n  }\n  return adiff;\n}\n\n// Interpolate a diverging color map.\nfunction vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, result) {\n  const lab1 = [];\n  const lab2 = [];\n  rgb2lab(rgb1, lab1);\n  rgb2lab(rgb2, lab2);\n  const msh1 = [];\n  const msh2 = [];\n  vtkColorTransferFunctionLabToMsh(lab1, msh1);\n  vtkColorTransferFunctionLabToMsh(lab2, msh2);\n\n  // If the endpoints are distinct saturated colors, then place white in between\n  // them.\n  let localS = s;\n  if (msh1[1] > 0.05 && msh2[1] > 0.05 && vtkColorTransferFunctionAngleDiff(msh1[2], msh2[2]) > 0.33 * Math.PI) {\n    // Insert the white midpoint by setting one end to white and adjusting the\n    // scalar value.\n    let Mmid = Math.max(msh1[0], msh2[0]);\n    Mmid = Math.max(88.0, Mmid);\n    if (s < 0.5) {\n      msh2[0] = Mmid;\n      msh2[1] = 0.0;\n      msh2[2] = 0.0;\n      localS *= 2.0;\n    } else {\n      msh1[0] = Mmid;\n      msh1[1] = 0.0;\n      msh1[2] = 0.0;\n      localS = 2.0 * localS - 1.0;\n    }\n  }\n\n  // If one color has no saturation, then its hue value is invalid.  In this\n  // case, we want to set it to something logical so that the interpolation of\n  // hue makes sense.\n  if (msh1[1] < 0.05 && msh2[1] > 0.05) {\n    msh1[2] = vtkColorTransferFunctionAdjustHue(msh2, msh1[0]);\n  } else if (msh2[1] < 0.05 && msh1[1] > 0.05) {\n    msh2[2] = vtkColorTransferFunctionAdjustHue(msh1, msh2[0]);\n  }\n  const mshTmp = [];\n  mshTmp[0] = (1 - localS) * msh1[0] + localS * msh2[0];\n  mshTmp[1] = (1 - localS) * msh1[1] + localS * msh2[1];\n  mshTmp[2] = (1 - localS) * msh1[2] + localS * msh2[2];\n\n  // Now convert back to RGB\n  const labTmp = [];\n  vtkColorTransferFunctionMshToLab(mshTmp, labTmp);\n  lab2rgb(labTmp, result);\n}\n\n// ----------------------------------------------------------------------------\n// vtkColorTransferFunction methods\n// ----------------------------------------------------------------------------\n\nfunction vtkColorTransferFunction(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkColorTransferFunction');\n\n  // Return the number of points which specify this function\n  publicAPI.getSize = () => model.nodes.length;\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in RGB\n  publicAPI.addRGBPoint = (x, r, g, b) => publicAPI.addRGBPointLong(x, r, g, b, 0.5, 0.0);\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in RGB\n  publicAPI.addRGBPointLong = function (x, r, g, b) {\n    let midpoint = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.5;\n    let sharpness = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.0;\n    // Error check\n    if (midpoint < 0.0 || midpoint > 1.0) {\n      vtkErrorMacro('Midpoint outside range [0.0, 1.0]');\n      return -1;\n    }\n    if (sharpness < 0.0 || sharpness > 1.0) {\n      vtkErrorMacro('Sharpness outside range [0.0, 1.0]');\n      return -1;\n    }\n\n    // remove any node already at this X location\n    if (!model.allowDuplicateScalars) {\n      publicAPI.removePoint(x);\n    }\n\n    // Create the new node\n    const node = {\n      x,\n      r,\n      g,\n      b,\n      midpoint,\n      sharpness\n    };\n\n    // Add it, then sort to get everything in order\n    model.nodes.push(node);\n    publicAPI.sortAndUpdateRange();\n\n    // We need to find the index of the node we just added in order\n    // to return this value\n    let i = 0;\n    for (; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n\n    // If we didn't find it, something went horribly wrong so\n    // return -1\n    if (i < model.nodes.length) {\n      return i;\n    }\n    return -1;\n  };\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in HSV\n  publicAPI.addHSVPoint = (x, h, s, v) => publicAPI.addHSVPointLong(x, h, s, v, 0.5, 0.0);\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in HSV\n  publicAPI.addHSVPointLong = function (x, h, s, v) {\n    let midpoint = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.5;\n    let sharpness = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.0;\n    const rgb = [];\n    const hsv = [h, s, v];\n    hsv2rgb(hsv, rgb);\n    return publicAPI.addRGBPoint(x, rgb[0], rgb[1], rgb[2], midpoint, sharpness);\n  };\n\n  //----------------------------------------------------------------------------\n  // Set nodes directly\n  publicAPI.setNodes = nodes => {\n    if (model.nodes !== nodes) {\n      const before = JSON.stringify(model.nodes);\n      model.nodes = nodes;\n      const after = JSON.stringify(model.nodes);\n      if (publicAPI.sortAndUpdateRange() || before !== after) {\n        publicAPI.modified();\n        return true;\n      }\n    }\n    return false;\n  };\n\n  //----------------------------------------------------------------------------\n  // Sort the vector in increasing order, then fill in\n  // the Range\n  publicAPI.sortAndUpdateRange = () => {\n    const before = JSON.stringify(model.nodes);\n    model.nodes.sort((a, b) => a.x - b.x);\n    const after = JSON.stringify(model.nodes);\n    const modifiedInvoked = publicAPI.updateRange();\n    // If range is updated, Modified() has been called, don't call it again.\n    if (!modifiedInvoked && before !== after) {\n      publicAPI.modified();\n      return true;\n    }\n    return modifiedInvoked;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.updateRange = () => {\n    const oldRange = [2];\n    oldRange[0] = model.mappingRange[0];\n    oldRange[1] = model.mappingRange[1];\n    const size = model.nodes.length;\n    if (size) {\n      model.mappingRange[0] = model.nodes[0].x;\n      model.mappingRange[1] = model.nodes[size - 1].x;\n    } else {\n      model.mappingRange[0] = 0;\n      model.mappingRange[1] = 0;\n    }\n\n    // If the range is the same, then no need to call Modified()\n    if (oldRange[0] === model.mappingRange[0] && oldRange[1] === model.mappingRange[1]) {\n      return false;\n    }\n    publicAPI.modified();\n    return true;\n  };\n\n  //----------------------------------------------------------------------------\n  // Remove a point\n  publicAPI.removePoint = x => {\n    // First find the node since we need to know its\n    // index as our return value\n    let i = 0;\n    for (; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n    const retVal = i;\n\n    // If the node doesn't exist, we return -1\n    if (i >= model.nodes.length) {\n      return -1;\n    }\n\n    // If the first or last point has been removed, then we update the range\n    // No need to sort here as the order of points hasn't changed.\n    let modifiedInvoked = false;\n    model.nodes.splice(i, 1);\n    if (i === 0 || i === model.nodes.length) {\n      modifiedInvoked = publicAPI.updateRange();\n    }\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n    return retVal;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.movePoint = (oldX, newX) => {\n    if (oldX === newX) {\n      // Nothing to do.\n      return;\n    }\n    publicAPI.removePoint(newX);\n    for (let i = 0; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === oldX) {\n        model.nodes[i].x = newX;\n        publicAPI.sortAndUpdateRange();\n        break;\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  // Remove all points\n  publicAPI.removeAllPoints = () => {\n    model.nodes = [];\n    publicAPI.sortAndUpdateRange();\n  };\n\n  //----------------------------------------------------------------------------\n  // Add a line defined in RGB\n  publicAPI.addRGBSegment = (x1, r1, g1, b1, x2, r2, g2, b2) => {\n    // First, find all points in this range and remove them\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length;) {\n      if (model.nodes[i].x >= x1 && model.nodes[i].x <= x2) {\n        model.nodes.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n\n    // Now add the points\n    publicAPI.addRGBPointLong(x1, r1, g1, b1, 0.5, 0.0);\n    publicAPI.addRGBPointLong(x2, r2, g2, b2, 0.5, 0.0);\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  // Add a line defined in HSV\n  publicAPI.addHSVSegment = (x1, h1, s1, v1, x2, h2, s2, v2) => {\n    const hsv1 = [h1, s1, v1];\n    const hsv2 = [h2, s2, v2];\n    const rgb1 = [];\n    const rgb2 = [];\n    hsv2rgb(hsv1, rgb1);\n    hsv2rgb(hsv2, rgb2);\n    publicAPI.addRGBSegment(x1, rgb1[0], rgb1[1], rgb1[2], x2, rgb2[0], rgb2[1], rgb2[2]);\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the RGBA color evaluated at the specified location\n  publicAPI.mapValue = x => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return [Math.floor(255.0 * rgb[0] + 0.5), Math.floor(255.0 * rgb[1] + 0.5), Math.floor(255.0 * rgb[2] + 0.5), 255];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the RGB color evaluated at the specified location\n  publicAPI.getColor = (x, rgb) => {\n    if (model.indexedLookup) {\n      const numNodes = publicAPI.getSize();\n      // todo\n      const idx = publicAPI.getAnnotatedValueIndexInternal(x);\n      if (idx < 0 || numNodes === 0) {\n        const nanColor = publicAPI.getNanColorByReference();\n        rgb[0] = nanColor[0];\n        rgb[1] = nanColor[1];\n        rgb[2] = nanColor[2];\n      } else {\n        const nodeVal = [];\n        publicAPI.getNodeValue(idx % numNodes, nodeVal);\n        // nodeVal[0] is the x value. nodeVal[1...3] is rgb.\n        rgb[0] = nodeVal[1];\n        rgb[1] = nodeVal[2];\n        rgb[2] = nodeVal[3];\n      }\n      return;\n    }\n    publicAPI.getTable(x, x, 1, rgb);\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the red color evaluated at the specified location\n  publicAPI.getRedValue = x => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return rgb[0];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the green color evaluated at the specified location\n  publicAPI.getGreenValue = x => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return rgb[1];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the blue color evaluated at the specified location\n  publicAPI.getBlueValue = x => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return rgb[2];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns a table of RGB colors at regular intervals along the function\n  publicAPI.getTable = (xStart_, xEnd_, size, table) => {\n    // To handle BigInt limitation\n    const xStart = Number(xStart_);\n    const xEnd = Number(xEnd_);\n\n    // Special case: If either the start or end is a NaN, then all any\n    // interpolation done on them is also a NaN.  Therefore, fill the table with\n    // the NaN color.\n    if (isNan(xStart) || isNan(xEnd)) {\n      for (let i = 0; i < size; i++) {\n        table[i * 3 + 0] = model.nanColor[0];\n        table[i * 3 + 1] = model.nanColor[1];\n        table[i * 3 + 2] = model.nanColor[2];\n      }\n      return;\n    }\n    let idx = 0;\n    const numNodes = model.nodes.length;\n\n    // Need to keep track of the last value so that\n    // we can fill in table locations past this with\n    // this value if Clamping is On.\n    let lastR = 0.0;\n    let lastG = 0.0;\n    let lastB = 0.0;\n    if (numNodes !== 0) {\n      lastR = model.nodes[numNodes - 1].r;\n      lastG = model.nodes[numNodes - 1].g;\n      lastB = model.nodes[numNodes - 1].b;\n    }\n    let x = 0.0;\n    let x1 = 0.0;\n    let x2 = 0.0;\n    const rgb1 = [0.0, 0.0, 0.0];\n    const rgb2 = [0.0, 0.0, 0.0];\n    let midpoint = 0.0;\n    let sharpness = 0.0;\n    const tmpVec = [];\n\n    // If the scale is logarithmic, make sure the range is valid.\n    let usingLogScale = model.scale === Scale.LOG10;\n    if (usingLogScale) {\n      // Note: This requires range[0] <= range[1].\n      usingLogScale = model.mappingRange[0] > 0.0;\n    }\n    let logStart = 0.0;\n    let logEnd = 0.0;\n    let logX = 0.0;\n    if (usingLogScale) {\n      logStart = Math.log10(xStart);\n      logEnd = Math.log10(xEnd);\n    }\n\n    // For each table entry\n    for (let i = 0; i < size; i++) {\n      // Find our location in the table\n      const tidx = 3 * i;\n\n      // Find our X location. If we are taking only 1 sample, make\n      // it halfway between start and end (usually start and end will\n      // be the same in this case)\n      if (size > 1) {\n        if (usingLogScale) {\n          logX = logStart + i / (size - 1.0) * (logEnd - logStart);\n          x = 10.0 ** logX;\n        } else {\n          x = xStart + i / (size - 1.0) * (xEnd - xStart);\n        }\n      } else if (usingLogScale) {\n        logX = 0.5 * (logStart + logEnd);\n        x = 10.0 ** logX;\n      } else {\n        x = 0.5 * (xStart + xEnd);\n      }\n\n      // Linearly map x from mappingRange to [0, numberOfValues-1],\n      // discretize (round down to the closest integer),\n      // then map back to mappingRange\n      if (model.discretize) {\n        const range = model.mappingRange;\n        if (x >= range[0] && x <= range[1]) {\n          const numberOfValues = model.numberOfValues;\n          const deltaRange = range[1] - range[0];\n          if (numberOfValues <= 1) {\n            x = range[0] + deltaRange / 2.0;\n          } else {\n            // normalize x\n            const xn = (x - range[0]) / deltaRange;\n            // discretize\n            const discretizeIndex = floor(numberOfValues * xn);\n            // get discretized x\n            x = range[0] + discretizeIndex / (numberOfValues - 1) * deltaRange;\n          }\n        }\n      }\n\n      // Do we need to move to the next node?\n      while (idx < numNodes && x > model.nodes[idx].x) {\n        idx++;\n        // If we are at a valid point index, fill in\n        // the value at this node, and the one before (the\n        // two that surround our current sample location)\n        // idx cannot be 0 since we just incremented it.\n        if (idx < numNodes) {\n          x1 = model.nodes[idx - 1].x;\n          x2 = model.nodes[idx].x;\n          if (usingLogScale) {\n            x1 = Math.log10(x1);\n            x2 = Math.log10(x2);\n          }\n          rgb1[0] = model.nodes[idx - 1].r;\n          rgb2[0] = model.nodes[idx].r;\n          rgb1[1] = model.nodes[idx - 1].g;\n          rgb2[1] = model.nodes[idx].g;\n          rgb1[2] = model.nodes[idx - 1].b;\n          rgb2[2] = model.nodes[idx].b;\n\n          // We only need the previous midpoint and sharpness\n          // since these control this region\n          midpoint = model.nodes[idx - 1].midpoint;\n          sharpness = model.nodes[idx - 1].sharpness;\n\n          // Move midpoint away from extreme ends of range to avoid\n          // degenerate math\n          if (midpoint < 0.00001) {\n            midpoint = 0.00001;\n          }\n          if (midpoint > 0.99999) {\n            midpoint = 0.99999;\n          }\n        }\n      }\n\n      // Are we at or past the end? If so, just use the last value\n      if (x > model.mappingRange[1]) {\n        table[tidx] = 0.0;\n        table[tidx + 1] = 0.0;\n        table[tidx + 2] = 0.0;\n        if (model.clamping) {\n          if (publicAPI.getUseAboveRangeColor()) {\n            table[tidx] = model.aboveRangeColor[0];\n            table[tidx + 1] = model.aboveRangeColor[1];\n            table[tidx + 2] = model.aboveRangeColor[2];\n          } else {\n            table[tidx] = lastR;\n            table[tidx + 1] = lastG;\n            table[tidx + 2] = lastB;\n          }\n        }\n      } else if (x < model.mappingRange[0] || isInf(x) && x < 0) {\n        // we are before the first node? If so, duplicate this node's values.\n        // We have to deal with -inf here\n        table[tidx] = 0.0;\n        table[tidx + 1] = 0.0;\n        table[tidx + 2] = 0.0;\n        if (model.clamping) {\n          if (publicAPI.getUseBelowRangeColor()) {\n            table[tidx] = model.belowRangeColor[0];\n            table[tidx + 1] = model.belowRangeColor[1];\n            table[tidx + 2] = model.belowRangeColor[2];\n          } else if (numNodes > 0) {\n            table[tidx] = model.nodes[0].r;\n            table[tidx + 1] = model.nodes[0].g;\n            table[tidx + 2] = model.nodes[0].b;\n          }\n        }\n      } else if (idx === 0 && (Math.abs(x - xStart) < 1e-6 || model.discretize)) {\n        if (numNodes > 0) {\n          table[tidx] = model.nodes[0].r;\n          table[tidx + 1] = model.nodes[0].g;\n          table[tidx + 2] = model.nodes[0].b;\n        } else {\n          table[tidx] = 0.0;\n          table[tidx + 1] = 0.0;\n          table[tidx + 2] = 0.0;\n        }\n      } else {\n        // OK, we are between two nodes - interpolate\n        // Our first attempt at a normalized location [0,1] -\n        // we will be modifying this based on midpoint and\n        // sharpness to get the curve shape we want and to have\n        // it pass through (y1+y2)/2 at the midpoint.\n        let s = 0.0;\n        if (usingLogScale) {\n          s = (logX - x1) / (x2 - x1);\n        } else {\n          s = (x - x1) / (x2 - x1);\n        }\n\n        // Readjust based on the midpoint - linear adjustment\n        if (s < midpoint) {\n          s = 0.5 * s / midpoint;\n        } else {\n          s = 0.5 + 0.5 * (s - midpoint) / (1.0 - midpoint);\n        }\n\n        // override for sharpness > 0.99\n        // In this case we just want piecewise constant\n        if (sharpness > 0.99) {\n          // Use the first value since we are below the midpoint\n          if (s < 0.5) {\n            table[tidx] = rgb1[0];\n            table[tidx + 1] = rgb1[1];\n            table[tidx + 2] = rgb1[2];\n            continue;\n          } else {\n            // Use the second value at or above the midpoint\n            table[tidx] = rgb2[0];\n            table[tidx + 1] = rgb2[1];\n            table[tidx + 2] = rgb2[2];\n            continue;\n          }\n        }\n\n        // Override for sharpness < 0.01\n        // In this case we want piecewise linear\n        if (sharpness < 0.01) {\n          // Simple linear interpolation\n          if (model.colorSpace === ColorSpace.RGB) {\n            table[tidx] = (1 - s) * rgb1[0] + s * rgb2[0];\n            table[tidx + 1] = (1 - s) * rgb1[1] + s * rgb2[1];\n            table[tidx + 2] = (1 - s) * rgb1[2] + s * rgb2[2];\n          } else if (model.colorSpace === ColorSpace.HSV) {\n            const hsv1 = [];\n            const hsv2 = [];\n            rgb2hsv(rgb1, hsv1);\n            rgb2hsv(rgb2, hsv2);\n            if (model.hSVWrap && (hsv1[0] - hsv2[0] > 0.5 || hsv2[0] - hsv1[0] > 0.5)) {\n              if (hsv1[0] > hsv2[0]) {\n                hsv1[0] -= 1.0;\n              } else {\n                hsv2[0] -= 1.0;\n              }\n            }\n            const hsvTmp = [];\n            hsvTmp[0] = (1.0 - s) * hsv1[0] + s * hsv2[0];\n            if (hsvTmp[0] < 0.0) {\n              hsvTmp[0] += 1.0;\n            }\n            hsvTmp[1] = (1.0 - s) * hsv1[1] + s * hsv2[1];\n            hsvTmp[2] = (1.0 - s) * hsv1[2] + s * hsv2[2];\n\n            // Now convert this back to RGB\n            hsv2rgb(hsvTmp, tmpVec);\n            table[tidx] = tmpVec[0];\n            table[tidx + 1] = tmpVec[1];\n            table[tidx + 2] = tmpVec[2];\n          } else if (model.colorSpace === ColorSpace.LAB) {\n            const lab1 = [];\n            const lab2 = [];\n            rgb2lab(rgb1, lab1);\n            rgb2lab(rgb2, lab2);\n            const labTmp = [];\n            labTmp[0] = (1 - s) * lab1[0] + s * lab2[0];\n            labTmp[1] = (1 - s) * lab1[1] + s * lab2[1];\n            labTmp[2] = (1 - s) * lab1[2] + s * lab2[2];\n\n            // Now convert back to RGB\n            lab2rgb(labTmp, tmpVec);\n            table[tidx] = tmpVec[0];\n            table[tidx + 1] = tmpVec[1];\n            table[tidx + 2] = tmpVec[2];\n          } else if (model.colorSpace === ColorSpace.DIVERGING) {\n            vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, tmpVec);\n            table[tidx] = tmpVec[0];\n            table[tidx + 1] = tmpVec[1];\n            table[tidx + 2] = tmpVec[2];\n          } else {\n            vtkErrorMacro('ColorSpace set to invalid value.', model.colorSpace);\n          }\n          continue;\n        }\n\n        // We have a sharpness between [0.01, 0.99] - we will\n        // used a modified hermite curve interpolation where we\n        // derive the slope based on the sharpness, and we compress\n        // the curve non-linearly based on the sharpness\n\n        // First, we will adjust our position based on sharpness in\n        // order to make the curve sharper (closer to piecewise constant)\n        if (s < 0.5) {\n          s = 0.5 * (s * 2.0) ** (1.0 + 10.0 * sharpness);\n        } else if (s > 0.5) {\n          s = 1.0 - 0.5 * ((1.0 - s) * 2) ** (1 + 10.0 * sharpness);\n        }\n\n        // Compute some coefficients we will need for the hermite curve\n        const ss = s * s;\n        const sss = ss * s;\n        const h1 = 2.0 * sss - 3 * ss + 1;\n        const h2 = -2 * sss + 3 * ss;\n        const h3 = sss - 2 * ss + s;\n        const h4 = sss - ss;\n        let slope;\n        let t;\n        if (model.colorSpace === ColorSpace.RGB) {\n          for (let j = 0; j < 3; j++) {\n            // Use one slope for both end points\n            slope = rgb2[j] - rgb1[j];\n            t = (1.0 - sharpness) * slope;\n\n            // Compute the value\n            table[tidx + j] = h1 * rgb1[j] + h2 * rgb2[j] + h3 * t + h4 * t;\n          }\n        } else if (model.colorSpace === ColorSpace.HSV) {\n          const hsv1 = [];\n          const hsv2 = [];\n          rgb2hsv(rgb1, hsv1);\n          rgb2hsv(rgb2, hsv2);\n          if (model.hSVWrap && (hsv1[0] - hsv2[0] > 0.5 || hsv2[0] - hsv1[0] > 0.5)) {\n            if (hsv1[0] > hsv2[0]) {\n              hsv1[0] -= 1.0;\n            } else {\n              hsv2[0] -= 1.0;\n            }\n          }\n          const hsvTmp = [];\n          for (let j = 0; j < 3; j++) {\n            // Use one slope for both end points\n            slope = hsv2[j] - hsv1[j];\n            t = (1.0 - sharpness) * slope;\n\n            // Compute the value\n            hsvTmp[j] = h1 * hsv1[j] + h2 * hsv2[j] + h3 * t + h4 * t;\n            if (j === 0 && hsvTmp[j] < 0.0) {\n              hsvTmp[j] += 1.0;\n            }\n          }\n          // Now convert this back to RGB\n          hsv2rgb(hsvTmp, tmpVec);\n          table[tidx] = tmpVec[0];\n          table[tidx + 1] = tmpVec[1];\n          table[tidx + 2] = tmpVec[2];\n        } else if (model.colorSpace === ColorSpace.LAB) {\n          const lab1 = [];\n          const lab2 = [];\n          rgb2lab(rgb1, lab1);\n          rgb2lab(rgb2, lab2);\n          const labTmp = [];\n          for (let j = 0; j < 3; j++) {\n            // Use one slope for both end points\n            slope = lab2[j] - lab1[j];\n            t = (1.0 - sharpness) * slope;\n\n            // Compute the value\n            labTmp[j] = h1 * lab1[j] + h2 * lab2[j] + h3 * t + h4 * t;\n          }\n          // Now convert this back to RGB\n          lab2rgb(labTmp, tmpVec);\n          table[tidx] = tmpVec[0];\n          table[tidx + 1] = tmpVec[1];\n          table[tidx + 2] = tmpVec[2];\n        } else if (model.colorSpace === ColorSpace.DIVERGING) {\n          // I have not implemented proper interpolation by a hermite curve for\n          // the diverging color map, but I cannot think of a good use case for\n          // that anyway.\n          vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, tmpVec);\n          table[tidx] = tmpVec[0];\n          table[tidx + 1] = tmpVec[1];\n          table[tidx + 2] = tmpVec[2];\n        } else {\n          vtkErrorMacro('ColorSpace set to invalid value.');\n        }\n\n        // Final error check to make sure we don't go outside [0,1]\n        for (let j = 0; j < 3; j++) {\n          table[tidx + j] = table[tidx + j] < 0.0 ? 0.0 : table[tidx + j];\n          table[tidx + j] = table[tidx + j] > 1.0 ? 1.0 : table[tidx + j];\n        }\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getUint8Table = function (xStart, xEnd, size) {\n    let withAlpha = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    if (publicAPI.getMTime() <= model.buildTime && model.tableSize === size && model.tableWithAlpha !== withAlpha) {\n      return model.table;\n    }\n    if (model.nodes.length === 0) {\n      vtkErrorMacro('Attempting to lookup a value with no points in the function');\n      return model.table;\n    }\n    const nbChannels = withAlpha ? 4 : 3;\n    if (model.tableSize !== size || model.tableWithAlpha !== withAlpha) {\n      model.table = new Uint8Array(size * nbChannels);\n      model.tableSize = size;\n      model.tableWithAlpha = withAlpha;\n    }\n    const tmpTable = [];\n    publicAPI.getTable(xStart, xEnd, size, tmpTable);\n    for (let i = 0; i < size; i++) {\n      model.table[i * nbChannels + 0] = Math.floor(tmpTable[i * 3 + 0] * 255.0 + 0.5);\n      model.table[i * nbChannels + 1] = Math.floor(tmpTable[i * 3 + 1] * 255.0 + 0.5);\n      model.table[i * nbChannels + 2] = Math.floor(tmpTable[i * 3 + 2] * 255.0 + 0.5);\n      if (withAlpha) {\n        model.table[i * nbChannels + 3] = 255;\n      }\n    }\n    model.buildTime.modified();\n    return model.table;\n  };\n  publicAPI.buildFunctionFromArray = array => {\n    publicAPI.removeAllPoints();\n    const numComponents = array.getNumberOfComponents();\n    for (let i = 0; i < array.getNumberOfTuples(); i++) {\n      switch (numComponents) {\n        case 3:\n          {\n            model.nodes.push({\n              x: i,\n              r: array.getComponent(i, 0),\n              g: array.getComponent(i, 1),\n              b: array.getComponent(i, 2),\n              midpoint: 0.5,\n              sharpness: 0.0\n            });\n            break;\n          }\n        case 4:\n          {\n            model.nodes.push({\n              x: array.getComponent(i, 0),\n              r: array.getComponent(i, 1),\n              g: array.getComponent(i, 2),\n              b: array.getComponent(i, 3),\n              midpoint: 0.5,\n              sharpness: 0.0\n            });\n            break;\n          }\n        case 5:\n          {\n            model.nodes.push({\n              x: i,\n              r: array.getComponent(i, 0),\n              g: array.getComponent(i, 1),\n              b: array.getComponent(i, 2),\n              midpoint: array.getComponent(i, 4),\n              sharpness: array.getComponent(i, 5)\n            });\n            break;\n          }\n        case 6:\n          {\n            model.nodes.push({\n              x: array.getComponent(i, 0),\n              r: array.getComponent(i, 1),\n              g: array.getComponent(i, 2),\n              b: array.getComponent(i, 3),\n              midpoint: array.getComponent(i, 4),\n              sharpness: array.getComponent(i, 5)\n            });\n            break;\n          }\n      }\n    }\n    publicAPI.sortAndUpdateRange();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.buildFunctionFromTable = (xStart, xEnd, size, table) => {\n    let inc = 0.0;\n    publicAPI.removeAllPoints();\n    if (size > 1) {\n      inc = (xEnd - xStart) / (size - 1.0);\n    }\n    for (let i = 0; i < size; i++) {\n      const node = {\n        x: xStart + inc * i,\n        r: table[i * 3],\n        g: table[i * 3 + 1],\n        b: table[i * 3 + 2],\n        sharpness: 0.0,\n        midpoint: 0.5\n      };\n      model.nodes.push(node);\n    }\n    publicAPI.sortAndUpdateRange();\n  };\n\n  //----------------------------------------------------------------------------\n  // For a specified index value, get the node parameters\n  publicAPI.getNodeValue = (index, val) => {\n    if (index < 0 || index >= model.nodes.length) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n    val[0] = model.nodes[index].x;\n    val[1] = model.nodes[index].r;\n    val[2] = model.nodes[index].g;\n    val[3] = model.nodes[index].b;\n    val[4] = model.nodes[index].midpoint;\n    val[5] = model.nodes[index].sharpness;\n    return 1;\n  };\n\n  //----------------------------------------------------------------------------\n  // For a specified index value, get the node parameters\n  publicAPI.setNodeValue = (index, val) => {\n    if (index < 0 || index >= model.nodes.length) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n    const oldX = model.nodes[index].x;\n    model.nodes[index].x = val[0];\n    model.nodes[index].r = val[1];\n    model.nodes[index].g = val[2];\n    model.nodes[index].b = val[3];\n    model.nodes[index].midpoint = val[4];\n    model.nodes[index].sharpness = val[5];\n    if (oldX !== val[0]) {\n      // The point has been moved, the order of points or the range might have\n      // been modified.\n      publicAPI.sortAndUpdateRange();\n      // No need to call Modified() here because SortAndUpdateRange() has done it\n      // already.\n    } else {\n      publicAPI.modified();\n    }\n    return 1;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getNumberOfAvailableColors = () => {\n    if (model.indexedLookup && publicAPI.getSize()) {\n      return publicAPI.getSize();\n    }\n    if (model.tableSize) {\n      // Not sure if this is correct since it is only set if\n      // \"const unsigned char *::GetTable(double xStart, double xEnd,int size)\"\n      // has been called.\n      return model.tableSize;\n    }\n    const nNodes = model.nodes?.length ?? 0;\n    // The minimum is 4094 colors so that it fills in the 4096 texels texture in `mapScalarsToTexture`\n    return Math.max(4094, nNodes);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getIndexedColor = (idx, rgba) => {\n    const n = publicAPI.getSize();\n    if (n > 0 && idx >= 0) {\n      const nodeValue = [];\n      publicAPI.getNodeValue(idx % n, nodeValue);\n      for (let j = 0; j < 3; ++j) {\n        rgba[j] = nodeValue[j + 1];\n      }\n      rgba[3] = 1.0; // NodeColor is RGB-only.\n      return;\n    }\n    const nanColor = publicAPI.getNanColorByReference();\n    rgba[0] = nanColor[0];\n    rgba[1] = nanColor[1];\n    rgba[2] = nanColor[2];\n    rgba[3] = 1.0; // NanColor is RGB-only.\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.fillFromDataPointer = (nb, ptr) => {\n    if (nb <= 0 || !ptr) {\n      return;\n    }\n    publicAPI.removeAllPoints();\n    for (let i = 0; i < nb; i++) {\n      publicAPI.addRGBPoint(ptr[i * 4], ptr[i * 4 + 1], ptr[i * 4 + 2], ptr[i * 4 + 3]);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.setMappingRange = (min, max) => {\n    const range = [min, max];\n    const originalRange = publicAPI.getRange();\n    if (originalRange[1] === range[1] && originalRange[0] === range[0]) {\n      return;\n    }\n    if (range[1] === range[0]) {\n      vtkErrorMacro('attempt to set zero width color range');\n      return;\n    }\n    const scale = (range[1] - range[0]) / (originalRange[1] - originalRange[0]);\n    const shift = range[0] - originalRange[0] * scale;\n    for (let i = 0; i < model.nodes.length; ++i) {\n      model.nodes[i].x = model.nodes[i].x * scale + shift;\n    }\n    model.mappingRange[0] = range[0];\n    model.mappingRange[1] = range[1];\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.adjustRange = range => {\n    const functionRange = publicAPI.getRange();\n\n    // Make sure we have points at each end of the range\n    const rgb = [];\n    if (functionRange[0] < range[0]) {\n      publicAPI.getColor(range[0], rgb);\n      publicAPI.addRGBPoint(range[0], rgb[0], rgb[1], rgb[2]);\n    } else {\n      publicAPI.getColor(functionRange[0], rgb);\n      publicAPI.addRGBPoint(range[0], rgb[0], rgb[1], rgb[2]);\n    }\n    if (functionRange[1] > range[1]) {\n      publicAPI.getColor(range[1], rgb);\n      publicAPI.addRGBPoint(range[1], rgb[0], rgb[1], rgb[2]);\n    } else {\n      publicAPI.getColor(functionRange[1], rgb);\n      publicAPI.addRGBPoint(range[1], rgb[0], rgb[1], rgb[2]);\n    }\n\n    // Remove all points out-of-range\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length;) {\n      if (model.nodes[i].x >= range[0] && model.nodes[i].x <= range[1]) {\n        model.nodes.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n    return 1;\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.estimateMinNumberOfSamples = (x1, x2) => {\n    const d = publicAPI.findMinimumXDistance();\n    return Math.ceil((x2 - x1) / d);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.findMinimumXDistance = () => {\n    if (model.nodes.length < 2) {\n      return -1.0;\n    }\n    let distance = Number.MAX_VALUE;\n    for (let i = 0; i < model.nodes.length - 1; i++) {\n      const currentDist = model.nodes[i + 1].x - model.nodes[i].x;\n      if (currentDist < distance) {\n        distance = currentDist;\n      }\n    }\n    return distance;\n  };\n  publicAPI.mapScalarsThroughTable = (input, output, outFormat, inputOffset) => {\n    if (publicAPI.getSize() === 0) {\n      vtkDebugMacro('Transfer Function Has No Points!');\n      return;\n    }\n    if (model.indexedLookup) {\n      publicAPI.mapDataIndexed(input, output, outFormat, inputOffset);\n    } else {\n      publicAPI.mapData(input, output, outFormat, inputOffset);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.mapData = (input, output, outFormat, inputOffset) => {\n    if (publicAPI.getSize() === 0) {\n      vtkWarningMacro('Transfer Function Has No Points!');\n      return;\n    }\n    const alpha = Math.floor(publicAPI.getAlpha() * 255.0 + 0.5);\n    const length = input.getNumberOfTuples();\n    const inIncr = input.getNumberOfComponents();\n    const outputV = output.getData();\n    const inputV = input.getData();\n    const rgb = [];\n    if (outFormat === ScalarMappingTarget.RGBA) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i * 4] = Math.floor(rgb[0] * 255.0 + 0.5);\n        outputV[i * 4 + 1] = Math.floor(rgb[1] * 255.0 + 0.5);\n        outputV[i * 4 + 2] = Math.floor(rgb[2] * 255.0 + 0.5);\n        outputV[i * 4 + 3] = alpha;\n      }\n    }\n    if (outFormat === ScalarMappingTarget.RGB) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i * 3] = Math.floor(rgb[0] * 255.0 + 0.5);\n        outputV[i * 3 + 1] = Math.floor(rgb[1] * 255.0 + 0.5);\n        outputV[i * 3 + 2] = Math.floor(rgb[2] * 255.0 + 0.5);\n      }\n    }\n    if (outFormat === ScalarMappingTarget.LUMINANCE) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i] = Math.floor(rgb[0] * 76.5 + rgb[1] * 150.45 + rgb[2] * 28.05 + 0.5);\n      }\n    }\n    if (outFormat === ScalarMappingTarget.LUMINANCE_ALPHA) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i * 2] = Math.floor(rgb[0] * 76.5 + rgb[1] * 150.45 + rgb[2] * 28.05 + 0.5);\n        outputV[i * 2 + 1] = alpha;\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.applyColorMap = colorMap => {\n    const oldColorSpace = JSON.stringify(model.colorSpace);\n    if (colorMap.ColorSpace) {\n      model.colorSpace = ColorSpace[colorMap.ColorSpace.toUpperCase()];\n      if (model.colorSpace === undefined) {\n        vtkErrorMacro(`ColorSpace ${colorMap.ColorSpace} not supported, using RGB instead`);\n        model.colorSpace = ColorSpace.RGB;\n      }\n    }\n    let isModified = oldColorSpace !== JSON.stringify(model.colorSpace);\n    const oldNanColor = isModified || JSON.stringify(model.nanColor);\n    if (colorMap.NanColor) {\n      model.nanColor = [].concat(colorMap.NanColor);\n      while (model.nanColor.length < 4) {\n        model.nanColor.push(1.0);\n      }\n    }\n    isModified = isModified || oldNanColor !== JSON.stringify(model.nanColor);\n    const oldNodes = isModified || JSON.stringify(model.nodes);\n    if (colorMap.RGBPoints) {\n      const size = colorMap.RGBPoints.length;\n      model.nodes = [];\n      const midpoint = 0.5;\n      const sharpness = 0.0;\n      for (let i = 0; i < size; i += 4) {\n        model.nodes.push({\n          x: colorMap.RGBPoints[i],\n          r: colorMap.RGBPoints[i + 1],\n          g: colorMap.RGBPoints[i + 2],\n          b: colorMap.RGBPoints[i + 3],\n          midpoint,\n          sharpness\n        });\n      }\n    }\n    const modifiedInvoked = publicAPI.sortAndUpdateRange();\n    const callModified = !modifiedInvoked && (isModified || oldNodes !== JSON.stringify(model.nodes));\n    if (callModified) publicAPI.modified();\n    return modifiedInvoked || callModified;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  clamping: true,\n  colorSpace: ColorSpace.RGB,\n  hSVWrap: true,\n  scale: Scale.LINEAR,\n  nanColor: null,\n  belowRangeColor: null,\n  aboveRangeColor: null,\n  useAboveRangeColor: false,\n  useBelowRangeColor: false,\n  allowDuplicateScalars: false,\n  table: null,\n  tableSize: 0,\n  buildTime: null,\n  nodes: null,\n  discretize: false,\n  numberOfValues: 256\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkScalarsToColors.extend(publicAPI, model, initialValues);\n\n  // Internal objects initialization\n  model.table = [];\n  model.nodes = [];\n  model.nanColor = [0.5, 0.0, 0.0, 1.0];\n  model.belowRangeColor = [0.0, 0.0, 0.0, 1.0];\n  model.aboveRangeColor = [1.0, 1.0, 1.0, 1.0];\n  model.buildTime = {};\n  macro.obj(model.buildTime);\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['buildTime', 'mappingRange']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['useAboveRangeColor', 'useBelowRangeColor', 'discretize', 'numberOfValues', {\n    type: 'enum',\n    name: 'colorSpace',\n    enum: ColorSpace\n  }, {\n    type: 'enum',\n    name: 'scale',\n    enum: Scale\n  }]);\n  macro.setArray(publicAPI, model, ['nanColor', 'belowRangeColor', 'aboveRangeColor'], 4);\n\n  // Create get macros for array\n  macro.getArray(publicAPI, model, ['nanColor', 'belowRangeColor', 'aboveRangeColor']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkColorTransferFunction(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkColorTransferFunction');\n\n// ----------------------------------------------------------------------------\n\nvar vtkColorTransferFunction$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkColorTransferFunction$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport { d as dot, s as subtract, j as cross, w as multiplyScalar, k as add } from '../../Common/Core/Math/index.js';\nimport vtkAbstractManipulator from './AbstractManipulator.js';\nimport { EPSILON } from '../../Common/Core/Math/Constants.js';\n\nfunction projectDisplayToLine(x, y, lineOrigin, lineDirection, renderer, glRenderWindow) {\n  // if the active camera viewPlaneNormal and line direction are parallel, no change is allowed\n  const dotProduct = Math.abs(dot(renderer.getActiveCamera().getViewPlaneNormal(), lineDirection));\n  if (1 - dotProduct < EPSILON) {\n    return [];\n  }\n  const near = glRenderWindow.displayToWorld(x, y, 0, renderer);\n  const far = glRenderWindow.displayToWorld(x, y, 1, renderer);\n  const viewDir = [0, 0, 0];\n  subtract(far, near, viewDir);\n  const normal = [0, 0, 0];\n  cross(lineDirection, viewDir, normal);\n  cross(normal, viewDir, normal);\n  const numerator = dot([near[0] - lineOrigin[0], near[1] - lineOrigin[1], near[2] - lineOrigin[2]], normal);\n  const denominator = dot(normal, lineDirection);\n  const result = lineDirection.slice();\n  if (denominator === 0) {\n    // no change is allowed\n    multiplyScalar(result, 0);\n  } else {\n    multiplyScalar(result, numerator / denominator);\n  }\n  add(lineOrigin, result, result);\n  return result;\n}\n\n// ----------------------------------------------------------------------------\n// vtkLineManipulator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLineManipulator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLineManipulator');\n  publicAPI.handleEvent = (callData, glRenderWindow) => model._addWorldDeltas({\n    worldCoords: projectDisplayToLine(callData.position.x, callData.position.y, publicAPI.getOrigin(callData), publicAPI.getNormal(callData), callData.pokedRenderer, glRenderWindow)\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nfunction defaultValues(initialValues) {\n  return {\n    ...initialValues\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  vtkAbstractManipulator.extend(publicAPI, model, defaultValues(initialValues));\n  vtkLineManipulator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkLineManipulator');\n\n// ----------------------------------------------------------------------------\n\nvar vtkLineManipulator$1 = {\n  projectDisplayToLine,\n  extend,\n  newInstance\n};\n\nexport { vtkLineManipulator$1 as default, extend, newInstance, projectDisplayToLine };\n","import { m as macro } from '../../macros2.js';\nimport vtkActor from '../../Rendering/Core/Actor.js';\nimport vtkContextRepresentation from './ContextRepresentation.js';\nimport vtkMapper from '../../Rendering/Core/Mapper.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport { origin } from './GlyphRepresentation.js';\nimport { allocateArray } from './WidgetRepresentation.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// prettier-ignore\nconst OUTLINE_ARRAY = [2, 0, 1, 2, 0, 2, 2, 0, 4, 2, 1, 3, 2, 1, 5, 2, 2, 3, 2, 2, 6, 2, 3, 7, 2, 4, 5, 2, 4, 6, 2, 5, 7, 2, 6, 7];\n\n// ----------------------------------------------------------------------------\n// vtkCroppingOutlineRepresentation methods\n// ----------------------------------------------------------------------------\n\n// Represents a box outline given 8 points as corners.\n// Does not work with an arbitrary set of points. An oriented bounding box\n// algorithm may be implemented in the future.\nfunction vtkCroppingOutlineRepresentation(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCroppingOutlineRepresentation');\n\n  // --------------------------------------------------------------------------\n  // Internal polydata dataset\n  // --------------------------------------------------------------------------\n\n  model.internalPolyData = vtkPolyData.newInstance({\n    mtime: 0\n  });\n  allocateArray(model.internalPolyData, 'lines', OUTLINE_ARRAY.length).getData().set(OUTLINE_ARRAY);\n  const applyOrigin = origin(publicAPI, model);\n\n  // --------------------------------------------------------------------------\n  // Generic rendering pipeline\n  // --------------------------------------------------------------------------\n\n  model.mapper = vtkMapper.newInstance({\n    scalarVisibility: false\n  });\n  model.actor = vtkActor.newInstance({\n    parentProp: publicAPI\n  });\n  model.actor.getProperty().setEdgeColor(...model.edgeColor);\n  model.mapper.setInputConnection(publicAPI.getOutputPort());\n  model.actor.setMapper(model.mapper);\n  publicAPI.addActor(model.actor);\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.requestData = (inData, outData) => {\n    const list = publicAPI.getRepresentationStates(inData[0]).filter(state => state.getOrigin && state.getOrigin());\n    if (list.length === 8) {\n      applyOrigin(model.internalPolyData, list);\n      model.internalPolyData.getPoints().modified();\n      model.internalPolyData.modified();\n      outData[0] = model.internalPolyData;\n    } else {\n      vtkErrorMacro('CroppingOutlineRepresentation did not get 8 states');\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  edgeColor: [1, 1, 1]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkContextRepresentation.extend(publicAPI, model, initialValues);\n  macro.setGetArray(publicAPI, model, ['edgeColor'], 3);\n  macro.get(publicAPI, model, ['mapper', 'actor']);\n\n  // Object specific methods\n  vtkCroppingOutlineRepresentation(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkCroppingOutlineRepresentation');\n\n// ----------------------------------------------------------------------------\n\nvar vtkCroppingOutlineRepresentation$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkCroppingOutlineRepresentation$1 as default, extend, newInstance };\n","import { vec3, quat, mat4 } from 'gl-matrix';\n\n// Labels used to encode handle position in the handle state's name property\nconst AXES = ['-', '=', '+'];\n\n// ----------------------------------------------------------------------------\n\nfunction transformVec3(ain, transform) {\n  const vout = new Float64Array(3);\n  vec3.transformMat4(vout, ain, transform);\n  return vout;\n}\n\n// ----------------------------------------------------------------------------\n\nfunction rotateVec3(vec, transform) {\n  // transform is a mat4\n  const out = vec3.create();\n  const q = quat.create();\n  mat4.getRotation(q, transform);\n  vec3.transformQuat(out, vec, q);\n  return out;\n}\n\n// ----------------------------------------------------------------------------\n\nfunction handleTypeFromName(name) {\n  const [i, j, k] = name.split('').map(l => AXES.indexOf(l) - 1);\n  if (i * j * k !== 0) {\n    return 'corners';\n  }\n  if (i * j !== 0 || j * k !== 0 || k * i !== 0) {\n    return 'edges';\n  }\n  return 'faces';\n}\nfunction calculateCropperCenter(planes, transform) {\n  // get center of current crop box\n  const center = [(planes[0] + planes[1]) / 2, (planes[2] + planes[3]) / 2, (planes[4] + planes[5]) / 2];\n  return transformVec3(center, transform);\n}\nfunction calculateDirection(v1, v2) {\n  const direction = vec3.create();\n  vec3.subtract(direction, v1, v2);\n  vec3.normalize(direction, direction);\n  return direction;\n}\n\nexport { AXES, calculateCropperCenter, calculateDirection, handleTypeFromName, rotateVec3, transformVec3 };\n","import { m as macro } from '../../../macros2.js';\nimport { k as add } from '../../../Common/Core/Math/index.js';\nimport { handleTypeFromName, AXES, calculateCropperCenter, calculateDirection, transformVec3 } from './helpers.js';\n\nfunction widgetBehavior(publicAPI, model) {\n  model._isDragging = false;\n  publicAPI.setDisplayCallback = callback => model.representations[0].setDisplayCallback(callback);\n  publicAPI.handleLeftButtonPress = callData => {\n    if (!model.activeState || !model.activeState.getActive() || !model.pickable) {\n      return macro.VOID;\n    }\n    if (model.dragable) {\n      // updates worldDelta\n      model.activeState.getManipulator().handleEvent(callData, model._apiSpecificRenderWindow);\n      model._isDragging = true;\n      model._apiSpecificRenderWindow.setCursor('grabbing');\n      model._interactor.requestAnimation(publicAPI);\n    }\n    return macro.EVENT_ABORT;\n  };\n  publicAPI.handleMouseMove = callData => {\n    if (model._isDragging) {\n      return publicAPI.handleEvent(callData);\n    }\n    return macro.VOID;\n  };\n  publicAPI.handleLeftButtonRelease = () => {\n    if (!model.activeState || !model.activeState.getActive() || !model.pickable) {\n      return macro.VOID;\n    }\n    if (model._isDragging) {\n      model._isDragging = false;\n      model._interactor.cancelAnimation(publicAPI);\n      model.widgetState.deactivate();\n    }\n    return macro.EVENT_ABORT;\n  };\n  publicAPI.handleEvent = callData => {\n    if (model.pickable && model.activeState && model.activeState.getActive()) {\n      const manipulator = model.activeState.getManipulator();\n      if (manipulator) {\n        const name = model.activeState.getName();\n        const type = handleTypeFromName(name);\n        const index = name.split('').map(l => AXES.indexOf(l));\n        const planes = model.widgetState.getCroppingPlanes().getPlanes();\n        const indexToWorldT = model.widgetState.getIndexToWorldT();\n        let worldCoords = [];\n        let worldDelta = [];\n        if (type === 'corners') {\n          // manipulator should be a plane manipulator\n          ({\n            worldCoords,\n            worldDelta\n          } = manipulator.handleEvent(callData, model._apiSpecificRenderWindow));\n        }\n        if (type === 'faces') {\n          // get center of current crop box\n          const worldCenter = calculateCropperCenter(planes, indexToWorldT);\n          manipulator.setHandleOrigin(worldCenter);\n          manipulator.setHandleNormal(calculateDirection(model.activeState.getOrigin(), worldCenter));\n          ({\n            worldCoords,\n            worldDelta\n          } = manipulator.handleEvent(callData, model._apiSpecificRenderWindow));\n        }\n        if (type === 'edges') {\n          // constrain to a plane with a normal parallel to the edge\n          const edgeAxis = index.map(a => a === 1 ? a : 0);\n          const faceName = edgeAxis.map(i => AXES[i + 1]).join('');\n          const handle = model.widgetState.getStatesWithLabel(faceName)[0];\n          // get center of current crop box\n          const worldCenter = calculateCropperCenter(planes, indexToWorldT);\n          manipulator.setHandleNormal(calculateDirection(handle.getOrigin(), worldCenter));\n          ({\n            worldCoords,\n            worldDelta\n          } = manipulator.handleEvent(callData, model._apiSpecificRenderWindow));\n        }\n        if (worldCoords.length && worldDelta.length) {\n          // transform worldCoords to indexCoords, and then update the croppingPlanes() state with setPlanes().\n          const worldToIndexT = model.widgetState.getWorldToIndexT();\n          const indexCoords = transformVec3(worldCoords, worldToIndexT);\n          for (let i = 0; i < 3; i++) {\n            if (index[i] === 0) {\n              planes[i * 2] = indexCoords[i];\n            } else if (index[i] === 2) {\n              planes[i * 2 + 1] = indexCoords[i];\n            }\n          }\n          model.activeState.setOrigin(add(model.activeState.getOrigin(), worldDelta, []));\n          model.widgetState.getCroppingPlanes().setPlanes(...planes);\n          return macro.EVENT_ABORT;\n        }\n      }\n    }\n    return macro.VOID;\n  };\n\n  // --------------------------------------------------------------------------\n  // initialization\n  // --------------------------------------------------------------------------\n\n  model._camera = model._renderer.getActiveCamera();\n  model.classHierarchy.push('vtkImageCroppingWidgetProp');\n}\n\nexport { widgetBehavior as default };\n","import vtkStateBuilder from '../../Core/StateBuilder.js';\nimport { AXES, handleTypeFromName } from './helpers.js';\n\nfunction build() {\n  // create our state builder\n  const builder = vtkStateBuilder.createBuilder();\n\n  // add image data description fields\n  builder.addField({\n    name: 'indexToWorldT',\n    initialValue: Array(16).fill(0)\n  }).addField({\n    name: 'worldToIndexT',\n    initialValue: Array(16).fill(0)\n  });\n\n  // make cropping planes a sub-state so we can listen to it\n  // separately from the rest of the widget state.\n  const croppingState = vtkStateBuilder.createBuilder().addField({\n    name: 'planes',\n    // index space\n    initialValue: [0, 1, 0, 1, 0, 1]\n  }).build();\n\n  // add cropping planes state to our primary state\n  builder.addStateFromInstance({\n    labels: ['croppingPlanes'],\n    name: 'croppingPlanes',\n    instance: croppingState\n  });\n\n  // add all handle states\n  // default bounds is [-1, 1] in all dimensions\n  for (let i = -1; i < 2; i++) {\n    for (let j = -1; j < 2; j++) {\n      for (let k = -1; k < 2; k++) {\n        // skip center of box\n        if (i !== 0 || j !== 0 || k !== 0) {\n          const name = AXES[i + 1] + AXES[j + 1] + AXES[k + 1];\n          const type = handleTypeFromName(name);\n\n          // since handle states are rendered via vtkSphereHandleRepresentation,\n          // we can dictate the handle origin, size (scale1), color, and visibility.\n          builder.addStateFromMixin({\n            labels: ['handles', name, type],\n            mixins: ['name', 'origin', 'color', 'scale1', 'visible', 'manipulator'],\n            name,\n            initialValues: {\n              scale1: 30,\n              origin: [i, j, k],\n              visible: true,\n              name\n            }\n          });\n        }\n      }\n    }\n  }\n  return builder.build();\n}\n\nexport { build as default };\n","import { m as macro } from '../../macros2.js';\nimport vtkAbstractWidgetFactory from '../Core/AbstractWidgetFactory.js';\nimport vtkPlanePointManipulator from '../Manipulators/PlaneManipulator.js';\nimport vtkLineManipulator from '../Manipulators/LineManipulator.js';\nimport vtkSphereHandleRepresentation from '../Representations/SphereHandleRepresentation.js';\nimport vtkCroppingOutlineRepresentation from '../Representations/CroppingOutlineRepresentation.js';\nimport widgetBehavior from './ImageCroppingWidget/behavior.js';\nimport build from './ImageCroppingWidget/state.js';\nimport { transformVec3, AXES } from './ImageCroppingWidget/helpers.js';\nimport { ViewTypes } from '../Core/WidgetManager/Constants.js';\n\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// Factory\n// ----------------------------------------------------------------------------\n\nfunction vtkImageCroppingWidget(publicAPI, model) {\n  model.classHierarchy.push('vtkImageCroppingWidget');\n  const superClass = {\n    ...publicAPI\n  };\n  let stateSub = null;\n\n  // --------------------------------------------------------------------------\n\n  function setHandlesEnabled(label, flag) {\n    model.widgetState.getStatesWithLabel(label).forEach(handle => {\n      handle.setVisible(flag);\n    });\n  }\n\n  // Set the visibility of the three classes of handles: face, edge, corner\n  publicAPI.setFaceHandlesEnabled = flag => setHandlesEnabled('faces', flag);\n  publicAPI.setEdgeHandlesEnabled = flag => setHandlesEnabled('edges', flag);\n  publicAPI.setCornerHandlesEnabled = flag => setHandlesEnabled('corners', flag);\n\n  // --------------------------------------------------------------------------\n\n  // Copies the transforms and dimension of a vtkImageData\n  publicAPI.copyImageDataDescription = im => {\n    model.widgetState.setIndexToWorldT(...im.getIndexToWorld());\n    model.widgetState.setWorldToIndexT(...im.getWorldToIndex());\n    const dims = im.getDimensions();\n    const planeState = model.widgetState.getCroppingPlanes();\n    planeState.setPlanes([0, dims[0], 0, dims[1], 0, dims[2]]);\n    publicAPI.modified();\n  };\n\n  // --------------------------------------------------------------------------\n\n  // Updates handle positions based on cropping planes\n  publicAPI.updateHandles = () => {\n    const planes = model.widgetState.getCroppingPlanes().getPlanes();\n    const midpts = [(planes[0] + planes[1]) / 2, (planes[2] + planes[3]) / 2, (planes[4] + planes[5]) / 2];\n    const iAxis = [planes[0], midpts[0], planes[1]];\n    const jAxis = [planes[2], midpts[1], planes[3]];\n    const kAxis = [planes[4], midpts[2], planes[5]];\n    const indexToWorldT = model.widgetState.getIndexToWorldT();\n    const getAxis = a => AXES[a];\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        for (let k = 0; k < 3; k++) {\n          // skip center of box\n          if (i !== 1 || j !== 1 || k !== 1) {\n            const name = [i, j, k].map(getAxis).join('');\n            const coord = transformVec3([iAxis[i], jAxis[j], kAxis[k]], indexToWorldT);\n            const [handle] = model.widgetState.getStatesWithLabel(name);\n            handle.setOrigin(...coord);\n          }\n        }\n      }\n    }\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.delete = macro.chain(publicAPI.delete, () => {\n    if (stateSub) {\n      stateSub.unsubscribe();\n    }\n  });\n\n  // --- Widget Requirement ---------------------------------------------------\n\n  model.methodsToLink = ['scaleInPixels'];\n\n  // Given a view type (geometry, slice, volume), return a description\n  // of what representations to create and what widget state to pass\n  // to the respective representations.\n  publicAPI.getRepresentationsForViewType = viewType => {\n    switch (viewType) {\n      case ViewTypes.DEFAULT:\n      case ViewTypes.GEOMETRY:\n      case ViewTypes.SLICE:\n      case ViewTypes.VOLUME:\n      default:\n        return [\n        // Describes constructing a vtkSphereHandleRepresentation, and every\n        // time the widget state updates, we will give the representation\n        // a list of all handle states (which have the label \"handles\").\n        {\n          builder: vtkSphereHandleRepresentation,\n          labels: ['handles']\n        }, {\n          builder: vtkCroppingOutlineRepresentation,\n          // outline is defined by corner points\n          labels: ['corners']\n        }];\n    }\n  };\n\n  // Update handle positions when cropping planes update\n  stateSub = model.widgetState.getCroppingPlanes().onModified(publicAPI.updateHandles);\n  publicAPI.setCornerManipulator = manipulator => {\n    superClass.setCornerManipulator(manipulator);\n    model.widgetState.getStatesWithLabel('corners').forEach(handle => handle.setManipulator(manipulator));\n  };\n  publicAPI.setEdgeManipulator = manipulator => {\n    superClass.setEdgeManipulator(manipulator);\n    model.widgetState.getStatesWithLabel('edges').forEach(handle => handle.setManipulator(manipulator));\n  };\n  publicAPI.setFaceManipulator = manipulator => {\n    superClass.setFaceManipulator(manipulator);\n    model.widgetState.getStatesWithLabel('faces').forEach(handle => handle.setManipulator(manipulator));\n  };\n\n  // --------------------------------------------------------------------------\n  // initialization\n  // --------------------------------------------------------------------------\n\n  publicAPI.setCornerManipulator(vtkPlanePointManipulator.newInstance({\n    useCameraNormal: true\n  }));\n  publicAPI.setEdgeManipulator(vtkPlanePointManipulator.newInstance());\n  publicAPI.setFaceManipulator(vtkLineManipulator.newInstance());\n}\n\n// ----------------------------------------------------------------------------\n\nconst defaultValues = initialValues => ({\n  // cornerManipulator: null,\n  // edgeManipulator: null,\n  // faceManipulator: null,\n  behavior: widgetBehavior,\n  widgetState: build(),\n  ...initialValues\n});\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, defaultValues(initialValues));\n  vtkAbstractWidgetFactory.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['cornerManipulator', 'edgeManipulator', 'faceManipulator']);\n  vtkImageCroppingWidget(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageCroppingWidget');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageCroppingWidget$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkImageCroppingWidget$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkColorTransferFunction from './ColorTransferFunction.js';\nimport vtkPiecewiseFunction from '../../Common/DataModel/PiecewiseFunction.js';\nimport Constants from './VolumeProperty/Constants.js';\n\nconst {\n  InterpolationType,\n  OpacityMode\n} = Constants;\nconst {\n  vtkErrorMacro\n} = macro;\nconst VTK_MAX_VRCOMP = 4;\n\n// ----------------------------------------------------------------------------\n// vtkVolumeProperty methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolumeProperty(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolumeProperty');\n  publicAPI.getMTime = () => {\n    let mTime = model.mtime;\n    let time;\n    for (let index = 0; index < VTK_MAX_VRCOMP; index++) {\n      // Color MTimes\n      if (model.componentData[index].colorChannels === 1) {\n        if (model.componentData[index].grayTransferFunction) {\n          // time that Gray transfer function was last modified\n          time = model.componentData[index].grayTransferFunction.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      } else if (model.componentData[index].colorChannels === 3) {\n        if (model.componentData[index].rGBTransferFunction) {\n          // time that RGB transfer function was last modified\n          time = model.componentData[index].rGBTransferFunction.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      }\n\n      // Opacity MTimes\n      if (model.componentData[index].scalarOpacity) {\n        // time that Scalar opacity transfer function was last modified\n        time = model.componentData[index].scalarOpacity.getMTime();\n        mTime = mTime > time ? mTime : time;\n      }\n      if (model.componentData[index].gradientOpacity) {\n        if (!model.componentData[index].disableGradientOpacity) {\n          // time that Gradient opacity transfer function was last modified\n          time = model.componentData[index].gradientOpacity.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      }\n    }\n    return mTime;\n  };\n  publicAPI.getColorChannels = index => {\n    if (index < 0 || index > 3) {\n      vtkErrorMacro('Bad index - must be between 0 and 3');\n      return 0;\n    }\n    return model.componentData[index].colorChannels;\n  };\n\n  // Set the color of a volume to a gray transfer function\n  publicAPI.setGrayTransferFunction = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let func = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let modified = false;\n    if (model.componentData[index].grayTransferFunction !== func) {\n      model.componentData[index].grayTransferFunction = func;\n      modified = true;\n    }\n    if (model.componentData[index].colorChannels !== 1) {\n      model.componentData[index].colorChannels = 1;\n      modified = true;\n    }\n    if (modified) {\n      publicAPI.modified();\n    }\n    return modified;\n  };\n\n  // Get the currently set gray transfer function. Create one if none set.\n  publicAPI.getGrayTransferFunction = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (model.componentData[index].grayTransferFunction === null) {\n      model.componentData[index].grayTransferFunction = vtkPiecewiseFunction.newInstance();\n      model.componentData[index].grayTransferFunction.addPoint(0, 0.0);\n      model.componentData[index].grayTransferFunction.addPoint(1024, 1.0);\n      if (model.componentData[index].colorChannels !== 1) {\n        model.componentData[index].colorChannels = 1;\n      }\n      publicAPI.modified();\n    }\n    return model.componentData[index].grayTransferFunction;\n  };\n\n  // Set the color of a volume to an RGB transfer function\n  publicAPI.setRGBTransferFunction = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let func = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let modified = false;\n    if (model.componentData[index].rGBTransferFunction !== func) {\n      model.componentData[index].rGBTransferFunction = func;\n      modified = true;\n    }\n    if (model.componentData[index].colorChannels !== 3) {\n      model.componentData[index].colorChannels = 3;\n      modified = true;\n    }\n    if (modified) {\n      publicAPI.modified();\n    }\n    return modified;\n  };\n\n  // Get the currently set RGB transfer function. Create one if none set.\n  publicAPI.getRGBTransferFunction = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (model.componentData[index].rGBTransferFunction === null) {\n      model.componentData[index].rGBTransferFunction = vtkColorTransferFunction.newInstance();\n      model.componentData[index].rGBTransferFunction.addRGBPoint(0, 0.0, 0.0, 0.0);\n      model.componentData[index].rGBTransferFunction.addRGBPoint(1024, 1.0, 1.0, 1.0);\n      if (model.componentData[index].colorChannels !== 3) {\n        model.componentData[index].colorChannels = 3;\n      }\n      publicAPI.modified();\n    }\n    return model.componentData[index].rGBTransferFunction;\n  };\n\n  // Set the scalar opacity of a volume to a transfer function\n  publicAPI.setScalarOpacity = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let func = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (model.componentData[index].scalarOpacity !== func) {\n      model.componentData[index].scalarOpacity = func;\n      publicAPI.modified();\n      return true;\n    }\n    return false;\n  };\n\n  // Get the scalar opacity transfer function. Create one if none set.\n  publicAPI.getScalarOpacity = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (model.componentData[index].scalarOpacity === null) {\n      model.componentData[index].scalarOpacity = vtkPiecewiseFunction.newInstance();\n      model.componentData[index].scalarOpacity.addPoint(0, 1.0);\n      model.componentData[index].scalarOpacity.addPoint(1024, 1.0);\n      publicAPI.modified();\n    }\n    return model.componentData[index].scalarOpacity;\n  };\n  publicAPI.setComponentWeight = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return false;\n    }\n    const val = Math.min(1, Math.max(0, value));\n    if (model.componentData[index].componentWeight !== val) {\n      model.componentData[index].componentWeight = val;\n      publicAPI.modified();\n      return true;\n    }\n    return false;\n  };\n  publicAPI.getComponentWeight = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return 0.0;\n    }\n    return model.componentData[index].componentWeight;\n  };\n  publicAPI.setInterpolationTypeToNearest = () => publicAPI.setInterpolationType(InterpolationType.NEAREST);\n  publicAPI.setInterpolationTypeToLinear = () => publicAPI.setInterpolationType(InterpolationType.LINEAR);\n  publicAPI.setInterpolationTypeToFastLinear = () => publicAPI.setInterpolationType(InterpolationType.FAST_LINEAR);\n  publicAPI.getInterpolationTypeAsString = () => macro.enumToString(InterpolationType, model.interpolationType);\n  const sets = ['useGradientOpacity', 'scalarOpacityUnitDistance', 'gradientOpacityMinimumValue', 'gradientOpacityMinimumOpacity', 'gradientOpacityMaximumValue', 'gradientOpacityMaximumOpacity', 'opacityMode', 'forceNearestInterpolation'];\n  sets.forEach(val => {\n    const cap = macro.capitalize(val);\n    publicAPI[`set${cap}`] = (index, value) => {\n      if (model.componentData[index][`${val}`] !== value) {\n        model.componentData[index][`${val}`] = value;\n        publicAPI.modified();\n        return true;\n      }\n      return false;\n    };\n  });\n  const gets = ['useGradientOpacity', 'scalarOpacityUnitDistance', 'gradientOpacityMinimumValue', 'gradientOpacityMinimumOpacity', 'gradientOpacityMaximumValue', 'gradientOpacityMaximumOpacity', 'opacityMode', 'forceNearestInterpolation'];\n  gets.forEach(val => {\n    const cap = macro.capitalize(val);\n    publicAPI[`get${cap}`] = index => model.componentData[index][`${val}`];\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  colorMixPreset: null,\n  independentComponents: true,\n  interpolationType: InterpolationType.FAST_LINEAR,\n  shade: false,\n  ambient: 0.1,\n  diffuse: 0.7,\n  specular: 0.2,\n  specularPower: 10.0,\n  useLabelOutline: false,\n  labelOutlineThickness: [1],\n  labelOutlineOpacity: 1.0\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  if (!model.componentData) {\n    model.componentData = [];\n    for (let i = 0; i < VTK_MAX_VRCOMP; ++i) {\n      model.componentData.push({\n        colorChannels: 1,\n        grayTransferFunction: null,\n        rGBTransferFunction: null,\n        scalarOpacity: null,\n        scalarOpacityUnitDistance: 1.0,\n        opacityMode: OpacityMode.FRACTIONAL,\n        gradientOpacityMinimumValue: 0,\n        gradientOpacityMinimumOpacity: 0.0,\n        gradientOpacityMaximumValue: 1.0,\n        gradientOpacityMaximumOpacity: 1.0,\n        useGradientOpacity: false,\n        componentWeight: 1.0,\n        forceNearestInterpolation: false\n      });\n    }\n  }\n  macro.setGet(publicAPI, model, ['colorMixPreset', 'independentComponents', 'interpolationType', 'shade', 'ambient', 'diffuse', 'specular', 'specularPower', 'useLabelOutline', 'labelOutlineOpacity']);\n  macro.setGetArray(publicAPI, model, ['labelOutlineThickness']);\n\n  // Object methods\n  vtkVolumeProperty(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkVolumeProperty');\n\n// ----------------------------------------------------------------------------\n\nvar vtkVolumeProperty$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkVolumeProperty$1 as default, extend, newInstance };\n","import { mat4, vec3 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkProp3D from './Prop3D.js';\nimport vtkVolumeProperty from './VolumeProperty.js';\n\nconst {\n  vtkDebugMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkVolume methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolume(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolume');\n  publicAPI.getVolumes = () => publicAPI;\n  publicAPI.makeProperty = vtkVolumeProperty.newInstance;\n  publicAPI.getProperty = () => {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n    return model.property;\n  };\n  publicAPI.getBounds = () => {\n    if (model.mapper === null) {\n      return model.bounds;\n    }\n\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBounds();\n    if (!bds || bds.length !== 6) {\n      return bds;\n    }\n\n    // Check for the special case when the actor is empty.\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    }\n\n    // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n    const zip = rows => rows[0].map((_, c) => rows.map(row => row[c]));\n    if (!model.mapperBounds || !zip([bds, model.mapperBounds]).reduce((a, b) => a && b[0] === b[1], true) || publicAPI.getMTime() > model.boundsMTime.getMTime()) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.map(x => x);\n      const bbox = [];\n      vtkBoundingBox.getCorners(bds, bbox);\n      publicAPI.computeMatrix();\n      const tmp4 = new Float64Array(16);\n      mat4.transpose(tmp4, model.matrix);\n      bbox.forEach(pt => vec3.transformMat4(pt, pt, tmp4));\n\n      /* eslint-disable no-multi-assign */\n      model.bounds[0] = model.bounds[2] = model.bounds[4] = Number.MAX_VALUE;\n      model.bounds[1] = model.bounds[3] = model.bounds[5] = -Number.MAX_VALUE;\n      /* eslint-enable no-multi-assign */\n      model.bounds = model.bounds.map((d, i) => i % 2 === 0 ? bbox.reduce((a, b) => a > b[i / 2] ? b[i / 2] : a, d) : bbox.reduce((a, b) => a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a, d));\n      model.boundsMTime.modified();\n    }\n    return model.bounds;\n  };\n  publicAPI.getMTime = () => {\n    let mt = model.mtime;\n    if (model.property !== null) {\n      const time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    return mt;\n  };\n  publicAPI.getRedrawMTime = () => {\n    let mt = model.mtime;\n    if (model.mapper !== null) {\n      let time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    return mt;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  bounds: [1, -1, 1, -1, 1, -1]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp3D.extend(publicAPI, model, initialValues);\n\n  // vtkTimeStamp\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime);\n\n  // Build VTK API\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['mapper']);\n  macro.getArray(publicAPI, model, ['bounds'], 6);\n\n  // Object methods\n  vtkVolume(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkVolume');\n\n// ----------------------------------------------------------------------------\n\nvar vtkVolume$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkVolume$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport { H as createUninitializedBounds, E as clampValue, K as floor } from '../../Common/Core/Math/index.js';\nimport Constants from './VolumeMapper/Constants.js';\nimport vtkAbstractMapper3D from './AbstractMapper3D.js';\nimport vtkPiecewiseFunction from '../../Common/DataModel/PiecewiseFunction.js';\n\nconst {\n  BlendMode,\n  FilterMode\n} = Constants;\nfunction createRadonTransferFunction(firstAbsorbentMaterialHounsfieldValue, firstAbsorbentMaterialAbsorption, maxAbsorbentMaterialHounsfieldValue, maxAbsorbentMaterialAbsorption, outputTransferFunction) {\n  let ofun = null;\n  if (outputTransferFunction) {\n    ofun = outputTransferFunction;\n    ofun.removeAllPoints();\n  } else {\n    ofun = vtkPiecewiseFunction.newInstance();\n  }\n  ofun.addPointLong(-1024, 0, 1, 1); // air (i.e. material with no absorption)\n  ofun.addPoint(firstAbsorbentMaterialHounsfieldValue, firstAbsorbentMaterialAbsorption);\n  ofun.addPoint(maxAbsorbentMaterialHounsfieldValue, maxAbsorbentMaterialAbsorption);\n  return ofun;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst STATIC = {\n  createRadonTransferFunction\n};\n\n// ----------------------------------------------------------------------------\n// vtkVolumeMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolumeMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolumeMapper');\n  const superClass = {\n    ...publicAPI\n  };\n  publicAPI.getBounds = () => {\n    const input = publicAPI.getInputData();\n    if (!input) {\n      model.bounds = createUninitializedBounds();\n    } else {\n      if (!model.static) {\n        publicAPI.update();\n      }\n      model.bounds = input.getBounds();\n    }\n    return model.bounds;\n  };\n  publicAPI.update = () => {\n    publicAPI.getInputData();\n  };\n  publicAPI.setBlendModeToComposite = () => {\n    publicAPI.setBlendMode(BlendMode.COMPOSITE_BLEND);\n  };\n  publicAPI.setBlendModeToMaximumIntensity = () => {\n    publicAPI.setBlendMode(BlendMode.MAXIMUM_INTENSITY_BLEND);\n  };\n  publicAPI.setBlendModeToMinimumIntensity = () => {\n    publicAPI.setBlendMode(BlendMode.MINIMUM_INTENSITY_BLEND);\n  };\n  publicAPI.setBlendModeToAverageIntensity = () => {\n    publicAPI.setBlendMode(BlendMode.AVERAGE_INTENSITY_BLEND);\n  };\n  publicAPI.setBlendModeToAdditiveIntensity = () => {\n    publicAPI.setBlendMode(BlendMode.ADDITIVE_INTENSITY_BLEND);\n  };\n  publicAPI.setBlendModeToRadonTransform = () => {\n    publicAPI.setBlendMode(BlendMode.RADON_TRANSFORM_BLEND);\n  };\n  publicAPI.getBlendModeAsString = () => macro.enumToString(BlendMode, model.blendMode);\n  publicAPI.setAverageIPScalarRange = (min, max) => {\n    console.warn('setAverageIPScalarRange is deprecated use setIpScalarRange');\n    publicAPI.setIpScalarRange(min, max);\n  };\n  publicAPI.getFilterModeAsString = () => macro.enumToString(FilterMode, model.filterMode);\n  publicAPI.setFilterModeToOff = () => {\n    publicAPI.setFilterMode(FilterMode.OFF);\n  };\n  publicAPI.setFilterModeToNormalized = () => {\n    publicAPI.setFilterMode(FilterMode.NORMALIZED);\n  };\n  publicAPI.setFilterModeToRaw = () => {\n    publicAPI.setFilterMode(FilterMode.RAW);\n  };\n  publicAPI.setGlobalIlluminationReach = gl => superClass.setGlobalIlluminationReach(clampValue(gl, 0.0, 1.0));\n  publicAPI.setVolumetricScatteringBlending = vsb => superClass.setVolumetricScatteringBlending(clampValue(vsb, 0.0, 1.0));\n  publicAPI.setVolumeShadowSamplingDistFactor = vsdf => superClass.setVolumeShadowSamplingDistFactor(vsdf >= 1.0 ? vsdf : 1.0);\n  publicAPI.setAnisotropy = at => superClass.setAnisotropy(clampValue(at, -0.99, 0.99));\n  publicAPI.setLAOKernelSize = ks => superClass.setLAOKernelSize(floor(clampValue(ks, 1, 32)));\n  publicAPI.setLAOKernelRadius = kr => superClass.setLAOKernelRadius(kr >= 1 ? kr : 1);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n// TODO: what values to use for averageIPScalarRange to get GLSL to use max / min values like [-Math.inf, Math.inf]?\nconst DEFAULT_VALUES = {\n  bounds: [1, -1, 1, -1, 1, -1],\n  sampleDistance: 1.0,\n  imageSampleDistance: 1.0,\n  maximumSamplesPerRay: 1000,\n  autoAdjustSampleDistances: true,\n  initialInteractionScale: 1.0,\n  interactionSampleDistanceFactor: 1.0,\n  blendMode: BlendMode.COMPOSITE_BLEND,\n  ipScalarRange: [-1000000.0, 1000000.0],\n  filterMode: FilterMode.OFF,\n  // ignored by WebGL so no behavior change\n  preferSizeOverAccuracy: false,\n  // Whether to use halfFloat representation of float, when it is inaccurate\n  computeNormalFromOpacity: false,\n  // volume shadow parameters\n  volumetricScatteringBlending: 0.0,\n  globalIlluminationReach: 0.0,\n  volumeShadowSamplingDistFactor: 5.0,\n  anisotropy: 0.0,\n  // local ambient occlusion\n  localAmbientOcclusion: false,\n  LAOKernelSize: 15,\n  LAOKernelRadius: 7\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkAbstractMapper3D.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['sampleDistance', 'imageSampleDistance', 'maximumSamplesPerRay', 'autoAdjustSampleDistances', 'initialInteractionScale', 'interactionSampleDistanceFactor', 'blendMode', 'filterMode', 'preferSizeOverAccuracy', 'computeNormalFromOpacity', 'volumetricScatteringBlending', 'globalIlluminationReach', 'volumeShadowSamplingDistFactor', 'anisotropy', 'localAmbientOcclusion', 'LAOKernelSize', 'LAOKernelRadius']);\n  macro.setGetArray(publicAPI, model, ['ipScalarRange'], 2);\n  macro.event(publicAPI, model, 'lightingActivated');\n\n  // Object methods\n  vtkVolumeMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkVolumeMapper');\n\n// ----------------------------------------------------------------------------\n\nvar vtkVolumeMapper$1 = {\n  newInstance,\n  extend,\n  ...STATIC\n};\n\nexport { STATIC, vtkVolumeMapper$1 as default, extend, newInstance };\n","const Corners = {\n  TOP_LEFT: 'TOP_LEFT',\n  TOP_RIGHT: 'TOP_RIGHT',\n  BOTTOM_LEFT: 'BOTTOM_LEFT',\n  BOTTOM_RIGHT: 'BOTTOM_RIGHT'\n};\nvar Constants = {\n  Corners\n};\n\nexport { Corners, Constants as default };\n","import { m as macro } from '../../macros2.js';\nimport vtkRenderer from '../../Rendering/Core/Renderer.js';\nimport Constants from './OrientationMarkerWidget/Constants.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\nconst {\n  Corners\n} = Constants;\n\n// ----------------------------------------------------------------------------\n// vtkOrientationMarkerWidget\n// ----------------------------------------------------------------------------\n\nfunction vtkOrientationMarkerWidget(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOrientationMarkerWidget');\n  const superClass = {\n    ...publicAPI\n  };\n\n  // Private variables\n\n  const previousCameraInput = [];\n  const selfRenderer = vtkRenderer.newInstance();\n  const resizeObserver = new ResizeObserver(entries => {\n    publicAPI.updateViewport();\n  });\n  let onCameraChangedSub = null;\n  let onCameraModifiedSub = null;\n  let onAnimationSub = null;\n  let onEndAnimationSub = null;\n  let selfSubscription = null;\n  function onCameraModified() {\n    // If animating, marker will be updated on Animation event\n    if (!model._interactor.isAnimating()) {\n      publicAPI.updateMarkerOrientation();\n    }\n  }\n  model._onParentRendererChanged = () => publicAPI.updateViewport();\n  publicAPI.computeViewport = () => {\n    const parentRen = model.parentRenderer || model._interactor.getCurrentRenderer();\n    const [xMin, yMin, xMax, yMax] = parentRen.getViewport();\n    const view = model._interactor.getView();\n    const canvasSize = view.getSize();\n    const [viewXSize, viewYSize] = view.getViewportSize(parentRen);\n    const minViewSize = Math.min(viewXSize, viewYSize);\n    let pixelSize = model.viewportSize * minViewSize;\n    // clamp pixel size\n    pixelSize = Math.max(Math.min(model.minPixelSize, minViewSize), Math.min(model.maxPixelSize, pixelSize));\n    const xFrac = pixelSize / canvasSize[0];\n    const yFrac = pixelSize / canvasSize[1];\n    // [left bottom right top]\n    switch (model.viewportCorner) {\n      case Corners.TOP_LEFT:\n        return [xMin, yMax - yFrac, xMin + xFrac, yMax];\n      case Corners.TOP_RIGHT:\n        return [xMax - xFrac, yMax - yFrac, xMax, yMax];\n      case Corners.BOTTOM_LEFT:\n        return [xMin, yMin, xMin + xFrac, yMin + yFrac];\n      case Corners.BOTTOM_RIGHT:\n        return [xMax - xFrac, yMin, xMax, yMin + yFrac];\n      default:\n        vtkErrorMacro('Invalid widget corner');\n        return null;\n    }\n  };\n  publicAPI.updateViewport = () => {\n    if (model.enabled) {\n      selfRenderer.setViewport(...publicAPI.computeViewport());\n      model._interactor.render();\n    }\n  };\n  publicAPI.updateMarkerOrientation = () => {\n    const ren = model.parentRenderer || model._interactor.getCurrentRenderer();\n    const currentCamera = ren.getActiveCamera();\n    if (!currentCamera) {\n      return;\n    }\n    const position = currentCamera.getReferenceByName('position');\n    const focalPoint = currentCamera.getReferenceByName('focalPoint');\n    const viewUp = currentCamera.getReferenceByName('viewUp');\n    if (previousCameraInput[0] !== position[0] || previousCameraInput[1] !== position[1] || previousCameraInput[2] !== position[2] || previousCameraInput[3] !== focalPoint[0] || previousCameraInput[4] !== focalPoint[1] || previousCameraInput[5] !== focalPoint[2] || previousCameraInput[6] !== viewUp[0] || previousCameraInput[7] !== viewUp[1] || previousCameraInput[8] !== viewUp[2]) {\n      previousCameraInput[0] = position[0];\n      previousCameraInput[1] = position[1];\n      previousCameraInput[2] = position[2];\n      previousCameraInput[3] = focalPoint[0];\n      previousCameraInput[4] = focalPoint[1];\n      previousCameraInput[5] = focalPoint[2];\n      previousCameraInput[6] = viewUp[0];\n      previousCameraInput[7] = viewUp[1];\n      previousCameraInput[8] = viewUp[2];\n      const activeCamera = selfRenderer.getActiveCamera();\n      activeCamera.setPosition(position[0], position[1], position[2]);\n      activeCamera.setFocalPoint(focalPoint[0], focalPoint[1], focalPoint[2]);\n      activeCamera.setViewUp(viewUp[0], viewUp[1], viewUp[2]);\n      selfRenderer.resetCamera();\n    }\n  };\n\n  /**\n   * Enables/Disables the orientation marker.\n   */\n  publicAPI.setEnabled = enabling => {\n    if (enabling) {\n      if (model.enabled) {\n        return;\n      }\n      if (!model.actor) {\n        vtkErrorMacro('Must set actor before enabling orientation marker.');\n        return;\n      }\n      if (!model._interactor) {\n        vtkErrorMacro('Must set interactor before enabling orientation marker.');\n        return;\n      }\n      const ren = model.parentRenderer || model._interactor.getCurrentRenderer();\n      const renderWindow = ren.getRenderWindow();\n      renderWindow.addRenderer(selfRenderer);\n      if (renderWindow.getNumberOfLayers() < 2) {\n        renderWindow.setNumberOfLayers(2);\n      }\n      // Highest number is foreground\n      selfRenderer.setLayer(renderWindow.getNumberOfLayers() - 1);\n      selfRenderer.setInteractive(model.interactiveRenderer);\n      selfRenderer.addViewProp(model.actor);\n      model.actor.setVisibility(true);\n      onCameraChangedSub = ren.onEvent(event => {\n        if (event.type === 'ActiveCameraEvent') {\n          if (onCameraModifiedSub) {\n            onCameraModifiedSub.unsubscribe();\n          }\n          onCameraModifiedSub = event.camera.onModified(onCameraModified);\n        }\n      });\n      onCameraModifiedSub = ren.getActiveCamera().onModified(onCameraModified);\n      onAnimationSub = model._interactor.onAnimation(publicAPI.updateMarkerOrientation);\n      onEndAnimationSub = model._interactor.onEndAnimation(publicAPI.updateMarkerOrientation);\n      resizeObserver.observe(model._interactor.getView().getCanvas());\n      publicAPI.updateViewport();\n      publicAPI.updateMarkerOrientation();\n      model.enabled = true;\n    } else {\n      if (!model.enabled) {\n        return;\n      }\n      model.enabled = false;\n      resizeObserver.disconnect();\n      onCameraChangedSub.unsubscribe();\n      onCameraChangedSub = null;\n      onCameraModifiedSub.unsubscribe();\n      onCameraModifiedSub = null;\n      onAnimationSub.unsubscribe();\n      onAnimationSub = null;\n      onEndAnimationSub.unsubscribe();\n      onEndAnimationSub = null;\n      model.actor.setVisibility(false);\n      selfRenderer.removeViewProp(model.actor);\n      const renderWindow = model._interactor?.findPokedRenderer()?.getRenderWindow();\n      if (renderWindow) {\n        renderWindow.removeRenderer(selfRenderer);\n      }\n    }\n    publicAPI.modified();\n  };\n\n  /**\n   * Sets the viewport corner.\n   */\n  publicAPI.setViewportCorner = corner => {\n    if (corner === model.viewportCorner) {\n      return;\n    }\n    model.viewportCorner = corner;\n    publicAPI.updateViewport();\n  };\n\n  /**\n   * Sets the viewport size.\n   */\n  publicAPI.setViewportSize = sizeFactor => {\n    const viewportSize = Math.min(1, Math.max(0, sizeFactor));\n    if (viewportSize === model.viewportSize) {\n      return;\n    }\n    model.viewportSize = viewportSize;\n    publicAPI.updateViewport();\n  };\n  publicAPI.setActor = actor => {\n    const previousState = model.enabled;\n    publicAPI.setEnabled(false);\n    model.actor = actor;\n    publicAPI.setEnabled(previousState);\n  };\n  publicAPI.getRenderer = () => selfRenderer;\n  publicAPI.delete = () => {\n    superClass.delete();\n    if (selfSubscription) {\n      selfSubscription.unsubscribe();\n      selfSubscription = null;\n    }\n    if (onCameraChangedSub) {\n      onCameraChangedSub.unsubscribe();\n      onCameraChangedSub = null;\n    }\n    if (onCameraModifiedSub) {\n      onCameraModifiedSub.unsubscribe();\n      onCameraModifiedSub = null;\n    }\n    if (onAnimationSub) {\n      onAnimationSub.unsubscribe();\n      onAnimationSub = null;\n    }\n    if (onEndAnimationSub) {\n      onEndAnimationSub.unsubscribe();\n      onEndAnimationSub = null;\n    }\n    resizeObserver.disconnect();\n  };\n\n  // --------------------------------------------------------------------------\n\n  // update viewport whenever we are updated\n  selfSubscription = publicAPI.onModified(publicAPI.updateViewport);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // actor: null,\n  // _interactor: null,\n  viewportCorner: Constants.Corners.BOTTOM_LEFT,\n  viewportSize: 0.2,\n  minPixelSize: 50,\n  maxPixelSize: 200,\n  parentRenderer: null,\n  interactiveRenderer: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['enabled', 'viewportCorner', 'viewportSize', 'interactiveRenderer']);\n\n  // NOTE: setting these while the widget is enabled will\n  // not update the widget.\n  macro.setGet(publicAPI, model, ['_interactor', 'minPixelSize', 'maxPixelSize', 'parentRenderer']);\n  macro.get(publicAPI, model, ['actor']);\n  macro.moveToProtected(publicAPI, model, ['interactor']);\n\n  // Object methods\n  vtkOrientationMarkerWidget(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkOrientationMarkerWidget');\n\n// ----------------------------------------------------------------------------\n\nvar vtkOrientationMarkerWidget$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { DEFAULT_VALUES, vtkOrientationMarkerWidget$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n// vtkTexture methods\n// ----------------------------------------------------------------------------\n\nfunction vtkTexture(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkTexture');\n  publicAPI.imageLoaded = () => {\n    model.image.removeEventListener('load', publicAPI.imageLoaded);\n    model.imageLoaded = true;\n    publicAPI.modified();\n  };\n  publicAPI.setJsImageData = imageData => {\n    if (model.jsImageData === imageData) {\n      return;\n    }\n\n    // clear other entries\n    if (imageData !== null) {\n      publicAPI.setInputData(null);\n      publicAPI.setInputConnection(null);\n      model.image = null;\n      model.canvas = null;\n    }\n    model.jsImageData = imageData;\n    model.imageLoaded = true;\n    publicAPI.modified();\n  };\n  publicAPI.setCanvas = canvas => {\n    if (model.canvas === canvas) {\n      return;\n    }\n\n    // clear other entries\n    if (canvas !== null) {\n      publicAPI.setInputData(null);\n      publicAPI.setInputConnection(null);\n      model.image = null;\n      model.jsImageData = null;\n    }\n    model.canvas = canvas;\n    publicAPI.modified();\n  };\n  publicAPI.setImage = image => {\n    if (model.image === image) {\n      return;\n    }\n\n    // clear other entries\n    if (image !== null) {\n      publicAPI.setInputData(null);\n      publicAPI.setInputConnection(null);\n      model.canvas = null;\n      model.jsImageData = null;\n    }\n    model.image = image;\n    model.imageLoaded = false;\n    if (image.complete) {\n      publicAPI.imageLoaded();\n    } else {\n      image.addEventListener('load', publicAPI.imageLoaded);\n    }\n    publicAPI.modified();\n  };\n  publicAPI.getDimensionality = () => {\n    let width = 0;\n    let height = 0;\n    let depth = 1;\n    if (publicAPI.getInputData()) {\n      const data = publicAPI.getInputData();\n      width = data.getDimensions()[0];\n      height = data.getDimensions()[1];\n      depth = data.getDimensions()[2];\n    }\n    if (model.jsImageData) {\n      width = model.jsImageData.width;\n      height = model.jsImageData.height;\n    }\n    if (model.canvas) {\n      width = model.canvas.width;\n      height = model.canvas.height;\n    }\n    if (model.image) {\n      width = model.image.width;\n      height = model.image.height;\n    }\n    const dimensionality = (width > 1) + (height > 1) + (depth > 1);\n    return dimensionality;\n  };\n  publicAPI.getInputAsJsImageData = () => {\n    if (!model.imageLoaded || publicAPI.getInputData()) return null;\n    if (model.jsImageData) {\n      return model.jsImageData();\n    }\n    if (model.canvas) {\n      const context = model.canvas.getContext('2d');\n      const imageData = context.getImageData(0, 0, model.canvas.width, model.canvas.height);\n      return imageData;\n    }\n    if (model.image) {\n      const canvas = document.createElement('canvas');\n      canvas.width = model.image.width;\n      canvas.height = model.image.height;\n      const context = canvas.getContext('2d');\n      context.translate(0, canvas.height);\n      context.scale(1, -1);\n      context.drawImage(model.image, 0, 0, model.image.width, model.image.height);\n      const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n      return imageData;\n    }\n    return null;\n  };\n}\n\n// Use nativeArray instead of self\nconst generateMipmaps = (nativeArray, width, height, level) => {\n  // TODO: FIX UNEVEN TEXTURE MIP GENERATION:\n  // When textures don't have standard ratios, higher mip levels\n  // result in their color chanels getting messed up and shifting\n  // 3x3 gaussian kernel\n  const g3m = [1, 2, 1]; // eslint-disable-line\n  const g3w = 4; // eslint-disable-line\n\n  const kernel = g3m;\n  const kernelWeight = g3w;\n  const hs = nativeArray.length / (width * height); // TODO: support for textures with depth more than 1\n  let currentWidth = width;\n  let currentHeight = height;\n  let imageData = nativeArray;\n  const maps = [imageData];\n  for (let i = 0; i < level; i++) {\n    const oldData = [...imageData];\n    currentWidth /= 2;\n    currentHeight /= 2;\n    imageData = new Uint8ClampedArray(currentWidth * currentHeight * hs);\n    const vs = hs * currentWidth;\n\n    // Scale down\n    let shift = 0;\n    for (let p = 0; p < imageData.length; p += hs) {\n      if (p % vs === 0) {\n        shift += 2 * hs * currentWidth;\n      }\n      for (let c = 0; c < hs; c++) {\n        let sample = oldData[shift + c];\n        sample += oldData[shift + hs + c];\n        sample += oldData[shift - 2 * vs + c];\n        sample += oldData[shift - 2 * vs + hs + c];\n        sample /= 4;\n        imageData[p + c] = sample;\n      }\n      shift += 2 * hs;\n    }\n\n    // Horizontal Pass\n    let dataCopy = [...imageData];\n    for (let p = 0; p < imageData.length; p += hs) {\n      for (let c = 0; c < hs; c++) {\n        let x = -(kernel.length - 1) / 2;\n        let kw = kernelWeight;\n        let value = 0.0;\n        for (let k = 0; k < kernel.length; k++) {\n          let index = p + c + x * hs;\n          const lineShift = index % vs - (p + c) % vs;\n          if (lineShift > hs) index += vs;\n          if (lineShift < -hs) index -= vs;\n          if (dataCopy[index]) {\n            value += dataCopy[index] * kernel[k];\n          } else {\n            kw -= kernel[k];\n          }\n          x += 1;\n        }\n        imageData[p + c] = value / kw;\n      }\n    }\n    // Vertical Pass\n    dataCopy = [...imageData];\n    for (let p = 0; p < imageData.length; p += hs) {\n      for (let c = 0; c < hs; c++) {\n        let x = -(kernel.length - 1) / 2;\n        let kw = kernelWeight;\n        let value = 0.0;\n        for (let k = 0; k < kernel.length; k++) {\n          const index = p + c + x * vs;\n          if (dataCopy[index]) {\n            value += dataCopy[index] * kernel[k];\n          } else {\n            kw -= kernel[k];\n          }\n          x += 1;\n        }\n        imageData[p + c] = value / kw;\n      }\n    }\n    maps.push(imageData);\n  }\n  return maps;\n};\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  image: null,\n  canvas: null,\n  jsImageData: null,\n  imageLoaded: false,\n  repeat: false,\n  interpolate: false,\n  edgeClamp: false,\n  mipLevel: 0,\n  resizable: false // must be set at construction time if the texture can be resizable\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.algo(publicAPI, model, 6, 0);\n  macro.get(publicAPI, model, ['canvas', 'image', 'jsImageData', 'imageLoaded', 'resizable']);\n  macro.setGet(publicAPI, model, ['repeat', 'edgeClamp', 'interpolate', 'mipLevel']);\n  vtkTexture(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkTexture');\nconst STATIC = {\n  generateMipmaps\n};\n\n// ----------------------------------------------------------------------------\n\nvar vtkTexture$1 = {\n  newInstance,\n  extend,\n  ...STATIC\n};\n\nexport { STATIC, vtkTexture$1 as default, extend, newInstance };\n","import vtkImageData from '../DataModel/ImageData.js';\nimport vtkDataArray from './DataArray.js';\n\n/**\n * Takes a canvas and converts it to a vtkImageData.\n *\n * Optionally supply a bounding box to get a particular subset of the canvas.\n *\n * @param canvas       The HTML canvas to convert\n * @param boundingBox  A bounding box of type [top, left, width, height]\n */\nfunction canvasToImageData(canvas) {\n  let boundingBox = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 0, 0];\n  const [top, left, width, height] = boundingBox;\n  const ctxt = canvas.getContext('2d');\n  const idata = ctxt.getImageData(top, left, width || canvas.width, height || canvas.height);\n  const imageData = vtkImageData.newInstance({\n    type: 'vtkImageData'\n  });\n  imageData.setOrigin(0, 0, 0);\n  imageData.setSpacing(1, 1, 1);\n  imageData.setExtent(0, (width || canvas.width) - 1, 0, (height || canvas.height) - 1, 0, 0);\n  const scalars = vtkDataArray.newInstance({\n    numberOfComponents: 4,\n    values: new Uint8Array(idata.data.buffer)\n  });\n  scalars.setName('scalars');\n  imageData.getPointData().setScalars(scalars);\n  return imageData;\n}\n\n/**\n * Converts an Image object to a vtkImageData.\n */\nfunction imageToImageData(image) {\n  let transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    flipX: false,\n    flipY: false,\n    rotate: 0\n  };\n  const canvas = document.createElement('canvas');\n  canvas.width = image.width;\n  canvas.height = image.height;\n  const ctx = canvas.getContext('2d');\n  const {\n    flipX,\n    flipY,\n    rotate\n  } = transform;\n  ctx.translate(canvas.width / 2, canvas.height / 2);\n  ctx.scale(flipX ? -1 : 1, flipY ? -1 : 1);\n  ctx.rotate(rotate * Math.PI / 180);\n  ctx.drawImage(image, -image.width / 2, -image.height / 2);\n  return canvasToImageData(canvas);\n}\nvar ImageHelper = {\n  canvasToImageData,\n  imageToImageData\n};\n\nexport { ImageHelper as default };\n","const STYLES = {\n  default: {\n    defaultStyle: {\n      fontStyle: 'bold',\n      fontFamily: 'Arial',\n      fontColor: 'black',\n      fontSizeScale: res => res / 2,\n      faceColor: 'white',\n      edgeThickness: 0.1,\n      edgeColor: 'black',\n      resolution: 400\n    },\n    xMinusFaceProperty: {\n      text: 'X-',\n      faceColor: 'yellow'\n    },\n    xPlusFaceProperty: {\n      text: 'X+',\n      faceColor: 'yellow'\n    },\n    yMinusFaceProperty: {\n      text: 'Y-',\n      faceColor: 'red'\n    },\n    yPlusFaceProperty: {\n      text: 'Y+',\n      faceColor: 'red'\n    },\n    zMinusFaceProperty: {\n      text: 'Z-',\n      faceColor: '#008000'\n    },\n    zPlusFaceProperty: {\n      text: 'Z+',\n      faceColor: '#008000'\n    }\n  },\n  lps: {\n    xMinusFaceProperty: {\n      text: 'R',\n      faceRotation: -90\n    },\n    xPlusFaceProperty: {\n      text: 'L',\n      faceRotation: 90\n    },\n    yMinusFaceProperty: {\n      text: 'A',\n      faceRotation: 0\n    },\n    yPlusFaceProperty: {\n      text: 'P',\n      faceRotation: 180\n    },\n    zMinusFaceProperty: {\n      text: 'I',\n      faceRotation: 180\n    },\n    zPlusFaceProperty: {\n      text: 'S',\n      faceRotation: 0\n    }\n  }\n};\nfunction applyDefinitions(definitions, cubeActor) {\n  cubeActor.set(definitions);\n}\nfunction applyPreset(name, cubeActor) {\n  return applyDefinitions(STYLES[name], cubeActor);\n}\nfunction registerStylePreset(name, definitions) {\n  STYLES[name] = definitions;\n}\nvar AnnotatedCubePresets = {\n  applyDefinitions,\n  applyPreset,\n  registerStylePreset\n};\n\nexport { AnnotatedCubePresets as default };\n","import { m as macro } from '../../macros2.js';\nimport vtkActor from './Actor.js';\nimport vtkMapper from './Mapper.js';\nimport vtkTexture from './Texture.js';\nimport vtkCubeSource from '../../Filters/Sources/CubeSource.js';\nimport ImageHelper from '../../Common/Core/ImageHelper.js';\nimport AnnotatedCubePresets from './AnnotatedCubeActor/Presets.js';\n\nconst FACE_TO_INDEX = {\n  xPlus: 0,\n  xMinus: 1,\n  yPlus: 2,\n  yMinus: 3,\n  zPlus: 4,\n  zMinus: 5\n};\n\n// ----------------------------------------------------------------------------\n// vtkAnnotatedCubeActor\n// ----------------------------------------------------------------------------\n\nfunction vtkAnnotatedCubeActor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkAnnotatedCubeActor');\n\n  // Make sure face properties are not references to the default value\n  model.xPlusFaceProperty = {\n    ...model.xPlusFaceProperty\n  };\n  model.xMinusFaceProperty = {\n    ...model.xMinusFaceProperty\n  };\n  model.yPlusFaceProperty = {\n    ...model.yPlusFaceProperty\n  };\n  model.yMinusFaceProperty = {\n    ...model.yMinusFaceProperty\n  };\n  model.zPlusFaceProperty = {\n    ...model.zPlusFaceProperty\n  };\n  model.zMinusFaceProperty = {\n    ...model.zMinusFaceProperty\n  };\n\n  // private variables\n\n  let cubeSource = null;\n  const canvas = document.createElement('canvas');\n  const mapper = vtkMapper.newInstance();\n  const texture = vtkTexture.newInstance();\n  texture.setInterpolate(true);\n\n  // private methods\n\n  function updateFaceTexture(faceName) {\n    let newProp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (newProp) {\n      Object.assign(model[`${faceName}FaceProperty`], newProp);\n    }\n    const prop = {\n      ...model.defaultStyle,\n      ...model[`${faceName}FaceProperty`]\n    };\n\n    // set canvas resolution\n    canvas.width = prop.resolution;\n    canvas.height = prop.resolution;\n    const ctxt = canvas.getContext('2d');\n\n    // set background color\n    ctxt.fillStyle = prop.faceColor;\n    ctxt.fillRect(0, 0, canvas.width, canvas.height);\n\n    // draw edge\n    if (prop.edgeThickness > 0) {\n      ctxt.strokeStyle = prop.edgeColor;\n      ctxt.lineWidth = prop.edgeThickness * canvas.width;\n      ctxt.strokeRect(0, 0, canvas.width, canvas.height);\n    }\n\n    // set face rotation\n    ctxt.save();\n\n    // vertical flip\n    ctxt.translate(0, canvas.height);\n    ctxt.scale(1, -1);\n    ctxt.translate(canvas.width / 2, canvas.height / 2);\n    ctxt.rotate(-Math.PI * (prop.faceRotation / 180.0));\n\n    // set foreground text\n    const textSize = prop.fontSizeScale(prop.resolution);\n    ctxt.fillStyle = prop.fontColor;\n    ctxt.textAlign = 'center';\n    ctxt.textBaseline = 'middle';\n    ctxt.font = `${prop.fontStyle} ${textSize}px \"${prop.fontFamily}\"`;\n    ctxt.fillText(prop.text, 0, 0);\n    ctxt.restore();\n    const vtkImage = ImageHelper.canvasToImageData(canvas);\n    texture.setInputData(vtkImage, FACE_TO_INDEX[faceName]);\n    publicAPI.modified();\n  }\n  function updateAllFaceTextures() {\n    cubeSource = vtkCubeSource.newInstance({\n      generate3DTextureCoordinates: true\n    });\n    mapper.setInputConnection(cubeSource.getOutputPort());\n    updateFaceTexture('xPlus');\n    updateFaceTexture('xMinus');\n    updateFaceTexture('yPlus');\n    updateFaceTexture('yMinus');\n    updateFaceTexture('zPlus');\n    updateFaceTexture('zMinus');\n  }\n\n  // public methods\n\n  publicAPI.setDefaultStyle = style => {\n    model.defaultStyle = {\n      ...model.defaultStyle,\n      ...style\n    };\n    updateAllFaceTextures();\n  };\n  publicAPI.setXPlusFaceProperty = prop => updateFaceTexture('xPlus', prop);\n  publicAPI.setXMinusFaceProperty = prop => updateFaceTexture('xMinus', prop);\n  publicAPI.setYPlusFaceProperty = prop => updateFaceTexture('yPlus', prop);\n  publicAPI.setYMinusFaceProperty = prop => updateFaceTexture('yMinus', prop);\n  publicAPI.setZPlusFaceProperty = prop => updateFaceTexture('zPlus', prop);\n  publicAPI.setZMinusFaceProperty = prop => updateFaceTexture('zMinus', prop);\n\n  // constructor\n\n  updateAllFaceTextures();\n\n  // set mapper\n  mapper.setInputConnection(cubeSource.getOutputPort());\n  publicAPI.setMapper(mapper);\n\n  // set texture\n  publicAPI.addTexture(texture);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  defaultStyle: {\n    text: '',\n    faceColor: 'white',\n    faceRotation: 0,\n    fontFamily: 'Arial',\n    fontColor: 'black',\n    fontStyle: 'normal',\n    fontSizeScale: resolution => resolution / 1.8,\n    edgeThickness: 0.1,\n    edgeColor: 'black',\n    resolution: 200\n  }\n  // xPlusFaceProperty: null,\n  // xMinusFaceProperty: null,\n  // yPlusFaceProperty: null,\n  // yMinusFaceProperty: null,\n  // zPlusFaceProperty: null,\n  // zMinusFaceProperty: null,\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkActor.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['defaultStyle', 'xPlusFaceProperty', 'xMinusFaceProperty', 'yPlusFaceProperty', 'yMinusFaceProperty', 'zPlusFaceProperty', 'zMinusFaceProperty']);\n\n  // Object methods\n  vtkAnnotatedCubeActor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkAnnotatedCubeActor');\n\n// ----------------------------------------------------------------------------\n\nvar vtkAnnotatedCubeActor$1 = {\n  newInstance,\n  extend,\n  Presets: AnnotatedCubePresets\n};\n\nexport { DEFAULT_VALUES, vtkAnnotatedCubeActor$1 as default, extend, newInstance };\n","const Mode = {\n  Preset: 0,\n  RGBPoints: 1,\n  HSVPoints: 2,\n  Nodes: 3\n};\nconst Defaults = {\n  Preset: 'Cool to Warm',\n  RGBPoints: [[0, 0, 0, 0], [1, 1, 1, 1]],\n  HSVPoints: [[0, 0, 0, 0], [1, 0, 0, 1]],\n  Nodes: [{\n    x: 0,\n    r: 0,\n    g: 0,\n    b: 0,\n    midpoint: 0.5,\n    sharpness: 0\n  }, {\n    x: 1,\n    r: 1,\n    g: 1,\n    b: 1,\n    midpoint: 0.5,\n    sharpness: 0\n  }]\n};\nvar Constants = {\n  Defaults,\n  Mode\n};\n\nexport { Constants as default };\n","import { m as macro } from '../../macros2.js';\nimport vtkColorMaps from '../../Rendering/Core/ColorTransferFunction/ColorMaps.js';\nimport vtkColorTransferFunction from '../../Rendering/Core/ColorTransferFunction.js';\nimport Constants from './LookupTableProxy/Constants.js';\n\nconst {\n  Mode,\n  Defaults\n} = Constants;\n\n// ----------------------------------------------------------------------------\n// vtkLookupTableProxy methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLookupTableProxy(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLookupTableProxy');\n  model.lookupTable = model.lookupTable || vtkColorTransferFunction.newInstance();\n\n  // Initialize lookup table\n  model.lookupTable.setVectorModeToMagnitude();\n\n  // Takes a preset colormap name\n  publicAPI.setPresetName = presetName => {\n    if (model.presetName !== presetName) {\n      model.presetName = presetName;\n      model.mode = Mode.Preset;\n      publicAPI.applyMode();\n    }\n  };\n\n  // Takes an array of points [x, r, g, b, m=0.5, s=0.0]\n  publicAPI.setRGBPoints = rgbPoints => {\n    if (model.rgbPoints !== rgbPoints) {\n      model.rgbPoints = (rgbPoints || Defaults.RGBPoints).slice();\n      publicAPI.applyMode();\n    }\n  };\n\n  // Takes an array of points [x, h, s, v, m=0.5, s=0.0]\n  publicAPI.setHSVPoints = hsvPoints => {\n    if (model.hsvPoints !== hsvPoints) {\n      model.hsvPoints = (hsvPoints || Defaults.HSVPoints).slice();\n      publicAPI.applyMode();\n    }\n  };\n\n  // Takes an array of ColorTransferFunction nodes\n  publicAPI.setNodes = nodes => {\n    if (model.nodes !== nodes) {\n      model.nodes = (nodes || Defaults.Nodes).slice();\n      publicAPI.applyMode();\n    }\n  };\n  publicAPI.setMode = mode => {\n    if (model.mode !== mode) {\n      model.mode = mode;\n      publicAPI.applyMode();\n    }\n  };\n  publicAPI.applyMode = () => {\n    switch (model.mode) {\n      case Mode.Preset:\n        {\n          const preset = vtkColorMaps.getPresetByName(model.presetName);\n          if (preset) {\n            model.lookupTable.applyColorMap(preset);\n          }\n        }\n        break;\n      case Mode.RGBPoints:\n        model.lookupTable.removeAllPoints();\n        model.rgbPoints.forEach(point => model.lookupTable.addRGBPointLong(...point));\n        break;\n      case Mode.HSVPoints:\n        model.lookupTable.removeAllPoints();\n        model.hsvPoints.forEach(point => model.lookupTable.addHSVPointLong(...point));\n        break;\n      case Mode.Nodes:\n        model.lookupTable.setNodes(model.nodes);\n        break;\n      // noop\n    }\n\n    model.lookupTable.setMappingRange(model.dataRange[0], model.dataRange[1]);\n    model.lookupTable.updateRange();\n    publicAPI.modified();\n  };\n  publicAPI.setDataRange = (min, max) => {\n    if (model.dataRange[0] !== min || model.dataRange[1] !== max) {\n      model.dataRange[0] = min;\n      model.dataRange[1] = max;\n      model.lookupTable.setMappingRange(model.dataRange[0], model.dataRange[1]);\n      model.lookupTable.updateRange();\n      publicAPI.applyMode();\n    }\n  };\n\n  // Initialization ------------------------------------------------------------\n\n  publicAPI.applyMode();\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  mode: Mode.Preset,\n  presetName: Defaults.Preset,\n  rgbPoints: Defaults.RGBPoints,\n  hsvPoints: Defaults.HSVPoints,\n  nodes: Defaults.Nodes,\n  arrayName: 'No array associated',\n  arrayLocation: 'pointData',\n  dataRange: [0, 1]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['arrayName']);\n  macro.get(publicAPI, model, ['mode', 'lookupTable', 'presetName', 'rgbPoints', 'hsvPoints', 'nodes', 'dataRange']);\n\n  // Object specific methods\n  vtkLookupTableProxy(publicAPI, model);\n\n  // Proxy handling\n  macro.proxy(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkLookupTableProxy');\nvar vtkLookupTableProxy$1 = {\n  newInstance,\n  extend,\n  Mode,\n  Defaults\n};\n\nexport { Mode, vtkLookupTableProxy$1 as default, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkInteractorStyle from '../../Rendering/Core/InteractorStyle.js';\nimport vtkInteractorStyleConstants from '../../Rendering/Core/InteractorStyle/Constants.js';\nimport { A as degreesFromRadians } from '../../Common/Core/Math/index.js';\nimport { Device, Input } from '../../Rendering/Core/RenderWindowInteractor/Constants.js';\n\nconst {\n  States\n} = vtkInteractorStyleConstants;\n\n/* eslint-disable no-lonely-if */\n\n// ----------------------------------------------------------------------------\n// vtkInteractorStyleTrackballCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkInteractorStyleTrackballCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkInteractorStyleTrackballCamera');\n\n  // Public API methods\n  publicAPI.handleMouseMove = callData => {\n    const pos = callData.position;\n    const renderer = model.getRenderer(callData);\n    switch (model.state) {\n      case States.IS_ROTATE:\n        publicAPI.handleMouseRotate(renderer, pos);\n        publicAPI.invokeInteractionEvent({\n          type: 'InteractionEvent'\n        });\n        break;\n      case States.IS_PAN:\n        publicAPI.handleMousePan(renderer, pos);\n        publicAPI.invokeInteractionEvent({\n          type: 'InteractionEvent'\n        });\n        break;\n      case States.IS_DOLLY:\n        publicAPI.handleMouseDolly(renderer, pos);\n        publicAPI.invokeInteractionEvent({\n          type: 'InteractionEvent'\n        });\n        break;\n      case States.IS_SPIN:\n        publicAPI.handleMouseSpin(renderer, pos);\n        publicAPI.invokeInteractionEvent({\n          type: 'InteractionEvent'\n        });\n        break;\n    }\n    model.previousPosition = pos;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleButton3D = ed => {\n    if (ed && ed.pressed && ed.device === Device.RightController && (ed.input === Input.Trigger || ed.input === Input.TrackPad)) {\n      publicAPI.startCameraPose();\n      return;\n    }\n    if (ed && !ed.pressed && ed.device === Device.RightController && (ed.input === Input.Trigger || ed.input === Input.TrackPad) && model.state === States.IS_CAMERA_POSE) {\n      publicAPI.endCameraPose();\n      // return;\n    }\n  };\n\n  publicAPI.handleMove3D = ed => {\n    switch (model.state) {\n      case States.IS_CAMERA_POSE:\n        publicAPI.updateCameraPose(ed);\n        break;\n    }\n  };\n  publicAPI.updateCameraPose = ed => {\n    // move the world in the direction of the\n    // controller\n    const camera = model.getRenderer(ed).getActiveCamera();\n    const oldTrans = camera.getPhysicalTranslation();\n\n    // look at the y axis to determine how fast / what direction to move\n    const speed = 0.5; // ed.gamepad.axes[1];\n\n    // 0.05 meters / frame movement\n    const pscale = speed * 0.05 * camera.getPhysicalScale();\n\n    // convert orientation to world coordinate direction\n    const dir = camera.physicalOrientationToWorldDirection([ed.orientation.x, ed.orientation.y, ed.orientation.z, ed.orientation.w]);\n    camera.setPhysicalTranslation(oldTrans[0] + dir[0] * pscale, oldTrans[1] + dir[1] * pscale, oldTrans[2] + dir[2] * pscale);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleLeftButtonPress = callData => {\n    const pos = callData.position;\n    model.previousPosition = pos;\n    if (callData.shiftKey) {\n      if (callData.controlKey || callData.altKey) {\n        publicAPI.startDolly();\n      } else {\n        publicAPI.startPan();\n      }\n    } else {\n      if (callData.controlKey || callData.altKey) {\n        publicAPI.startSpin();\n      } else {\n        publicAPI.startRotate();\n      }\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleLeftButtonRelease = () => {\n    switch (model.state) {\n      case States.IS_DOLLY:\n        publicAPI.endDolly();\n        break;\n      case States.IS_PAN:\n        publicAPI.endPan();\n        break;\n      case States.IS_SPIN:\n        publicAPI.endSpin();\n        break;\n      case States.IS_ROTATE:\n        publicAPI.endRotate();\n        break;\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleStartMouseWheel = () => {\n    publicAPI.startDolly();\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleEndMouseWheel = () => {\n    publicAPI.endDolly();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleStartPinch = callData => {\n    model.previousScale = callData.scale;\n    publicAPI.startDolly();\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleEndPinch = () => {\n    publicAPI.endDolly();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleStartRotate = callData => {\n    model.previousRotation = callData.rotation;\n    publicAPI.startRotate();\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleEndRotate = () => {\n    publicAPI.endRotate();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleStartPan = callData => {\n    model.previousTranslation = callData.translation;\n    publicAPI.startPan();\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleEndPan = () => {\n    publicAPI.endPan();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handlePinch = callData => {\n    publicAPI.dollyByFactor(model.getRenderer(callData), callData.scale / model.previousScale);\n    model.previousScale = callData.scale;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handlePan = callData => {\n    const camera = model.getRenderer(callData).getActiveCamera();\n\n    // Calculate the focal depth since we'll be using it a lot\n    let viewFocus = camera.getFocalPoint();\n    viewFocus = publicAPI.computeWorldToDisplay(model.getRenderer(callData), viewFocus[0], viewFocus[1], viewFocus[2]);\n    const focalDepth = viewFocus[2];\n    const trans = callData.translation;\n    const lastTrans = model.previousTranslation;\n    const newPickPoint = publicAPI.computeDisplayToWorld(model.getRenderer(callData), viewFocus[0] + trans[0] - lastTrans[0], viewFocus[1] + trans[1] - lastTrans[1], focalDepth);\n\n    // Has to recalc old mouse point since the viewport has moved,\n    // so can't move it outside the loop\n    const oldPickPoint = publicAPI.computeDisplayToWorld(model.getRenderer(callData), viewFocus[0], viewFocus[1], focalDepth);\n\n    // Camera motion is reversed\n    const motionVector = [];\n    motionVector[0] = oldPickPoint[0] - newPickPoint[0];\n    motionVector[1] = oldPickPoint[1] - newPickPoint[1];\n    motionVector[2] = oldPickPoint[2] - newPickPoint[2];\n    viewFocus = camera.getFocalPoint();\n    const viewPoint = camera.getPosition();\n    camera.setFocalPoint(motionVector[0] + viewFocus[0], motionVector[1] + viewFocus[1], motionVector[2] + viewFocus[2]);\n    camera.setPosition(motionVector[0] + viewPoint[0], motionVector[1] + viewPoint[1], motionVector[2] + viewPoint[2]);\n    if (model._interactor.getLightFollowCamera()) {\n      model.getRenderer(callData).updateLightsGeometryToFollowCamera();\n    }\n    camera.orthogonalizeViewUp();\n    model.previousTranslation = callData.translation;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleRotate = callData => {\n    const camera = model.getRenderer(callData).getActiveCamera();\n    camera.roll(callData.rotation - model.previousRotation);\n    camera.orthogonalizeViewUp();\n    model.previousRotation = callData.rotation;\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleMouseRotate = (renderer, position) => {\n    if (!model.previousPosition) {\n      return;\n    }\n    const rwi = model._interactor;\n    const dx = position.x - model.previousPosition.x;\n    const dy = position.y - model.previousPosition.y;\n    const size = rwi.getView().getViewportSize(renderer);\n    let deltaElevation = -0.1;\n    let deltaAzimuth = -0.1;\n    if (size[0] && size[1]) {\n      deltaElevation = -20.0 / size[1];\n      deltaAzimuth = -20.0 / size[0];\n    }\n    const rxf = dx * deltaAzimuth * model.motionFactor;\n    const ryf = dy * deltaElevation * model.motionFactor;\n    const camera = renderer.getActiveCamera();\n    if (!Number.isNaN(rxf) && !Number.isNaN(ryf)) {\n      camera.azimuth(rxf);\n      camera.elevation(ryf);\n      camera.orthogonalizeViewUp();\n    }\n    if (model.autoAdjustCameraClippingRange) {\n      renderer.resetCameraClippingRange();\n    }\n    if (rwi.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleMouseSpin = (renderer, position) => {\n    if (!model.previousPosition) {\n      return;\n    }\n    const rwi = model._interactor;\n    const camera = renderer.getActiveCamera();\n    const center = rwi.getView().getViewportCenter(renderer);\n    const oldAngle = degreesFromRadians(Math.atan2(model.previousPosition.y - center[1], model.previousPosition.x - center[0]));\n    const newAngle = degreesFromRadians(Math.atan2(position.y - center[1], position.x - center[0])) - oldAngle;\n    if (!Number.isNaN(newAngle)) {\n      camera.roll(newAngle);\n      camera.orthogonalizeViewUp();\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleMousePan = (renderer, position) => {\n    if (!model.previousPosition) {\n      return;\n    }\n    const camera = renderer.getActiveCamera();\n\n    // Calculate the focal depth since we'll be using it a lot\n    let viewFocus = camera.getFocalPoint();\n    viewFocus = publicAPI.computeWorldToDisplay(renderer, viewFocus[0], viewFocus[1], viewFocus[2]);\n    const focalDepth = viewFocus[2];\n    const newPickPoint = publicAPI.computeDisplayToWorld(renderer, position.x, position.y, focalDepth);\n\n    // Has to recalc old mouse point since the viewport has moved,\n    // so can't move it outside the loop\n    const oldPickPoint = publicAPI.computeDisplayToWorld(renderer, model.previousPosition.x, model.previousPosition.y, focalDepth);\n\n    // Camera motion is reversed\n    const motionVector = [];\n    motionVector[0] = oldPickPoint[0] - newPickPoint[0];\n    motionVector[1] = oldPickPoint[1] - newPickPoint[1];\n    motionVector[2] = oldPickPoint[2] - newPickPoint[2];\n    viewFocus = camera.getFocalPoint();\n    const viewPoint = camera.getPosition();\n    camera.setFocalPoint(motionVector[0] + viewFocus[0], motionVector[1] + viewFocus[1], motionVector[2] + viewFocus[2]);\n    camera.setPosition(motionVector[0] + viewPoint[0], motionVector[1] + viewPoint[1], motionVector[2] + viewPoint[2]);\n    if (model._interactor.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleMouseDolly = (renderer, position) => {\n    if (!model.previousPosition) {\n      return;\n    }\n    const dy = position.y - model.previousPosition.y;\n    const rwi = model._interactor;\n    const center = rwi.getView().getViewportCenter(renderer);\n    const dyf = model.motionFactor * dy / center[1];\n    publicAPI.dollyByFactor(renderer, 1.1 ** dyf);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleMouseWheel = callData => {\n    const dyf = 1 - callData.spinY / model.zoomFactor;\n    publicAPI.dollyByFactor(model.getRenderer(callData), dyf);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.dollyByFactor = (renderer, factor) => {\n    if (Number.isNaN(factor)) {\n      return;\n    }\n    const camera = renderer.getActiveCamera();\n    if (camera.getParallelProjection()) {\n      camera.setParallelScale(camera.getParallelScale() / factor);\n    } else {\n      camera.dolly(factor);\n      if (model.autoAdjustCameraClippingRange) {\n        renderer.resetCameraClippingRange();\n      }\n    }\n    if (model._interactor.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  motionFactor: 10.0,\n  zoomFactor: 10.0\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkInteractorStyle.extend(publicAPI, model, initialValues);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['motionFactor', 'zoomFactor']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkInteractorStyleTrackballCamera(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkInteractorStyleTrackballCamera');\n\n// ----------------------------------------------------------------------------\n\nvar vtkInteractorStyleTrackballCamera$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkInteractorStyleTrackballCamera$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkRenderer from '../Core/Renderer.js';\nimport vtkRenderWindow from '../Core/RenderWindow.js';\nimport vtkRenderWindowInteractor from '../Core/RenderWindowInteractor.js';\nimport vtkInteractorStyleTrackballCamera from '../../Interaction/Style/InteractorStyleTrackballCamera.js';\nimport vtkURLExtract from '../../Common/Core/URLExtract.js';\nimport '../../Common/Core/Points.js';\nimport '../../Common/Core/DataArray.js';\nimport '../../Common/DataModel/PolyData.js';\nimport '../Core/Actor.js';\nimport '../Core/Mapper.js';\nimport '../OpenGL/RenderWindow.js';\nimport '../WebGPU/RenderWindow.js';\n\n// Process arguments from URL\nconst userParams = vtkURLExtract.extractURLParameters();\nfunction vtkGenericRenderWindow(publicAPI, model) {\n  // Capture resize trigger method to remove from publicAPI\n  const invokeResize = publicAPI.invokeResize;\n  delete publicAPI.invokeResize;\n\n  // VTK renderWindow/renderer\n  model.renderWindow = vtkRenderWindow.newInstance();\n  model.renderer = vtkRenderer.newInstance();\n  model.renderWindow.addRenderer(model.renderer);\n\n  // OpenGLRenderWindow\n  model._apiSpecificRenderWindow = model.renderWindow.newAPISpecificView(userParams.viewAPI ?? model.defaultViewAPI);\n  model.renderWindow.addView(model._apiSpecificRenderWindow);\n\n  // Interactor\n  model.interactor = vtkRenderWindowInteractor.newInstance();\n  model.interactor.setInteractorStyle(vtkInteractorStyleTrackballCamera.newInstance());\n  model.interactor.setView(model._apiSpecificRenderWindow);\n  model.interactor.initialize();\n\n  // Expose background\n  publicAPI.setBackground = model.renderer.setBackground;\n\n  // Update BG color\n  publicAPI.setBackground(...model.background);\n\n  // Handle window resize\n  publicAPI.resize = () => {\n    if (model.container) {\n      const dims = model.container.getBoundingClientRect();\n      const devicePixelRatio = window.devicePixelRatio || 1;\n      model._apiSpecificRenderWindow.setSize(Math.floor(dims.width * devicePixelRatio), Math.floor(dims.height * devicePixelRatio));\n      invokeResize();\n      model.renderWindow.render();\n    }\n  };\n\n  // Handle DOM container relocation\n  publicAPI.setContainer = el => {\n    if (model.container) {\n      model.interactor.unbindEvents(model.container);\n    }\n\n    // Switch container\n    model.container = el;\n    model._apiSpecificRenderWindow.setContainer(model.container);\n\n    // Bind to new container\n    if (model.container) {\n      model.interactor.bindEvents(model.container);\n    }\n  };\n\n  // Properly release GL context\n  publicAPI.delete = macro.chain(publicAPI.setContainer, model._apiSpecificRenderWindow.delete, () => {\n    window.removeEventListener('resize', publicAPI.resize);\n  }, publicAPI.delete);\n\n  // Handle size\n  if (model.listenWindowResize) {\n    window.addEventListener('resize', publicAPI.resize);\n  }\n  publicAPI.resize();\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  background: [0.32, 0.34, 0.43],\n  listenWindowResize: true,\n  container: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['renderWindow', 'renderer', '_apiSpecificRenderWindow', 'interactor', 'container']);\n  macro.moveToProtected(publicAPI, model, ['_apiSpecificRenderWindow']);\n  macro.event(publicAPI, model, 'resize');\n\n  // Object specific methods\n  vtkGenericRenderWindow(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkGenericRenderWindow$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkGenericRenderWindow$1 as default, extend, newInstance };\n"],"names":["vtkGlobal","globalThisShim","factoryMapping","vtk","obj","constructor","model","keyName","newInst","register","vtkClassName","ClassHierarchy","i","globalMTime","VOID","getCurrentGlobalMTime","fakeConsole","noOp","consoleMethods","methodName","loggerFunctions","setLoggerFunction","name","fn","vtkLogMacro","vtkInfoMacro","vtkDebugMacro","vtkErrorMacro","vtkWarningMacro","ERROR_ONCE_MAP","vtkOnceErrorMacro","str","TYPED_ARRAYS","newTypedArray","type","_len","args","_key","newTypedArrayFrom","_len2","_key2","capitalize","_capitalize","uncapitalize","formatBytesToProperUnit","size","precision","chunkSize","units","value","currentUnit","formatNumbersWithThousandSeparator","n","separator","sections","safeArrays","key","isTypedArray","ctor","shallowEquals","a","b","enumToString","e","getStateArrayMapFunc","item","setImmediateVTK","measurePromiseExecution","promise","callback","start","delta","publicAPI","callbacks","hierarchy","off","index","on","unsubscribe","otherMTime","className","count","depth","map","noWarning","noFunction","ret","_len3","list","_key3","subset","val","field","el","jsonArchive","sortedObj","other","debug","otherModel","keyList","keyIdx","objectGetterMap","get","fieldNames","getter","objectSetterMap","onChanged","previousValue","_a","_len4","_key4","acc","prop","idx","DeepEqual","_b","findSetter","set","fields","setGet","getArray","setArray","defaultVal","_len5","_key5","array","changeDetected","needCopy","otherArray","target","v","setGetArray","moveToProtected","fieldName","algo","numberOfInputs","numberOfOutputs","setInputData","dataset","port","getInputData","setInputConnection","outputPort","msg","getInputConnection","getPortToFill","portToFill","addInputConnection","addInputData","getOutputData","localMTime","minOutputMTime","mt","getOutputPort","outputPortAccess","ins","inputPort","arrayDesc","ds","arrayName","fieldAssociation","attributeType","EVENT_ABORT","event","eventName","previousDelete","curCallbackID","callbackID","cbID","invoke","currentCallbacks","cb","priority","cb1","cb2","_ref","newInstance","extend","initialValues","chain","_len6","_key6","_len7","_key7","isVtkObject","instance","traverseInstanceTree","extractFunction","accumulator","visitedInstances","result","modelObj","subObj","debounce","func","wait","immediate","_this","timeout","debounced","_len8","_key8","context","later","callNow","throttle","delay","isThrottled","argsToUse","next","wrapper","_len9","_key9","keystore","initialKeystore","nextProxyId","ROOT_GROUP_NAME","proxy","parentDelete","propertyMap","groupChildrenNames","registerProperties","descriptionList","currentGroupName","childrenNames","ui","k","listProxyProperties","gName","propertyName","propUI","setActiveMethod","otherLink","subscribers","id","persistent","links","updateInProgress","update","source","force","needUpdate","sourceLink","link","newValue","linkToUpdate","unbind","indexToDelete","bind","updateMe","subscription","linkHandler","getProperties","groupName","values","propertyNames","method","children","p","registerLinks","property","updateOnBind","sLink","proxyPropertyMapping","subscriptions","modelKey","modified","methodSrc","methodDst","proxyPropertyState","state","defaults","applyState","modelKeys","mapping","propValues","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","normalizeWheel","wheelEvent","sX","sY","pX","pY","macro","macro$1","PASS_TYPES","vtkViewNode","prepass","renderPass","passTraversal","customRenderPass","dataObject","vn","lastAncestor","dobj","newNode","dataObjs","child","childRenderable","childIdx","x","renderable","visitedCount","dataObj","DEFAULT_VALUES","vtkViewNode$1","vtkViewNodeFactory","cpt","isObject","keys","vtkViewNodeFactory$1","CLASS_MAPPING","registerOverride","vtkOpenGLViewNodeFactory","vtkOpenGLCamera","tsize","ren","mat4.copy","mat3.fromMat4","mat3.invert","mat4.transpose","aspectRatio","mat4.multiply","newInstance$1","vtkOpenGLRenderer","lights","clearMask","gl","ts","viewport","vport","tileViewPort","vpu","vpv","ndvp","lowerLeftU","lowerLeftV","vpu2","vpv2","ndvp2","usize","vsize","background","rw","vtkOpenGLActor","mat3.identity","mat3.transpose","mat4.identity","vtkOpenGLActor2D","ObjectType","Constants","STATIC","vtkOpenGLBufferObject","convertType","internalType","internalHandle","dirty","error","objectTypeGL","data","vtkBufferObject","Shading","Representation","Interpolation","PropertyConst","computeInverseShiftAndScaleMatrix","coordShift","coordScale","inverseScale","vec3.inverse","matrix","mat4.fromRotationTranslationScale","quat.create","shouldApplyCoordShiftAndScale","vec3.exactEquals","vtkOpenGLCellArrayBufferObject","cellArray","inRep","outRep","options","selectionMaps","pointData","normalData","tcoordData","colorData","colorComponents","textureComponents","pointIdx","normalIdx","tcoordIdx","colorIdx","custIdx","cellCount","addAPoint","cellBuilders","numPoints","cellPts","offset","cellId","cellIdx","npts","cellCounters","countFunc","caboCount","packedUCVBO","packedVBO","vboidx","ucidx","diagSq","distSq","range","distShift","newPoints","newCells","pointCount","pointId","attr","j","vec3.equals","vtkCellArrayBufferObject","vtkShader","stype","lastError","vtkShader$1","substitute","search","replace","all","replaceStr","replaceSearch","resultstr","vtkShaderProgram","line","ctx","location","f32","v1","v2","a1","a2","a3","loc","shader","thandle","mtime","vtkShaderProgram$1","vtkOpenGLVertexArrayObject","ibuff","buff","iatt","attrIt","matrixCount","program","buffer","stride","elementType","elementTupleSize","normalize","divisor","isMatrix","attribs","buffFound","found","vtkVertexArrayObject","primTypes","vtkOpenGLHelper","win","oglwin","actor","rep","oglMapper","mode","wideLines","depthMask","shaders","newShader","lineWidth","halfLineWidth","VSSource","vtkHelper","vtkAbstractMapper","plane","clippingPlane","planes","nbPlanes","propMatrix","hnormal","clipPlanes","mat","normal","origin","v3","v4","vtkAbstractMapper$1","IDENTITY","IDENTITY_3X3","EPSILON","VTK_SMALL_NUMBER","randomSeedValue","VTK_MAX_ROTATIONS","notImplemented","swapRowsMatrix_nxn","row1","row2","tmp","swapColumnsMatrix_nxn","column1","column2","createArray","res","Pi","ldexp","exponent","radiansFromDegrees","deg","degreesFromRadians","rad","round","floor","ceil","min","max","arrayMin","arr","minValue","len","arrayMax","maxValue","arrayRange","ceilLog2","factorial","nearestPowerOfTwo","xi","isPowerOfTwo","binomial","m","beginCombination","nextCombination","status","randomSeed","seed","seedrandom","getSeed","random","gaussian","add","out","subtract","multiplyScalar","vec","scalar","multiplyScalar2D","multiplyAccumulate","multiplyAccumulate2D","dot","y","outer","out_3x3","cross","Zx","Zy","Zz","norm","sum","den","perpendiculars","z","theta","x2","y2","z2","r","dx","dy","dz","c","sintheta","costheta","projectVector","projection","bSquared","scale","dot2D","projectVector2D","distance2BetweenPoints","angleBetweenVectors","crossVect","signedAngleBetweenVectors","vN","angle","gaussianAmplitude","mean","variance","position","distanceFromMean","gaussianWeight","outer2D","out_2x2","norm2D","x2D","normalize2D","determinant2x2","LUFactor3x3","mat_3x3","index_3","maxI","largest","LUSolve3x3","x_3","linearSolve3x3","y_3","b1","c1","b2","c2","b3","c3","d1","d2","d3","e1","e2","e3","f1","f2","f3","det","multiply3x3_vect3","in_3","out_3","multiply3x3_mat3","a_3x3","b_3x3","copyA","copyB","multiplyMatrix","rowA","colA","rowB","colB","outRowAColB","transpose3x3","in_3x3","outT_3x3","invert3x3","outI_3x3","determinant3x3","areEquals","eps","isEqual","element","areMatricesEqual","identity3x3","identity","isIdentity","isIdentity3x3","quaternionToMatrix3x3","quat_4","ww","wx","wy","wz","xx","yy","zz","xy","xz","yz","rr","f","s","roundNumber","num","digits","sig","roundVector","vector","jacobiN","w","iq","ip","numPos","tresh","t","tau","sm","h","g","vtkROTATE","aa","ii","jj","ceil_half_n","matrix3x3ToQuaternion","eigenvectors","eigenvalues","NTemp","multiplyQuaternion","quat_1","quat_2","quat_out","xw","yw","yx","zw","zx","zy","orthogonalize3x3","x1","x3","y3","flip","quat","diagonalize3x3","w_3","v_3x3","maxVal","vectTmp1","vectTmp2","eigenValTmp","singularValueDecomposition3x3","u_3x3","vT_3x3","B","d","luFactorLinearSystem","A","temp1","temp2","luSolveLinearSystem","solveLinearSystem","invertMatrix","AI","column","tmp1Size","tmp2Size","estimateMatrixCondition","jacobi","solveHomogeneousLeastSquares","numberOfSamples","xt","xOrder","XXt","eigenvals","eigenvecs","solveLeastSquares","yt","yOrder","checkHomogeneous","homogenFlags","allHomogeneous","hmt","homogRC","someHomogeneous","XXtI","XYt","successFlag","hex2float","hexStr","outFloatArray","rgb2hsv","rgb","hsv","onethird","onesixth","twothird","cmax","cmin","hsv2rgb","fivesixth","lab2xyz","lab","xyz","L","var_Y","var_X","var_Z","ref_X","ref_Y","ref_Z","xyz2lab","xyz2rgb","rgb2xyz","rgb2lab","lab2rgb","uninitializeBounds","bounds","areBoundsInitialized","computeBoundsFromPoints","point1","point2","clampValue","clampVector","minVector","maxVector","clampAndNormalizeValue","getScalarTypeFittingRange","getAdjustedScalarRange","extentIsWithinOtherExtent","extent1","extent2","boundsIsWithinOtherBounds","bounds1_6","bounds2_6","delta_3","pointIsWithinBounds","point_3","bounds_6","solve3PointCircle","p1","p2","p3","center","v21","v32","v13","v12","v23","v31","norm12","norm23","norm13","crossv21v32","normCross","radius","normCross22","alpha","beta","gamma","inf","negInf","isInf","isFinite","isNaN","isNan","createUninitializedBounds","getMajorAxisIndex","axisIndex","getSparseOrthogonalMatrix","rows","cols","bestValue","bestRowI","bestColI","rowI","row","colI","col","absVal","output","matIdx","floatToHex2","integer","floatRGB2HexCode","rgbArray","floatToChar","float2CssRGBA","vtkMath","vtkImplicitFunction","transformedXYZ","_xyz","vtkImplicitFunction$1","PLANE_TOLERANCE","COINCIDE","DISJOINT","evaluate","distanceToPlane","distance","projectPoint","xproj","xo","vproj","n2","generalizedProjectPoint","intersectWithLine","outObj","p21","p1Origin","fabsden","fabstolerance","intersectWithPlane","plane1Origin","plane1Normal","plane2Origin","plane2Normal","cross$1","absCross","maxc","iP","vtkPlane","planeOrigin","planeNormal","vtkPlane$1","INIT_BOUNDS","equals","isValid","setBounds","otherBounds","reset","addPoint","xMin","xMax","yMin","yMax","zMin","zMax","addPoints","points","addBounds","_xMin","_xMax","_yMin","_yMax","_zMin","_zMax","setMinPoint","setMaxPoint","inflate","sx","sy","sz","getCenter","scaleAboutCenter","getLength","getLengths","getXRange","getYRange","getZRange","getMaxLength","l","getDiagonalLength","getMinPoint","getMaxPoint","oppositeSign","getCorners","corners","ix","iy","iz","computeCornerPoints","transformBounds","transform","vec3.transformMat4","computeScale3","scale3","computeLocalBounds","u","pointsData","point","du","dv","dw","intersectBox","dir","coord","tolerance","inside","quadrant","whichPlane","maxT","candidatePlane","RIGHT","LEFT","MIDDLE","intersectPlane","sign","firstOne","intersect","bBounds","newBounds","intersection","intersects","containsPoint","contains","cutWithPlane","ti","bound","BoundingBox","refBounds","vtkBoundingBox","vtkAbstractMapper3D","defaultValues","vtkAbstractMapper3D$1","DataTypeByteSize","VtkDataTypes","DefaultDataType","fastComputeRange","numberOfComponents","createRangeHelper","computeRange","component","numberOfValues","nextJ","ensureRangeSize","rangeArray","ranges","getDataType","typedArray","getMaxNorm","normArray","numComps","maxNorm","tuple","norm$1","vtkDataArray","resize","requestedNumTuples","curNumTuples","oldValues","newSize","tupleIdx","compIdx","valueIdx","comp","componentIndex","rangeIdx","rangeValue","tuples","last","end","match","tupleToFill","fromId","toId","from","to","currentType","currentArray","source1","source1Idx","source2","source2Idx","tuple1","tuple2","vtkDataArray$1","vtkFieldData","superGetState","arrayIdx","entry","arraySpec","copyFlag","destArr","tId","attrType","ncomps","fromId1","fromId2","arrNew","vtkFieldData$1","AttributeTypes","AttributeLimitTypes","CellGhostTypes","PointGhostTypes","AttributeCopyOperations","ghostArrayName","DesiredOutputPrecision","vtkDataSetAttributes","attrTypes","cleanAttributeType","attType","cleanAttType","ee","superClass","uncleanAttType","currentAttribute","activeVal","da","op","attCopyOp","ty","superShallowCopy","vtkDataSetAttributes$1","FieldDataTypes","FieldAssociations","DATASET_FIELDS","vtkDataSet","vtkDataSet$1","StructuredType","getDataDescriptionFromExtent","inExt","dataDim","vtkStructuredData","vtkImageData","inExtent","extentArray","dims","nCells","ijk","coords","ex","mat4.fromTranslation","mat4.scale","mat4.invert","ain","aout","bin","bout","worldBounds","voxelFunction","dimensions","yStride","zStride","pixels","maximum","minimum","sumOfSquares","isum","inum","pixel","average","sigma","extent","increments","incr","offsetIndex","vtkImageData$1","VectorMode","ScalarMappingTarget","vtkScalarsToColors","ColorMode","ScalarMode","GetArray","vtkScalarsToColors$2","intColorToUChar","floatColorToUChar","annotations","annotation","needToRemove","rgba","na","scalars","colorMode","componentIn","newColors","newscalars","input","compsToUse","length","inIncr","outputV","inputV","outputFormat","vectorComponentIn","vectorSizeIn","vectorMode","vectorSize","vectorComponent","inComponents","inputOffset","magValues","colors","convtFun","newValues","numComp","numTuples","vtkScalarsToColors$1","BELOW_RANGE_COLOR_INDEX","ABOVE_RANGE_COLOR_INDEX","NAN_COLOR_INDEX","vtkLookupTable","opaque","dIndex","nv","table","outFormat","lookupFunc","trange","cptr","hinc","sinc","vinc","ainc","maxIndex","nbComponents","colorOffset","color","numberOfColors","tptr","base","vtkLookupTable$1","Resolve","resolveCoincidentTopologyPolygonOffsetFaces","resolveCoincidentTopology","RESOLVE_COINCIDENT_TOPOLOGY_MODE","getResolveCoincidentTopologyPolygonOffsetFaces","setResolveCoincidentTopologyPolygonOffsetFaces","changed","getResolveCoincidentTopology","setResolveCoincidentTopology","setResolveCoincidentTopologyToDefault","setResolveCoincidentTopologyToOff","setResolveCoincidentTopologyToPolygonOffset","getResolveCoincidentTopologyAsString","otherStaticMethods","addCoincidentTopologyMethods","nameList","CATEGORIES","staticOffsetModel","staticOffsetAPI","implementCoincidentTopologyMethods","globalValue","localValue","CoincidentTopologyHelper","PassTypes","updateZigzaggingCoordinates","coordinates","directionX","directionY","getIndexFromCoordinates","getZigZagTextureCoordinatesFromTexelPosition","textureCoordinate","texelIndexPosition","intTexelIndex","xCoordBeforeWrap","xDirection","xEndFlag","intRowIndex","yCoordBeforeWrap","yDirection","yEndFlag","remainder","colorTextureCoordinatesCache","getOrCreateColorTextureCoordinates","numberOfColorsInRange","useLogScale","useZigzagPattern","argStrings","argIndex","arg","stringHash","cachedResult","scalarTexelWidth","paddedRangeMin","paddedRangeMax","textureSOrigin","textureSCoeff","texelIndexOrigin","texelIndexCoeff","numScalars","useMagnitude","numberOfOutputComponents","nanTextureCoordinate","inputIdx","outputIdx","scalarIdx","scalarValue","compValue","textureS","vtkMapper","selectionWebGLIdsToVTKIds","scalarMode","arrayAccessMode","arrayId","cellFlag","pd","cd","fd","toString","lut","origAlpha","numberOfAvailableColors","maxTextureWidthForCells","maxColorsInRangeForCells","maxColorsInRangeForPoints","minColorsInRange","maxColorsInRange","numberOfColorsForCells","numberOfColorsInUpperRowForPoints","textureDimensions","textureSize","scalarsArray","numberOfNonSpecialColors","numberOfNonNaNColors","textureCoordinates","rangeMin","rangeDifference","scalarsArrayIndex","scalarsDataArray","colorsDataArray","scalarComponent","time","selector","pixelOffsets","rawLowData","rawHighData","currentPass","idMap","pos","inValue","outValue","lowData","highData","vtkMapper$1","Wrap","Filter","floatView","int32View","toHalf","bits","fromHalf","HalfFloat","supportsNorm16Linear","texData","pixelToCheck","canvas","ext","vs","fs","vertexShader","fragmentShader","tex","webglLoseContext","supportsNorm16LinearCache","supportsNorm16LinearCached","vtkOpenGLTexture","renWin","jsid","inScalars","indata","getNorm16Ext","rwin","vtktype","iFormat","vtkScalarType","useHalfFloat","halfFloat","forceUpdate","shift","emode","dataType","pixData","pixCount","dataArrayToCopy","halfFloatExt","newArray","src","scaleTextureToHighestPowerOfTwo","width","height","newWidth","newHeight","jFactor","iFactor","usingHalf","joff","jidx","jlow","jhi","jmix","jmix1","ioff","iidx","ilow","ihi","imix","useTexStorage","dataArray","scaledData","invertedData","widthLevel","heightLevel","tempData","image","needNearestPowerOfTwo","safeImage","computeScaleOffsets","hasExactHalfFloat","setCanUseHalfFloat","preferSizeOverAccuracy","isExactHalfFloat","processDataArray","minArray","maxArray","scaleOffsets","isScalingApplied","dataTypeToUse","dataToUse","numPixelsIn","scaleOffsetsCopy","scaleInverse","nc","is3DArray","volCopyData","outArray","outIdx","smin","smax","soffset","sscale","maxTexDim","xstride","ystride","targetWidth","xreps","yreps","targetHeight","tileWidth","tileHeight","yRep","xrepsThisRow","outXContIncr","tileY","xRep","inOffset","tileX","use","vtkOpenGLTexture$1","CoordinateSystem","vtkProp","m1","m2","pixeloffsets","texture","newTextureList","vtkProp$1","vtkProperty","specularPower","roughness","vtkProperty$1","vtkPolyDataVS","vtkPolyDataFS","implementReplaceShaderCoincidentOffset","cp","FSSource","implementBuildShadersWithReplacements","viewSpec","pre","shaderReplacements","currReplacement","shaderType","ssrc","substituteRes","openGLSpec","openGLSpecProp","vertexShaderCode","vertexSpecProp","fragmentShaderCode","fragmentSpecProp","geometryShaderCode","geometrySpecProp","vtkReplacementShaderMapper","StartEvent","EndEvent","getPickState","renderer","vtkOpenGLPolyDataMapper","GSSource","lastLightComplexity","colorDec","colorImpl","shadowFactor","lastLightCount","sstring","lc","tus","tNumComp","tcdim","numClipPlanes","primType","cellBO","lightComplexity","numberOfLights","poly","needLighting","pointNormals","cellNormals","flat","representation","light","needRebuild","listCallbacks","object","attrName","planeEquations","inverseShiftScaleMatrix","planeEquation","texUnit","tname","dColor","intensity","ld","newLightDirection","viewTF","lp","np","safeMatrixMultiply","matrixArray","matrixType","tmpMat","keyMats","cam","camm","progm","actorIsIdentity","actMats","mat4","mat3","ppty","opacity","aColor","aIntensity","dIntensity","sIntensity","sColor","_d","_c","picking","drawSurfaceWithEdges","pointPicking","backfaceCulling","frontfaceCulling","vmtime","tcoords","useTCoordsPerCell","primitives","memUsed","prim","vtkOpenGLPolyDataMapper$1","vtkMapper2D","vtkMapper2D$1","INVALID_BOUNDS","vtkPoints","nbPoints","dimension","xRange","yRange","zRange","vtkPoints$1","vtkPolyData2DFS","vtkPolyData2DVS","DisplayLocation","vtkOpenGLPolyDataMapper2D","transformCoordinate","numPts","diffuseColor","actorPos","tileViewport","visVP","winSize","xoff","yoff","left","right","bottom","top","tmpMat4","vtkOpenGLSkybox","imat","camPos","ptsArray","cells","tmaps","vtkOpenGLPixelSpaceCallbackMapper","camera","texels","zbt","fb","framebuffer","extractCellSizes","currentIdx","getNumberOfCells","cellArrayIndex","vtkCellArray","recompute","oldNumTuples","newNumTuples","cellLoc","numberOfPoints","cellPointIds","vtkCellArray$1","vtkCell","pointIdsList","triangleData","pointOffset","trianglePointOffset","diff","pcoords","pDist","pDistMax","cell","tol","subId","closestPoint","dist2","weights","vtkCell$1","vtkCellLinks","numCells","linkLoc","cellPointId","numLinks","ptId","vtkCellLinks$1","CellType","CellTypesStrings","getClassNameFromTypeId","typeId","getTypeIdFromClassName","cellTypeString","isLinear","hasSubCells","cellType","vtkCellTypes","ncells","cellTypes","cellLocations","numTypes","vtkCellTypes$1","IntersectionState","distanceToLine","closest","denom","a21","b21","b1a1","minDist","l1","l2","vtkLine","isBetweenPoints","projXYZ","outDistance","q","quat.slerp","vtkLine$1","vtkPointSet","vtkPointSet$1","computeNormalDirection","ax","ay","az","bx","by","bz","computeNormal","intersectWithTriangle","q1","r1","q2","r2","coplanar","pt1","pt2","surfaceId","n1","s1","s2","dist1","pts1","pts2","n1n2","index1","index2","t1","t2","ts1","ts2","id1","id2","val1","val2","t12","t22","t11","t21","tt1","tt2","vtkTriangle","tol2","pt3","dist2Pt1Pt2","dist2Pt2Pt3","dist2Pt3Pt1","intersectLine","pt3Pt1","pt3Pt2","pt3X","fabsn","rhs","indices","dist2Point","dist2Line1","dist2Line2","closestPoint1","closestPoint2","maxComponent","lineDistance","p0","u3","pc","vtkTriangle$1","POLYDATA_FIELDS","CELL_FACTORY","vtkPolyData","camelize","letter","nVerts","nLines","nPolys","nStrips","types","pTypes","locs","pLocs","nextCellPts","numCellPts","initialSize","link1","link2","cellHint","cellInfo","vtkPolyData$1","SegmentAgregator","segment","first","mappingFirst","mappingLast","seg","idxHead","idxTail","segHead","segTail","vtkClosedPolyLineToSurfaceFilter","inData","outData","agregator","lines","lineSize","lineSegment","faces","cellArraySize","face","vtkClosedPolyLineToSurfaceFilter$1","initPolyIterator","polys","strips","it","vtkCutter","mTime","dataSetCutter","newPointsData","newLinesData","newPolysData","outOffset","crossedEdges","cellPointsScalars","sideFirstPoint","allPointsSameSide","intersectedEdgesList","idNext","signPoint0","deltaScalar","pointID1","pointID2","computedIntersectedPoint","intersectedEdge","alreadyAdded","crossedEdge","sameEdge","samePoint","cellSize","edge","vtkCutter$1","NoOp","Transform","useDegree","glMatrix.toRadian","originDirection","targetDirection","dst","transf","vec3.set","vec3.normalize","cosAlpha","vec3.dot","vec3.cross","vec3.length","mat4.fromRotation","axis","mat4.rotate","mat4.rotateX","mat4.rotateY","mat4.rotateZ","mat4.translate","mat4x4","mat3x3","nbIterations","buildFromDegree","buildFromRadian","vtkMatrixBuilder","LINE_ARRAY","POLY_ARRAY","vtkCubeSource","requestData","polyData","normals","normalArray","textureCoords","tc","pointIndex","rotMatrix","boundsArray","vtkCubeSource$1","vtkImageDataOutlineFilter","spatialExt","vtkImageDataOutlineFilter$1","vtkTransform","inPoint","outPoint","matrices","inMat","outMat","vtkTransform$1","getTransferFunctionHash","transferFunction","useIndependentComponents","getImageDataHash","vtkImageResliceMapperVS","vtkImageResliceMapperFS","InterpolationType","vtkOpenGLImageResliceMapper","unregisterGraphicsResources","renderWindow","coreObject","oldOglRenderWindow","iComps","numIComps","textureHeight","colorTransferFunc","cTex","cSize","cTable","tmpTable","cfun","cRange","pwFunc","pwfTex","pwfSize","pwfTable","pwfFloatTable","pwfun","pwfRange","vboString","dim","volInfo","cw","cl","texColorUnit","pwfScale","pwfShift","mid","texOpacityUnit","iComp","slabTh","slabType","slabTrap","tcoordVSDec","slabThickness","tcoordVSImpl","tcoordFSDec","tcoordFSImpl","posVCVSDec","posVCVSImpl","posVCFSDec","isVectorAxisAligned","tmpN","vec3.zero","dotP","resGeomString","imageBounds","orthoSlicing","orthoAxis","slicePD","slicePlane","w2io","mat3.create","mat3.set","imageLocalNormal","vec3.transformMat3","bds","indexSpacePlaneOrigin","otherAxes","ptIdx","normalsData","planePD","oglTex","SlicingMode","splitStringOnEnter","inputString","trimmedLines","trimmedLine","vtkOpenGLImageMapper","tcoordDec","tcoordImpl","vtkErrorMacro$1","oglShiftScale","outlineThicknessUnit","outlineOpacity","i2wmat4","inverseShiftScaleMat","worldToIndex","imageDimensions","sliceAxis","labelOutlineKeyMats","imgScalars","actorProperty","iType","cfunToString","cWidth","pwfunToString","ijkMode","slice","nSlice","sliceOffset","sliceSize","tcoordArray","sliceDepth","basicScalars","bsIdx","labelOutlineThicknessArray","lTex","lTable","thickness","ProjectionMode","vtkOpenGLImageCPRMapper","centerline","cachedScalarsEntry","volumeTextureHash","colorTextureHash","cachedColorEntry","pwfTextureHash","cachedPwfEntry","nPoints","distances","totalHeight","nPts","widthMC","lineIdx","pointsDataArray","centerlinePositionArray","pa","pb","centerlinePosition","quadIndexArray","quadIndex","customAttributes","orientationQuats","centerlineTopOrientationArray","centerlineBotOrientationArray","quadIdx","topQuat","botQuat","pointInQuadIdx","quaternionArrayOffset","centerlineTopOrientation","centerlineBotOrientation","useCenterPoint","useUniformOrientation","projectionMode","applyQuaternionToVecShaderFunction","vsColorDec","useProjection","isDirectionUniform","vsColorImpl","centerPoint","cellArrayBufferObject","tangentDirection","bitangentDirection","uniformOrientation","spacing","projectionSlabThickness","projectionSlabNumberOfSamples","volumeSize","vec3.mul","constantOffset","stepLength","MCICMatrix","ICTCMatrix","mat4.fromScaling","MCTCMatrix","mat4.mul","MCWCMatrix","WCPCMatrix","vtkOpenGLImageSlice","vtkOpenGLVolume","vtkFramebuffer","modeIn","attachment","glAttachment","vtkOpenGLFramebuffer","OpacityMode","ColorMixPreset","BlendMode","FilterMode","vtkVolumeVS","vtkVolumeFS","getColorCodeFromPreset","colorMixPreset","vtkOpenGLVolumeMapper","actorProps","useIndependentComps","proportionalComponents","forceNearestComponents","colorMixCode","spc","maxSamples","lightNum","clipPlaneSize","recomputeLightComplexity","opacityModes","forceNearestInterps","hasZBufferTexture","ipScalarRange","minVals","maxVals","crange","dcxmin","dcxmax","dcymin","dcymax","vec3.scale","mat3.multiply","vctoijk","vec3.divide","pos2","dist","cRange0","cRange1","lightColor","lightDir","halfAngle","ldir","lightPositionVC","lightAttenuation","lightConeAngle","lightExponent","lightPositional","attenuation","ks","kernelSample","vprop","oRange","oscale","oshift","cshift","cScale","gomin","gomax","goRange","labelOutlineOpacity","clipPlaneNormals","clipPlaneDistances","clipPlaneOrigins","clipPlaneNormal","clipPlanePos","clipPlaneDist","rwi","baseSampleDistance","factor","frate","adjustment","scaleFactor","fbSize","oTable","scalarOpacityFunc","opTex","oWidth","oSize","ofTable","ofun","opacityFactor","volume","lWidth","lHeight","lSize","vtkHardwareSelector","fx1","fy1","fx2","fy2","srcData","vtkHardwareSelector$1","SelectionContent","SelectionField","vtkSelectionNode","vtkSelectionNode$1","idOffset","getInfoHash","info","getAlpha","area","convert","getID","low24","high8","getPixelInformationWithData","buffdata","inDisplayPosition","maxDistance","outSelectedPosition","maxDist","displayPosition","actorid","compositeID","high24","dispPos","curPos","convertSelection","fieldassociation","dataMap","captureZValues","openGLRenderWindow","sel","generateSelectionWithData","y1","hash","dmv","vtkOpenGLHardwareSelector","originalBlending","rpasses","pixelBufferSavedPasses","pass","passNo","pixelbuffer","attribid","superSetArea","vtkOpenGLGlyph3DMapper","a00","a01","a02","a03","a10","a11","a12","a13","a20","a22","a23","a30","a31","a32","a33","b0","normalMatrixUsed","mcvcMatrixUsed","carray","garray","narray","ofs","b00","b01","b02","b10","b11","b12","b20","b22","cdata","compositePass","cabo","parray","toNativeType","extractURLParameters","castToNativeType","query","summary","vtkURLExtract","ViewTypes","RenderingTypes","CaptureOn","WidgetManagerConst","vtkPiecewiseFunction","prevValue","functionType","allZero","oldX","midpoint","sharpness","node","nodes","oldRange","retVal","modifiedInvoked","functionRange","currentDist","xStart","xEnd","numNodes","lastValue","tidx","ss","sss","h1","h2","h3","h4","slope","vtkPiecewiseFunction$1","funcToSource","sourcemapArg","sourcemap","regex","createURL","blob","createInlineWorkerFactory","url","WorkerFactory","_createClass$1","defineProperties","props","descriptor","Constructor","protoProps","staticProps","_classCallCheck$1","TinyEmitter$1","TinyEmitter","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","handler","err","once","tinyEmitter","_createClass","_get","receiver","desc","parent","_typeof","_toConsumableArray","arr2","_classCallCheck","_possibleConstructorReturn","self","call","_inherits","subClass","_defineProperty","MESSAGE_RESULT","MESSAGE_EVENT","RESULT_ERROR","RESULT_SUCCESS","DEFAULT_HANDLER","isPromise","o","RegisterPromise","handlers","sendPostMessage","server","_TinyEmitter","WorkerRegister","TransferableResponse","_get2","run","messageId","payload","handlerName","onSuccess","sendResult","onError","runFn","sendEvent","success","transferable","registerWebworker","message","emit","step","numberOfBins","histogram","MIN_GAUSSIAN_WIDTH","ACTION_TO_CURSOR","TOUCH_CLICK","ACTIONS","originalXY","originalGaussian","xOffset","_ref2","_ref3","_ref4","gaussianSide","_ref5","rangeZoom","absNormX","minDelta","maxDelta","halfDelta","computeOpacities","gaussians","sampling","opacities","xBias","yBias","correctedWidth","x0","h0a","h0b","h0c","applyGaussianToPiecewiseFunction","rangeToUse","piecewiseFunction","drawChart","style","verticalScale","horizontalScale","fill","updateColorCanvas","colorTransferFunction","workCanvas","pixelsArea","nbValues","updateColorCanvasFromImage","img","normalizeCoordinates","subRectangeArea","zoomRange","findGaussian","createListener","preventDefault","offsetX","offsetY","createTouchClickListener","processTouchClicks","touchHandle","createTouchListener","nbTouches","targetBounds","singleTouche","listenerSelector","condition","ok","ko","rescaleArray","focusArea","maxIdx","idxRange","rescaleValue","vtkPiecewiseGaussianWidget","nextIndex","numberOfBinToConsiders","numberOfBinsToSkip","maxNumberOfWorkers","arrayStride","arrayIndex","workerChunks","workers","worker","workerPromise","WebworkerPromise","arrayStart","arrayEnd","subArray","subHistograms","subHistogram","sampleSize","sortedArray","xNormalized","yNormalized","buttonIdx","gaussianIdx","action","newSelected","xNormalizedAbs","newActive","thirdDelta","invY","actionName","isDown","touchId","eventType","graphArea","zoomControlHeight","halfSize","activeGaussian","activeOpacities","xCenter","yTop","yMiddle","yBottom","widthInPixel","sliderWidth","dataRange","minIndex","enableZoom","change","vtkPiecewiseGaussianWidget$1","Defaults","Mode","applyPointsToPiecewiseFunction","pwf","rescaled","applyNodesToPiecewiseFunction","copyGaussians","vtkPiecewiseFunctionProxy","vtkPiecewiseFunctionProxy$1","ITKJSPixelTypes","ITKWASMPixelTypes","vtkArrayTypeToItkComponentType","itkComponentTypeToVtkArrayType","convertItkToVtkImage","itkImage","vtkImage","direction","isITKWasm","ITKPixelTypes","imageData","convertVtkToItkImage","copyData","idy","vtkArray","convertItkToVtkPolyData","itkPolyData","pointDataArrays","cellDataArrays","vtkPolyDataModel","convertVtkToItkPolyData","pdArray","cdArray","ITKHelper","presetMap","vtkColorMaps$1","rgbPresetNames","getPresetByName","addPreset","preset","removePresetByName","vtkColorMaps","vtkAbstractManipulator","callData","curWorldCoords","manipulatorResults","worldDelta","vtkAbstractManipulator$1","intersectDisplayWithPlane","glRenderWindow","near","far","vtkPlaneManipulator","vtkPlanePointManipulator","Device","Input","Axis","EMPTY_MOUSE_EVENT","deviceInputMap","handledEvents","pointerCacheToPositions","cache","positions","pointerId","vtkRenderWindowInteractor","animationRequesters","pointerCache","wheelCoefficient","aren","updateCurrentRenderer","_getScreenEventPositionFor","scaleX","scaleY","getScreenEventPositionFor","getModifierKeysFor","getKeysFor","modifierKeys","getDeviceTypeFor","_bindEvents","container","_unbindEvents","pointer","forceRender","requestor","duration","newEnd","skipWarning","requestStr","xrSession","xrFrame","xrRefSpace","inputSource","gripPose","targetRayPose","gamepad","hand","currTime","pointers","rc","interactiveren","viewportren","currentRenderer","lowerFirst","posVals","startVals","originalDistance","newDistance","originalAngle","newAngle","angleDeviation","trans","thresh","pinchDistance","rotateDistance","panDistance","vtkRenderWindowInteractor$1","computeWorldToDisplay","computeDisplayToWorld","vtkInteractorObserver","unsubscribeFromEvents","subscribeToEvents","enable","vtkInteractorObserver$1","WIDGET_PRIORITY","vtkAbstractWidget","selectedState","renderingType","vtkAbstractWidget$1","viewIdCount","extractRenderingComponents","interactor","apiSpecificRenderWindow","getPixelWorldHeightAtCoord","worldCoord","displayScaleParams","dispHeightFactor","cameraPosition","cameraDir","isParallel","rendererPixelDims","worldCoordToCamera","rHeight","vtkWidgetManager","propsWeakMap","updateWidgetWeakMap","widget","representations","actors","getViewWidget","updateDisplayScaleParams","_apiSpecificRenderWindow","_camera","_renderer","rwW","rwH","vxmin","vymin","vxmax","vymax","pixelRatio","updateSelection","fromTouchEvent","callID","requestCount","activateHandle","cursor","wantRender","handleEvent","updateWidgetForRender","renderPickingBuffer","renderFrontBuffer","captureBuffers","renderingComponents","eventData","deviceType","touchEvent","addWidgetInternal","viewWidget","viewType","viewId","removeWidgetInternal","onWidgetRemoved","capturedRegion","propID","superDelete","vtkWidgetManager$1","vtkAbstractWidgetFactory","viewToWidget","widgetModel","widgetPublicAPI","widgetInitialValues","builder","labels","methods","calls","viewIds","vtkAbstractWidgetFactory$1","DEFAULT_LABEL","removeObjectInArray","vtkWidgetState","nested","label","labelToUse","excludingState","subState","vtkWidgetState$1","vtkBoundsMixin","sourceBounds","bbox","axisCenter","color3","vtkCornerMixin","corner","vtkDirectionMixin","vtkManipulatorMixin","setHandleOrigin","setHandleCenter","setHandleNormal","setHandleDirection","manipulator","eq","isSame","before","vtkOrientationMixin","previousPoints","orientation","vtkOriginMixin","pixelWorldHeight","totalSize","scale1","text","visible","shape","MIXINS","mixins","mixin","Builder","listName","instanceOrIndex","removeIndex","initialValue","createBuilder","vtkStateBuilder","Coordinate","vtkCoordinate","refValue","view","aspect","fval","vtkCoordinate$1","vtkProperty2D","vtkProperty2D$1","vtkActor2D","isOpaque","XPos","YPos","vtkActor2D$1","Behavior","STYLE_CATEGORIES","applyCoincidentTopologyParametersToMapper","mapper","parameters","category","mergeStyles","elementNames","stylesToMerge","newStyleObject","cat","applyStyles","pipelines","styles","activeActor","connectPipeline","pipeline","allocateArray","numberOfTuples","arrayType","arrayDataType","arrayNumberOfComponents","vtkWidgetRepresentation","representationStates","ctxVisible","handleVisible","otherFlag","visibilityFlag","vtkWidgetRepresentation$1","vtkContextRepresentation","newDefault","vtkContextRepresentation$1","States","vtkInteractorStyleConstants","stateNames","vtkInteractorStyle","ac","anActor","vtkInteractorStyle$1","START_INTERACTION_EVENT","INTERACTION_EVENT","END_INTERACTION_EVENT","translateCamera","toX","toY","fromX","fromY","viewFocus","focalDepth","newPickPoint","oldPickPoint","motionVector","viewPoint","dollyToPosition","fact","aSize","viewSize","y0","newFp","newCameraPos","newPoint","dollyByFactor","vtkInteractorStyleManipulator","removeManipulator","addManipulator","ed","button","control","alt","manip","device","actionCount","vtkInteractorStyleManipulator$1","vtkCompositeCameraManipulator","iObserver","pt","vtkCompositeCameraManipulator$1","vtkCompositeMouseManipulator","vtkCompositeMouseManipulator$1","vtkMouseCameraTrackballPanManipulator","lastPos","fp","up","vpn","worldPoint","lastWorldPoint","newCamPos","vtkMouseCameraTrackballPanManipulator$1","vtkMouseCameraTrackballZoomManipulator","cameraPos","cameraFp","dyf","vtkMouseCameraTrackballZoomManipulator$1","DEFAULT_VIEW_API","VIEW_CONSTRUCTORS","registerViewConstructor","listViewAPIs","newAPISpecificView","vtkRenderWindow","results","gren","mpr","gmpr","pcount","format","opts","childIndex","vtkRenderWindow$1","vtkCamera","dopbasis","upbasis","tmpMatrix","tmpMatrix2","tmpvec1","tmpvec2","tmpvec3","rotateMatrix","newPosition","newFocalPoint","computeViewPlaneNormal","vt","amount","eye","at","viewUpVec4","viewDir","vec4.transformMat4","transformMat4","vuOld","posNew","fpNew","vuNew","sourceCamera","ori","oriq","quat.fromValues","coriq","qdir","quat.conjugate","quat.multiply","physVRight","vmat","oldDist","vec3.subtract","mat4.lookAt","nearz","farz","xmin","xmax","ymin","ymax","mat4.ortho","znear","zfar","vMat","pMat","screen","rotmat","dop","vup","degrees","quatMat","quat.setAxisAngle","mat4.fromQuat","newdop","newvup","mat4.create","vtkCamera$1","LIGHT_TYPES","vtkLight","tmpVec","vec3.sub","directionVector","elevation","azimuth","elevationRadians","azimuthRadians","vtkLight$1","vtkViewport","newPropList","gatherProps","allProps","allPropsArray","nvp","vtkViewport$1","vtkRenderer","COMPUTE_VISIBLE_PROP_BOUNDS_EVENT","RESET_CAMERA_CLIPPING_RANGE_EVENT","RESET_CAMERA_EVENT","layer","vpd","nothingVisible","boundsToUse","w1","w2","w3","parallelScale","minGap","m3","vtkRenderer$1","vtkRenderPass","viewNode","vtkRenderPass$1","translucentShaderReplacement","oitpFragTemplate","vtkOpenGLOrderIndependentTranslucentPass","renNode","forwardPass","vtkOpenGLOrderIndependentTranslucentPass$1","vtkForwardPass","numlayers","renderers","vtkForwardPass$1","SET_GET_FIELDS","vtkShaderCache","nFSSource","gl2","fragDepthString","version","nVSSource","shaderOutputs","outputCount","nGSSource","vertexCode","fragmentCode","geometryCode","shaderProgram","hashInput","Md5","sps","sp","vtkShaderCache$1","vtkOpenGLTextureUnitManager","unit","textureUnitId","vtkTextureUnitManager","vtkRenderWindowViewNode","vCoords","val3","vtkRenderWindowViewNode$1","GET_UNDERLYING_CONTEXT","createContextProxyHandler","getParameterHandler","cachedSetterHandler","propHandlers","propValue","propHandler","SCREENSHOT_PLACEHOLDER","parentMethodsToProxy","checkRenderTargetSupport","GL_CONTEXT_COUNT","GL_CONTEXT_LISTENERS","createGLContext","deleteGLContext","pushMonitorGLContextCount","popMonitorGLContextCount","_preventDefault","vtkOpenGLRenderWindow","cachingContextHandler","getCachingContextHandler","previousSize","updateWindow","webgl2Supported","rp","activeUnit","vtkType","oglNorm16Ext","getCanvasDataURL","temporaryCanvas","temporaryContext","mainBoundingClientRect","viewProp","canvasList","currentCanvas","boundingClientRect","newXPosition","newYPosition","screenshot","resetCamera","previous","resolve","reject","imageURL","restoreParamsFn","tmpImg","isUserResetCamera","params","resetCameraFn","resetCameraArgs","hardwareMaximumLineWidth","lineWidthRange","glTextureFloat","glTextureHalfFloat","glDebugRendererInfo","glDrawBuffers","glAnisotropic","childrenRW","rootParent","oglRenderer","parentCanvas","selfCanvas","maxSize","childSize","stream","mainRenderer","clearEvents","newActiveFramebuffer","superSetSize","newUser","sharedResource","oldUser","oglObject","glRen","publicAPIBeforeProxy","vtkMouseCameraTrackballRotateManipulator","newViewUp","centerNeg","rotationFactor","viewUp","centerOfRotation","vec3.copy","vtkMouseCameraTrackballRotateManipulator$1","VTK_EPSILON","vtkProp3D","deltaXYZ","mat4.getRotation","oaxis","quat.getAxisAngle","orientationQuaternion","oriQuatMat","updateIdentityFlag","vtkProp3D$1","VTK_MAX_VRCOMP","vtkImageProperty","transferFunc","vtkImageProperty$1","vtkImageSlice","zip","_","tmp4","vtkImageSlice$1","SlabTypes","vtkAbstractImageMapper","vtkAbstractImageMapper$1","vtkImageResliceMapper","vtkImageResliceMapper$1","vtkActor","vtkActor$1","plane1","plane2","getValues","vtkBox","minDistance","minPoint","maxPoint","vtkBox$1","vtkPlaneSource","pointDataType","v10","v20","xres","yres","numPolys","tcData","dp","rotationVector","rotationAxis","negCenter","vec3.negate","vtkPlaneSource$1","OrientationModes","ScaleModes","vtkGlyph3DMapper","idata","gdata","pts","sArray","sData","numSComp","gbounds","tcorner","oArray","mbuff","nbuff","rotMat4","vMag","vNew","glyph","mult","vtkGlyph3DMapper$1","vtkHandleRepresentation","vtkHandleRepresentation$1","vtkSphereSource","numPoles","thetaResolution","startTheta","endTheta","startPhi","endPhi","deltaTheta","jStart","jEnd","cellLocation","phiResolution","deltaPhi","phi","numOffset","vtkSphereSource$1","states","noPosition","colorArray","noColor","scales","noScale","noOrientation","vtkGlyphRepresentation","internalPolyData","hasMixin","requiredMixins","requiredMixin","glyphProperties","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","vtkGlyphRepresentation$1","vtkPixelSpaceCallbackMapper","windowSize","depthValues","dataPoints","hw","hh","pidx","vtkPixelSpaceCallbackMapper$1","vtkCylinderSource","numberOfPolys","nbot","ntop","xbot","xtop","tcbot","tctop","otherRadius","botIdx","topIdx","vtkCylinderSource$1","INFINITE_RATIO","vtkLineHandleRepresentation","callbackProxy","filteredList","superPublicAPI","dataArrays","oldNumberOfValues","arrayData","nStates","scaleArray","orientationArray","defaultScale","defaultOrientation","orientationMatrix","originalPoint","holeWidth","vec3.fromValues","vec3.add","vec3.create","superScale3","vtkLineHandleRepresentation$1","vtkSphereHandleRepresentation","resolution","vtkSphereHandleRepresentation$1","ScrollingMethods","InteractionMethodsName","planeNames","viewTypeToPlaneName","planeNameToViewType","boundPlane","inflatedBounds","cubeSource","cutter","cutBounds","localBounds","boundPointOnPlane","dir12","rotateVector","vectorToBeRotated","rotatedVector","getPlaneNames","widgetState","getLinePlaneName","lineName","getLineInPlaneName","getPlanesLineNames","inPlane","getLineNames","getOtherLineName","linePlaneName","lineInPlaneName","planeName","computeRotationHandleOriginOffset","rotationHandlePosition","volumeDiagonalLength","scaleInPixels","updateState","axes","otherPlane","pdLength","inPlaneName","lineHandle","transformPlane","planeToTransform","targetCenter","targetNormal","targetViewUp","widgetBehavior","isScrolling","previousPosition","cursorStyles","currentPlaneNormal","worldCoords","calldata","nbSteps","dirProj","oldCenter","imageSpacing","absDirProj","movingFactor","newCenter","pointOnLine","currentLineVector","otherLineHandle","newOrigin","translation","otherLineVector","axisTranslation","dot$1","translationVector","translationDistance","activeLineHandle","currentVectorToOrigin","previousLineDirection","activePointName","radianAngle","inViewType","otherLineName","otherPlaneName","newNormal","defaultPlanes","viewsColor3","generateState","viewState","axisState","rotationHandle","VTK_INT_MAX","vtkResliceCursorWidget","computeReslicePlaneOrigin","imageCenter","planeSource","computeFocalPointOffsetFromResliceCursorCenter","worldFocalPoint","worldResliceCenter","displayFocalPoint","displayResliceCenter","newOffset","cameraOffsets","updateCamera","resetFocalPoint","keepCenterFocalDistance","focalPoint","estimatedCameraPosition","realOffset","displayFocal","worldFocal","intersection2","newCameraPosition","findWidgetForViewType","findRepresentationsForViewType","widgetForViewType","computeFocalPointOffset","estimatedFocalPoint","boundedOrigin","boundedP1","boundedP2","planeAxis1","planeAxis2","newResliceAxes","imageReslice","planeSizeX","planeSizeY","spacingX","spacingY","extentX","extentY","realExtentX","realExtentY","outputSpacingX","outputSpacingY","resliceMatrix","intersectionPoints","vtkResliceCursorWidget$1","vtkMouseRangeManipulator","incrementalDelta","scaleDeltaToRange","listener","normalizedDelta","processDelta","oldValue","scalingFactor","newDelta","stepsToDifference","getValue","setValue","exponentialScroll","getFn","stepSize","ratio","handlePointerLockMove","endInteraction","dxNorm","dyNorm","vtkMouseRangeManipulator$1","vtkMouseCameraTrackballZoomToMouseManipulator","superOnButtonDown","vtkMouseCameraTrackballZoomToMouseManipulator$1","doPicking","worldOrigin","worldNormal","absoluteIJK","intersectWithLineForPointPicking","pickingData","intersectWithLineForCellPicking","absIJK","pCoords","vtkImageMapper","pos3","computeClosestIJKAxis","xyzMode","newMatrix","halfThickness","vtkImageMapper$1","ColorSpace","Scale","vtkColorTransferFunctionLabToMsh","msh","M","vtkColorTransferFunctionMshToLab","vtkColorTransferFunctionAdjustHue","unsatM","hueSpin","vtkColorTransferFunctionAngleDiff","adiff","vtkColorTransferFunctionInterpolateDiverging","rgb1","rgb2","lab1","lab2","msh1","msh2","localS","Mmid","mshTmp","labTmp","vtkColorTransferFunction","after","newX","g1","g2","hsv1","hsv2","nanColor","nodeVal","xStart_","xEnd_","lastR","lastG","lastB","usingLogScale","logStart","logEnd","logX","deltaRange","xn","discretizeIndex","hsvTmp","withAlpha","nbChannels","numComponents","inc","nNodes","nodeValue","nb","ptr","originalRange","colorMap","oldColorSpace","isModified","oldNanColor","oldNodes","callModified","vtkColorTransferFunction$1","projectDisplayToLine","lineOrigin","lineDirection","numerator","denominator","vtkLineManipulator","vtkLineManipulator$1","OUTLINE_ARRAY","vtkCroppingOutlineRepresentation","applyOrigin","vtkCroppingOutlineRepresentation$1","AXES","transformVec3","vout","handleTypeFromName","calculateCropperCenter","calculateDirection","indexToWorldT","worldCenter","faceName","handle","worldToIndexT","indexCoords","build","croppingState","vtkImageCroppingWidget","stateSub","setHandlesEnabled","flag","im","midpts","iAxis","jAxis","kAxis","getAxis","vtkImageCroppingWidget$1","vtkVolumeProperty","cap","vtkVolumeProperty$1","vtkVolume","vtkVolume$1","createRadonTransferFunction","firstAbsorbentMaterialHounsfieldValue","firstAbsorbentMaterialAbsorption","maxAbsorbentMaterialHounsfieldValue","maxAbsorbentMaterialAbsorption","outputTransferFunction","vtkVolumeMapper","vsb","vsdf","kr","vtkVolumeMapper$1","Corners","vtkOrientationMarkerWidget","previousCameraInput","selfRenderer","resizeObserver","entries","onCameraChangedSub","onCameraModifiedSub","onAnimationSub","onEndAnimationSub","selfSubscription","onCameraModified","parentRen","canvasSize","viewXSize","viewYSize","minViewSize","pixelSize","xFrac","yFrac","currentCamera","activeCamera","enabling","sizeFactor","viewportSize","previousState","vtkOrientationMarkerWidget$1","vtkTexture","generateMipmaps","nativeArray","level","g3m","g3w","kernel","kernelWeight","hs","currentWidth","currentHeight","maps","oldData","sample","dataCopy","kw","lineShift","vtkTexture$1","canvasToImageData","boundingBox","imageToImageData","flipX","flipY","rotate","ImageHelper","STYLES","applyDefinitions","definitions","cubeActor","applyPreset","registerStylePreset","AnnotatedCubePresets","FACE_TO_INDEX","vtkAnnotatedCubeActor","updateFaceTexture","newProp","ctxt","textSize","updateAllFaceTextures","vtkAnnotatedCubeActor$1","vtkLookupTableProxy","presetName","rgbPoints","hsvPoints","vtkLookupTableProxy$1","vtkInteractorStyleTrackballCamera","oldTrans","pscale","lastTrans","deltaElevation","deltaAzimuth","rxf","ryf","oldAngle","vtkInteractorStyleTrackballCamera$1","userParams","vtkGenericRenderWindow","invokeResize","devicePixelRatio","vtkGenericRenderWindow$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213]}